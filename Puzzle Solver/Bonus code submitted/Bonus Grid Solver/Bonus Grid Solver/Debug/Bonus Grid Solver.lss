
Bonus Grid Solver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000274  00800200  0000d38e  0000d422  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000d38e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000077  00800474  00800474  0000d696  2**0
                  ALLOC
  3 .stab         000023f4  00000000  00000000  0000d698  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000768  00000000  00000000  0000fa8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  000101f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003f19  00000000  00000000  00010298  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000335  00000000  00000000  000141b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b56  00000000  00000000  000144e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000808  00000000  00000000  0001603c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a5  00000000  00000000  00016844  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001053  00000000  00000000  00016de9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 b8 0e 	jmp	0x1d70	; 0x1d70 <__vector_5>
      18:	0c 94 8d 0e 	jmp	0x1d1a	; 0x1d1a <__vector_6>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 31 19 	jmp	0x3262	; 0x3262 <__vector_51>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	14 e0       	ldi	r17, 0x04	; 4
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e8       	ldi	r30, 0x8E	; 142
      fc:	f3 ed       	ldi	r31, 0xD3	; 211
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 37       	cpi	r26, 0x74	; 116
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	14 e0       	ldi	r17, 0x04	; 4
     110:	a4 e7       	ldi	r26, 0x74	; 116
     112:	b4 e0       	ldi	r27, 0x04	; 4
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ab 3e       	cpi	r26, 0xEB	; 235
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <main>
     122:	0c 94 c5 69 	jmp	0xd38a	; 0xd38a <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <lcd_set_4bit>:



//Function to Reset LCD
void lcd_set_4bit()
{
     12a:	0f 93       	push	r16
     12c:	1f 93       	push	r17
     12e:	cf 93       	push	r28
     130:	df 93       	push	r29
     132:	cd b7       	in	r28, 0x3d	; 61
     134:	de b7       	in	r29, 0x3e	; 62
     136:	c0 57       	subi	r28, 0x70	; 112
     138:	d0 40       	sbci	r29, 0x00	; 0
     13a:	0f b6       	in	r0, 0x3f	; 63
     13c:	f8 94       	cli
     13e:	de bf       	out	0x3e, r29	; 62
     140:	0f be       	out	0x3f, r0	; 63
     142:	cd bf       	out	0x3d, r28	; 61
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	a0 e8       	ldi	r26, 0x80	; 128
     14a:	bf e3       	ldi	r27, 0x3F	; 63
     14c:	89 83       	std	Y+1, r24	; 0x01
     14e:	9a 83       	std	Y+2, r25	; 0x02
     150:	ab 83       	std	Y+3, r26	; 0x03
     152:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     154:	69 81       	ldd	r22, Y+1	; 0x01
     156:	7a 81       	ldd	r23, Y+2	; 0x02
     158:	8b 81       	ldd	r24, Y+3	; 0x03
     15a:	9c 81       	ldd	r25, Y+4	; 0x04
     15c:	26 e6       	ldi	r18, 0x66	; 102
     15e:	36 e6       	ldi	r19, 0x66	; 102
     160:	46 e6       	ldi	r20, 0x66	; 102
     162:	55 e4       	ldi	r21, 0x45	; 69
     164:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     168:	dc 01       	movw	r26, r24
     16a:	cb 01       	movw	r24, r22
     16c:	8d 83       	std	Y+5, r24	; 0x05
     16e:	9e 83       	std	Y+6, r25	; 0x06
     170:	af 83       	std	Y+7, r26	; 0x07
     172:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     174:	11 e0       	ldi	r17, 0x01	; 1
     176:	6d 81       	ldd	r22, Y+5	; 0x05
     178:	7e 81       	ldd	r23, Y+6	; 0x06
     17a:	8f 81       	ldd	r24, Y+7	; 0x07
     17c:	98 85       	ldd	r25, Y+8	; 0x08
     17e:	20 e0       	ldi	r18, 0x00	; 0
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	40 e8       	ldi	r20, 0x80	; 128
     184:	5f e3       	ldi	r21, 0x3F	; 63
     186:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     18a:	88 23       	and	r24, r24
     18c:	0c f0       	brlt	.+2      	; 0x190 <lcd_set_4bit+0x66>
     18e:	10 e0       	ldi	r17, 0x00	; 0
     190:	11 23       	and	r17, r17
     192:	29 f0       	breq	.+10     	; 0x19e <lcd_set_4bit+0x74>
		__ticks = 1;
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	9a 87       	std	Y+10, r25	; 0x0a
     19a:	89 87       	std	Y+9, r24	; 0x09
     19c:	46 c0       	rjmp	.+140    	; 0x22a <lcd_set_4bit+0x100>
	else if (__tmp > 65535)
     19e:	11 e0       	ldi	r17, 0x01	; 1
     1a0:	6d 81       	ldd	r22, Y+5	; 0x05
     1a2:	7e 81       	ldd	r23, Y+6	; 0x06
     1a4:	8f 81       	ldd	r24, Y+7	; 0x07
     1a6:	98 85       	ldd	r25, Y+8	; 0x08
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	3f ef       	ldi	r19, 0xFF	; 255
     1ac:	4f e7       	ldi	r20, 0x7F	; 127
     1ae:	57 e4       	ldi	r21, 0x47	; 71
     1b0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     1b4:	18 16       	cp	r1, r24
     1b6:	0c f0       	brlt	.+2      	; 0x1ba <lcd_set_4bit+0x90>
     1b8:	10 e0       	ldi	r17, 0x00	; 0
     1ba:	11 23       	and	r17, r17
     1bc:	61 f1       	breq	.+88     	; 0x216 <lcd_set_4bit+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1be:	69 81       	ldd	r22, Y+1	; 0x01
     1c0:	7a 81       	ldd	r23, Y+2	; 0x02
     1c2:	8b 81       	ldd	r24, Y+3	; 0x03
     1c4:	9c 81       	ldd	r25, Y+4	; 0x04
     1c6:	20 e0       	ldi	r18, 0x00	; 0
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	40 e2       	ldi	r20, 0x20	; 32
     1cc:	51 e4       	ldi	r21, 0x41	; 65
     1ce:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     1d2:	dc 01       	movw	r26, r24
     1d4:	cb 01       	movw	r24, r22
     1d6:	bc 01       	movw	r22, r24
     1d8:	cd 01       	movw	r24, r26
     1da:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     1de:	dc 01       	movw	r26, r24
     1e0:	cb 01       	movw	r24, r22
     1e2:	9a 87       	std	Y+10, r25	; 0x0a
     1e4:	89 87       	std	Y+9, r24	; 0x09
     1e6:	12 c0       	rjmp	.+36     	; 0x20c <lcd_set_4bit+0xe2>
     1e8:	80 e7       	ldi	r24, 0x70	; 112
     1ea:	91 e0       	ldi	r25, 0x01	; 1
     1ec:	9c 87       	std	Y+12, r25	; 0x0c
     1ee:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1f0:	8b 85       	ldd	r24, Y+11	; 0x0b
     1f2:	9c 85       	ldd	r25, Y+12	; 0x0c
     1f4:	8c 01       	movw	r16, r24
     1f6:	c8 01       	movw	r24, r16
     1f8:	01 97       	sbiw	r24, 0x01	; 1
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <lcd_set_4bit+0xce>
     1fc:	8c 01       	movw	r16, r24
     1fe:	1c 87       	std	Y+12, r17	; 0x0c
     200:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     202:	89 85       	ldd	r24, Y+9	; 0x09
     204:	9a 85       	ldd	r25, Y+10	; 0x0a
     206:	01 97       	sbiw	r24, 0x01	; 1
     208:	9a 87       	std	Y+10, r25	; 0x0a
     20a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     20c:	89 85       	ldd	r24, Y+9	; 0x09
     20e:	9a 85       	ldd	r25, Y+10	; 0x0a
     210:	00 97       	sbiw	r24, 0x00	; 0
     212:	51 f7       	brne	.-44     	; 0x1e8 <lcd_set_4bit+0xbe>
     214:	17 c0       	rjmp	.+46     	; 0x244 <lcd_set_4bit+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     216:	6d 81       	ldd	r22, Y+5	; 0x05
     218:	7e 81       	ldd	r23, Y+6	; 0x06
     21a:	8f 81       	ldd	r24, Y+7	; 0x07
     21c:	98 85       	ldd	r25, Y+8	; 0x08
     21e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     222:	dc 01       	movw	r26, r24
     224:	cb 01       	movw	r24, r22
     226:	9a 87       	std	Y+10, r25	; 0x0a
     228:	89 87       	std	Y+9, r24	; 0x09
     22a:	89 85       	ldd	r24, Y+9	; 0x09
     22c:	9a 85       	ldd	r25, Y+10	; 0x0a
     22e:	9e 87       	std	Y+14, r25	; 0x0e
     230:	8d 87       	std	Y+13, r24	; 0x0d
     232:	8d 85       	ldd	r24, Y+13	; 0x0d
     234:	9e 85       	ldd	r25, Y+14	; 0x0e
     236:	8c 01       	movw	r16, r24
     238:	f8 01       	movw	r30, r16
     23a:	31 97       	sbiw	r30, 0x01	; 1
     23c:	f1 f7       	brne	.-4      	; 0x23a <lcd_set_4bit+0x110>
     23e:	8f 01       	movw	r16, r30
     240:	1e 87       	std	Y+14, r17	; 0x0e
     242:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);

	cbit(lcd_port,RS);				//RS=0 --- Command Input
     244:	88 e2       	ldi	r24, 0x28	; 40
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	28 e2       	ldi	r18, 0x28	; 40
     24a:	30 e0       	ldi	r19, 0x00	; 0
     24c:	f9 01       	movw	r30, r18
     24e:	20 81       	ld	r18, Z
     250:	2e 7f       	andi	r18, 0xFE	; 254
     252:	fc 01       	movw	r30, r24
     254:	20 83       	st	Z, r18
	cbit(lcd_port,RW);				//RW=0 --- Writing to LCD
     256:	88 e2       	ldi	r24, 0x28	; 40
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	28 e2       	ldi	r18, 0x28	; 40
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	f9 01       	movw	r30, r18
     260:	20 81       	ld	r18, Z
     262:	2d 7f       	andi	r18, 0xFD	; 253
     264:	fc 01       	movw	r30, r24
     266:	20 83       	st	Z, r18
	lcd_port = 0x30;				//Sending 3
     268:	88 e2       	ldi	r24, 0x28	; 40
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e3       	ldi	r18, 0x30	; 48
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18
	sbit(lcd_port,EN);				//Set Enable Pin
     272:	88 e2       	ldi	r24, 0x28	; 40
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	28 e2       	ldi	r18, 0x28	; 40
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	f9 01       	movw	r30, r18
     27c:	20 81       	ld	r18, Z
     27e:	24 60       	ori	r18, 0x04	; 4
     280:	fc 01       	movw	r30, r24
     282:	20 83       	st	Z, r18
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	a0 ea       	ldi	r26, 0xA0	; 160
     28a:	b0 e4       	ldi	r27, 0x40	; 64
     28c:	8f 87       	std	Y+15, r24	; 0x0f
     28e:	98 8b       	std	Y+16, r25	; 0x10
     290:	a9 8b       	std	Y+17, r26	; 0x11
     292:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     294:	6f 85       	ldd	r22, Y+15	; 0x0f
     296:	78 89       	ldd	r23, Y+16	; 0x10
     298:	89 89       	ldd	r24, Y+17	; 0x11
     29a:	9a 89       	ldd	r25, Y+18	; 0x12
     29c:	26 e6       	ldi	r18, 0x66	; 102
     29e:	36 e6       	ldi	r19, 0x66	; 102
     2a0:	46 e6       	ldi	r20, 0x66	; 102
     2a2:	55 e4       	ldi	r21, 0x45	; 69
     2a4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     2a8:	dc 01       	movw	r26, r24
     2aa:	cb 01       	movw	r24, r22
     2ac:	8b 8b       	std	Y+19, r24	; 0x13
     2ae:	9c 8b       	std	Y+20, r25	; 0x14
     2b0:	ad 8b       	std	Y+21, r26	; 0x15
     2b2:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     2b4:	11 e0       	ldi	r17, 0x01	; 1
     2b6:	6b 89       	ldd	r22, Y+19	; 0x13
     2b8:	7c 89       	ldd	r23, Y+20	; 0x14
     2ba:	8d 89       	ldd	r24, Y+21	; 0x15
     2bc:	9e 89       	ldd	r25, Y+22	; 0x16
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	40 e8       	ldi	r20, 0x80	; 128
     2c4:	5f e3       	ldi	r21, 0x3F	; 63
     2c6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     2ca:	88 23       	and	r24, r24
     2cc:	0c f0       	brlt	.+2      	; 0x2d0 <lcd_set_4bit+0x1a6>
     2ce:	10 e0       	ldi	r17, 0x00	; 0
     2d0:	11 23       	and	r17, r17
     2d2:	29 f0       	breq	.+10     	; 0x2de <lcd_set_4bit+0x1b4>
		__ticks = 1;
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	98 8f       	std	Y+24, r25	; 0x18
     2da:	8f 8b       	std	Y+23, r24	; 0x17
     2dc:	46 c0       	rjmp	.+140    	; 0x36a <lcd_set_4bit+0x240>
	else if (__tmp > 65535)
     2de:	11 e0       	ldi	r17, 0x01	; 1
     2e0:	6b 89       	ldd	r22, Y+19	; 0x13
     2e2:	7c 89       	ldd	r23, Y+20	; 0x14
     2e4:	8d 89       	ldd	r24, Y+21	; 0x15
     2e6:	9e 89       	ldd	r25, Y+22	; 0x16
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	3f ef       	ldi	r19, 0xFF	; 255
     2ec:	4f e7       	ldi	r20, 0x7F	; 127
     2ee:	57 e4       	ldi	r21, 0x47	; 71
     2f0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     2f4:	18 16       	cp	r1, r24
     2f6:	0c f0       	brlt	.+2      	; 0x2fa <lcd_set_4bit+0x1d0>
     2f8:	10 e0       	ldi	r17, 0x00	; 0
     2fa:	11 23       	and	r17, r17
     2fc:	61 f1       	breq	.+88     	; 0x356 <lcd_set_4bit+0x22c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2fe:	6f 85       	ldd	r22, Y+15	; 0x0f
     300:	78 89       	ldd	r23, Y+16	; 0x10
     302:	89 89       	ldd	r24, Y+17	; 0x11
     304:	9a 89       	ldd	r25, Y+18	; 0x12
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	40 e2       	ldi	r20, 0x20	; 32
     30c:	51 e4       	ldi	r21, 0x41	; 65
     30e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	bc 01       	movw	r22, r24
     318:	cd 01       	movw	r24, r26
     31a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     31e:	dc 01       	movw	r26, r24
     320:	cb 01       	movw	r24, r22
     322:	98 8f       	std	Y+24, r25	; 0x18
     324:	8f 8b       	std	Y+23, r24	; 0x17
     326:	12 c0       	rjmp	.+36     	; 0x34c <lcd_set_4bit+0x222>
     328:	80 e7       	ldi	r24, 0x70	; 112
     32a:	91 e0       	ldi	r25, 0x01	; 1
     32c:	9a 8f       	std	Y+26, r25	; 0x1a
     32e:	89 8f       	std	Y+25, r24	; 0x19
     330:	89 8d       	ldd	r24, Y+25	; 0x19
     332:	9a 8d       	ldd	r25, Y+26	; 0x1a
     334:	8c 01       	movw	r16, r24
     336:	c8 01       	movw	r24, r16
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_set_4bit+0x20e>
     33c:	8c 01       	movw	r16, r24
     33e:	1a 8f       	std	Y+26, r17	; 0x1a
     340:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     342:	8f 89       	ldd	r24, Y+23	; 0x17
     344:	98 8d       	ldd	r25, Y+24	; 0x18
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	98 8f       	std	Y+24, r25	; 0x18
     34a:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     34c:	8f 89       	ldd	r24, Y+23	; 0x17
     34e:	98 8d       	ldd	r25, Y+24	; 0x18
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	51 f7       	brne	.-44     	; 0x328 <lcd_set_4bit+0x1fe>
     354:	17 c0       	rjmp	.+46     	; 0x384 <lcd_set_4bit+0x25a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     356:	6b 89       	ldd	r22, Y+19	; 0x13
     358:	7c 89       	ldd	r23, Y+20	; 0x14
     35a:	8d 89       	ldd	r24, Y+21	; 0x15
     35c:	9e 89       	ldd	r25, Y+22	; 0x16
     35e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     362:	dc 01       	movw	r26, r24
     364:	cb 01       	movw	r24, r22
     366:	98 8f       	std	Y+24, r25	; 0x18
     368:	8f 8b       	std	Y+23, r24	; 0x17
     36a:	8f 89       	ldd	r24, Y+23	; 0x17
     36c:	98 8d       	ldd	r25, Y+24	; 0x18
     36e:	9c 8f       	std	Y+28, r25	; 0x1c
     370:	8b 8f       	std	Y+27, r24	; 0x1b
     372:	8b 8d       	ldd	r24, Y+27	; 0x1b
     374:	9c 8d       	ldd	r25, Y+28	; 0x1c
     376:	8c 01       	movw	r16, r24
     378:	f8 01       	movw	r30, r16
     37a:	31 97       	sbiw	r30, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <lcd_set_4bit+0x250>
     37e:	8f 01       	movw	r16, r30
     380:	1c 8f       	std	Y+28, r17	; 0x1c
     382:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(5);					//Delay
	cbit(lcd_port,EN);				//Clear Enable Pin
     384:	88 e2       	ldi	r24, 0x28	; 40
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	28 e2       	ldi	r18, 0x28	; 40
     38a:	30 e0       	ldi	r19, 0x00	; 0
     38c:	f9 01       	movw	r30, r18
     38e:	20 81       	ld	r18, Z
     390:	2b 7f       	andi	r18, 0xFB	; 251
     392:	fc 01       	movw	r30, r24
     394:	20 83       	st	Z, r18
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	a0 e8       	ldi	r26, 0x80	; 128
     39c:	bf e3       	ldi	r27, 0x3F	; 63
     39e:	8d 8f       	std	Y+29, r24	; 0x1d
     3a0:	9e 8f       	std	Y+30, r25	; 0x1e
     3a2:	af 8f       	std	Y+31, r26	; 0x1f
     3a4:	b8 a3       	lds	r27, 0x58
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     3a6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3a8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     3aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3ac:	98 a1       	lds	r25, 0x48
     3ae:	26 e6       	ldi	r18, 0x66	; 102
     3b0:	36 e6       	ldi	r19, 0x66	; 102
     3b2:	46 e6       	ldi	r20, 0x66	; 102
     3b4:	55 e4       	ldi	r21, 0x45	; 69
     3b6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     3ba:	dc 01       	movw	r26, r24
     3bc:	cb 01       	movw	r24, r22
     3be:	89 a3       	lds	r24, 0x59
     3c0:	9a a3       	lds	r25, 0x5a
     3c2:	ab a3       	lds	r26, 0x5b
     3c4:	bc a3       	lds	r27, 0x5c
	if (__tmp < 1.0)
     3c6:	11 e0       	ldi	r17, 0x01	; 1
     3c8:	69 a1       	lds	r22, 0x49
     3ca:	7a a1       	lds	r23, 0x4a
     3cc:	8b a1       	lds	r24, 0x4b
     3ce:	9c a1       	lds	r25, 0x4c
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e8       	ldi	r20, 0x80	; 128
     3d6:	5f e3       	ldi	r21, 0x3F	; 63
     3d8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     3dc:	88 23       	and	r24, r24
     3de:	0c f0       	brlt	.+2      	; 0x3e2 <lcd_set_4bit+0x2b8>
     3e0:	10 e0       	ldi	r17, 0x00	; 0
     3e2:	11 23       	and	r17, r17
     3e4:	29 f0       	breq	.+10     	; 0x3f0 <lcd_set_4bit+0x2c6>
		__ticks = 1;
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	9e a3       	lds	r25, 0x5e
     3ec:	8d a3       	lds	r24, 0x5d
     3ee:	46 c0       	rjmp	.+140    	; 0x47c <lcd_set_4bit+0x352>
	else if (__tmp > 65535)
     3f0:	11 e0       	ldi	r17, 0x01	; 1
     3f2:	69 a1       	lds	r22, 0x49
     3f4:	7a a1       	lds	r23, 0x4a
     3f6:	8b a1       	lds	r24, 0x4b
     3f8:	9c a1       	lds	r25, 0x4c
     3fa:	20 e0       	ldi	r18, 0x00	; 0
     3fc:	3f ef       	ldi	r19, 0xFF	; 255
     3fe:	4f e7       	ldi	r20, 0x7F	; 127
     400:	57 e4       	ldi	r21, 0x47	; 71
     402:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     406:	18 16       	cp	r1, r24
     408:	0c f0       	brlt	.+2      	; 0x40c <lcd_set_4bit+0x2e2>
     40a:	10 e0       	ldi	r17, 0x00	; 0
     40c:	11 23       	and	r17, r17
     40e:	61 f1       	breq	.+88     	; 0x468 <lcd_set_4bit+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     410:	6d 8d       	ldd	r22, Y+29	; 0x1d
     412:	7e 8d       	ldd	r23, Y+30	; 0x1e
     414:	8f 8d       	ldd	r24, Y+31	; 0x1f
     416:	98 a1       	lds	r25, 0x48
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	40 e2       	ldi	r20, 0x20	; 32
     41e:	51 e4       	ldi	r21, 0x41	; 65
     420:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     424:	dc 01       	movw	r26, r24
     426:	cb 01       	movw	r24, r22
     428:	bc 01       	movw	r22, r24
     42a:	cd 01       	movw	r24, r26
     42c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
     434:	9e a3       	lds	r25, 0x5e
     436:	8d a3       	lds	r24, 0x5d
     438:	12 c0       	rjmp	.+36     	; 0x45e <lcd_set_4bit+0x334>
     43a:	80 e7       	ldi	r24, 0x70	; 112
     43c:	91 e0       	ldi	r25, 0x01	; 1
     43e:	98 a7       	lds	r25, 0x78
     440:	8f a3       	lds	r24, 0x5f
     442:	8f a1       	lds	r24, 0x4f
     444:	98 a5       	lds	r25, 0x68
     446:	8c 01       	movw	r16, r24
     448:	c8 01       	movw	r24, r16
     44a:	01 97       	sbiw	r24, 0x01	; 1
     44c:	f1 f7       	brne	.-4      	; 0x44a <lcd_set_4bit+0x320>
     44e:	8c 01       	movw	r16, r24
     450:	18 a7       	lds	r17, 0x78
     452:	0f a3       	lds	r16, 0x5f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     454:	8d a1       	lds	r24, 0x4d
     456:	9e a1       	lds	r25, 0x4e
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	9e a3       	lds	r25, 0x5e
     45c:	8d a3       	lds	r24, 0x5d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     45e:	8d a1       	lds	r24, 0x4d
     460:	9e a1       	lds	r25, 0x4e
     462:	00 97       	sbiw	r24, 0x00	; 0
     464:	51 f7       	brne	.-44     	; 0x43a <lcd_set_4bit+0x310>
     466:	17 c0       	rjmp	.+46     	; 0x496 <lcd_set_4bit+0x36c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     468:	69 a1       	lds	r22, 0x49
     46a:	7a a1       	lds	r23, 0x4a
     46c:	8b a1       	lds	r24, 0x4b
     46e:	9c a1       	lds	r25, 0x4c
     470:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     474:	dc 01       	movw	r26, r24
     476:	cb 01       	movw	r24, r22
     478:	9e a3       	lds	r25, 0x5e
     47a:	8d a3       	lds	r24, 0x5d
     47c:	8d a1       	lds	r24, 0x4d
     47e:	9e a1       	lds	r25, 0x4e
     480:	9a a7       	lds	r25, 0x7a
     482:	89 a7       	lds	r24, 0x79
     484:	89 a5       	lds	r24, 0x69
     486:	9a a5       	lds	r25, 0x6a
     488:	8c 01       	movw	r16, r24
     48a:	f8 01       	movw	r30, r16
     48c:	31 97       	sbiw	r30, 0x01	; 1
     48e:	f1 f7       	brne	.-4      	; 0x48c <lcd_set_4bit+0x362>
     490:	8f 01       	movw	r16, r30
     492:	1a a7       	lds	r17, 0x7a
     494:	09 a7       	lds	r16, 0x79

	_delay_ms(1);

	cbit(lcd_port,RS);				//RS=0 --- Command Input
     496:	88 e2       	ldi	r24, 0x28	; 40
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	28 e2       	ldi	r18, 0x28	; 40
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	f9 01       	movw	r30, r18
     4a0:	20 81       	ld	r18, Z
     4a2:	2e 7f       	andi	r18, 0xFE	; 254
     4a4:	fc 01       	movw	r30, r24
     4a6:	20 83       	st	Z, r18
	cbit(lcd_port,RW);				//RW=0 --- Writing to LCD
     4a8:	88 e2       	ldi	r24, 0x28	; 40
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	28 e2       	ldi	r18, 0x28	; 40
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	f9 01       	movw	r30, r18
     4b2:	20 81       	ld	r18, Z
     4b4:	2d 7f       	andi	r18, 0xFD	; 253
     4b6:	fc 01       	movw	r30, r24
     4b8:	20 83       	st	Z, r18
	lcd_port = 0x30;				//Sending 3
     4ba:	88 e2       	ldi	r24, 0x28	; 40
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	20 e3       	ldi	r18, 0x30	; 48
     4c0:	fc 01       	movw	r30, r24
     4c2:	20 83       	st	Z, r18
	sbit(lcd_port,EN);				//Set Enable Pin
     4c4:	88 e2       	ldi	r24, 0x28	; 40
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	28 e2       	ldi	r18, 0x28	; 40
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	f9 01       	movw	r30, r18
     4ce:	20 81       	ld	r18, Z
     4d0:	24 60       	ori	r18, 0x04	; 4
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 83       	st	Z, r18
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	a0 ea       	ldi	r26, 0xA0	; 160
     4dc:	b0 e4       	ldi	r27, 0x40	; 64
     4de:	8b a7       	lds	r24, 0x7b
     4e0:	9c a7       	lds	r25, 0x7c
     4e2:	ad a7       	lds	r26, 0x7d
     4e4:	be a7       	lds	r27, 0x7e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     4e6:	6b a5       	lds	r22, 0x6b
     4e8:	7c a5       	lds	r23, 0x6c
     4ea:	8d a5       	lds	r24, 0x6d
     4ec:	9e a5       	lds	r25, 0x6e
     4ee:	26 e6       	ldi	r18, 0x66	; 102
     4f0:	36 e6       	ldi	r19, 0x66	; 102
     4f2:	46 e6       	ldi	r20, 0x66	; 102
     4f4:	55 e4       	ldi	r21, 0x45	; 69
     4f6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	8f a7       	lds	r24, 0x7f
     500:	98 ab       	sts	0x58, r25
     502:	a9 ab       	sts	0x59, r26
     504:	ba ab       	sts	0x5a, r27
	if (__tmp < 1.0)
     506:	11 e0       	ldi	r17, 0x01	; 1
     508:	6f a5       	lds	r22, 0x6f
     50a:	78 a9       	sts	0x48, r23
     50c:	89 a9       	sts	0x49, r24
     50e:	9a a9       	sts	0x4a, r25
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	40 e8       	ldi	r20, 0x80	; 128
     516:	5f e3       	ldi	r21, 0x3F	; 63
     518:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     51c:	88 23       	and	r24, r24
     51e:	0c f0       	brlt	.+2      	; 0x522 <lcd_set_4bit+0x3f8>
     520:	10 e0       	ldi	r17, 0x00	; 0
     522:	11 23       	and	r17, r17
     524:	29 f0       	breq	.+10     	; 0x530 <lcd_set_4bit+0x406>
		__ticks = 1;
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	9c ab       	sts	0x5c, r25
     52c:	8b ab       	sts	0x5b, r24
     52e:	46 c0       	rjmp	.+140    	; 0x5bc <lcd_set_4bit+0x492>
	else if (__tmp > 65535)
     530:	11 e0       	ldi	r17, 0x01	; 1
     532:	6f a5       	lds	r22, 0x6f
     534:	78 a9       	sts	0x48, r23
     536:	89 a9       	sts	0x49, r24
     538:	9a a9       	sts	0x4a, r25
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	3f ef       	ldi	r19, 0xFF	; 255
     53e:	4f e7       	ldi	r20, 0x7F	; 127
     540:	57 e4       	ldi	r21, 0x47	; 71
     542:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     546:	18 16       	cp	r1, r24
     548:	0c f0       	brlt	.+2      	; 0x54c <lcd_set_4bit+0x422>
     54a:	10 e0       	ldi	r17, 0x00	; 0
     54c:	11 23       	and	r17, r17
     54e:	61 f1       	breq	.+88     	; 0x5a8 <lcd_set_4bit+0x47e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     550:	6b a5       	lds	r22, 0x6b
     552:	7c a5       	lds	r23, 0x6c
     554:	8d a5       	lds	r24, 0x6d
     556:	9e a5       	lds	r25, 0x6e
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	40 e2       	ldi	r20, 0x20	; 32
     55e:	51 e4       	ldi	r21, 0x41	; 65
     560:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     564:	dc 01       	movw	r26, r24
     566:	cb 01       	movw	r24, r22
     568:	bc 01       	movw	r22, r24
     56a:	cd 01       	movw	r24, r26
     56c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     570:	dc 01       	movw	r26, r24
     572:	cb 01       	movw	r24, r22
     574:	9c ab       	sts	0x5c, r25
     576:	8b ab       	sts	0x5b, r24
     578:	12 c0       	rjmp	.+36     	; 0x59e <lcd_set_4bit+0x474>
     57a:	80 e7       	ldi	r24, 0x70	; 112
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	9e ab       	sts	0x5e, r25
     580:	8d ab       	sts	0x5d, r24
     582:	8d a9       	sts	0x4d, r24
     584:	9e a9       	sts	0x4e, r25
     586:	8c 01       	movw	r16, r24
     588:	c8 01       	movw	r24, r16
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <lcd_set_4bit+0x460>
     58e:	8c 01       	movw	r16, r24
     590:	1e ab       	sts	0x5e, r17
     592:	0d ab       	sts	0x5d, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     594:	8b a9       	sts	0x4b, r24
     596:	9c a9       	sts	0x4c, r25
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	9c ab       	sts	0x5c, r25
     59c:	8b ab       	sts	0x5b, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     59e:	8b a9       	sts	0x4b, r24
     5a0:	9c a9       	sts	0x4c, r25
     5a2:	00 97       	sbiw	r24, 0x00	; 0
     5a4:	51 f7       	brne	.-44     	; 0x57a <lcd_set_4bit+0x450>
     5a6:	17 c0       	rjmp	.+46     	; 0x5d6 <lcd_set_4bit+0x4ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5a8:	6f a5       	lds	r22, 0x6f
     5aa:	78 a9       	sts	0x48, r23
     5ac:	89 a9       	sts	0x49, r24
     5ae:	9a a9       	sts	0x4a, r25
     5b0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     5b4:	dc 01       	movw	r26, r24
     5b6:	cb 01       	movw	r24, r22
     5b8:	9c ab       	sts	0x5c, r25
     5ba:	8b ab       	sts	0x5b, r24
     5bc:	8b a9       	sts	0x4b, r24
     5be:	9c a9       	sts	0x4c, r25
     5c0:	98 af       	sts	0x78, r25
     5c2:	8f ab       	sts	0x5f, r24
     5c4:	8f a9       	sts	0x4f, r24
     5c6:	98 ad       	sts	0x68, r25
     5c8:	8c 01       	movw	r16, r24
     5ca:	f8 01       	movw	r30, r16
     5cc:	31 97       	sbiw	r30, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <lcd_set_4bit+0x4a2>
     5d0:	8f 01       	movw	r16, r30
     5d2:	18 af       	sts	0x78, r17
     5d4:	0f ab       	sts	0x5f, r16
	_delay_ms(5);					//Delay
	cbit(lcd_port,EN);				//Clear Enable Pin
     5d6:	88 e2       	ldi	r24, 0x28	; 40
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	28 e2       	ldi	r18, 0x28	; 40
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	f9 01       	movw	r30, r18
     5e0:	20 81       	ld	r18, Z
     5e2:	2b 7f       	andi	r18, 0xFB	; 251
     5e4:	fc 01       	movw	r30, r24
     5e6:	20 83       	st	Z, r18
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	a0 e8       	ldi	r26, 0x80	; 128
     5ee:	bf e3       	ldi	r27, 0x3F	; 63
     5f0:	89 af       	sts	0x79, r24
     5f2:	9a af       	sts	0x7a, r25
     5f4:	ab af       	sts	0x7b, r26
     5f6:	bc af       	sts	0x7c, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     5f8:	69 ad       	sts	0x69, r22
     5fa:	7a ad       	sts	0x6a, r23
     5fc:	8b ad       	sts	0x6b, r24
     5fe:	9c ad       	sts	0x6c, r25
     600:	26 e6       	ldi	r18, 0x66	; 102
     602:	36 e6       	ldi	r19, 0x66	; 102
     604:	46 e6       	ldi	r20, 0x66	; 102
     606:	55 e4       	ldi	r21, 0x45	; 69
     608:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     60c:	dc 01       	movw	r26, r24
     60e:	cb 01       	movw	r24, r22
     610:	9e 01       	movw	r18, r28
     612:	23 5c       	subi	r18, 0xC3	; 195
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	f9 01       	movw	r30, r18
     618:	80 83       	st	Z, r24
     61a:	91 83       	std	Z+1, r25	; 0x01
     61c:	a2 83       	std	Z+2, r26	; 0x02
     61e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     620:	11 e0       	ldi	r17, 0x01	; 1
     622:	ce 01       	movw	r24, r28
     624:	cd 96       	adiw	r24, 0x3d	; 61
     626:	fc 01       	movw	r30, r24
     628:	60 81       	ld	r22, Z
     62a:	71 81       	ldd	r23, Z+1	; 0x01
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	93 81       	ldd	r25, Z+3	; 0x03
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e8       	ldi	r20, 0x80	; 128
     636:	5f e3       	ldi	r21, 0x3F	; 63
     638:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     63c:	88 23       	and	r24, r24
     63e:	0c f0       	brlt	.+2      	; 0x642 <lcd_set_4bit+0x518>
     640:	10 e0       	ldi	r17, 0x00	; 0
     642:	11 23       	and	r17, r17
     644:	49 f0       	breq	.+18     	; 0x658 <lcd_set_4bit+0x52e>
		__ticks = 1;
     646:	ce 01       	movw	r24, r28
     648:	8f 5b       	subi	r24, 0xBF	; 191
     64a:	9f 4f       	sbci	r25, 0xFF	; 255
     64c:	21 e0       	ldi	r18, 0x01	; 1
     64e:	30 e0       	ldi	r19, 0x00	; 0
     650:	fc 01       	movw	r30, r24
     652:	31 83       	std	Z+1, r19	; 0x01
     654:	20 83       	st	Z, r18
     656:	6e c0       	rjmp	.+220    	; 0x734 <lcd_set_4bit+0x60a>
	else if (__tmp > 65535)
     658:	11 e0       	ldi	r17, 0x01	; 1
     65a:	ce 01       	movw	r24, r28
     65c:	cd 96       	adiw	r24, 0x3d	; 61
     65e:	fc 01       	movw	r30, r24
     660:	60 81       	ld	r22, Z
     662:	71 81       	ldd	r23, Z+1	; 0x01
     664:	82 81       	ldd	r24, Z+2	; 0x02
     666:	93 81       	ldd	r25, Z+3	; 0x03
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	3f ef       	ldi	r19, 0xFF	; 255
     66c:	4f e7       	ldi	r20, 0x7F	; 127
     66e:	57 e4       	ldi	r21, 0x47	; 71
     670:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     674:	18 16       	cp	r1, r24
     676:	0c f0       	brlt	.+2      	; 0x67a <lcd_set_4bit+0x550>
     678:	10 e0       	ldi	r17, 0x00	; 0
     67a:	11 23       	and	r17, r17
     67c:	09 f4       	brne	.+2      	; 0x680 <lcd_set_4bit+0x556>
     67e:	49 c0       	rjmp	.+146    	; 0x712 <lcd_set_4bit+0x5e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     680:	69 ad       	sts	0x69, r22
     682:	7a ad       	sts	0x6a, r23
     684:	8b ad       	sts	0x6b, r24
     686:	9c ad       	sts	0x6c, r25
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	40 e2       	ldi	r20, 0x20	; 32
     68e:	51 e4       	ldi	r21, 0x41	; 65
     690:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     694:	dc 01       	movw	r26, r24
     696:	cb 01       	movw	r24, r22
     698:	8e 01       	movw	r16, r28
     69a:	0f 5b       	subi	r16, 0xBF	; 191
     69c:	1f 4f       	sbci	r17, 0xFF	; 255
     69e:	bc 01       	movw	r22, r24
     6a0:	cd 01       	movw	r24, r26
     6a2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     6a6:	dc 01       	movw	r26, r24
     6a8:	cb 01       	movw	r24, r22
     6aa:	f8 01       	movw	r30, r16
     6ac:	91 83       	std	Z+1, r25	; 0x01
     6ae:	80 83       	st	Z, r24
     6b0:	27 c0       	rjmp	.+78     	; 0x700 <lcd_set_4bit+0x5d6>
     6b2:	ce 01       	movw	r24, r28
     6b4:	8d 5b       	subi	r24, 0xBD	; 189
     6b6:	9f 4f       	sbci	r25, 0xFF	; 255
     6b8:	20 e7       	ldi	r18, 0x70	; 112
     6ba:	31 e0       	ldi	r19, 0x01	; 1
     6bc:	fc 01       	movw	r30, r24
     6be:	31 83       	std	Z+1, r19	; 0x01
     6c0:	20 83       	st	Z, r18
     6c2:	ce 01       	movw	r24, r28
     6c4:	8d 5b       	subi	r24, 0xBD	; 189
     6c6:	9f 4f       	sbci	r25, 0xFF	; 255
     6c8:	fc 01       	movw	r30, r24
     6ca:	80 81       	ld	r24, Z
     6cc:	91 81       	ldd	r25, Z+1	; 0x01
     6ce:	8c 01       	movw	r16, r24
     6d0:	c8 01       	movw	r24, r16
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <lcd_set_4bit+0x5a8>
     6d6:	8c 01       	movw	r16, r24
     6d8:	ce 01       	movw	r24, r28
     6da:	8d 5b       	subi	r24, 0xBD	; 189
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	fc 01       	movw	r30, r24
     6e0:	11 83       	std	Z+1, r17	; 0x01
     6e2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e4:	ce 01       	movw	r24, r28
     6e6:	8f 5b       	subi	r24, 0xBF	; 191
     6e8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ea:	9e 01       	movw	r18, r28
     6ec:	2f 5b       	subi	r18, 0xBF	; 191
     6ee:	3f 4f       	sbci	r19, 0xFF	; 255
     6f0:	f9 01       	movw	r30, r18
     6f2:	20 81       	ld	r18, Z
     6f4:	31 81       	ldd	r19, Z+1	; 0x01
     6f6:	21 50       	subi	r18, 0x01	; 1
     6f8:	30 40       	sbci	r19, 0x00	; 0
     6fa:	fc 01       	movw	r30, r24
     6fc:	31 83       	std	Z+1, r19	; 0x01
     6fe:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     700:	ce 01       	movw	r24, r28
     702:	8f 5b       	subi	r24, 0xBF	; 191
     704:	9f 4f       	sbci	r25, 0xFF	; 255
     706:	fc 01       	movw	r30, r24
     708:	80 81       	ld	r24, Z
     70a:	91 81       	ldd	r25, Z+1	; 0x01
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	89 f6       	brne	.-94     	; 0x6b2 <lcd_set_4bit+0x588>
     710:	2e c0       	rjmp	.+92     	; 0x76e <lcd_set_4bit+0x644>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     712:	8e 01       	movw	r16, r28
     714:	0f 5b       	subi	r16, 0xBF	; 191
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	cd 96       	adiw	r24, 0x3d	; 61
     71c:	fc 01       	movw	r30, r24
     71e:	60 81       	ld	r22, Z
     720:	71 81       	ldd	r23, Z+1	; 0x01
     722:	82 81       	ldd	r24, Z+2	; 0x02
     724:	93 81       	ldd	r25, Z+3	; 0x03
     726:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     72a:	dc 01       	movw	r26, r24
     72c:	cb 01       	movw	r24, r22
     72e:	f8 01       	movw	r30, r16
     730:	91 83       	std	Z+1, r25	; 0x01
     732:	80 83       	st	Z, r24
     734:	ce 01       	movw	r24, r28
     736:	8b 5b       	subi	r24, 0xBB	; 187
     738:	9f 4f       	sbci	r25, 0xFF	; 255
     73a:	9e 01       	movw	r18, r28
     73c:	2f 5b       	subi	r18, 0xBF	; 191
     73e:	3f 4f       	sbci	r19, 0xFF	; 255
     740:	f9 01       	movw	r30, r18
     742:	20 81       	ld	r18, Z
     744:	31 81       	ldd	r19, Z+1	; 0x01
     746:	fc 01       	movw	r30, r24
     748:	31 83       	std	Z+1, r19	; 0x01
     74a:	20 83       	st	Z, r18
     74c:	ce 01       	movw	r24, r28
     74e:	8b 5b       	subi	r24, 0xBB	; 187
     750:	9f 4f       	sbci	r25, 0xFF	; 255
     752:	fc 01       	movw	r30, r24
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01
     758:	8c 01       	movw	r16, r24
     75a:	c8 01       	movw	r24, r16
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	f1 f7       	brne	.-4      	; 0x75c <lcd_set_4bit+0x632>
     760:	8c 01       	movw	r16, r24
     762:	ce 01       	movw	r24, r28
     764:	8b 5b       	subi	r24, 0xBB	; 187
     766:	9f 4f       	sbci	r25, 0xFF	; 255
     768:	fc 01       	movw	r30, r24
     76a:	11 83       	std	Z+1, r17	; 0x01
     76c:	00 83       	st	Z, r16

	_delay_ms(1);

	cbit(lcd_port,RS);				//RS=0 --- Command Input
     76e:	88 e2       	ldi	r24, 0x28	; 40
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	28 e2       	ldi	r18, 0x28	; 40
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	f9 01       	movw	r30, r18
     778:	20 81       	ld	r18, Z
     77a:	2e 7f       	andi	r18, 0xFE	; 254
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18
	cbit(lcd_port,RW);				//RW=0 --- Writing to LCD
     780:	88 e2       	ldi	r24, 0x28	; 40
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	28 e2       	ldi	r18, 0x28	; 40
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	f9 01       	movw	r30, r18
     78a:	20 81       	ld	r18, Z
     78c:	2d 7f       	andi	r18, 0xFD	; 253
     78e:	fc 01       	movw	r30, r24
     790:	20 83       	st	Z, r18
	lcd_port = 0x30;				//Sending 3
     792:	88 e2       	ldi	r24, 0x28	; 40
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	20 e3       	ldi	r18, 0x30	; 48
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18
	sbit(lcd_port,EN);				//Set Enable Pin
     79c:	88 e2       	ldi	r24, 0x28	; 40
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	28 e2       	ldi	r18, 0x28	; 40
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	f9 01       	movw	r30, r18
     7a6:	20 81       	ld	r18, Z
     7a8:	24 60       	ori	r18, 0x04	; 4
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
     7ae:	9e 01       	movw	r18, r28
     7b0:	29 5b       	subi	r18, 0xB9	; 185
     7b2:	3f 4f       	sbci	r19, 0xFF	; 255
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	a0 ea       	ldi	r26, 0xA0	; 160
     7ba:	b0 e4       	ldi	r27, 0x40	; 64
     7bc:	f9 01       	movw	r30, r18
     7be:	80 83       	st	Z, r24
     7c0:	91 83       	std	Z+1, r25	; 0x01
     7c2:	a2 83       	std	Z+2, r26	; 0x02
     7c4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     7c6:	8e 01       	movw	r16, r28
     7c8:	05 5b       	subi	r16, 0xB5	; 181
     7ca:	1f 4f       	sbci	r17, 0xFF	; 255
     7cc:	ce 01       	movw	r24, r28
     7ce:	89 5b       	subi	r24, 0xB9	; 185
     7d0:	9f 4f       	sbci	r25, 0xFF	; 255
     7d2:	fc 01       	movw	r30, r24
     7d4:	60 81       	ld	r22, Z
     7d6:	71 81       	ldd	r23, Z+1	; 0x01
     7d8:	82 81       	ldd	r24, Z+2	; 0x02
     7da:	93 81       	ldd	r25, Z+3	; 0x03
     7dc:	26 e6       	ldi	r18, 0x66	; 102
     7de:	36 e6       	ldi	r19, 0x66	; 102
     7e0:	46 e6       	ldi	r20, 0x66	; 102
     7e2:	55 e4       	ldi	r21, 0x45	; 69
     7e4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     7e8:	dc 01       	movw	r26, r24
     7ea:	cb 01       	movw	r24, r22
     7ec:	f8 01       	movw	r30, r16
     7ee:	80 83       	st	Z, r24
     7f0:	91 83       	std	Z+1, r25	; 0x01
     7f2:	a2 83       	std	Z+2, r26	; 0x02
     7f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7f6:	ce 01       	movw	r24, r28
     7f8:	85 5b       	subi	r24, 0xB5	; 181
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	11 e0       	ldi	r17, 0x01	; 1
     7fe:	fc 01       	movw	r30, r24
     800:	60 81       	ld	r22, Z
     802:	71 81       	ldd	r23, Z+1	; 0x01
     804:	82 81       	ldd	r24, Z+2	; 0x02
     806:	93 81       	ldd	r25, Z+3	; 0x03
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	40 e8       	ldi	r20, 0x80	; 128
     80e:	5f e3       	ldi	r21, 0x3F	; 63
     810:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     814:	88 23       	and	r24, r24
     816:	0c f0       	brlt	.+2      	; 0x81a <lcd_set_4bit+0x6f0>
     818:	10 e0       	ldi	r17, 0x00	; 0
     81a:	11 23       	and	r17, r17
     81c:	49 f0       	breq	.+18     	; 0x830 <lcd_set_4bit+0x706>
		__ticks = 1;
     81e:	ce 01       	movw	r24, r28
     820:	81 5b       	subi	r24, 0xB1	; 177
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	21 e0       	ldi	r18, 0x01	; 1
     826:	30 e0       	ldi	r19, 0x00	; 0
     828:	fc 01       	movw	r30, r24
     82a:	31 83       	std	Z+1, r19	; 0x01
     82c:	20 83       	st	Z, r18
     82e:	74 c0       	rjmp	.+232    	; 0x918 <lcd_set_4bit+0x7ee>
	else if (__tmp > 65535)
     830:	ce 01       	movw	r24, r28
     832:	85 5b       	subi	r24, 0xB5	; 181
     834:	9f 4f       	sbci	r25, 0xFF	; 255
     836:	11 e0       	ldi	r17, 0x01	; 1
     838:	fc 01       	movw	r30, r24
     83a:	60 81       	ld	r22, Z
     83c:	71 81       	ldd	r23, Z+1	; 0x01
     83e:	82 81       	ldd	r24, Z+2	; 0x02
     840:	93 81       	ldd	r25, Z+3	; 0x03
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	3f ef       	ldi	r19, 0xFF	; 255
     846:	4f e7       	ldi	r20, 0x7F	; 127
     848:	57 e4       	ldi	r21, 0x47	; 71
     84a:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     84e:	18 16       	cp	r1, r24
     850:	0c f0       	brlt	.+2      	; 0x854 <lcd_set_4bit+0x72a>
     852:	10 e0       	ldi	r17, 0x00	; 0
     854:	11 23       	and	r17, r17
     856:	09 f4       	brne	.+2      	; 0x85a <lcd_set_4bit+0x730>
     858:	4d c0       	rjmp	.+154    	; 0x8f4 <lcd_set_4bit+0x7ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     85a:	ce 01       	movw	r24, r28
     85c:	89 5b       	subi	r24, 0xB9	; 185
     85e:	9f 4f       	sbci	r25, 0xFF	; 255
     860:	fc 01       	movw	r30, r24
     862:	60 81       	ld	r22, Z
     864:	71 81       	ldd	r23, Z+1	; 0x01
     866:	82 81       	ldd	r24, Z+2	; 0x02
     868:	93 81       	ldd	r25, Z+3	; 0x03
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e2       	ldi	r20, 0x20	; 32
     870:	51 e4       	ldi	r21, 0x41	; 65
     872:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     876:	dc 01       	movw	r26, r24
     878:	cb 01       	movw	r24, r22
     87a:	8e 01       	movw	r16, r28
     87c:	01 5b       	subi	r16, 0xB1	; 177
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	bc 01       	movw	r22, r24
     882:	cd 01       	movw	r24, r26
     884:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     888:	dc 01       	movw	r26, r24
     88a:	cb 01       	movw	r24, r22
     88c:	f8 01       	movw	r30, r16
     88e:	91 83       	std	Z+1, r25	; 0x01
     890:	80 83       	st	Z, r24
     892:	27 c0       	rjmp	.+78     	; 0x8e2 <lcd_set_4bit+0x7b8>
     894:	ce 01       	movw	r24, r28
     896:	8f 5a       	subi	r24, 0xAF	; 175
     898:	9f 4f       	sbci	r25, 0xFF	; 255
     89a:	20 e7       	ldi	r18, 0x70	; 112
     89c:	31 e0       	ldi	r19, 0x01	; 1
     89e:	fc 01       	movw	r30, r24
     8a0:	31 83       	std	Z+1, r19	; 0x01
     8a2:	20 83       	st	Z, r18
     8a4:	ce 01       	movw	r24, r28
     8a6:	8f 5a       	subi	r24, 0xAF	; 175
     8a8:	9f 4f       	sbci	r25, 0xFF	; 255
     8aa:	fc 01       	movw	r30, r24
     8ac:	80 81       	ld	r24, Z
     8ae:	91 81       	ldd	r25, Z+1	; 0x01
     8b0:	8c 01       	movw	r16, r24
     8b2:	c8 01       	movw	r24, r16
     8b4:	01 97       	sbiw	r24, 0x01	; 1
     8b6:	f1 f7       	brne	.-4      	; 0x8b4 <lcd_set_4bit+0x78a>
     8b8:	8c 01       	movw	r16, r24
     8ba:	ce 01       	movw	r24, r28
     8bc:	8f 5a       	subi	r24, 0xAF	; 175
     8be:	9f 4f       	sbci	r25, 0xFF	; 255
     8c0:	fc 01       	movw	r30, r24
     8c2:	11 83       	std	Z+1, r17	; 0x01
     8c4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8c6:	ce 01       	movw	r24, r28
     8c8:	81 5b       	subi	r24, 0xB1	; 177
     8ca:	9f 4f       	sbci	r25, 0xFF	; 255
     8cc:	9e 01       	movw	r18, r28
     8ce:	21 5b       	subi	r18, 0xB1	; 177
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	f9 01       	movw	r30, r18
     8d4:	20 81       	ld	r18, Z
     8d6:	31 81       	ldd	r19, Z+1	; 0x01
     8d8:	21 50       	subi	r18, 0x01	; 1
     8da:	30 40       	sbci	r19, 0x00	; 0
     8dc:	fc 01       	movw	r30, r24
     8de:	31 83       	std	Z+1, r19	; 0x01
     8e0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8e2:	ce 01       	movw	r24, r28
     8e4:	81 5b       	subi	r24, 0xB1	; 177
     8e6:	9f 4f       	sbci	r25, 0xFF	; 255
     8e8:	fc 01       	movw	r30, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	91 81       	ldd	r25, Z+1	; 0x01
     8ee:	00 97       	sbiw	r24, 0x00	; 0
     8f0:	89 f6       	brne	.-94     	; 0x894 <lcd_set_4bit+0x76a>
     8f2:	2f c0       	rjmp	.+94     	; 0x952 <lcd_set_4bit+0x828>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8f4:	8e 01       	movw	r16, r28
     8f6:	01 5b       	subi	r16, 0xB1	; 177
     8f8:	1f 4f       	sbci	r17, 0xFF	; 255
     8fa:	ce 01       	movw	r24, r28
     8fc:	85 5b       	subi	r24, 0xB5	; 181
     8fe:	9f 4f       	sbci	r25, 0xFF	; 255
     900:	fc 01       	movw	r30, r24
     902:	60 81       	ld	r22, Z
     904:	71 81       	ldd	r23, Z+1	; 0x01
     906:	82 81       	ldd	r24, Z+2	; 0x02
     908:	93 81       	ldd	r25, Z+3	; 0x03
     90a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     90e:	dc 01       	movw	r26, r24
     910:	cb 01       	movw	r24, r22
     912:	f8 01       	movw	r30, r16
     914:	91 83       	std	Z+1, r25	; 0x01
     916:	80 83       	st	Z, r24
     918:	ce 01       	movw	r24, r28
     91a:	8d 5a       	subi	r24, 0xAD	; 173
     91c:	9f 4f       	sbci	r25, 0xFF	; 255
     91e:	9e 01       	movw	r18, r28
     920:	21 5b       	subi	r18, 0xB1	; 177
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	f9 01       	movw	r30, r18
     926:	20 81       	ld	r18, Z
     928:	31 81       	ldd	r19, Z+1	; 0x01
     92a:	fc 01       	movw	r30, r24
     92c:	31 83       	std	Z+1, r19	; 0x01
     92e:	20 83       	st	Z, r18
     930:	ce 01       	movw	r24, r28
     932:	8d 5a       	subi	r24, 0xAD	; 173
     934:	9f 4f       	sbci	r25, 0xFF	; 255
     936:	fc 01       	movw	r30, r24
     938:	80 81       	ld	r24, Z
     93a:	91 81       	ldd	r25, Z+1	; 0x01
     93c:	8c 01       	movw	r16, r24
     93e:	c8 01       	movw	r24, r16
     940:	01 97       	sbiw	r24, 0x01	; 1
     942:	f1 f7       	brne	.-4      	; 0x940 <lcd_set_4bit+0x816>
     944:	8c 01       	movw	r16, r24
     946:	ce 01       	movw	r24, r28
     948:	8d 5a       	subi	r24, 0xAD	; 173
     94a:	9f 4f       	sbci	r25, 0xFF	; 255
     94c:	fc 01       	movw	r30, r24
     94e:	11 83       	std	Z+1, r17	; 0x01
     950:	00 83       	st	Z, r16
	_delay_ms(5);					//Delay
	cbit(lcd_port,EN);				//Clear Enable Pin
     952:	88 e2       	ldi	r24, 0x28	; 40
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	28 e2       	ldi	r18, 0x28	; 40
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	f9 01       	movw	r30, r18
     95c:	20 81       	ld	r18, Z
     95e:	2b 7f       	andi	r18, 0xFB	; 251
     960:	fc 01       	movw	r30, r24
     962:	20 83       	st	Z, r18
     964:	9e 01       	movw	r18, r28
     966:	2b 5a       	subi	r18, 0xAB	; 171
     968:	3f 4f       	sbci	r19, 0xFF	; 255
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	a0 e8       	ldi	r26, 0x80	; 128
     970:	bf e3       	ldi	r27, 0x3F	; 63
     972:	f9 01       	movw	r30, r18
     974:	80 83       	st	Z, r24
     976:	91 83       	std	Z+1, r25	; 0x01
     978:	a2 83       	std	Z+2, r26	; 0x02
     97a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     97c:	8e 01       	movw	r16, r28
     97e:	07 5a       	subi	r16, 0xA7	; 167
     980:	1f 4f       	sbci	r17, 0xFF	; 255
     982:	ce 01       	movw	r24, r28
     984:	8b 5a       	subi	r24, 0xAB	; 171
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	fc 01       	movw	r30, r24
     98a:	60 81       	ld	r22, Z
     98c:	71 81       	ldd	r23, Z+1	; 0x01
     98e:	82 81       	ldd	r24, Z+2	; 0x02
     990:	93 81       	ldd	r25, Z+3	; 0x03
     992:	26 e6       	ldi	r18, 0x66	; 102
     994:	36 e6       	ldi	r19, 0x66	; 102
     996:	46 e6       	ldi	r20, 0x66	; 102
     998:	55 e4       	ldi	r21, 0x45	; 69
     99a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     99e:	dc 01       	movw	r26, r24
     9a0:	cb 01       	movw	r24, r22
     9a2:	f8 01       	movw	r30, r16
     9a4:	80 83       	st	Z, r24
     9a6:	91 83       	std	Z+1, r25	; 0x01
     9a8:	a2 83       	std	Z+2, r26	; 0x02
     9aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9ac:	ce 01       	movw	r24, r28
     9ae:	87 5a       	subi	r24, 0xA7	; 167
     9b0:	9f 4f       	sbci	r25, 0xFF	; 255
     9b2:	11 e0       	ldi	r17, 0x01	; 1
     9b4:	fc 01       	movw	r30, r24
     9b6:	60 81       	ld	r22, Z
     9b8:	71 81       	ldd	r23, Z+1	; 0x01
     9ba:	82 81       	ldd	r24, Z+2	; 0x02
     9bc:	93 81       	ldd	r25, Z+3	; 0x03
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e8       	ldi	r20, 0x80	; 128
     9c4:	5f e3       	ldi	r21, 0x3F	; 63
     9c6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     9ca:	88 23       	and	r24, r24
     9cc:	0c f0       	brlt	.+2      	; 0x9d0 <lcd_set_4bit+0x8a6>
     9ce:	10 e0       	ldi	r17, 0x00	; 0
     9d0:	11 23       	and	r17, r17
     9d2:	49 f0       	breq	.+18     	; 0x9e6 <lcd_set_4bit+0x8bc>
		__ticks = 1;
     9d4:	ce 01       	movw	r24, r28
     9d6:	83 5a       	subi	r24, 0xA3	; 163
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	21 e0       	ldi	r18, 0x01	; 1
     9dc:	30 e0       	ldi	r19, 0x00	; 0
     9de:	fc 01       	movw	r30, r24
     9e0:	31 83       	std	Z+1, r19	; 0x01
     9e2:	20 83       	st	Z, r18
     9e4:	74 c0       	rjmp	.+232    	; 0xace <lcd_set_4bit+0x9a4>
	else if (__tmp > 65535)
     9e6:	ce 01       	movw	r24, r28
     9e8:	87 5a       	subi	r24, 0xA7	; 167
     9ea:	9f 4f       	sbci	r25, 0xFF	; 255
     9ec:	11 e0       	ldi	r17, 0x01	; 1
     9ee:	fc 01       	movw	r30, r24
     9f0:	60 81       	ld	r22, Z
     9f2:	71 81       	ldd	r23, Z+1	; 0x01
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	93 81       	ldd	r25, Z+3	; 0x03
     9f8:	20 e0       	ldi	r18, 0x00	; 0
     9fa:	3f ef       	ldi	r19, 0xFF	; 255
     9fc:	4f e7       	ldi	r20, 0x7F	; 127
     9fe:	57 e4       	ldi	r21, 0x47	; 71
     a00:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     a04:	18 16       	cp	r1, r24
     a06:	0c f0       	brlt	.+2      	; 0xa0a <lcd_set_4bit+0x8e0>
     a08:	10 e0       	ldi	r17, 0x00	; 0
     a0a:	11 23       	and	r17, r17
     a0c:	09 f4       	brne	.+2      	; 0xa10 <lcd_set_4bit+0x8e6>
     a0e:	4d c0       	rjmp	.+154    	; 0xaaa <lcd_set_4bit+0x980>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a10:	ce 01       	movw	r24, r28
     a12:	8b 5a       	subi	r24, 0xAB	; 171
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	fc 01       	movw	r30, r24
     a18:	60 81       	ld	r22, Z
     a1a:	71 81       	ldd	r23, Z+1	; 0x01
     a1c:	82 81       	ldd	r24, Z+2	; 0x02
     a1e:	93 81       	ldd	r25, Z+3	; 0x03
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	40 e2       	ldi	r20, 0x20	; 32
     a26:	51 e4       	ldi	r21, 0x41	; 65
     a28:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     a2c:	dc 01       	movw	r26, r24
     a2e:	cb 01       	movw	r24, r22
     a30:	8e 01       	movw	r16, r28
     a32:	03 5a       	subi	r16, 0xA3	; 163
     a34:	1f 4f       	sbci	r17, 0xFF	; 255
     a36:	bc 01       	movw	r22, r24
     a38:	cd 01       	movw	r24, r26
     a3a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     a3e:	dc 01       	movw	r26, r24
     a40:	cb 01       	movw	r24, r22
     a42:	f8 01       	movw	r30, r16
     a44:	91 83       	std	Z+1, r25	; 0x01
     a46:	80 83       	st	Z, r24
     a48:	27 c0       	rjmp	.+78     	; 0xa98 <lcd_set_4bit+0x96e>
     a4a:	ce 01       	movw	r24, r28
     a4c:	81 5a       	subi	r24, 0xA1	; 161
     a4e:	9f 4f       	sbci	r25, 0xFF	; 255
     a50:	20 e7       	ldi	r18, 0x70	; 112
     a52:	31 e0       	ldi	r19, 0x01	; 1
     a54:	fc 01       	movw	r30, r24
     a56:	31 83       	std	Z+1, r19	; 0x01
     a58:	20 83       	st	Z, r18
     a5a:	ce 01       	movw	r24, r28
     a5c:	81 5a       	subi	r24, 0xA1	; 161
     a5e:	9f 4f       	sbci	r25, 0xFF	; 255
     a60:	fc 01       	movw	r30, r24
     a62:	80 81       	ld	r24, Z
     a64:	91 81       	ldd	r25, Z+1	; 0x01
     a66:	8c 01       	movw	r16, r24
     a68:	c8 01       	movw	r24, r16
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	f1 f7       	brne	.-4      	; 0xa6a <lcd_set_4bit+0x940>
     a6e:	8c 01       	movw	r16, r24
     a70:	ce 01       	movw	r24, r28
     a72:	81 5a       	subi	r24, 0xA1	; 161
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	fc 01       	movw	r30, r24
     a78:	11 83       	std	Z+1, r17	; 0x01
     a7a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a7c:	ce 01       	movw	r24, r28
     a7e:	83 5a       	subi	r24, 0xA3	; 163
     a80:	9f 4f       	sbci	r25, 0xFF	; 255
     a82:	9e 01       	movw	r18, r28
     a84:	23 5a       	subi	r18, 0xA3	; 163
     a86:	3f 4f       	sbci	r19, 0xFF	; 255
     a88:	f9 01       	movw	r30, r18
     a8a:	20 81       	ld	r18, Z
     a8c:	31 81       	ldd	r19, Z+1	; 0x01
     a8e:	21 50       	subi	r18, 0x01	; 1
     a90:	30 40       	sbci	r19, 0x00	; 0
     a92:	fc 01       	movw	r30, r24
     a94:	31 83       	std	Z+1, r19	; 0x01
     a96:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a98:	ce 01       	movw	r24, r28
     a9a:	83 5a       	subi	r24, 0xA3	; 163
     a9c:	9f 4f       	sbci	r25, 0xFF	; 255
     a9e:	fc 01       	movw	r30, r24
     aa0:	80 81       	ld	r24, Z
     aa2:	91 81       	ldd	r25, Z+1	; 0x01
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	89 f6       	brne	.-94     	; 0xa4a <lcd_set_4bit+0x920>
     aa8:	2f c0       	rjmp	.+94     	; 0xb08 <lcd_set_4bit+0x9de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     aaa:	8e 01       	movw	r16, r28
     aac:	03 5a       	subi	r16, 0xA3	; 163
     aae:	1f 4f       	sbci	r17, 0xFF	; 255
     ab0:	ce 01       	movw	r24, r28
     ab2:	87 5a       	subi	r24, 0xA7	; 167
     ab4:	9f 4f       	sbci	r25, 0xFF	; 255
     ab6:	fc 01       	movw	r30, r24
     ab8:	60 81       	ld	r22, Z
     aba:	71 81       	ldd	r23, Z+1	; 0x01
     abc:	82 81       	ldd	r24, Z+2	; 0x02
     abe:	93 81       	ldd	r25, Z+3	; 0x03
     ac0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	f8 01       	movw	r30, r16
     aca:	91 83       	std	Z+1, r25	; 0x01
     acc:	80 83       	st	Z, r24
     ace:	ce 01       	movw	r24, r28
     ad0:	8f 59       	subi	r24, 0x9F	; 159
     ad2:	9f 4f       	sbci	r25, 0xFF	; 255
     ad4:	9e 01       	movw	r18, r28
     ad6:	23 5a       	subi	r18, 0xA3	; 163
     ad8:	3f 4f       	sbci	r19, 0xFF	; 255
     ada:	f9 01       	movw	r30, r18
     adc:	20 81       	ld	r18, Z
     ade:	31 81       	ldd	r19, Z+1	; 0x01
     ae0:	fc 01       	movw	r30, r24
     ae2:	31 83       	std	Z+1, r19	; 0x01
     ae4:	20 83       	st	Z, r18
     ae6:	ce 01       	movw	r24, r28
     ae8:	8f 59       	subi	r24, 0x9F	; 159
     aea:	9f 4f       	sbci	r25, 0xFF	; 255
     aec:	fc 01       	movw	r30, r24
     aee:	80 81       	ld	r24, Z
     af0:	91 81       	ldd	r25, Z+1	; 0x01
     af2:	8c 01       	movw	r16, r24
     af4:	c8 01       	movw	r24, r16
     af6:	01 97       	sbiw	r24, 0x01	; 1
     af8:	f1 f7       	brne	.-4      	; 0xaf6 <lcd_set_4bit+0x9cc>
     afa:	8c 01       	movw	r16, r24
     afc:	ce 01       	movw	r24, r28
     afe:	8f 59       	subi	r24, 0x9F	; 159
     b00:	9f 4f       	sbci	r25, 0xFF	; 255
     b02:	fc 01       	movw	r30, r24
     b04:	11 83       	std	Z+1, r17	; 0x01
     b06:	00 83       	st	Z, r16

	_delay_ms(1);

	cbit(lcd_port,RS);				//RS=0 --- Command Input
     b08:	88 e2       	ldi	r24, 0x28	; 40
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	28 e2       	ldi	r18, 0x28	; 40
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	f9 01       	movw	r30, r18
     b12:	20 81       	ld	r18, Z
     b14:	2e 7f       	andi	r18, 0xFE	; 254
     b16:	fc 01       	movw	r30, r24
     b18:	20 83       	st	Z, r18
	cbit(lcd_port,RW);				//RW=0 --- Writing to LCD
     b1a:	88 e2       	ldi	r24, 0x28	; 40
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	28 e2       	ldi	r18, 0x28	; 40
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	f9 01       	movw	r30, r18
     b24:	20 81       	ld	r18, Z
     b26:	2d 7f       	andi	r18, 0xFD	; 253
     b28:	fc 01       	movw	r30, r24
     b2a:	20 83       	st	Z, r18
	lcd_port = 0x20;				//Sending 2 to initialise LCD 4-bit mode
     b2c:	88 e2       	ldi	r24, 0x28	; 40
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	20 e2       	ldi	r18, 0x20	; 32
     b32:	fc 01       	movw	r30, r24
     b34:	20 83       	st	Z, r18
	sbit(lcd_port,EN);				//Set Enable Pin
     b36:	88 e2       	ldi	r24, 0x28	; 40
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	28 e2       	ldi	r18, 0x28	; 40
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	f9 01       	movw	r30, r18
     b40:	20 81       	ld	r18, Z
     b42:	24 60       	ori	r18, 0x04	; 4
     b44:	fc 01       	movw	r30, r24
     b46:	20 83       	st	Z, r18
     b48:	9e 01       	movw	r18, r28
     b4a:	2d 59       	subi	r18, 0x9D	; 157
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	a0 ea       	ldi	r26, 0xA0	; 160
     b54:	b0 e4       	ldi	r27, 0x40	; 64
     b56:	f9 01       	movw	r30, r18
     b58:	80 83       	st	Z, r24
     b5a:	91 83       	std	Z+1, r25	; 0x01
     b5c:	a2 83       	std	Z+2, r26	; 0x02
     b5e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     b60:	8e 01       	movw	r16, r28
     b62:	09 59       	subi	r16, 0x99	; 153
     b64:	1f 4f       	sbci	r17, 0xFF	; 255
     b66:	ce 01       	movw	r24, r28
     b68:	8d 59       	subi	r24, 0x9D	; 157
     b6a:	9f 4f       	sbci	r25, 0xFF	; 255
     b6c:	fc 01       	movw	r30, r24
     b6e:	60 81       	ld	r22, Z
     b70:	71 81       	ldd	r23, Z+1	; 0x01
     b72:	82 81       	ldd	r24, Z+2	; 0x02
     b74:	93 81       	ldd	r25, Z+3	; 0x03
     b76:	26 e6       	ldi	r18, 0x66	; 102
     b78:	36 e6       	ldi	r19, 0x66	; 102
     b7a:	46 e6       	ldi	r20, 0x66	; 102
     b7c:	55 e4       	ldi	r21, 0x45	; 69
     b7e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     b82:	dc 01       	movw	r26, r24
     b84:	cb 01       	movw	r24, r22
     b86:	f8 01       	movw	r30, r16
     b88:	80 83       	st	Z, r24
     b8a:	91 83       	std	Z+1, r25	; 0x01
     b8c:	a2 83       	std	Z+2, r26	; 0x02
     b8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b90:	ce 01       	movw	r24, r28
     b92:	89 59       	subi	r24, 0x99	; 153
     b94:	9f 4f       	sbci	r25, 0xFF	; 255
     b96:	11 e0       	ldi	r17, 0x01	; 1
     b98:	fc 01       	movw	r30, r24
     b9a:	60 81       	ld	r22, Z
     b9c:	71 81       	ldd	r23, Z+1	; 0x01
     b9e:	82 81       	ldd	r24, Z+2	; 0x02
     ba0:	93 81       	ldd	r25, Z+3	; 0x03
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 e8       	ldi	r20, 0x80	; 128
     ba8:	5f e3       	ldi	r21, 0x3F	; 63
     baa:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     bae:	88 23       	and	r24, r24
     bb0:	0c f0       	brlt	.+2      	; 0xbb4 <lcd_set_4bit+0xa8a>
     bb2:	10 e0       	ldi	r17, 0x00	; 0
     bb4:	11 23       	and	r17, r17
     bb6:	49 f0       	breq	.+18     	; 0xbca <lcd_set_4bit+0xaa0>
		__ticks = 1;
     bb8:	ce 01       	movw	r24, r28
     bba:	85 59       	subi	r24, 0x95	; 149
     bbc:	9f 4f       	sbci	r25, 0xFF	; 255
     bbe:	21 e0       	ldi	r18, 0x01	; 1
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	fc 01       	movw	r30, r24
     bc4:	31 83       	std	Z+1, r19	; 0x01
     bc6:	20 83       	st	Z, r18
     bc8:	74 c0       	rjmp	.+232    	; 0xcb2 <lcd_set_4bit+0xb88>
	else if (__tmp > 65535)
     bca:	ce 01       	movw	r24, r28
     bcc:	89 59       	subi	r24, 0x99	; 153
     bce:	9f 4f       	sbci	r25, 0xFF	; 255
     bd0:	11 e0       	ldi	r17, 0x01	; 1
     bd2:	fc 01       	movw	r30, r24
     bd4:	60 81       	ld	r22, Z
     bd6:	71 81       	ldd	r23, Z+1	; 0x01
     bd8:	82 81       	ldd	r24, Z+2	; 0x02
     bda:	93 81       	ldd	r25, Z+3	; 0x03
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	3f ef       	ldi	r19, 0xFF	; 255
     be0:	4f e7       	ldi	r20, 0x7F	; 127
     be2:	57 e4       	ldi	r21, 0x47	; 71
     be4:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     be8:	18 16       	cp	r1, r24
     bea:	0c f0       	brlt	.+2      	; 0xbee <lcd_set_4bit+0xac4>
     bec:	10 e0       	ldi	r17, 0x00	; 0
     bee:	11 23       	and	r17, r17
     bf0:	09 f4       	brne	.+2      	; 0xbf4 <lcd_set_4bit+0xaca>
     bf2:	4d c0       	rjmp	.+154    	; 0xc8e <lcd_set_4bit+0xb64>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf4:	ce 01       	movw	r24, r28
     bf6:	8d 59       	subi	r24, 0x9D	; 157
     bf8:	9f 4f       	sbci	r25, 0xFF	; 255
     bfa:	fc 01       	movw	r30, r24
     bfc:	60 81       	ld	r22, Z
     bfe:	71 81       	ldd	r23, Z+1	; 0x01
     c00:	82 81       	ldd	r24, Z+2	; 0x02
     c02:	93 81       	ldd	r25, Z+3	; 0x03
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	40 e2       	ldi	r20, 0x20	; 32
     c0a:	51 e4       	ldi	r21, 0x41	; 65
     c0c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	8e 01       	movw	r16, r28
     c16:	05 59       	subi	r16, 0x95	; 149
     c18:	1f 4f       	sbci	r17, 0xFF	; 255
     c1a:	bc 01       	movw	r22, r24
     c1c:	cd 01       	movw	r24, r26
     c1e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     c22:	dc 01       	movw	r26, r24
     c24:	cb 01       	movw	r24, r22
     c26:	f8 01       	movw	r30, r16
     c28:	91 83       	std	Z+1, r25	; 0x01
     c2a:	80 83       	st	Z, r24
     c2c:	27 c0       	rjmp	.+78     	; 0xc7c <lcd_set_4bit+0xb52>
     c2e:	ce 01       	movw	r24, r28
     c30:	83 59       	subi	r24, 0x93	; 147
     c32:	9f 4f       	sbci	r25, 0xFF	; 255
     c34:	20 e7       	ldi	r18, 0x70	; 112
     c36:	31 e0       	ldi	r19, 0x01	; 1
     c38:	fc 01       	movw	r30, r24
     c3a:	31 83       	std	Z+1, r19	; 0x01
     c3c:	20 83       	st	Z, r18
     c3e:	ce 01       	movw	r24, r28
     c40:	83 59       	subi	r24, 0x93	; 147
     c42:	9f 4f       	sbci	r25, 0xFF	; 255
     c44:	fc 01       	movw	r30, r24
     c46:	80 81       	ld	r24, Z
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	8c 01       	movw	r16, r24
     c4c:	c8 01       	movw	r24, r16
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <lcd_set_4bit+0xb24>
     c52:	8c 01       	movw	r16, r24
     c54:	ce 01       	movw	r24, r28
     c56:	83 59       	subi	r24, 0x93	; 147
     c58:	9f 4f       	sbci	r25, 0xFF	; 255
     c5a:	fc 01       	movw	r30, r24
     c5c:	11 83       	std	Z+1, r17	; 0x01
     c5e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c60:	ce 01       	movw	r24, r28
     c62:	85 59       	subi	r24, 0x95	; 149
     c64:	9f 4f       	sbci	r25, 0xFF	; 255
     c66:	9e 01       	movw	r18, r28
     c68:	25 59       	subi	r18, 0x95	; 149
     c6a:	3f 4f       	sbci	r19, 0xFF	; 255
     c6c:	f9 01       	movw	r30, r18
     c6e:	20 81       	ld	r18, Z
     c70:	31 81       	ldd	r19, Z+1	; 0x01
     c72:	21 50       	subi	r18, 0x01	; 1
     c74:	30 40       	sbci	r19, 0x00	; 0
     c76:	fc 01       	movw	r30, r24
     c78:	31 83       	std	Z+1, r19	; 0x01
     c7a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c7c:	ce 01       	movw	r24, r28
     c7e:	85 59       	subi	r24, 0x95	; 149
     c80:	9f 4f       	sbci	r25, 0xFF	; 255
     c82:	fc 01       	movw	r30, r24
     c84:	80 81       	ld	r24, Z
     c86:	91 81       	ldd	r25, Z+1	; 0x01
     c88:	00 97       	sbiw	r24, 0x00	; 0
     c8a:	89 f6       	brne	.-94     	; 0xc2e <lcd_set_4bit+0xb04>
     c8c:	2f c0       	rjmp	.+94     	; 0xcec <lcd_set_4bit+0xbc2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c8e:	8e 01       	movw	r16, r28
     c90:	05 59       	subi	r16, 0x95	; 149
     c92:	1f 4f       	sbci	r17, 0xFF	; 255
     c94:	ce 01       	movw	r24, r28
     c96:	89 59       	subi	r24, 0x99	; 153
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	fc 01       	movw	r30, r24
     c9c:	60 81       	ld	r22, Z
     c9e:	71 81       	ldd	r23, Z+1	; 0x01
     ca0:	82 81       	ldd	r24, Z+2	; 0x02
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     ca8:	dc 01       	movw	r26, r24
     caa:	cb 01       	movw	r24, r22
     cac:	f8 01       	movw	r30, r16
     cae:	91 83       	std	Z+1, r25	; 0x01
     cb0:	80 83       	st	Z, r24
     cb2:	ce 01       	movw	r24, r28
     cb4:	81 59       	subi	r24, 0x91	; 145
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	9e 01       	movw	r18, r28
     cba:	25 59       	subi	r18, 0x95	; 149
     cbc:	3f 4f       	sbci	r19, 0xFF	; 255
     cbe:	f9 01       	movw	r30, r18
     cc0:	20 81       	ld	r18, Z
     cc2:	31 81       	ldd	r19, Z+1	; 0x01
     cc4:	fc 01       	movw	r30, r24
     cc6:	31 83       	std	Z+1, r19	; 0x01
     cc8:	20 83       	st	Z, r18
     cca:	ce 01       	movw	r24, r28
     ccc:	81 59       	subi	r24, 0x91	; 145
     cce:	9f 4f       	sbci	r25, 0xFF	; 255
     cd0:	fc 01       	movw	r30, r24
     cd2:	80 81       	ld	r24, Z
     cd4:	91 81       	ldd	r25, Z+1	; 0x01
     cd6:	8c 01       	movw	r16, r24
     cd8:	c8 01       	movw	r24, r16
     cda:	01 97       	sbiw	r24, 0x01	; 1
     cdc:	f1 f7       	brne	.-4      	; 0xcda <lcd_set_4bit+0xbb0>
     cde:	8c 01       	movw	r16, r24
     ce0:	ce 01       	movw	r24, r28
     ce2:	81 59       	subi	r24, 0x91	; 145
     ce4:	9f 4f       	sbci	r25, 0xFF	; 255
     ce6:	fc 01       	movw	r30, r24
     ce8:	11 83       	std	Z+1, r17	; 0x01
     cea:	00 83       	st	Z, r16
	_delay_ms(5);					//Delay
	cbit(lcd_port,EN);				//Clear Enable Pin
     cec:	88 e2       	ldi	r24, 0x28	; 40
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	28 e2       	ldi	r18, 0x28	; 40
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	f9 01       	movw	r30, r18
     cf6:	20 81       	ld	r18, Z
     cf8:	2b 7f       	andi	r18, 0xFB	; 251
     cfa:	fc 01       	movw	r30, r24
     cfc:	20 83       	st	Z, r18

	
}
     cfe:	c0 59       	subi	r28, 0x90	; 144
     d00:	df 4f       	sbci	r29, 0xFF	; 255
     d02:	0f b6       	in	r0, 0x3f	; 63
     d04:	f8 94       	cli
     d06:	de bf       	out	0x3e, r29	; 62
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	cd bf       	out	0x3d, r28	; 61
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	08 95       	ret

00000d16 <lcd_init>:

//Function to Initialize LCD
void lcd_init()
{
     d16:	0f 93       	push	r16
     d18:	1f 93       	push	r17
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	cd b7       	in	r28, 0x3d	; 61
     d20:	de b7       	in	r29, 0x3e	; 62
     d22:	2e 97       	sbiw	r28, 0x0e	; 14
     d24:	0f b6       	in	r0, 0x3f	; 63
     d26:	f8 94       	cli
     d28:	de bf       	out	0x3e, r29	; 62
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	cd bf       	out	0x3d, r28	; 61
	lcd_set_4bit();
     d2e:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_set_4bit>
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e8       	ldi	r26, 0x80	; 128
     d38:	bf e3       	ldi	r27, 0x3F	; 63
     d3a:	89 83       	std	Y+1, r24	; 0x01
     d3c:	9a 83       	std	Y+2, r25	; 0x02
     d3e:	ab 83       	std	Y+3, r26	; 0x03
     d40:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     d42:	69 81       	ldd	r22, Y+1	; 0x01
     d44:	7a 81       	ldd	r23, Y+2	; 0x02
     d46:	8b 81       	ldd	r24, Y+3	; 0x03
     d48:	9c 81       	ldd	r25, Y+4	; 0x04
     d4a:	26 e6       	ldi	r18, 0x66	; 102
     d4c:	36 e6       	ldi	r19, 0x66	; 102
     d4e:	46 e6       	ldi	r20, 0x66	; 102
     d50:	55 e4       	ldi	r21, 0x45	; 69
     d52:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	8d 83       	std	Y+5, r24	; 0x05
     d5c:	9e 83       	std	Y+6, r25	; 0x06
     d5e:	af 83       	std	Y+7, r26	; 0x07
     d60:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     d62:	11 e0       	ldi	r17, 0x01	; 1
     d64:	6d 81       	ldd	r22, Y+5	; 0x05
     d66:	7e 81       	ldd	r23, Y+6	; 0x06
     d68:	8f 81       	ldd	r24, Y+7	; 0x07
     d6a:	98 85       	ldd	r25, Y+8	; 0x08
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	40 e8       	ldi	r20, 0x80	; 128
     d72:	5f e3       	ldi	r21, 0x3F	; 63
     d74:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     d78:	88 23       	and	r24, r24
     d7a:	0c f0       	brlt	.+2      	; 0xd7e <lcd_init+0x68>
     d7c:	10 e0       	ldi	r17, 0x00	; 0
     d7e:	11 23       	and	r17, r17
     d80:	29 f0       	breq	.+10     	; 0xd8c <lcd_init+0x76>
		__ticks = 1;
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	9a 87       	std	Y+10, r25	; 0x0a
     d88:	89 87       	std	Y+9, r24	; 0x09
     d8a:	46 c0       	rjmp	.+140    	; 0xe18 <lcd_init+0x102>
	else if (__tmp > 65535)
     d8c:	11 e0       	ldi	r17, 0x01	; 1
     d8e:	6d 81       	ldd	r22, Y+5	; 0x05
     d90:	7e 81       	ldd	r23, Y+6	; 0x06
     d92:	8f 81       	ldd	r24, Y+7	; 0x07
     d94:	98 85       	ldd	r25, Y+8	; 0x08
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	3f ef       	ldi	r19, 0xFF	; 255
     d9a:	4f e7       	ldi	r20, 0x7F	; 127
     d9c:	57 e4       	ldi	r21, 0x47	; 71
     d9e:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     da2:	18 16       	cp	r1, r24
     da4:	0c f0       	brlt	.+2      	; 0xda8 <lcd_init+0x92>
     da6:	10 e0       	ldi	r17, 0x00	; 0
     da8:	11 23       	and	r17, r17
     daa:	61 f1       	breq	.+88     	; 0xe04 <lcd_init+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dac:	69 81       	ldd	r22, Y+1	; 0x01
     dae:	7a 81       	ldd	r23, Y+2	; 0x02
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	9c 81       	ldd	r25, Y+4	; 0x04
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	40 e2       	ldi	r20, 0x20	; 32
     dba:	51 e4       	ldi	r21, 0x41	; 65
     dbc:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     dc0:	dc 01       	movw	r26, r24
     dc2:	cb 01       	movw	r24, r22
     dc4:	bc 01       	movw	r22, r24
     dc6:	cd 01       	movw	r24, r26
     dc8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     dcc:	dc 01       	movw	r26, r24
     dce:	cb 01       	movw	r24, r22
     dd0:	9a 87       	std	Y+10, r25	; 0x0a
     dd2:	89 87       	std	Y+9, r24	; 0x09
     dd4:	12 c0       	rjmp	.+36     	; 0xdfa <lcd_init+0xe4>
     dd6:	80 e7       	ldi	r24, 0x70	; 112
     dd8:	91 e0       	ldi	r25, 0x01	; 1
     dda:	9c 87       	std	Y+12, r25	; 0x0c
     ddc:	8b 87       	std	Y+11, r24	; 0x0b
     dde:	8b 85       	ldd	r24, Y+11	; 0x0b
     de0:	9c 85       	ldd	r25, Y+12	; 0x0c
     de2:	8c 01       	movw	r16, r24
     de4:	c8 01       	movw	r24, r16
     de6:	01 97       	sbiw	r24, 0x01	; 1
     de8:	f1 f7       	brne	.-4      	; 0xde6 <lcd_init+0xd0>
     dea:	8c 01       	movw	r16, r24
     dec:	1c 87       	std	Y+12, r17	; 0x0c
     dee:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     df0:	89 85       	ldd	r24, Y+9	; 0x09
     df2:	9a 85       	ldd	r25, Y+10	; 0x0a
     df4:	01 97       	sbiw	r24, 0x01	; 1
     df6:	9a 87       	std	Y+10, r25	; 0x0a
     df8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dfa:	89 85       	ldd	r24, Y+9	; 0x09
     dfc:	9a 85       	ldd	r25, Y+10	; 0x0a
     dfe:	00 97       	sbiw	r24, 0x00	; 0
     e00:	51 f7       	brne	.-44     	; 0xdd6 <lcd_init+0xc0>
     e02:	17 c0       	rjmp	.+46     	; 0xe32 <lcd_init+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e04:	6d 81       	ldd	r22, Y+5	; 0x05
     e06:	7e 81       	ldd	r23, Y+6	; 0x06
     e08:	8f 81       	ldd	r24, Y+7	; 0x07
     e0a:	98 85       	ldd	r25, Y+8	; 0x08
     e0c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     e10:	dc 01       	movw	r26, r24
     e12:	cb 01       	movw	r24, r22
     e14:	9a 87       	std	Y+10, r25	; 0x0a
     e16:	89 87       	std	Y+9, r24	; 0x09
     e18:	89 85       	ldd	r24, Y+9	; 0x09
     e1a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e1c:	9e 87       	std	Y+14, r25	; 0x0e
     e1e:	8d 87       	std	Y+13, r24	; 0x0d
     e20:	8d 85       	ldd	r24, Y+13	; 0x0d
     e22:	9e 85       	ldd	r25, Y+14	; 0x0e
     e24:	8c 01       	movw	r16, r24
     e26:	c8 01       	movw	r24, r16
     e28:	01 97       	sbiw	r24, 0x01	; 1
     e2a:	f1 f7       	brne	.-4      	; 0xe28 <lcd_init+0x112>
     e2c:	8c 01       	movw	r16, r24
     e2e:	1e 87       	std	Y+14, r17	; 0x0e
     e30:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);

	lcd_wr_command(0x28);			//LCD 4-bit mode and 2 lines.
     e32:	88 e2       	ldi	r24, 0x28	; 40
     e34:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
	lcd_wr_command(0x01);
     e38:	81 e0       	ldi	r24, 0x01	; 1
     e3a:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
	lcd_wr_command(0x06);
     e3e:	86 e0       	ldi	r24, 0x06	; 6
     e40:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
	lcd_wr_command(0x0E);
     e44:	8e e0       	ldi	r24, 0x0E	; 14
     e46:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
	lcd_wr_command(0x80);
     e4a:	80 e8       	ldi	r24, 0x80	; 128
     e4c:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
		
}
     e50:	2e 96       	adiw	r28, 0x0e	; 14
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	f8 94       	cli
     e56:	de bf       	out	0x3e, r29	; 62
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	cd bf       	out	0x3d, r28	; 61
     e5c:	df 91       	pop	r29
     e5e:	cf 91       	pop	r28
     e60:	1f 91       	pop	r17
     e62:	0f 91       	pop	r16
     e64:	08 95       	ret

00000e66 <lcd_wr_command>:

	 
//Function to Write Command on LCD
void lcd_wr_command(unsigned char cmd)
{
     e66:	0f 93       	push	r16
     e68:	1f 93       	push	r17
     e6a:	cf 93       	push	r28
     e6c:	df 93       	push	r29
     e6e:	cd b7       	in	r28, 0x3d	; 61
     e70:	de b7       	in	r29, 0x3e	; 62
     e72:	6e 97       	sbiw	r28, 0x1e	; 30
     e74:	0f b6       	in	r0, 0x3f	; 63
     e76:	f8 94       	cli
     e78:	de bf       	out	0x3e, r29	; 62
     e7a:	0f be       	out	0x3f, r0	; 63
     e7c:	cd bf       	out	0x3d, r28	; 61
     e7e:	8e 8f       	std	Y+30, r24	; 0x1e
	unsigned char temp;
	temp = cmd;
     e80:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e82:	89 83       	std	Y+1, r24	; 0x01
	temp = temp & 0xF0;
     e84:	89 81       	ldd	r24, Y+1	; 0x01
     e86:	80 7f       	andi	r24, 0xF0	; 240
     e88:	89 83       	std	Y+1, r24	; 0x01
	lcd_port &= 0x0F;
     e8a:	88 e2       	ldi	r24, 0x28	; 40
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	28 e2       	ldi	r18, 0x28	; 40
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	f9 01       	movw	r30, r18
     e94:	20 81       	ld	r18, Z
     e96:	2f 70       	andi	r18, 0x0F	; 15
     e98:	fc 01       	movw	r30, r24
     e9a:	20 83       	st	Z, r18
	lcd_port |= temp;
     e9c:	88 e2       	ldi	r24, 0x28	; 40
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	28 e2       	ldi	r18, 0x28	; 40
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	f9 01       	movw	r30, r18
     ea6:	30 81       	ld	r19, Z
     ea8:	29 81       	ldd	r18, Y+1	; 0x01
     eaa:	23 2b       	or	r18, r19
     eac:	fc 01       	movw	r30, r24
     eae:	20 83       	st	Z, r18
	cbit(lcd_port,RS);
     eb0:	88 e2       	ldi	r24, 0x28	; 40
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	28 e2       	ldi	r18, 0x28	; 40
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	f9 01       	movw	r30, r18
     eba:	20 81       	ld	r18, Z
     ebc:	2e 7f       	andi	r18, 0xFE	; 254
     ebe:	fc 01       	movw	r30, r24
     ec0:	20 83       	st	Z, r18
	cbit(lcd_port,RW);
     ec2:	88 e2       	ldi	r24, 0x28	; 40
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	28 e2       	ldi	r18, 0x28	; 40
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	f9 01       	movw	r30, r18
     ecc:	20 81       	ld	r18, Z
     ece:	2d 7f       	andi	r18, 0xFD	; 253
     ed0:	fc 01       	movw	r30, r24
     ed2:	20 83       	st	Z, r18
	sbit(lcd_port,EN);
     ed4:	88 e2       	ldi	r24, 0x28	; 40
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	28 e2       	ldi	r18, 0x28	; 40
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	f9 01       	movw	r30, r18
     ede:	20 81       	ld	r18, Z
     ee0:	24 60       	ori	r18, 0x04	; 4
     ee2:	fc 01       	movw	r30, r24
     ee4:	20 83       	st	Z, r18
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	a0 ea       	ldi	r26, 0xA0	; 160
     eec:	b0 e4       	ldi	r27, 0x40	; 64
     eee:	8a 83       	std	Y+2, r24	; 0x02
     ef0:	9b 83       	std	Y+3, r25	; 0x03
     ef2:	ac 83       	std	Y+4, r26	; 0x04
     ef4:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     ef6:	6a 81       	ldd	r22, Y+2	; 0x02
     ef8:	7b 81       	ldd	r23, Y+3	; 0x03
     efa:	8c 81       	ldd	r24, Y+4	; 0x04
     efc:	9d 81       	ldd	r25, Y+5	; 0x05
     efe:	26 e6       	ldi	r18, 0x66	; 102
     f00:	36 e6       	ldi	r19, 0x66	; 102
     f02:	46 e6       	ldi	r20, 0x66	; 102
     f04:	55 e4       	ldi	r21, 0x45	; 69
     f06:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     f0a:	dc 01       	movw	r26, r24
     f0c:	cb 01       	movw	r24, r22
     f0e:	8e 83       	std	Y+6, r24	; 0x06
     f10:	9f 83       	std	Y+7, r25	; 0x07
     f12:	a8 87       	std	Y+8, r26	; 0x08
     f14:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     f16:	11 e0       	ldi	r17, 0x01	; 1
     f18:	6e 81       	ldd	r22, Y+6	; 0x06
     f1a:	7f 81       	ldd	r23, Y+7	; 0x07
     f1c:	88 85       	ldd	r24, Y+8	; 0x08
     f1e:	99 85       	ldd	r25, Y+9	; 0x09
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	40 e8       	ldi	r20, 0x80	; 128
     f26:	5f e3       	ldi	r21, 0x3F	; 63
     f28:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
     f2c:	88 23       	and	r24, r24
     f2e:	0c f0       	brlt	.+2      	; 0xf32 <lcd_wr_command+0xcc>
     f30:	10 e0       	ldi	r17, 0x00	; 0
     f32:	11 23       	and	r17, r17
     f34:	29 f0       	breq	.+10     	; 0xf40 <lcd_wr_command+0xda>
		__ticks = 1;
     f36:	81 e0       	ldi	r24, 0x01	; 1
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	9b 87       	std	Y+11, r25	; 0x0b
     f3c:	8a 87       	std	Y+10, r24	; 0x0a
     f3e:	46 c0       	rjmp	.+140    	; 0xfcc <lcd_wr_command+0x166>
	else if (__tmp > 65535)
     f40:	11 e0       	ldi	r17, 0x01	; 1
     f42:	6e 81       	ldd	r22, Y+6	; 0x06
     f44:	7f 81       	ldd	r23, Y+7	; 0x07
     f46:	88 85       	ldd	r24, Y+8	; 0x08
     f48:	99 85       	ldd	r25, Y+9	; 0x09
     f4a:	20 e0       	ldi	r18, 0x00	; 0
     f4c:	3f ef       	ldi	r19, 0xFF	; 255
     f4e:	4f e7       	ldi	r20, 0x7F	; 127
     f50:	57 e4       	ldi	r21, 0x47	; 71
     f52:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
     f56:	18 16       	cp	r1, r24
     f58:	0c f0       	brlt	.+2      	; 0xf5c <lcd_wr_command+0xf6>
     f5a:	10 e0       	ldi	r17, 0x00	; 0
     f5c:	11 23       	and	r17, r17
     f5e:	61 f1       	breq	.+88     	; 0xfb8 <lcd_wr_command+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f60:	6a 81       	ldd	r22, Y+2	; 0x02
     f62:	7b 81       	ldd	r23, Y+3	; 0x03
     f64:	8c 81       	ldd	r24, Y+4	; 0x04
     f66:	9d 81       	ldd	r25, Y+5	; 0x05
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	40 e2       	ldi	r20, 0x20	; 32
     f6e:	51 e4       	ldi	r21, 0x41	; 65
     f70:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
     f74:	dc 01       	movw	r26, r24
     f76:	cb 01       	movw	r24, r22
     f78:	bc 01       	movw	r22, r24
     f7a:	cd 01       	movw	r24, r26
     f7c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     f80:	dc 01       	movw	r26, r24
     f82:	cb 01       	movw	r24, r22
     f84:	9b 87       	std	Y+11, r25	; 0x0b
     f86:	8a 87       	std	Y+10, r24	; 0x0a
     f88:	12 c0       	rjmp	.+36     	; 0xfae <lcd_wr_command+0x148>
     f8a:	80 e7       	ldi	r24, 0x70	; 112
     f8c:	91 e0       	ldi	r25, 0x01	; 1
     f8e:	9d 87       	std	Y+13, r25	; 0x0d
     f90:	8c 87       	std	Y+12, r24	; 0x0c
     f92:	8c 85       	ldd	r24, Y+12	; 0x0c
     f94:	9d 85       	ldd	r25, Y+13	; 0x0d
     f96:	8c 01       	movw	r16, r24
     f98:	c8 01       	movw	r24, r16
     f9a:	01 97       	sbiw	r24, 0x01	; 1
     f9c:	f1 f7       	brne	.-4      	; 0xf9a <lcd_wr_command+0x134>
     f9e:	8c 01       	movw	r16, r24
     fa0:	1d 87       	std	Y+13, r17	; 0x0d
     fa2:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fa4:	8a 85       	ldd	r24, Y+10	; 0x0a
     fa6:	9b 85       	ldd	r25, Y+11	; 0x0b
     fa8:	01 97       	sbiw	r24, 0x01	; 1
     faa:	9b 87       	std	Y+11, r25	; 0x0b
     fac:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fae:	8a 85       	ldd	r24, Y+10	; 0x0a
     fb0:	9b 85       	ldd	r25, Y+11	; 0x0b
     fb2:	00 97       	sbiw	r24, 0x00	; 0
     fb4:	51 f7       	brne	.-44     	; 0xf8a <lcd_wr_command+0x124>
     fb6:	17 c0       	rjmp	.+46     	; 0xfe6 <lcd_wr_command+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fb8:	6e 81       	ldd	r22, Y+6	; 0x06
     fba:	7f 81       	ldd	r23, Y+7	; 0x07
     fbc:	88 85       	ldd	r24, Y+8	; 0x08
     fbe:	99 85       	ldd	r25, Y+9	; 0x09
     fc0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
     fc4:	dc 01       	movw	r26, r24
     fc6:	cb 01       	movw	r24, r22
     fc8:	9b 87       	std	Y+11, r25	; 0x0b
     fca:	8a 87       	std	Y+10, r24	; 0x0a
     fcc:	8a 85       	ldd	r24, Y+10	; 0x0a
     fce:	9b 85       	ldd	r25, Y+11	; 0x0b
     fd0:	9f 87       	std	Y+15, r25	; 0x0f
     fd2:	8e 87       	std	Y+14, r24	; 0x0e
     fd4:	8e 85       	ldd	r24, Y+14	; 0x0e
     fd6:	9f 85       	ldd	r25, Y+15	; 0x0f
     fd8:	8c 01       	movw	r16, r24
     fda:	f8 01       	movw	r30, r16
     fdc:	31 97       	sbiw	r30, 0x01	; 1
     fde:	f1 f7       	brne	.-4      	; 0xfdc <lcd_wr_command+0x176>
     fe0:	8f 01       	movw	r16, r30
     fe2:	1f 87       	std	Y+15, r17	; 0x0f
     fe4:	0e 87       	std	Y+14, r16	; 0x0e
	_delay_ms(5);
	cbit(lcd_port,EN);
     fe6:	88 e2       	ldi	r24, 0x28	; 40
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	28 e2       	ldi	r18, 0x28	; 40
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	f9 01       	movw	r30, r18
     ff0:	20 81       	ld	r18, Z
     ff2:	2b 7f       	andi	r18, 0xFB	; 251
     ff4:	fc 01       	movw	r30, r24
     ff6:	20 83       	st	Z, r18
	
	cmd = cmd & 0x0F;
     ff8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ffa:	8f 70       	andi	r24, 0x0F	; 15
     ffc:	8e 8f       	std	Y+30, r24	; 0x1e
	cmd = cmd<<4;
     ffe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1000:	82 95       	swap	r24
    1002:	80 7f       	andi	r24, 0xF0	; 240
    1004:	8e 8f       	std	Y+30, r24	; 0x1e
	lcd_port &= 0x0F;
    1006:	88 e2       	ldi	r24, 0x28	; 40
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	28 e2       	ldi	r18, 0x28	; 40
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	f9 01       	movw	r30, r18
    1010:	20 81       	ld	r18, Z
    1012:	2f 70       	andi	r18, 0x0F	; 15
    1014:	fc 01       	movw	r30, r24
    1016:	20 83       	st	Z, r18
	lcd_port |= cmd;
    1018:	88 e2       	ldi	r24, 0x28	; 40
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	28 e2       	ldi	r18, 0x28	; 40
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	f9 01       	movw	r30, r18
    1022:	30 81       	ld	r19, Z
    1024:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1026:	23 2b       	or	r18, r19
    1028:	fc 01       	movw	r30, r24
    102a:	20 83       	st	Z, r18
	cbit(lcd_port,RS);
    102c:	88 e2       	ldi	r24, 0x28	; 40
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	28 e2       	ldi	r18, 0x28	; 40
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	f9 01       	movw	r30, r18
    1036:	20 81       	ld	r18, Z
    1038:	2e 7f       	andi	r18, 0xFE	; 254
    103a:	fc 01       	movw	r30, r24
    103c:	20 83       	st	Z, r18
	cbit(lcd_port,RW);
    103e:	88 e2       	ldi	r24, 0x28	; 40
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	28 e2       	ldi	r18, 0x28	; 40
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	f9 01       	movw	r30, r18
    1048:	20 81       	ld	r18, Z
    104a:	2d 7f       	andi	r18, 0xFD	; 253
    104c:	fc 01       	movw	r30, r24
    104e:	20 83       	st	Z, r18
	sbit(lcd_port,EN);
    1050:	88 e2       	ldi	r24, 0x28	; 40
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	28 e2       	ldi	r18, 0x28	; 40
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	f9 01       	movw	r30, r18
    105a:	20 81       	ld	r18, Z
    105c:	24 60       	ori	r18, 0x04	; 4
    105e:	fc 01       	movw	r30, r24
    1060:	20 83       	st	Z, r18
    1062:	80 e0       	ldi	r24, 0x00	; 0
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	a0 ea       	ldi	r26, 0xA0	; 160
    1068:	b0 e4       	ldi	r27, 0x40	; 64
    106a:	88 8b       	std	Y+16, r24	; 0x10
    106c:	99 8b       	std	Y+17, r25	; 0x11
    106e:	aa 8b       	std	Y+18, r26	; 0x12
    1070:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1072:	68 89       	ldd	r22, Y+16	; 0x10
    1074:	79 89       	ldd	r23, Y+17	; 0x11
    1076:	8a 89       	ldd	r24, Y+18	; 0x12
    1078:	9b 89       	ldd	r25, Y+19	; 0x13
    107a:	26 e6       	ldi	r18, 0x66	; 102
    107c:	36 e6       	ldi	r19, 0x66	; 102
    107e:	46 e6       	ldi	r20, 0x66	; 102
    1080:	55 e4       	ldi	r21, 0x45	; 69
    1082:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    1086:	dc 01       	movw	r26, r24
    1088:	cb 01       	movw	r24, r22
    108a:	8c 8b       	std	Y+20, r24	; 0x14
    108c:	9d 8b       	std	Y+21, r25	; 0x15
    108e:	ae 8b       	std	Y+22, r26	; 0x16
    1090:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
    1092:	11 e0       	ldi	r17, 0x01	; 1
    1094:	6c 89       	ldd	r22, Y+20	; 0x14
    1096:	7d 89       	ldd	r23, Y+21	; 0x15
    1098:	8e 89       	ldd	r24, Y+22	; 0x16
    109a:	9f 89       	ldd	r25, Y+23	; 0x17
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	40 e8       	ldi	r20, 0x80	; 128
    10a2:	5f e3       	ldi	r21, 0x3F	; 63
    10a4:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    10a8:	88 23       	and	r24, r24
    10aa:	0c f0       	brlt	.+2      	; 0x10ae <lcd_wr_command+0x248>
    10ac:	10 e0       	ldi	r17, 0x00	; 0
    10ae:	11 23       	and	r17, r17
    10b0:	29 f0       	breq	.+10     	; 0x10bc <lcd_wr_command+0x256>
		__ticks = 1;
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	99 8f       	std	Y+25, r25	; 0x19
    10b8:	88 8f       	std	Y+24, r24	; 0x18
    10ba:	46 c0       	rjmp	.+140    	; 0x1148 <lcd_wr_command+0x2e2>
	else if (__tmp > 65535)
    10bc:	11 e0       	ldi	r17, 0x01	; 1
    10be:	6c 89       	ldd	r22, Y+20	; 0x14
    10c0:	7d 89       	ldd	r23, Y+21	; 0x15
    10c2:	8e 89       	ldd	r24, Y+22	; 0x16
    10c4:	9f 89       	ldd	r25, Y+23	; 0x17
    10c6:	20 e0       	ldi	r18, 0x00	; 0
    10c8:	3f ef       	ldi	r19, 0xFF	; 255
    10ca:	4f e7       	ldi	r20, 0x7F	; 127
    10cc:	57 e4       	ldi	r21, 0x47	; 71
    10ce:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    10d2:	18 16       	cp	r1, r24
    10d4:	0c f0       	brlt	.+2      	; 0x10d8 <lcd_wr_command+0x272>
    10d6:	10 e0       	ldi	r17, 0x00	; 0
    10d8:	11 23       	and	r17, r17
    10da:	61 f1       	breq	.+88     	; 0x1134 <lcd_wr_command+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10dc:	68 89       	ldd	r22, Y+16	; 0x10
    10de:	79 89       	ldd	r23, Y+17	; 0x11
    10e0:	8a 89       	ldd	r24, Y+18	; 0x12
    10e2:	9b 89       	ldd	r25, Y+19	; 0x13
    10e4:	20 e0       	ldi	r18, 0x00	; 0
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	40 e2       	ldi	r20, 0x20	; 32
    10ea:	51 e4       	ldi	r21, 0x41	; 65
    10ec:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    10f0:	dc 01       	movw	r26, r24
    10f2:	cb 01       	movw	r24, r22
    10f4:	bc 01       	movw	r22, r24
    10f6:	cd 01       	movw	r24, r26
    10f8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    10fc:	dc 01       	movw	r26, r24
    10fe:	cb 01       	movw	r24, r22
    1100:	99 8f       	std	Y+25, r25	; 0x19
    1102:	88 8f       	std	Y+24, r24	; 0x18
    1104:	12 c0       	rjmp	.+36     	; 0x112a <lcd_wr_command+0x2c4>
    1106:	80 e7       	ldi	r24, 0x70	; 112
    1108:	91 e0       	ldi	r25, 0x01	; 1
    110a:	9b 8f       	std	Y+27, r25	; 0x1b
    110c:	8a 8f       	std	Y+26, r24	; 0x1a
    110e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1110:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1112:	8c 01       	movw	r16, r24
    1114:	c8 01       	movw	r24, r16
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	f1 f7       	brne	.-4      	; 0x1116 <lcd_wr_command+0x2b0>
    111a:	8c 01       	movw	r16, r24
    111c:	1b 8f       	std	Y+27, r17	; 0x1b
    111e:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1120:	88 8d       	ldd	r24, Y+24	; 0x18
    1122:	99 8d       	ldd	r25, Y+25	; 0x19
    1124:	01 97       	sbiw	r24, 0x01	; 1
    1126:	99 8f       	std	Y+25, r25	; 0x19
    1128:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    112a:	88 8d       	ldd	r24, Y+24	; 0x18
    112c:	99 8d       	ldd	r25, Y+25	; 0x19
    112e:	00 97       	sbiw	r24, 0x00	; 0
    1130:	51 f7       	brne	.-44     	; 0x1106 <lcd_wr_command+0x2a0>
    1132:	17 c0       	rjmp	.+46     	; 0x1162 <lcd_wr_command+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1134:	6c 89       	ldd	r22, Y+20	; 0x14
    1136:	7d 89       	ldd	r23, Y+21	; 0x15
    1138:	8e 89       	ldd	r24, Y+22	; 0x16
    113a:	9f 89       	ldd	r25, Y+23	; 0x17
    113c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1140:	dc 01       	movw	r26, r24
    1142:	cb 01       	movw	r24, r22
    1144:	99 8f       	std	Y+25, r25	; 0x19
    1146:	88 8f       	std	Y+24, r24	; 0x18
    1148:	88 8d       	ldd	r24, Y+24	; 0x18
    114a:	99 8d       	ldd	r25, Y+25	; 0x19
    114c:	9d 8f       	std	Y+29, r25	; 0x1d
    114e:	8c 8f       	std	Y+28, r24	; 0x1c
    1150:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1152:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1154:	8c 01       	movw	r16, r24
    1156:	f8 01       	movw	r30, r16
    1158:	31 97       	sbiw	r30, 0x01	; 1
    115a:	f1 f7       	brne	.-4      	; 0x1158 <lcd_wr_command+0x2f2>
    115c:	8f 01       	movw	r16, r30
    115e:	1d 8f       	std	Y+29, r17	; 0x1d
    1160:	0c 8f       	std	Y+28, r16	; 0x1c
	_delay_ms(5);
	cbit(lcd_port,EN);
    1162:	88 e2       	ldi	r24, 0x28	; 40
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	28 e2       	ldi	r18, 0x28	; 40
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	f9 01       	movw	r30, r18
    116c:	20 81       	ld	r18, Z
    116e:	2b 7f       	andi	r18, 0xFB	; 251
    1170:	fc 01       	movw	r30, r24
    1172:	20 83       	st	Z, r18
}
    1174:	6e 96       	adiw	r28, 0x1e	; 30
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	08 95       	ret

0000118a <lcd_wr_char>:

//Function to Write Data on LCD
void lcd_wr_char(char letter)
{
    118a:	0f 93       	push	r16
    118c:	1f 93       	push	r17
    118e:	cf 93       	push	r28
    1190:	df 93       	push	r29
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	6e 97       	sbiw	r28, 0x1e	; 30
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	de bf       	out	0x3e, r29	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	cd bf       	out	0x3d, r28	; 61
    11a2:	8e 8f       	std	Y+30, r24	; 0x1e
	char temp;
	temp = letter;
    11a4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    11a6:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp & 0xF0);
    11a8:	89 81       	ldd	r24, Y+1	; 0x01
    11aa:	80 7f       	andi	r24, 0xF0	; 240
    11ac:	89 83       	std	Y+1, r24	; 0x01
	lcd_port &= 0x0F;
    11ae:	88 e2       	ldi	r24, 0x28	; 40
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	28 e2       	ldi	r18, 0x28	; 40
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	f9 01       	movw	r30, r18
    11b8:	20 81       	ld	r18, Z
    11ba:	2f 70       	andi	r18, 0x0F	; 15
    11bc:	fc 01       	movw	r30, r24
    11be:	20 83       	st	Z, r18
	lcd_port |= temp;
    11c0:	88 e2       	ldi	r24, 0x28	; 40
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	28 e2       	ldi	r18, 0x28	; 40
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	f9 01       	movw	r30, r18
    11ca:	30 81       	ld	r19, Z
    11cc:	29 81       	ldd	r18, Y+1	; 0x01
    11ce:	23 2b       	or	r18, r19
    11d0:	fc 01       	movw	r30, r24
    11d2:	20 83       	st	Z, r18
	sbit(lcd_port,RS);
    11d4:	88 e2       	ldi	r24, 0x28	; 40
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	28 e2       	ldi	r18, 0x28	; 40
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	f9 01       	movw	r30, r18
    11de:	20 81       	ld	r18, Z
    11e0:	21 60       	ori	r18, 0x01	; 1
    11e2:	fc 01       	movw	r30, r24
    11e4:	20 83       	st	Z, r18
	cbit(lcd_port,RW);
    11e6:	88 e2       	ldi	r24, 0x28	; 40
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	28 e2       	ldi	r18, 0x28	; 40
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	f9 01       	movw	r30, r18
    11f0:	20 81       	ld	r18, Z
    11f2:	2d 7f       	andi	r18, 0xFD	; 253
    11f4:	fc 01       	movw	r30, r24
    11f6:	20 83       	st	Z, r18
	sbit(lcd_port,EN);
    11f8:	88 e2       	ldi	r24, 0x28	; 40
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	28 e2       	ldi	r18, 0x28	; 40
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	f9 01       	movw	r30, r18
    1202:	20 81       	ld	r18, Z
    1204:	24 60       	ori	r18, 0x04	; 4
    1206:	fc 01       	movw	r30, r24
    1208:	20 83       	st	Z, r18
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	a0 ea       	ldi	r26, 0xA0	; 160
    1210:	b0 e4       	ldi	r27, 0x40	; 64
    1212:	8a 83       	std	Y+2, r24	; 0x02
    1214:	9b 83       	std	Y+3, r25	; 0x03
    1216:	ac 83       	std	Y+4, r26	; 0x04
    1218:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    121a:	6a 81       	ldd	r22, Y+2	; 0x02
    121c:	7b 81       	ldd	r23, Y+3	; 0x03
    121e:	8c 81       	ldd	r24, Y+4	; 0x04
    1220:	9d 81       	ldd	r25, Y+5	; 0x05
    1222:	26 e6       	ldi	r18, 0x66	; 102
    1224:	36 e6       	ldi	r19, 0x66	; 102
    1226:	46 e6       	ldi	r20, 0x66	; 102
    1228:	55 e4       	ldi	r21, 0x45	; 69
    122a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    122e:	dc 01       	movw	r26, r24
    1230:	cb 01       	movw	r24, r22
    1232:	8e 83       	std	Y+6, r24	; 0x06
    1234:	9f 83       	std	Y+7, r25	; 0x07
    1236:	a8 87       	std	Y+8, r26	; 0x08
    1238:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
    123a:	11 e0       	ldi	r17, 0x01	; 1
    123c:	6e 81       	ldd	r22, Y+6	; 0x06
    123e:	7f 81       	ldd	r23, Y+7	; 0x07
    1240:	88 85       	ldd	r24, Y+8	; 0x08
    1242:	99 85       	ldd	r25, Y+9	; 0x09
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	40 e8       	ldi	r20, 0x80	; 128
    124a:	5f e3       	ldi	r21, 0x3F	; 63
    124c:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    1250:	88 23       	and	r24, r24
    1252:	0c f0       	brlt	.+2      	; 0x1256 <lcd_wr_char+0xcc>
    1254:	10 e0       	ldi	r17, 0x00	; 0
    1256:	11 23       	and	r17, r17
    1258:	29 f0       	breq	.+10     	; 0x1264 <lcd_wr_char+0xda>
		__ticks = 1;
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	9b 87       	std	Y+11, r25	; 0x0b
    1260:	8a 87       	std	Y+10, r24	; 0x0a
    1262:	46 c0       	rjmp	.+140    	; 0x12f0 <lcd_wr_char+0x166>
	else if (__tmp > 65535)
    1264:	11 e0       	ldi	r17, 0x01	; 1
    1266:	6e 81       	ldd	r22, Y+6	; 0x06
    1268:	7f 81       	ldd	r23, Y+7	; 0x07
    126a:	88 85       	ldd	r24, Y+8	; 0x08
    126c:	99 85       	ldd	r25, Y+9	; 0x09
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	3f ef       	ldi	r19, 0xFF	; 255
    1272:	4f e7       	ldi	r20, 0x7F	; 127
    1274:	57 e4       	ldi	r21, 0x47	; 71
    1276:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    127a:	18 16       	cp	r1, r24
    127c:	0c f0       	brlt	.+2      	; 0x1280 <lcd_wr_char+0xf6>
    127e:	10 e0       	ldi	r17, 0x00	; 0
    1280:	11 23       	and	r17, r17
    1282:	61 f1       	breq	.+88     	; 0x12dc <lcd_wr_char+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1284:	6a 81       	ldd	r22, Y+2	; 0x02
    1286:	7b 81       	ldd	r23, Y+3	; 0x03
    1288:	8c 81       	ldd	r24, Y+4	; 0x04
    128a:	9d 81       	ldd	r25, Y+5	; 0x05
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	40 e2       	ldi	r20, 0x20	; 32
    1292:	51 e4       	ldi	r21, 0x41	; 65
    1294:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    1298:	dc 01       	movw	r26, r24
    129a:	cb 01       	movw	r24, r22
    129c:	bc 01       	movw	r22, r24
    129e:	cd 01       	movw	r24, r26
    12a0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    12a4:	dc 01       	movw	r26, r24
    12a6:	cb 01       	movw	r24, r22
    12a8:	9b 87       	std	Y+11, r25	; 0x0b
    12aa:	8a 87       	std	Y+10, r24	; 0x0a
    12ac:	12 c0       	rjmp	.+36     	; 0x12d2 <lcd_wr_char+0x148>
    12ae:	80 e7       	ldi	r24, 0x70	; 112
    12b0:	91 e0       	ldi	r25, 0x01	; 1
    12b2:	9d 87       	std	Y+13, r25	; 0x0d
    12b4:	8c 87       	std	Y+12, r24	; 0x0c
    12b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    12b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    12ba:	8c 01       	movw	r16, r24
    12bc:	c8 01       	movw	r24, r16
    12be:	01 97       	sbiw	r24, 0x01	; 1
    12c0:	f1 f7       	brne	.-4      	; 0x12be <lcd_wr_char+0x134>
    12c2:	8c 01       	movw	r16, r24
    12c4:	1d 87       	std	Y+13, r17	; 0x0d
    12c6:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    12ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    12cc:	01 97       	sbiw	r24, 0x01	; 1
    12ce:	9b 87       	std	Y+11, r25	; 0x0b
    12d0:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    12d4:	9b 85       	ldd	r25, Y+11	; 0x0b
    12d6:	00 97       	sbiw	r24, 0x00	; 0
    12d8:	51 f7       	brne	.-44     	; 0x12ae <lcd_wr_char+0x124>
    12da:	17 c0       	rjmp	.+46     	; 0x130a <lcd_wr_char+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12dc:	6e 81       	ldd	r22, Y+6	; 0x06
    12de:	7f 81       	ldd	r23, Y+7	; 0x07
    12e0:	88 85       	ldd	r24, Y+8	; 0x08
    12e2:	99 85       	ldd	r25, Y+9	; 0x09
    12e4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	9b 87       	std	Y+11, r25	; 0x0b
    12ee:	8a 87       	std	Y+10, r24	; 0x0a
    12f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    12f2:	9b 85       	ldd	r25, Y+11	; 0x0b
    12f4:	9f 87       	std	Y+15, r25	; 0x0f
    12f6:	8e 87       	std	Y+14, r24	; 0x0e
    12f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    12fa:	9f 85       	ldd	r25, Y+15	; 0x0f
    12fc:	8c 01       	movw	r16, r24
    12fe:	f8 01       	movw	r30, r16
    1300:	31 97       	sbiw	r30, 0x01	; 1
    1302:	f1 f7       	brne	.-4      	; 0x1300 <lcd_wr_char+0x176>
    1304:	8f 01       	movw	r16, r30
    1306:	1f 87       	std	Y+15, r17	; 0x0f
    1308:	0e 87       	std	Y+14, r16	; 0x0e
	_delay_ms(5);
	cbit(lcd_port,EN);
    130a:	88 e2       	ldi	r24, 0x28	; 40
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	28 e2       	ldi	r18, 0x28	; 40
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	f9 01       	movw	r30, r18
    1314:	20 81       	ld	r18, Z
    1316:	2b 7f       	andi	r18, 0xFB	; 251
    1318:	fc 01       	movw	r30, r24
    131a:	20 83       	st	Z, r18

	letter = letter & 0x0F;
    131c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    131e:	8f 70       	andi	r24, 0x0F	; 15
    1320:	8e 8f       	std	Y+30, r24	; 0x1e
	letter = letter<<4;
    1322:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1324:	82 95       	swap	r24
    1326:	80 7f       	andi	r24, 0xF0	; 240
    1328:	8e 8f       	std	Y+30, r24	; 0x1e
	lcd_port &= 0x0F;
    132a:	88 e2       	ldi	r24, 0x28	; 40
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	28 e2       	ldi	r18, 0x28	; 40
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	f9 01       	movw	r30, r18
    1334:	20 81       	ld	r18, Z
    1336:	2f 70       	andi	r18, 0x0F	; 15
    1338:	fc 01       	movw	r30, r24
    133a:	20 83       	st	Z, r18
	lcd_port |= letter;
    133c:	88 e2       	ldi	r24, 0x28	; 40
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	28 e2       	ldi	r18, 0x28	; 40
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	f9 01       	movw	r30, r18
    1346:	30 81       	ld	r19, Z
    1348:	2e 8d       	ldd	r18, Y+30	; 0x1e
    134a:	23 2b       	or	r18, r19
    134c:	fc 01       	movw	r30, r24
    134e:	20 83       	st	Z, r18
	sbit(lcd_port,RS);
    1350:	88 e2       	ldi	r24, 0x28	; 40
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	28 e2       	ldi	r18, 0x28	; 40
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	f9 01       	movw	r30, r18
    135a:	20 81       	ld	r18, Z
    135c:	21 60       	ori	r18, 0x01	; 1
    135e:	fc 01       	movw	r30, r24
    1360:	20 83       	st	Z, r18
	cbit(lcd_port,RW);
    1362:	88 e2       	ldi	r24, 0x28	; 40
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	28 e2       	ldi	r18, 0x28	; 40
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	f9 01       	movw	r30, r18
    136c:	20 81       	ld	r18, Z
    136e:	2d 7f       	andi	r18, 0xFD	; 253
    1370:	fc 01       	movw	r30, r24
    1372:	20 83       	st	Z, r18
	sbit(lcd_port,EN);
    1374:	88 e2       	ldi	r24, 0x28	; 40
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	28 e2       	ldi	r18, 0x28	; 40
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	f9 01       	movw	r30, r18
    137e:	20 81       	ld	r18, Z
    1380:	24 60       	ori	r18, 0x04	; 4
    1382:	fc 01       	movw	r30, r24
    1384:	20 83       	st	Z, r18
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	a0 ea       	ldi	r26, 0xA0	; 160
    138c:	b0 e4       	ldi	r27, 0x40	; 64
    138e:	88 8b       	std	Y+16, r24	; 0x10
    1390:	99 8b       	std	Y+17, r25	; 0x11
    1392:	aa 8b       	std	Y+18, r26	; 0x12
    1394:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1396:	68 89       	ldd	r22, Y+16	; 0x10
    1398:	79 89       	ldd	r23, Y+17	; 0x11
    139a:	8a 89       	ldd	r24, Y+18	; 0x12
    139c:	9b 89       	ldd	r25, Y+19	; 0x13
    139e:	26 e6       	ldi	r18, 0x66	; 102
    13a0:	36 e6       	ldi	r19, 0x66	; 102
    13a2:	46 e6       	ldi	r20, 0x66	; 102
    13a4:	55 e4       	ldi	r21, 0x45	; 69
    13a6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    13aa:	dc 01       	movw	r26, r24
    13ac:	cb 01       	movw	r24, r22
    13ae:	8c 8b       	std	Y+20, r24	; 0x14
    13b0:	9d 8b       	std	Y+21, r25	; 0x15
    13b2:	ae 8b       	std	Y+22, r26	; 0x16
    13b4:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
    13b6:	11 e0       	ldi	r17, 0x01	; 1
    13b8:	6c 89       	ldd	r22, Y+20	; 0x14
    13ba:	7d 89       	ldd	r23, Y+21	; 0x15
    13bc:	8e 89       	ldd	r24, Y+22	; 0x16
    13be:	9f 89       	ldd	r25, Y+23	; 0x17
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	40 e8       	ldi	r20, 0x80	; 128
    13c6:	5f e3       	ldi	r21, 0x3F	; 63
    13c8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    13cc:	88 23       	and	r24, r24
    13ce:	0c f0       	brlt	.+2      	; 0x13d2 <lcd_wr_char+0x248>
    13d0:	10 e0       	ldi	r17, 0x00	; 0
    13d2:	11 23       	and	r17, r17
    13d4:	29 f0       	breq	.+10     	; 0x13e0 <lcd_wr_char+0x256>
		__ticks = 1;
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	99 8f       	std	Y+25, r25	; 0x19
    13dc:	88 8f       	std	Y+24, r24	; 0x18
    13de:	46 c0       	rjmp	.+140    	; 0x146c <lcd_wr_char+0x2e2>
	else if (__tmp > 65535)
    13e0:	11 e0       	ldi	r17, 0x01	; 1
    13e2:	6c 89       	ldd	r22, Y+20	; 0x14
    13e4:	7d 89       	ldd	r23, Y+21	; 0x15
    13e6:	8e 89       	ldd	r24, Y+22	; 0x16
    13e8:	9f 89       	ldd	r25, Y+23	; 0x17
    13ea:	20 e0       	ldi	r18, 0x00	; 0
    13ec:	3f ef       	ldi	r19, 0xFF	; 255
    13ee:	4f e7       	ldi	r20, 0x7F	; 127
    13f0:	57 e4       	ldi	r21, 0x47	; 71
    13f2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    13f6:	18 16       	cp	r1, r24
    13f8:	0c f0       	brlt	.+2      	; 0x13fc <lcd_wr_char+0x272>
    13fa:	10 e0       	ldi	r17, 0x00	; 0
    13fc:	11 23       	and	r17, r17
    13fe:	61 f1       	breq	.+88     	; 0x1458 <lcd_wr_char+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1400:	68 89       	ldd	r22, Y+16	; 0x10
    1402:	79 89       	ldd	r23, Y+17	; 0x11
    1404:	8a 89       	ldd	r24, Y+18	; 0x12
    1406:	9b 89       	ldd	r25, Y+19	; 0x13
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	40 e2       	ldi	r20, 0x20	; 32
    140e:	51 e4       	ldi	r21, 0x41	; 65
    1410:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    1414:	dc 01       	movw	r26, r24
    1416:	cb 01       	movw	r24, r22
    1418:	bc 01       	movw	r22, r24
    141a:	cd 01       	movw	r24, r26
    141c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1420:	dc 01       	movw	r26, r24
    1422:	cb 01       	movw	r24, r22
    1424:	99 8f       	std	Y+25, r25	; 0x19
    1426:	88 8f       	std	Y+24, r24	; 0x18
    1428:	12 c0       	rjmp	.+36     	; 0x144e <lcd_wr_char+0x2c4>
    142a:	80 e7       	ldi	r24, 0x70	; 112
    142c:	91 e0       	ldi	r25, 0x01	; 1
    142e:	9b 8f       	std	Y+27, r25	; 0x1b
    1430:	8a 8f       	std	Y+26, r24	; 0x1a
    1432:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1434:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1436:	8c 01       	movw	r16, r24
    1438:	c8 01       	movw	r24, r16
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	f1 f7       	brne	.-4      	; 0x143a <lcd_wr_char+0x2b0>
    143e:	8c 01       	movw	r16, r24
    1440:	1b 8f       	std	Y+27, r17	; 0x1b
    1442:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1444:	88 8d       	ldd	r24, Y+24	; 0x18
    1446:	99 8d       	ldd	r25, Y+25	; 0x19
    1448:	01 97       	sbiw	r24, 0x01	; 1
    144a:	99 8f       	std	Y+25, r25	; 0x19
    144c:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    144e:	88 8d       	ldd	r24, Y+24	; 0x18
    1450:	99 8d       	ldd	r25, Y+25	; 0x19
    1452:	00 97       	sbiw	r24, 0x00	; 0
    1454:	51 f7       	brne	.-44     	; 0x142a <lcd_wr_char+0x2a0>
    1456:	17 c0       	rjmp	.+46     	; 0x1486 <lcd_wr_char+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1458:	6c 89       	ldd	r22, Y+20	; 0x14
    145a:	7d 89       	ldd	r23, Y+21	; 0x15
    145c:	8e 89       	ldd	r24, Y+22	; 0x16
    145e:	9f 89       	ldd	r25, Y+23	; 0x17
    1460:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	99 8f       	std	Y+25, r25	; 0x19
    146a:	88 8f       	std	Y+24, r24	; 0x18
    146c:	88 8d       	ldd	r24, Y+24	; 0x18
    146e:	99 8d       	ldd	r25, Y+25	; 0x19
    1470:	9d 8f       	std	Y+29, r25	; 0x1d
    1472:	8c 8f       	std	Y+28, r24	; 0x1c
    1474:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1476:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1478:	8c 01       	movw	r16, r24
    147a:	f8 01       	movw	r30, r16
    147c:	31 97       	sbiw	r30, 0x01	; 1
    147e:	f1 f7       	brne	.-4      	; 0x147c <lcd_wr_char+0x2f2>
    1480:	8f 01       	movw	r16, r30
    1482:	1d 8f       	std	Y+29, r17	; 0x1d
    1484:	0c 8f       	std	Y+28, r16	; 0x1c
	_delay_ms(5);
	cbit(lcd_port,EN);
    1486:	88 e2       	ldi	r24, 0x28	; 40
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	28 e2       	ldi	r18, 0x28	; 40
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	f9 01       	movw	r30, r18
    1490:	20 81       	ld	r18, Z
    1492:	2b 7f       	andi	r18, 0xFB	; 251
    1494:	fc 01       	movw	r30, r24
    1496:	20 83       	st	Z, r18
}
    1498:	6e 96       	adiw	r28, 0x1e	; 30
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	1f 91       	pop	r17
    14aa:	0f 91       	pop	r16
    14ac:	08 95       	ret

000014ae <lcd_home>:


//Function to bring cursor at home position
void lcd_home()
{
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	cd b7       	in	r28, 0x3d	; 61
    14b4:	de b7       	in	r29, 0x3e	; 62
	lcd_wr_command(0x80);
    14b6:	80 e8       	ldi	r24, 0x80	; 128
    14b8:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
}
    14bc:	df 91       	pop	r29
    14be:	cf 91       	pop	r28
    14c0:	08 95       	ret

000014c2 <lcd_string>:


//Function to Print String on LCD
void lcd_string(char *str)
{
    14c2:	cf 93       	push	r28
    14c4:	df 93       	push	r29
    14c6:	0f 92       	push	r0
    14c8:	0f 92       	push	r0
    14ca:	cd b7       	in	r28, 0x3d	; 61
    14cc:	de b7       	in	r29, 0x3e	; 62
    14ce:	9a 83       	std	Y+2, r25	; 0x02
    14d0:	89 83       	std	Y+1, r24	; 0x01
	while(*str != '\0')
    14d2:	0b c0       	rjmp	.+22     	; 0x14ea <lcd_string+0x28>
	{
		lcd_wr_char(*str);
    14d4:	89 81       	ldd	r24, Y+1	; 0x01
    14d6:	9a 81       	ldd	r25, Y+2	; 0x02
    14d8:	fc 01       	movw	r30, r24
    14da:	80 81       	ld	r24, Z
    14dc:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
		str++;
    14e0:	89 81       	ldd	r24, Y+1	; 0x01
    14e2:	9a 81       	ldd	r25, Y+2	; 0x02
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	9a 83       	std	Y+2, r25	; 0x02
    14e8:	89 83       	std	Y+1, r24	; 0x01


//Function to Print String on LCD
void lcd_string(char *str)
{
	while(*str != '\0')
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	9a 81       	ldd	r25, Y+2	; 0x02
    14ee:	fc 01       	movw	r30, r24
    14f0:	80 81       	ld	r24, Z
    14f2:	88 23       	and	r24, r24
    14f4:	79 f7       	brne	.-34     	; 0x14d4 <lcd_string+0x12>
	{
		lcd_wr_char(*str);
		str++;
	}
}
    14f6:	0f 90       	pop	r0
    14f8:	0f 90       	pop	r0
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	08 95       	ret

00001500 <lcd_cursor>:

//Position the LCD cursor at "row", "column".

void lcd_cursor (char row, char column)
{
    1500:	cf 93       	push	r28
    1502:	df 93       	push	r29
    1504:	0f 92       	push	r0
    1506:	0f 92       	push	r0
    1508:	cd b7       	in	r28, 0x3d	; 61
    150a:	de b7       	in	r29, 0x3e	; 62
    150c:	89 83       	std	Y+1, r24	; 0x01
    150e:	6a 83       	std	Y+2, r22	; 0x02
	switch (row) {
    1510:	89 81       	ldd	r24, Y+1	; 0x01
    1512:	88 2f       	mov	r24, r24
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	82 30       	cpi	r24, 0x02	; 2
    1518:	91 05       	cpc	r25, r1
    151a:	99 f0       	breq	.+38     	; 0x1542 <lcd_cursor+0x42>
    151c:	83 30       	cpi	r24, 0x03	; 3
    151e:	91 05       	cpc	r25, r1
    1520:	24 f4       	brge	.+8      	; 0x152a <lcd_cursor+0x2a>
    1522:	81 30       	cpi	r24, 0x01	; 1
    1524:	91 05       	cpc	r25, r1
    1526:	41 f0       	breq	.+16     	; 0x1538 <lcd_cursor+0x38>
    1528:	1b c0       	rjmp	.+54     	; 0x1560 <lcd_cursor+0x60>
    152a:	83 30       	cpi	r24, 0x03	; 3
    152c:	91 05       	cpc	r25, r1
    152e:	71 f0       	breq	.+28     	; 0x154c <lcd_cursor+0x4c>
    1530:	84 30       	cpi	r24, 0x04	; 4
    1532:	91 05       	cpc	r25, r1
    1534:	81 f0       	breq	.+32     	; 0x1556 <lcd_cursor+0x56>
    1536:	14 c0       	rjmp	.+40     	; 0x1560 <lcd_cursor+0x60>
		case 1: lcd_wr_command (0x80 + column - 1); break;
    1538:	8a 81       	ldd	r24, Y+2	; 0x02
    153a:	81 58       	subi	r24, 0x81	; 129
    153c:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
    1540:	10 c0       	rjmp	.+32     	; 0x1562 <lcd_cursor+0x62>
		case 2: lcd_wr_command (0xc0 + column - 1); break;
    1542:	8a 81       	ldd	r24, Y+2	; 0x02
    1544:	81 54       	subi	r24, 0x41	; 65
    1546:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
    154a:	0b c0       	rjmp	.+22     	; 0x1562 <lcd_cursor+0x62>
		case 3: lcd_wr_command (0x94 + column - 1); break;
    154c:	8a 81       	ldd	r24, Y+2	; 0x02
    154e:	8d 56       	subi	r24, 0x6D	; 109
    1550:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
    1554:	06 c0       	rjmp	.+12     	; 0x1562 <lcd_cursor+0x62>
		case 4: lcd_wr_command (0xd4 + column - 1); break;
    1556:	8a 81       	ldd	r24, Y+2	; 0x02
    1558:	8d 52       	subi	r24, 0x2D	; 45
    155a:	0e 94 33 07 	call	0xe66	; 0xe66 <lcd_wr_command>
    155e:	01 c0       	rjmp	.+2      	; 0x1562 <lcd_cursor+0x62>
		default: break;
    1560:	00 00       	nop
	}
}
    1562:	0f 90       	pop	r0
    1564:	0f 90       	pop	r0
    1566:	df 91       	pop	r29
    1568:	cf 91       	pop	r28
    156a:	08 95       	ret

0000156c <lcd_print>:

//Function To Print Any input value upto the desired digit on LCD
void lcd_print (char row, char coloumn, unsigned int value, int digits)
{
    156c:	cf 93       	push	r28
    156e:	df 93       	push	r29
    1570:	cd b7       	in	r28, 0x3d	; 61
    1572:	de b7       	in	r29, 0x3e	; 62
    1574:	27 97       	sbiw	r28, 0x07	; 7
    1576:	0f b6       	in	r0, 0x3f	; 63
    1578:	f8 94       	cli
    157a:	de bf       	out	0x3e, r29	; 62
    157c:	0f be       	out	0x3f, r0	; 63
    157e:	cd bf       	out	0x3d, r28	; 61
    1580:	8a 83       	std	Y+2, r24	; 0x02
    1582:	6b 83       	std	Y+3, r22	; 0x03
    1584:	5d 83       	std	Y+5, r21	; 0x05
    1586:	4c 83       	std	Y+4, r20	; 0x04
    1588:	3f 83       	std	Y+7, r19	; 0x07
    158a:	2e 83       	std	Y+6, r18	; 0x06
	unsigned char flag=0;
    158c:	19 82       	std	Y+1, r1	; 0x01
	if(row==0||coloumn==0)
    158e:	8a 81       	ldd	r24, Y+2	; 0x02
    1590:	88 23       	and	r24, r24
    1592:	19 f0       	breq	.+6      	; 0x159a <lcd_print+0x2e>
    1594:	8b 81       	ldd	r24, Y+3	; 0x03
    1596:	88 23       	and	r24, r24
    1598:	19 f4       	brne	.+6      	; 0x15a0 <lcd_print+0x34>
	{
		lcd_home();
    159a:	0e 94 57 0a 	call	0x14ae	; 0x14ae <lcd_home>
    159e:	04 c0       	rjmp	.+8      	; 0x15a8 <lcd_print+0x3c>
	}
	else
	{
		lcd_cursor(row,coloumn);
    15a0:	8a 81       	ldd	r24, Y+2	; 0x02
    15a2:	6b 81       	ldd	r22, Y+3	; 0x03
    15a4:	0e 94 80 0a 	call	0x1500	; 0x1500 <lcd_cursor>
	}
	if(digits==5 || flag==1)
    15a8:	8e 81       	ldd	r24, Y+6	; 0x06
    15aa:	9f 81       	ldd	r25, Y+7	; 0x07
    15ac:	85 30       	cpi	r24, 0x05	; 5
    15ae:	91 05       	cpc	r25, r1
    15b0:	19 f0       	breq	.+6      	; 0x15b8 <lcd_print+0x4c>
    15b2:	89 81       	ldd	r24, Y+1	; 0x01
    15b4:	81 30       	cpi	r24, 0x01	; 1
    15b6:	b1 f4       	brne	.+44     	; 0x15e4 <lcd_print+0x78>
	{
		million=value/10000+48;
    15b8:	8c 81       	ldd	r24, Y+4	; 0x04
    15ba:	9d 81       	ldd	r25, Y+5	; 0x05
    15bc:	20 e1       	ldi	r18, 0x10	; 16
    15be:	37 e2       	ldi	r19, 0x27	; 39
    15c0:	b9 01       	movw	r22, r18
    15c2:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    15c6:	9b 01       	movw	r18, r22
    15c8:	c9 01       	movw	r24, r18
    15ca:	c0 96       	adiw	r24, 0x30	; 48
    15cc:	90 93 8a 04 	sts	0x048A, r25
    15d0:	80 93 89 04 	sts	0x0489, r24
		lcd_wr_char(million);
    15d4:	80 91 89 04 	lds	r24, 0x0489
    15d8:	90 91 8a 04 	lds	r25, 0x048A
    15dc:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
		flag=1;
    15e0:	81 e0       	ldi	r24, 0x01	; 1
    15e2:	89 83       	std	Y+1, r24	; 0x01
	}
	if(digits==4 || flag==1)
    15e4:	8e 81       	ldd	r24, Y+6	; 0x06
    15e6:	9f 81       	ldd	r25, Y+7	; 0x07
    15e8:	84 30       	cpi	r24, 0x04	; 4
    15ea:	91 05       	cpc	r25, r1
    15ec:	19 f0       	breq	.+6      	; 0x15f4 <lcd_print+0x88>
    15ee:	89 81       	ldd	r24, Y+1	; 0x01
    15f0:	81 30       	cpi	r24, 0x01	; 1
    15f2:	19 f5       	brne	.+70     	; 0x163a <lcd_print+0xce>
	{
		temp = value/1000;
    15f4:	8c 81       	ldd	r24, Y+4	; 0x04
    15f6:	9d 81       	ldd	r25, Y+5	; 0x05
    15f8:	28 ee       	ldi	r18, 0xE8	; 232
    15fa:	33 e0       	ldi	r19, 0x03	; 3
    15fc:	b9 01       	movw	r22, r18
    15fe:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    1602:	9b 01       	movw	r18, r22
    1604:	c9 01       	movw	r24, r18
    1606:	90 93 8c 04 	sts	0x048C, r25
    160a:	80 93 8b 04 	sts	0x048B, r24
		thousand = temp%10 + 48;
    160e:	80 91 8b 04 	lds	r24, 0x048B
    1612:	90 91 8c 04 	lds	r25, 0x048C
    1616:	2a e0       	ldi	r18, 0x0A	; 10
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	b9 01       	movw	r22, r18
    161c:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    1620:	c0 96       	adiw	r24, 0x30	; 48
    1622:	90 93 d2 04 	sts	0x04D2, r25
    1626:	80 93 d1 04 	sts	0x04D1, r24
		lcd_wr_char(thousand);
    162a:	80 91 d1 04 	lds	r24, 0x04D1
    162e:	90 91 d2 04 	lds	r25, 0x04D2
    1632:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
		flag=1;
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	89 83       	std	Y+1, r24	; 0x01
	}
	if(digits==3 || flag==1)
    163a:	8e 81       	ldd	r24, Y+6	; 0x06
    163c:	9f 81       	ldd	r25, Y+7	; 0x07
    163e:	83 30       	cpi	r24, 0x03	; 3
    1640:	91 05       	cpc	r25, r1
    1642:	19 f0       	breq	.+6      	; 0x164a <lcd_print+0xde>
    1644:	89 81       	ldd	r24, Y+1	; 0x01
    1646:	81 30       	cpi	r24, 0x01	; 1
    1648:	19 f5       	brne	.+70     	; 0x1690 <lcd_print+0x124>
	{
		temp = value/100;
    164a:	8c 81       	ldd	r24, Y+4	; 0x04
    164c:	9d 81       	ldd	r25, Y+5	; 0x05
    164e:	24 e6       	ldi	r18, 0x64	; 100
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	b9 01       	movw	r22, r18
    1654:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    1658:	9b 01       	movw	r18, r22
    165a:	c9 01       	movw	r24, r18
    165c:	90 93 8c 04 	sts	0x048C, r25
    1660:	80 93 8b 04 	sts	0x048B, r24
		hundred = temp%10 + 48;
    1664:	80 91 8b 04 	lds	r24, 0x048B
    1668:	90 91 8c 04 	lds	r25, 0x048C
    166c:	2a e0       	ldi	r18, 0x0A	; 10
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	b9 01       	movw	r22, r18
    1672:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    1676:	c0 96       	adiw	r24, 0x30	; 48
    1678:	90 93 ce 04 	sts	0x04CE, r25
    167c:	80 93 cd 04 	sts	0x04CD, r24
		lcd_wr_char(hundred);
    1680:	80 91 cd 04 	lds	r24, 0x04CD
    1684:	90 91 ce 04 	lds	r25, 0x04CE
    1688:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
		flag=1;
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	89 83       	std	Y+1, r24	; 0x01
	}
	if(digits==2 || flag==1)
    1690:	8e 81       	ldd	r24, Y+6	; 0x06
    1692:	9f 81       	ldd	r25, Y+7	; 0x07
    1694:	82 30       	cpi	r24, 0x02	; 2
    1696:	91 05       	cpc	r25, r1
    1698:	19 f0       	breq	.+6      	; 0x16a0 <lcd_print+0x134>
    169a:	89 81       	ldd	r24, Y+1	; 0x01
    169c:	81 30       	cpi	r24, 0x01	; 1
    169e:	19 f5       	brne	.+70     	; 0x16e6 <lcd_print+0x17a>
	{
		temp = value/10;
    16a0:	8c 81       	ldd	r24, Y+4	; 0x04
    16a2:	9d 81       	ldd	r25, Y+5	; 0x05
    16a4:	2a e0       	ldi	r18, 0x0A	; 10
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	b9 01       	movw	r22, r18
    16aa:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    16ae:	9b 01       	movw	r18, r22
    16b0:	c9 01       	movw	r24, r18
    16b2:	90 93 8c 04 	sts	0x048C, r25
    16b6:	80 93 8b 04 	sts	0x048B, r24
		tens = temp%10 + 48;
    16ba:	80 91 8b 04 	lds	r24, 0x048B
    16be:	90 91 8c 04 	lds	r25, 0x048C
    16c2:	2a e0       	ldi	r18, 0x0A	; 10
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	b9 01       	movw	r22, r18
    16c8:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    16cc:	c0 96       	adiw	r24, 0x30	; 48
    16ce:	90 93 ab 04 	sts	0x04AB, r25
    16d2:	80 93 aa 04 	sts	0x04AA, r24
		lcd_wr_char(tens);
    16d6:	80 91 aa 04 	lds	r24, 0x04AA
    16da:	90 91 ab 04 	lds	r25, 0x04AB
    16de:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
		flag=1;
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	89 83       	std	Y+1, r24	; 0x01
	}
	if(digits==1 || flag==1)
    16e6:	8e 81       	ldd	r24, Y+6	; 0x06
    16e8:	9f 81       	ldd	r25, Y+7	; 0x07
    16ea:	81 30       	cpi	r24, 0x01	; 1
    16ec:	91 05       	cpc	r25, r1
    16ee:	19 f0       	breq	.+6      	; 0x16f6 <lcd_print+0x18a>
    16f0:	89 81       	ldd	r24, Y+1	; 0x01
    16f2:	81 30       	cpi	r24, 0x01	; 1
    16f4:	91 f4       	brne	.+36     	; 0x171a <lcd_print+0x1ae>
	{
		unit = value%10 + 48;
    16f6:	8c 81       	ldd	r24, Y+4	; 0x04
    16f8:	9d 81       	ldd	r25, Y+5	; 0x05
    16fa:	2a e0       	ldi	r18, 0x0A	; 10
    16fc:	30 e0       	ldi	r19, 0x00	; 0
    16fe:	b9 01       	movw	r22, r18
    1700:	0e 94 b1 69 	call	0xd362	; 0xd362 <__udivmodhi4>
    1704:	c0 96       	adiw	r24, 0x30	; 48
    1706:	90 93 d0 04 	sts	0x04D0, r25
    170a:	80 93 cf 04 	sts	0x04CF, r24
		lcd_wr_char(unit);
    170e:	80 91 cf 04 	lds	r24, 0x04CF
    1712:	90 91 d0 04 	lds	r25, 0x04D0
    1716:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
	}
	if(digits>5)
    171a:	8e 81       	ldd	r24, Y+6	; 0x06
    171c:	9f 81       	ldd	r25, Y+7	; 0x07
    171e:	86 30       	cpi	r24, 0x06	; 6
    1720:	91 05       	cpc	r25, r1
    1722:	1c f0       	brlt	.+6      	; 0x172a <lcd_print+0x1be>
	{
		lcd_wr_char('E');
    1724:	85 e4       	ldi	r24, 0x45	; 69
    1726:	0e 94 c5 08 	call	0x118a	; 0x118a <lcd_wr_char>
	}
	
}
    172a:	27 96       	adiw	r28, 0x07	; 7
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	f8 94       	cli
    1730:	de bf       	out	0x3e, r29	; 62
    1732:	0f be       	out	0x3f, r0	; 63
    1734:	cd bf       	out	0x3d, r28	; 61
    1736:	df 91       	pop	r29
    1738:	cf 91       	pop	r28
    173a:	08 95       	ret

0000173c <lcd_port_config>:
unsigned char Center_white_line = 0;
unsigned char Right_white_line = 0;

//Function to configure LCD port
void lcd_port_config (void)
{
    173c:	cf 93       	push	r28
    173e:	df 93       	push	r29
    1740:	cd b7       	in	r28, 0x3d	; 61
    1742:	de b7       	in	r29, 0x3e	; 62
 DDRC = DDRC | 0xF7; //all the LCD pin's direction set as output
    1744:	87 e2       	ldi	r24, 0x27	; 39
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	27 e2       	ldi	r18, 0x27	; 39
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	f9 01       	movw	r30, r18
    174e:	20 81       	ld	r18, Z
    1750:	27 6f       	ori	r18, 0xF7	; 247
    1752:	fc 01       	movw	r30, r24
    1754:	20 83       	st	Z, r18
 PORTC = PORTC & 0x80; // all the LCD pins are set to logic 0 except PORTC 7
    1756:	88 e2       	ldi	r24, 0x28	; 40
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	28 e2       	ldi	r18, 0x28	; 40
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	f9 01       	movw	r30, r18
    1760:	20 81       	ld	r18, Z
    1762:	20 78       	andi	r18, 0x80	; 128
    1764:	fc 01       	movw	r30, r24
    1766:	20 83       	st	Z, r18
}
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	08 95       	ret

0000176e <adc_pin_config>:



//ADC pin configuration
void adc_pin_config (void)
{
    176e:	cf 93       	push	r28
    1770:	df 93       	push	r29
    1772:	cd b7       	in	r28, 0x3d	; 61
    1774:	de b7       	in	r29, 0x3e	; 62
 DDRF = 0x00; 
    1776:	80 e3       	ldi	r24, 0x30	; 48
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	fc 01       	movw	r30, r24
    177c:	10 82       	st	Z, r1
 PORTF = 0x00;
    177e:	81 e3       	ldi	r24, 0x31	; 49
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	fc 01       	movw	r30, r24
    1784:	10 82       	st	Z, r1
 DDRK = 0x00;
    1786:	87 e0       	ldi	r24, 0x07	; 7
    1788:	91 e0       	ldi	r25, 0x01	; 1
    178a:	fc 01       	movw	r30, r24
    178c:	10 82       	st	Z, r1
 PORTK = 0x00;
    178e:	88 e0       	ldi	r24, 0x08	; 8
    1790:	91 e0       	ldi	r25, 0x01	; 1
    1792:	fc 01       	movw	r30, r24
    1794:	10 82       	st	Z, r1
}
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	08 95       	ret

0000179c <buzzer_pin_config>:

void buzzer_pin_config (void)
{
    179c:	cf 93       	push	r28
    179e:	df 93       	push	r29
    17a0:	cd b7       	in	r28, 0x3d	; 61
    17a2:	de b7       	in	r29, 0x3e	; 62
 DDRC = DDRC | 0x08;		//Setting PORTC 3 as output
    17a4:	87 e2       	ldi	r24, 0x27	; 39
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	27 e2       	ldi	r18, 0x27	; 39
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	f9 01       	movw	r30, r18
    17ae:	20 81       	ld	r18, Z
    17b0:	28 60       	ori	r18, 0x08	; 8
    17b2:	fc 01       	movw	r30, r24
    17b4:	20 83       	st	Z, r18
 PORTC = PORTC & 0xF7;		//Setting PORTC 3 logic low to turnoff buzzer
    17b6:	88 e2       	ldi	r24, 0x28	; 40
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	28 e2       	ldi	r18, 0x28	; 40
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	f9 01       	movw	r30, r18
    17c0:	20 81       	ld	r18, Z
    17c2:	27 7f       	andi	r18, 0xF7	; 247
    17c4:	fc 01       	movw	r30, r24
    17c6:	20 83       	st	Z, r18
}
    17c8:	df 91       	pop	r29
    17ca:	cf 91       	pop	r28
    17cc:	08 95       	ret

000017ce <left_encoder_pin_config>:



//Function to configure INT4 (PORTE 4) pin as input for the left position encoder
void left_encoder_pin_config (void)
{
    17ce:	cf 93       	push	r28
    17d0:	df 93       	push	r29
    17d2:	cd b7       	in	r28, 0x3d	; 61
    17d4:	de b7       	in	r29, 0x3e	; 62
 DDRE  = DDRE & 0xEF;  //Set the direction of the PORTE 4 pin as input
    17d6:	8d e2       	ldi	r24, 0x2D	; 45
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	2d e2       	ldi	r18, 0x2D	; 45
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	f9 01       	movw	r30, r18
    17e0:	20 81       	ld	r18, Z
    17e2:	2f 7e       	andi	r18, 0xEF	; 239
    17e4:	fc 01       	movw	r30, r24
    17e6:	20 83       	st	Z, r18
 PORTE = PORTE | 0x10; //Enable internal pull-up for PORTE 4 pin
    17e8:	8e e2       	ldi	r24, 0x2E	; 46
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	2e e2       	ldi	r18, 0x2E	; 46
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	f9 01       	movw	r30, r18
    17f2:	20 81       	ld	r18, Z
    17f4:	20 61       	ori	r18, 0x10	; 16
    17f6:	fc 01       	movw	r30, r24
    17f8:	20 83       	st	Z, r18
}
    17fa:	df 91       	pop	r29
    17fc:	cf 91       	pop	r28
    17fe:	08 95       	ret

00001800 <right_encoder_pin_config>:

//Function to configure INT5 (PORTE 5) pin as input for the right position encoder
void right_encoder_pin_config (void)
{
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	cd b7       	in	r28, 0x3d	; 61
    1806:	de b7       	in	r29, 0x3e	; 62
 DDRE  = DDRE & 0xDF;  //Set the direction of the PORTE 4 pin as input
    1808:	8d e2       	ldi	r24, 0x2D	; 45
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	2d e2       	ldi	r18, 0x2D	; 45
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	f9 01       	movw	r30, r18
    1812:	20 81       	ld	r18, Z
    1814:	2f 7d       	andi	r18, 0xDF	; 223
    1816:	fc 01       	movw	r30, r24
    1818:	20 83       	st	Z, r18
 PORTE = PORTE | 0x20; //Enable internal pull-up for PORTE 4 pin
    181a:	8e e2       	ldi	r24, 0x2E	; 46
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	2e e2       	ldi	r18, 0x2E	; 46
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	f9 01       	movw	r30, r18
    1824:	20 81       	ld	r18, Z
    1826:	20 62       	ori	r18, 0x20	; 32
    1828:	fc 01       	movw	r30, r24
    182a:	20 83       	st	Z, r18
}
    182c:	df 91       	pop	r29
    182e:	cf 91       	pop	r28
    1830:	08 95       	ret

00001832 <motion_pin_config>:

//Function to configure ports to enable robot's motion
void motion_pin_config (void) 
{
    1832:	cf 93       	push	r28
    1834:	df 93       	push	r29
    1836:	cd b7       	in	r28, 0x3d	; 61
    1838:	de b7       	in	r29, 0x3e	; 62
 DDRA = DDRA | 0x0F;
    183a:	81 e2       	ldi	r24, 0x21	; 33
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	21 e2       	ldi	r18, 0x21	; 33
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	f9 01       	movw	r30, r18
    1844:	20 81       	ld	r18, Z
    1846:	2f 60       	ori	r18, 0x0F	; 15
    1848:	fc 01       	movw	r30, r24
    184a:	20 83       	st	Z, r18
 PORTA = PORTA & 0xF0;
    184c:	82 e2       	ldi	r24, 0x22	; 34
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	22 e2       	ldi	r18, 0x22	; 34
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	f9 01       	movw	r30, r18
    1856:	20 81       	ld	r18, Z
    1858:	20 7f       	andi	r18, 0xF0	; 240
    185a:	fc 01       	movw	r30, r24
    185c:	20 83       	st	Z, r18
 DDRL = DDRL | 0x18;   //Setting PL3 and PL4 pins as output for PWM generation
    185e:	8a e0       	ldi	r24, 0x0A	; 10
    1860:	91 e0       	ldi	r25, 0x01	; 1
    1862:	2a e0       	ldi	r18, 0x0A	; 10
    1864:	31 e0       	ldi	r19, 0x01	; 1
    1866:	f9 01       	movw	r30, r18
    1868:	20 81       	ld	r18, Z
    186a:	28 61       	ori	r18, 0x18	; 24
    186c:	fc 01       	movw	r30, r24
    186e:	20 83       	st	Z, r18
 PORTL = PORTL | 0x18; //PL3 and PL4 pins are for velocity control using PWM.
    1870:	8b e0       	ldi	r24, 0x0B	; 11
    1872:	91 e0       	ldi	r25, 0x01	; 1
    1874:	2b e0       	ldi	r18, 0x0B	; 11
    1876:	31 e0       	ldi	r19, 0x01	; 1
    1878:	f9 01       	movw	r30, r18
    187a:	20 81       	ld	r18, Z
    187c:	28 61       	ori	r18, 0x18	; 24
    187e:	fc 01       	movw	r30, r24
    1880:	20 83       	st	Z, r18
}
    1882:	df 91       	pop	r29
    1884:	cf 91       	pop	r28
    1886:	08 95       	ret

00001888 <servo_1>:

//Function to rotate Servo 1 by a specified angle in the multiples of 1.86 degrees
void servo_1(unsigned char degrees)
{
    1888:	0f 93       	push	r16
    188a:	1f 93       	push	r17
    188c:	cf 93       	push	r28
    188e:	df 93       	push	r29
    1890:	00 d0       	rcall	.+0      	; 0x1892 <servo_1+0xa>
    1892:	0f 92       	push	r0
    1894:	0f 92       	push	r0
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
    189a:	8d 83       	std	Y+5, r24	; 0x05
	float PositionPanServo = 0;
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	dc 01       	movw	r26, r24
    18a2:	89 83       	std	Y+1, r24	; 0x01
    18a4:	9a 83       	std	Y+2, r25	; 0x02
    18a6:	ab 83       	std	Y+3, r26	; 0x03
    18a8:	bc 83       	std	Y+4, r27	; 0x04
	PositionPanServo = ((float)degrees / 1.86) + 35.0;
    18aa:	8d 81       	ldd	r24, Y+5	; 0x05
    18ac:	88 2f       	mov	r24, r24
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	a0 e0       	ldi	r26, 0x00	; 0
    18b2:	b0 e0       	ldi	r27, 0x00	; 0
    18b4:	bc 01       	movw	r22, r24
    18b6:	cd 01       	movw	r24, r26
    18b8:	0e 94 98 68 	call	0xd130	; 0xd130 <__floatunsisf>
    18bc:	dc 01       	movw	r26, r24
    18be:	cb 01       	movw	r24, r22
    18c0:	bc 01       	movw	r22, r24
    18c2:	cd 01       	movw	r24, r26
    18c4:	2b e7       	ldi	r18, 0x7B	; 123
    18c6:	34 e1       	ldi	r19, 0x14	; 20
    18c8:	4e ee       	ldi	r20, 0xEE	; 238
    18ca:	5f e3       	ldi	r21, 0x3F	; 63
    18cc:	0e 94 04 68 	call	0xd008	; 0xd008 <__divsf3>
    18d0:	dc 01       	movw	r26, r24
    18d2:	cb 01       	movw	r24, r22
    18d4:	bc 01       	movw	r22, r24
    18d6:	cd 01       	movw	r24, r26
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	4c e0       	ldi	r20, 0x0C	; 12
    18de:	52 e4       	ldi	r21, 0x42	; 66
    18e0:	0e 94 9c 67 	call	0xcf38	; 0xcf38 <__addsf3>
    18e4:	dc 01       	movw	r26, r24
    18e6:	cb 01       	movw	r24, r22
    18e8:	89 83       	std	Y+1, r24	; 0x01
    18ea:	9a 83       	std	Y+2, r25	; 0x02
    18ec:	ab 83       	std	Y+3, r26	; 0x03
    18ee:	bc 83       	std	Y+4, r27	; 0x04
	OCR1AH = 0x00;
    18f0:	89 e8       	ldi	r24, 0x89	; 137
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	fc 01       	movw	r30, r24
    18f6:	10 82       	st	Z, r1
	OCR1AL = (unsigned char) PositionPanServo;
    18f8:	08 e8       	ldi	r16, 0x88	; 136
    18fa:	10 e0       	ldi	r17, 0x00	; 0
    18fc:	69 81       	ldd	r22, Y+1	; 0x01
    18fe:	7a 81       	ldd	r23, Y+2	; 0x02
    1900:	8b 81       	ldd	r24, Y+3	; 0x03
    1902:	9c 81       	ldd	r25, Y+4	; 0x04
    1904:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1908:	dc 01       	movw	r26, r24
    190a:	cb 01       	movw	r24, r22
    190c:	f8 01       	movw	r30, r16
    190e:	80 83       	st	Z, r24
}
    1910:	0f 90       	pop	r0
    1912:	0f 90       	pop	r0
    1914:	0f 90       	pop	r0
    1916:	0f 90       	pop	r0
    1918:	0f 90       	pop	r0
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	1f 91       	pop	r17
    1920:	0f 91       	pop	r16
    1922:	08 95       	ret

00001924 <servo_2>:


//Function to rotate Servo 2 by a specified angle in the multiples of 1.86 degrees
void servo_2(unsigned char degrees)
{
    1924:	0f 93       	push	r16
    1926:	1f 93       	push	r17
    1928:	cf 93       	push	r28
    192a:	df 93       	push	r29
    192c:	00 d0       	rcall	.+0      	; 0x192e <servo_2+0xa>
    192e:	0f 92       	push	r0
    1930:	0f 92       	push	r0
    1932:	cd b7       	in	r28, 0x3d	; 61
    1934:	de b7       	in	r29, 0x3e	; 62
    1936:	8d 83       	std	Y+5, r24	; 0x05
	float PositionTiltServo = 0;
    1938:	80 e0       	ldi	r24, 0x00	; 0
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	dc 01       	movw	r26, r24
    193e:	89 83       	std	Y+1, r24	; 0x01
    1940:	9a 83       	std	Y+2, r25	; 0x02
    1942:	ab 83       	std	Y+3, r26	; 0x03
    1944:	bc 83       	std	Y+4, r27	; 0x04
	PositionTiltServo = ((float)degrees / 1.86) + 35.0;
    1946:	8d 81       	ldd	r24, Y+5	; 0x05
    1948:	88 2f       	mov	r24, r24
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	a0 e0       	ldi	r26, 0x00	; 0
    194e:	b0 e0       	ldi	r27, 0x00	; 0
    1950:	bc 01       	movw	r22, r24
    1952:	cd 01       	movw	r24, r26
    1954:	0e 94 98 68 	call	0xd130	; 0xd130 <__floatunsisf>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	bc 01       	movw	r22, r24
    195e:	cd 01       	movw	r24, r26
    1960:	2b e7       	ldi	r18, 0x7B	; 123
    1962:	34 e1       	ldi	r19, 0x14	; 20
    1964:	4e ee       	ldi	r20, 0xEE	; 238
    1966:	5f e3       	ldi	r21, 0x3F	; 63
    1968:	0e 94 04 68 	call	0xd008	; 0xd008 <__divsf3>
    196c:	dc 01       	movw	r26, r24
    196e:	cb 01       	movw	r24, r22
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	20 e0       	ldi	r18, 0x00	; 0
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	4c e0       	ldi	r20, 0x0C	; 12
    197a:	52 e4       	ldi	r21, 0x42	; 66
    197c:	0e 94 9c 67 	call	0xcf38	; 0xcf38 <__addsf3>
    1980:	dc 01       	movw	r26, r24
    1982:	cb 01       	movw	r24, r22
    1984:	89 83       	std	Y+1, r24	; 0x01
    1986:	9a 83       	std	Y+2, r25	; 0x02
    1988:	ab 83       	std	Y+3, r26	; 0x03
    198a:	bc 83       	std	Y+4, r27	; 0x04
	OCR1BH = 0x00;
    198c:	8b e8       	ldi	r24, 0x8B	; 139
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	fc 01       	movw	r30, r24
    1992:	10 82       	st	Z, r1
	OCR1BL = (unsigned char) PositionTiltServo;
    1994:	0a e8       	ldi	r16, 0x8A	; 138
    1996:	10 e0       	ldi	r17, 0x00	; 0
    1998:	69 81       	ldd	r22, Y+1	; 0x01
    199a:	7a 81       	ldd	r23, Y+2	; 0x02
    199c:	8b 81       	ldd	r24, Y+3	; 0x03
    199e:	9c 81       	ldd	r25, Y+4	; 0x04
    19a0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    19a4:	dc 01       	movw	r26, r24
    19a6:	cb 01       	movw	r24, r22
    19a8:	f8 01       	movw	r30, r16
    19aa:	80 83       	st	Z, r24
}
    19ac:	0f 90       	pop	r0
    19ae:	0f 90       	pop	r0
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	0f 90       	pop	r0
    19b6:	df 91       	pop	r29
    19b8:	cf 91       	pop	r28
    19ba:	1f 91       	pop	r17
    19bc:	0f 91       	pop	r16
    19be:	08 95       	ret

000019c0 <port_init>:
//Function to Initialize PORTS
void port_init()
{
    19c0:	cf 93       	push	r28
    19c2:	df 93       	push	r29
    19c4:	cd b7       	in	r28, 0x3d	; 61
    19c6:	de b7       	in	r29, 0x3e	; 62
	lcd_port_config();
    19c8:	0e 94 9e 0b 	call	0x173c	; 0x173c <lcd_port_config>
	adc_pin_config();
    19cc:	0e 94 b7 0b 	call	0x176e	; 0x176e <adc_pin_config>
	motion_pin_config();
    19d0:	0e 94 19 0c 	call	0x1832	; 0x1832 <motion_pin_config>
	buzzer_pin_config();
    19d4:	0e 94 ce 0b 	call	0x179c	; 0x179c <buzzer_pin_config>
	left_encoder_pin_config(); //left encoder pin config
    19d8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <left_encoder_pin_config>
    right_encoder_pin_config(); //right encoder pin config		
    19dc:	0e 94 00 0c 	call	0x1800	; 0x1800 <right_encoder_pin_config>
	servo1_pin_config(); //Configure PORTB 5 pin for servo motor 1 operation
    19e0:	8b eb       	ldi	r24, 0xBB	; 187
    19e2:	98 e1       	ldi	r25, 0x18	; 24
    19e4:	fc 01       	movw	r30, r24
    19e6:	19 95       	eicall
	servo2_pin_config(); //Configure PORTB 6 pin for servo motor 2 operation
    19e8:	84 ed       	ldi	r24, 0xD4	; 212
    19ea:	98 e1       	ldi	r25, 0x18	; 24
    19ec:	fc 01       	movw	r30, r24
    19ee:	19 95       	eicall
	
}
    19f0:	df 91       	pop	r29
    19f2:	cf 91       	pop	r28
    19f4:	08 95       	ret

000019f6 <timer5_init>:
// Timer 5 initialized in PWM mode for velocity control
// Prescale:256
// PWM 8bit fast, TOP=0x00FF
// Timer Frequency:225.000Hz
void timer5_init()
{
    19f6:	cf 93       	push	r28
    19f8:	df 93       	push	r29
    19fa:	cd b7       	in	r28, 0x3d	; 61
    19fc:	de b7       	in	r29, 0x3e	; 62
	TCCR5B = 0x00;	//Stop
    19fe:	81 e2       	ldi	r24, 0x21	; 33
    1a00:	91 e0       	ldi	r25, 0x01	; 1
    1a02:	fc 01       	movw	r30, r24
    1a04:	10 82       	st	Z, r1
	TCNT5H = 0xFF;	//Counter higher 8-bit value to which OCR5xH value is compared with
    1a06:	85 e2       	ldi	r24, 0x25	; 37
    1a08:	91 e0       	ldi	r25, 0x01	; 1
    1a0a:	2f ef       	ldi	r18, 0xFF	; 255
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	20 83       	st	Z, r18
	TCNT5L = 0x01;	//Counter lower 8-bit value to which OCR5xH value is compared with
    1a10:	84 e2       	ldi	r24, 0x24	; 36
    1a12:	91 e0       	ldi	r25, 0x01	; 1
    1a14:	21 e0       	ldi	r18, 0x01	; 1
    1a16:	fc 01       	movw	r30, r24
    1a18:	20 83       	st	Z, r18
	OCR5AH = 0x00;	//Output compare register high value for Left Motor
    1a1a:	89 e2       	ldi	r24, 0x29	; 41
    1a1c:	91 e0       	ldi	r25, 0x01	; 1
    1a1e:	fc 01       	movw	r30, r24
    1a20:	10 82       	st	Z, r1
	OCR5AL = 0xFF;	//Output compare register low value for Left Motor
    1a22:	88 e2       	ldi	r24, 0x28	; 40
    1a24:	91 e0       	ldi	r25, 0x01	; 1
    1a26:	2f ef       	ldi	r18, 0xFF	; 255
    1a28:	fc 01       	movw	r30, r24
    1a2a:	20 83       	st	Z, r18
	OCR5BH = 0x00;	//Output compare register high value for Right Motor
    1a2c:	8b e2       	ldi	r24, 0x2B	; 43
    1a2e:	91 e0       	ldi	r25, 0x01	; 1
    1a30:	fc 01       	movw	r30, r24
    1a32:	10 82       	st	Z, r1
	OCR5BL = 0xFF;	//Output compare register low value for Right Motor
    1a34:	8a e2       	ldi	r24, 0x2A	; 42
    1a36:	91 e0       	ldi	r25, 0x01	; 1
    1a38:	2f ef       	ldi	r18, 0xFF	; 255
    1a3a:	fc 01       	movw	r30, r24
    1a3c:	20 83       	st	Z, r18
	OCR5CH = 0x00;	//Output compare register high value for Motor C1
    1a3e:	8d e2       	ldi	r24, 0x2D	; 45
    1a40:	91 e0       	ldi	r25, 0x01	; 1
    1a42:	fc 01       	movw	r30, r24
    1a44:	10 82       	st	Z, r1
	OCR5CL = 0xFF;	//Output compare register low value for Motor C1
    1a46:	8c e2       	ldi	r24, 0x2C	; 44
    1a48:	91 e0       	ldi	r25, 0x01	; 1
    1a4a:	2f ef       	ldi	r18, 0xFF	; 255
    1a4c:	fc 01       	movw	r30, r24
    1a4e:	20 83       	st	Z, r18
	TCCR5A = 0xA9;	/*{COM5A1=1, COM5A0=0; COM5B1=1, COM5B0=0; COM5C1=1 COM5C0=0}
    1a50:	80 e2       	ldi	r24, 0x20	; 32
    1a52:	91 e0       	ldi	r25, 0x01	; 1
    1a54:	29 ea       	ldi	r18, 0xA9	; 169
    1a56:	fc 01       	movw	r30, r24
    1a58:	20 83       	st	Z, r18
 					  For Overriding normal port functionality to OCRnA outputs.
				  	  {WGM51=0, WGM50=1} Along With WGM52 in TCCR5B for Selecting FAST PWM 8-bit Mode*/
	
	TCCR5B = 0x0B;	//WGM12=1; CS12=0, CS11=1, CS10=1 (Prescaler=64)
    1a5a:	81 e2       	ldi	r24, 0x21	; 33
    1a5c:	91 e0       	ldi	r25, 0x01	; 1
    1a5e:	2b e0       	ldi	r18, 0x0B	; 11
    1a60:	fc 01       	movw	r30, r24
    1a62:	20 83       	st	Z, r18
}
    1a64:	df 91       	pop	r29
    1a66:	cf 91       	pop	r28
    1a68:	08 95       	ret

00001a6a <adc_init>:

void adc_init()
{
    1a6a:	cf 93       	push	r28
    1a6c:	df 93       	push	r29
    1a6e:	cd b7       	in	r28, 0x3d	; 61
    1a70:	de b7       	in	r29, 0x3e	; 62
	ADCSRA = 0x00;
    1a72:	8a e7       	ldi	r24, 0x7A	; 122
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	fc 01       	movw	r30, r24
    1a78:	10 82       	st	Z, r1
	ADCSRB = 0x00;		//MUX5 = 0
    1a7a:	8b e7       	ldi	r24, 0x7B	; 123
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	fc 01       	movw	r30, r24
    1a80:	10 82       	st	Z, r1
	ADMUX = 0x20;		//Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
    1a82:	8c e7       	ldi	r24, 0x7C	; 124
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	20 e2       	ldi	r18, 0x20	; 32
    1a88:	fc 01       	movw	r30, r24
    1a8a:	20 83       	st	Z, r18
	ACSR = 0x80;
    1a8c:	80 e5       	ldi	r24, 0x50	; 80
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	20 e8       	ldi	r18, 0x80	; 128
    1a92:	fc 01       	movw	r30, r24
    1a94:	20 83       	st	Z, r18
	ADCSRA = 0x86;		//ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
    1a96:	8a e7       	ldi	r24, 0x7A	; 122
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	26 e8       	ldi	r18, 0x86	; 134
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	20 83       	st	Z, r18
}
    1aa0:	df 91       	pop	r29
    1aa2:	cf 91       	pop	r28
    1aa4:	08 95       	ret

00001aa6 <ADC_Conversion>:

//Function For ADC Conversion
unsigned char ADC_Conversion(unsigned char Ch) 
{
    1aa6:	cf 93       	push	r28
    1aa8:	df 93       	push	r29
    1aaa:	0f 92       	push	r0
    1aac:	0f 92       	push	r0
    1aae:	cd b7       	in	r28, 0x3d	; 61
    1ab0:	de b7       	in	r29, 0x3e	; 62
    1ab2:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char a;
	if(Ch>7)
    1ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab6:	88 30       	cpi	r24, 0x08	; 8
    1ab8:	28 f0       	brcs	.+10     	; 0x1ac4 <ADC_Conversion+0x1e>
	{
		ADCSRB = 0x08;
    1aba:	8b e7       	ldi	r24, 0x7B	; 123
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	28 e0       	ldi	r18, 0x08	; 8
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	20 83       	st	Z, r18
	}
	Ch = Ch & 0x07;  			
    1ac4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ac6:	87 70       	andi	r24, 0x07	; 7
    1ac8:	8a 83       	std	Y+2, r24	; 0x02
	ADMUX= 0x20| Ch;	   		
    1aca:	8c e7       	ldi	r24, 0x7C	; 124
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	2a 81       	ldd	r18, Y+2	; 0x02
    1ad0:	20 62       	ori	r18, 0x20	; 32
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	20 83       	st	Z, r18
	ADCSRA = ADCSRA | 0x40;		//Set start conversion bit
    1ad6:	8a e7       	ldi	r24, 0x7A	; 122
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	2a e7       	ldi	r18, 0x7A	; 122
    1adc:	30 e0       	ldi	r19, 0x00	; 0
    1ade:	f9 01       	movw	r30, r18
    1ae0:	20 81       	ld	r18, Z
    1ae2:	20 64       	ori	r18, 0x40	; 64
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	20 83       	st	Z, r18
	while((ADCSRA&0x10)==0);	//Wait for conversion to complete
    1ae8:	00 00       	nop
    1aea:	8a e7       	ldi	r24, 0x7A	; 122
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	fc 01       	movw	r30, r24
    1af0:	80 81       	ld	r24, Z
    1af2:	88 2f       	mov	r24, r24
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	80 71       	andi	r24, 0x10	; 16
    1af8:	90 70       	andi	r25, 0x00	; 0
    1afa:	00 97       	sbiw	r24, 0x00	; 0
    1afc:	b1 f3       	breq	.-20     	; 0x1aea <ADC_Conversion+0x44>
	a=ADCH;
    1afe:	89 e7       	ldi	r24, 0x79	; 121
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	fc 01       	movw	r30, r24
    1b04:	80 81       	ld	r24, Z
    1b06:	89 83       	std	Y+1, r24	; 0x01
	ADCSRA = ADCSRA|0x10; //clear ADIF (ADC Interrupt Flag) by writing 1 to it
    1b08:	8a e7       	ldi	r24, 0x7A	; 122
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	2a e7       	ldi	r18, 0x7A	; 122
    1b0e:	30 e0       	ldi	r19, 0x00	; 0
    1b10:	f9 01       	movw	r30, r18
    1b12:	20 81       	ld	r18, Z
    1b14:	20 61       	ori	r18, 0x10	; 16
    1b16:	fc 01       	movw	r30, r24
    1b18:	20 83       	st	Z, r18
	ADCSRB = 0x00;
    1b1a:	8b e7       	ldi	r24, 0x7B	; 123
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	fc 01       	movw	r30, r24
    1b20:	10 82       	st	Z, r1
	return a;
    1b22:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b24:	0f 90       	pop	r0
    1b26:	0f 90       	pop	r0
    1b28:	df 91       	pop	r29
    1b2a:	cf 91       	pop	r28
    1b2c:	08 95       	ret

00001b2e <buzzer_on>:


void buzzer_on (void)
{
    1b2e:	cf 93       	push	r28
    1b30:	df 93       	push	r29
    1b32:	0f 92       	push	r0
    1b34:	cd b7       	in	r28, 0x3d	; 61
    1b36:	de b7       	in	r29, 0x3e	; 62
 unsigned char port_restore = 0;
    1b38:	19 82       	std	Y+1, r1	; 0x01
 port_restore = PINC;
    1b3a:	86 e2       	ldi	r24, 0x26	; 38
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	fc 01       	movw	r30, r24
    1b40:	80 81       	ld	r24, Z
    1b42:	89 83       	std	Y+1, r24	; 0x01
 port_restore = port_restore | 0x08;
    1b44:	89 81       	ldd	r24, Y+1	; 0x01
    1b46:	88 60       	ori	r24, 0x08	; 8
    1b48:	89 83       	std	Y+1, r24	; 0x01
 PORTC = port_restore;
    1b4a:	88 e2       	ldi	r24, 0x28	; 40
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	29 81       	ldd	r18, Y+1	; 0x01
    1b50:	fc 01       	movw	r30, r24
    1b52:	20 83       	st	Z, r18
}
    1b54:	0f 90       	pop	r0
    1b56:	df 91       	pop	r29
    1b58:	cf 91       	pop	r28
    1b5a:	08 95       	ret

00001b5c <buzzer_off>:

void buzzer_off (void)
{
    1b5c:	cf 93       	push	r28
    1b5e:	df 93       	push	r29
    1b60:	0f 92       	push	r0
    1b62:	cd b7       	in	r28, 0x3d	; 61
    1b64:	de b7       	in	r29, 0x3e	; 62
 unsigned char port_restore = 0;
    1b66:	19 82       	std	Y+1, r1	; 0x01
 port_restore = PINC;
    1b68:	86 e2       	ldi	r24, 0x26	; 38
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	80 81       	ld	r24, Z
    1b70:	89 83       	std	Y+1, r24	; 0x01
 port_restore = port_restore & 0xF7;
    1b72:	89 81       	ldd	r24, Y+1	; 0x01
    1b74:	87 7f       	andi	r24, 0xF7	; 247
    1b76:	89 83       	std	Y+1, r24	; 0x01
 PORTC = port_restore;
    1b78:	88 e2       	ldi	r24, 0x28	; 40
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	29 81       	ldd	r18, Y+1	; 0x01
    1b7e:	fc 01       	movw	r30, r24
    1b80:	20 83       	st	Z, r18
}
    1b82:	0f 90       	pop	r0
    1b84:	df 91       	pop	r29
    1b86:	cf 91       	pop	r28
    1b88:	08 95       	ret

00001b8a <print_sensor>:


//Function To Print Sesor Values At Desired Row And Coloumn Location on LCD
void print_sensor(char row, char coloumn,unsigned char channel)
{
    1b8a:	cf 93       	push	r28
    1b8c:	df 93       	push	r29
    1b8e:	00 d0       	rcall	.+0      	; 0x1b90 <print_sensor+0x6>
    1b90:	cd b7       	in	r28, 0x3d	; 61
    1b92:	de b7       	in	r29, 0x3e	; 62
    1b94:	89 83       	std	Y+1, r24	; 0x01
    1b96:	6a 83       	std	Y+2, r22	; 0x02
    1b98:	4b 83       	std	Y+3, r20	; 0x03
	
	ADC_Value = ADC_Conversion(channel);
    1b9a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b9c:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <ADC_Conversion>
    1ba0:	80 93 a5 04 	sts	0x04A5, r24
	lcd_print(row, coloumn, ADC_Value, 3);
    1ba4:	80 91 a5 04 	lds	r24, 0x04A5
    1ba8:	28 2f       	mov	r18, r24
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	89 81       	ldd	r24, Y+1	; 0x01
    1bae:	6a 81       	ldd	r22, Y+2	; 0x02
    1bb0:	a9 01       	movw	r20, r18
    1bb2:	23 e0       	ldi	r18, 0x03	; 3
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
}
    1bba:	0f 90       	pop	r0
    1bbc:	0f 90       	pop	r0
    1bbe:	0f 90       	pop	r0
    1bc0:	df 91       	pop	r29
    1bc2:	cf 91       	pop	r28
    1bc4:	08 95       	ret

00001bc6 <velocity>:

//Function for velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	0f 92       	push	r0
    1bcc:	0f 92       	push	r0
    1bce:	cd b7       	in	r28, 0x3d	; 61
    1bd0:	de b7       	in	r29, 0x3e	; 62
    1bd2:	89 83       	std	Y+1, r24	; 0x01
    1bd4:	6a 83       	std	Y+2, r22	; 0x02
	OCR5AL = (unsigned char)left_motor;
    1bd6:	88 e2       	ldi	r24, 0x28	; 40
    1bd8:	91 e0       	ldi	r25, 0x01	; 1
    1bda:	29 81       	ldd	r18, Y+1	; 0x01
    1bdc:	fc 01       	movw	r30, r24
    1bde:	20 83       	st	Z, r18
	OCR5BL = (unsigned char)right_motor;
    1be0:	8a e2       	ldi	r24, 0x2A	; 42
    1be2:	91 e0       	ldi	r25, 0x01	; 1
    1be4:	2a 81       	ldd	r18, Y+2	; 0x02
    1be6:	fc 01       	movw	r30, r24
    1be8:	20 83       	st	Z, r18
}
    1bea:	0f 90       	pop	r0
    1bec:	0f 90       	pop	r0
    1bee:	df 91       	pop	r29
    1bf0:	cf 91       	pop	r28
    1bf2:	08 95       	ret

00001bf4 <motion_set>:

//Function used for setting motor's direction
void motion_set (unsigned char Direction)
{
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	0f 92       	push	r0
    1bfa:	0f 92       	push	r0
    1bfc:	cd b7       	in	r28, 0x3d	; 61
    1bfe:	de b7       	in	r29, 0x3e	; 62
    1c00:	8a 83       	std	Y+2, r24	; 0x02
 unsigned char PortARestore = 0;
    1c02:	19 82       	std	Y+1, r1	; 0x01

 Direction &= 0x0F; 		// removing upper nibbel for the protection
    1c04:	8a 81       	ldd	r24, Y+2	; 0x02
    1c06:	8f 70       	andi	r24, 0x0F	; 15
    1c08:	8a 83       	std	Y+2, r24	; 0x02
 PortARestore = PORTA; 		// reading the PORTA original status
    1c0a:	82 e2       	ldi	r24, 0x22	; 34
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	fc 01       	movw	r30, r24
    1c10:	80 81       	ld	r24, Z
    1c12:	89 83       	std	Y+1, r24	; 0x01
 PortARestore &= 0xF0; 		// making lower direction nibbel to 0
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	80 7f       	andi	r24, 0xF0	; 240
    1c18:	89 83       	std	Y+1, r24	; 0x01
 PortARestore |= Direction; // adding lower nibbel for forward command and restoring the PORTA status
    1c1a:	99 81       	ldd	r25, Y+1	; 0x01
    1c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c1e:	89 2b       	or	r24, r25
    1c20:	89 83       	std	Y+1, r24	; 0x01
 PORTA = PortARestore; 		// executing the command
    1c22:	82 e2       	ldi	r24, 0x22	; 34
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	29 81       	ldd	r18, Y+1	; 0x01
    1c28:	fc 01       	movw	r30, r24
    1c2a:	20 83       	st	Z, r18
}
    1c2c:	0f 90       	pop	r0
    1c2e:	0f 90       	pop	r0
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	08 95       	ret

00001c36 <forward>:

void forward (void) 
{
    1c36:	cf 93       	push	r28
    1c38:	df 93       	push	r29
    1c3a:	cd b7       	in	r28, 0x3d	; 61
    1c3c:	de b7       	in	r29, 0x3e	; 62
  motion_set (0x06);
    1c3e:	86 e0       	ldi	r24, 0x06	; 6
    1c40:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1c44:	df 91       	pop	r29
    1c46:	cf 91       	pop	r28
    1c48:	08 95       	ret

00001c4a <back>:

void back (void)
{
    1c4a:	cf 93       	push	r28
    1c4c:	df 93       	push	r29
    1c4e:	cd b7       	in	r28, 0x3d	; 61
    1c50:	de b7       	in	r29, 0x3e	; 62
	motion_set (0x09);
    1c52:	89 e0       	ldi	r24, 0x09	; 9
    1c54:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1c58:	df 91       	pop	r29
    1c5a:	cf 91       	pop	r28
    1c5c:	08 95       	ret

00001c5e <soft_right>:

void soft_right (void) //Left wheel forward, Right wheel is stationary
{
    1c5e:	cf 93       	push	r28
    1c60:	df 93       	push	r29
    1c62:	cd b7       	in	r28, 0x3d	; 61
    1c64:	de b7       	in	r29, 0x3e	; 62
 motion_set(0x02);
    1c66:	82 e0       	ldi	r24, 0x02	; 2
    1c68:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1c6c:	df 91       	pop	r29
    1c6e:	cf 91       	pop	r28
    1c70:	08 95       	ret

00001c72 <right>:

void right (void) //Left wheel forward, Right wheel backward
{
    1c72:	cf 93       	push	r28
    1c74:	df 93       	push	r29
    1c76:	cd b7       	in	r28, 0x3d	; 61
    1c78:	de b7       	in	r29, 0x3e	; 62
  motion_set(0x0A);
    1c7a:	8a e0       	ldi	r24, 0x0A	; 10
    1c7c:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1c80:	df 91       	pop	r29
    1c82:	cf 91       	pop	r28
    1c84:	08 95       	ret

00001c86 <left>:

void left (void) //Left wheel backward, Right wheel forward
{
    1c86:	cf 93       	push	r28
    1c88:	df 93       	push	r29
    1c8a:	cd b7       	in	r28, 0x3d	; 61
    1c8c:	de b7       	in	r29, 0x3e	; 62
  motion_set(0x05);
    1c8e:	85 e0       	ldi	r24, 0x05	; 5
    1c90:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1c94:	df 91       	pop	r29
    1c96:	cf 91       	pop	r28
    1c98:	08 95       	ret

00001c9a <stop>:


void stop (void)
{
    1c9a:	cf 93       	push	r28
    1c9c:	df 93       	push	r29
    1c9e:	cd b7       	in	r28, 0x3d	; 61
    1ca0:	de b7       	in	r29, 0x3e	; 62
  motion_set (0x00);
    1ca2:	80 e0       	ldi	r24, 0x00	; 0
    1ca4:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <motion_set>
}
    1ca8:	df 91       	pop	r29
    1caa:	cf 91       	pop	r28
    1cac:	08 95       	ret

00001cae <left_position_encoder_interrupt_init>:


void left_position_encoder_interrupt_init (void) //Interrupt 4 enable
{
    1cae:	cf 93       	push	r28
    1cb0:	df 93       	push	r29
    1cb2:	cd b7       	in	r28, 0x3d	; 61
    1cb4:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupt
    1cb6:	f8 94       	cli
 EICRB = EICRB | 0x02; // INT4 is set to trigger with falling edge
    1cb8:	8a e6       	ldi	r24, 0x6A	; 106
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	2a e6       	ldi	r18, 0x6A	; 106
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	f9 01       	movw	r30, r18
    1cc2:	20 81       	ld	r18, Z
    1cc4:	22 60       	ori	r18, 0x02	; 2
    1cc6:	fc 01       	movw	r30, r24
    1cc8:	20 83       	st	Z, r18
 EIMSK = EIMSK | 0x10; // Enable Interrupt INT4 for left position encoder
    1cca:	8d e3       	ldi	r24, 0x3D	; 61
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	2d e3       	ldi	r18, 0x3D	; 61
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	f9 01       	movw	r30, r18
    1cd4:	20 81       	ld	r18, Z
    1cd6:	20 61       	ori	r18, 0x10	; 16
    1cd8:	fc 01       	movw	r30, r24
    1cda:	20 83       	st	Z, r18
 sei();   // Enables the global interrupt 
    1cdc:	78 94       	sei
}
    1cde:	df 91       	pop	r29
    1ce0:	cf 91       	pop	r28
    1ce2:	08 95       	ret

00001ce4 <right_position_encoder_interrupt_init>:

void right_position_encoder_interrupt_init (void) //Interrupt 5 enable
{
    1ce4:	cf 93       	push	r28
    1ce6:	df 93       	push	r29
    1ce8:	cd b7       	in	r28, 0x3d	; 61
    1cea:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupt
    1cec:	f8 94       	cli
 EICRB = EICRB | 0x08; // INT5 is set to trigger with falling edge
    1cee:	8a e6       	ldi	r24, 0x6A	; 106
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	2a e6       	ldi	r18, 0x6A	; 106
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	f9 01       	movw	r30, r18
    1cf8:	20 81       	ld	r18, Z
    1cfa:	28 60       	ori	r18, 0x08	; 8
    1cfc:	fc 01       	movw	r30, r24
    1cfe:	20 83       	st	Z, r18
 EIMSK = EIMSK | 0x20; // Enable Interrupt INT5 for right position encoder
    1d00:	8d e3       	ldi	r24, 0x3D	; 61
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	2d e3       	ldi	r18, 0x3D	; 61
    1d06:	30 e0       	ldi	r19, 0x00	; 0
    1d08:	f9 01       	movw	r30, r18
    1d0a:	20 81       	ld	r18, Z
    1d0c:	20 62       	ori	r18, 0x20	; 32
    1d0e:	fc 01       	movw	r30, r24
    1d10:	20 83       	st	Z, r18
 sei();   // Enables the global interrupt 
    1d12:	78 94       	sei
}
    1d14:	df 91       	pop	r29
    1d16:	cf 91       	pop	r28
    1d18:	08 95       	ret

00001d1a <__vector_6>:

//ISR for right position encoder
ISR(INT5_vect)  
{
    1d1a:	1f 92       	push	r1
    1d1c:	0f 92       	push	r0
    1d1e:	0f b6       	in	r0, 0x3f	; 63
    1d20:	0f 92       	push	r0
    1d22:	11 24       	eor	r1, r1
    1d24:	8f 93       	push	r24
    1d26:	9f 93       	push	r25
    1d28:	af 93       	push	r26
    1d2a:	bf 93       	push	r27
    1d2c:	cf 93       	push	r28
    1d2e:	df 93       	push	r29
    1d30:	cd b7       	in	r28, 0x3d	; 61
    1d32:	de b7       	in	r29, 0x3e	; 62
 ShaftCountRight++;  //increment right shaft position count
    1d34:	80 91 78 04 	lds	r24, 0x0478
    1d38:	90 91 79 04 	lds	r25, 0x0479
    1d3c:	a0 91 7a 04 	lds	r26, 0x047A
    1d40:	b0 91 7b 04 	lds	r27, 0x047B
    1d44:	01 96       	adiw	r24, 0x01	; 1
    1d46:	a1 1d       	adc	r26, r1
    1d48:	b1 1d       	adc	r27, r1
    1d4a:	80 93 78 04 	sts	0x0478, r24
    1d4e:	90 93 79 04 	sts	0x0479, r25
    1d52:	a0 93 7a 04 	sts	0x047A, r26
    1d56:	b0 93 7b 04 	sts	0x047B, r27
}
    1d5a:	df 91       	pop	r29
    1d5c:	cf 91       	pop	r28
    1d5e:	bf 91       	pop	r27
    1d60:	af 91       	pop	r26
    1d62:	9f 91       	pop	r25
    1d64:	8f 91       	pop	r24
    1d66:	0f 90       	pop	r0
    1d68:	0f be       	out	0x3f, r0	; 63
    1d6a:	0f 90       	pop	r0
    1d6c:	1f 90       	pop	r1
    1d6e:	18 95       	reti

00001d70 <__vector_5>:


//ISR for left position encoder
ISR(INT4_vect)
{
    1d70:	1f 92       	push	r1
    1d72:	0f 92       	push	r0
    1d74:	0f b6       	in	r0, 0x3f	; 63
    1d76:	0f 92       	push	r0
    1d78:	11 24       	eor	r1, r1
    1d7a:	8f 93       	push	r24
    1d7c:	9f 93       	push	r25
    1d7e:	af 93       	push	r26
    1d80:	bf 93       	push	r27
    1d82:	cf 93       	push	r28
    1d84:	df 93       	push	r29
    1d86:	cd b7       	in	r28, 0x3d	; 61
    1d88:	de b7       	in	r29, 0x3e	; 62
 ShaftCountLeft++;  //increment left shaft position count
    1d8a:	80 91 74 04 	lds	r24, 0x0474
    1d8e:	90 91 75 04 	lds	r25, 0x0475
    1d92:	a0 91 76 04 	lds	r26, 0x0476
    1d96:	b0 91 77 04 	lds	r27, 0x0477
    1d9a:	01 96       	adiw	r24, 0x01	; 1
    1d9c:	a1 1d       	adc	r26, r1
    1d9e:	b1 1d       	adc	r27, r1
    1da0:	80 93 74 04 	sts	0x0474, r24
    1da4:	90 93 75 04 	sts	0x0475, r25
    1da8:	a0 93 76 04 	sts	0x0476, r26
    1dac:	b0 93 77 04 	sts	0x0477, r27
}
    1db0:	df 91       	pop	r29
    1db2:	cf 91       	pop	r28
    1db4:	bf 91       	pop	r27
    1db6:	af 91       	pop	r26
    1db8:	9f 91       	pop	r25
    1dba:	8f 91       	pop	r24
    1dbc:	0f 90       	pop	r0
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	0f 90       	pop	r0
    1dc2:	1f 90       	pop	r1
    1dc4:	18 95       	reti

00001dc6 <angle_rotate>:
//Function used for turning robot by specified degrees
void angle_rotate(unsigned int Degrees)
{
    1dc6:	cf 93       	push	r28
    1dc8:	df 93       	push	r29
    1dca:	cd b7       	in	r28, 0x3d	; 61
    1dcc:	de b7       	in	r29, 0x3e	; 62
    1dce:	2a 97       	sbiw	r28, 0x0a	; 10
    1dd0:	0f b6       	in	r0, 0x3f	; 63
    1dd2:	f8 94       	cli
    1dd4:	de bf       	out	0x3e, r29	; 62
    1dd6:	0f be       	out	0x3f, r0	; 63
    1dd8:	cd bf       	out	0x3d, r28	; 61
    1dda:	9a 87       	std	Y+10, r25	; 0x0a
    1ddc:	89 87       	std	Y+9, r24	; 0x09
 float ReqdShaftCount = 0;
    1dde:	80 e0       	ldi	r24, 0x00	; 0
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	dc 01       	movw	r26, r24
    1de4:	89 83       	std	Y+1, r24	; 0x01
    1de6:	9a 83       	std	Y+2, r25	; 0x02
    1de8:	ab 83       	std	Y+3, r26	; 0x03
    1dea:	bc 83       	std	Y+4, r27	; 0x04
 unsigned long int ReqdShaftCountInt = 0;
    1dec:	1d 82       	std	Y+5, r1	; 0x05
    1dee:	1e 82       	std	Y+6, r1	; 0x06
    1df0:	1f 82       	std	Y+7, r1	; 0x07
    1df2:	18 86       	std	Y+8, r1	; 0x08

 ReqdShaftCount = (float) Degrees/ 4.090; // division by resolution to get shaft count
    1df4:	89 85       	ldd	r24, Y+9	; 0x09
    1df6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1df8:	cc 01       	movw	r24, r24
    1dfa:	a0 e0       	ldi	r26, 0x00	; 0
    1dfc:	b0 e0       	ldi	r27, 0x00	; 0
    1dfe:	bc 01       	movw	r22, r24
    1e00:	cd 01       	movw	r24, r26
    1e02:	0e 94 98 68 	call	0xd130	; 0xd130 <__floatunsisf>
    1e06:	dc 01       	movw	r26, r24
    1e08:	cb 01       	movw	r24, r22
    1e0a:	bc 01       	movw	r22, r24
    1e0c:	cd 01       	movw	r24, r26
    1e0e:	28 e4       	ldi	r18, 0x48	; 72
    1e10:	31 ee       	ldi	r19, 0xE1	; 225
    1e12:	42 e8       	ldi	r20, 0x82	; 130
    1e14:	50 e4       	ldi	r21, 0x40	; 64
    1e16:	0e 94 04 68 	call	0xd008	; 0xd008 <__divsf3>
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	cb 01       	movw	r24, r22
    1e1e:	89 83       	std	Y+1, r24	; 0x01
    1e20:	9a 83       	std	Y+2, r25	; 0x02
    1e22:	ab 83       	std	Y+3, r26	; 0x03
    1e24:	bc 83       	std	Y+4, r27	; 0x04
 ReqdShaftCountInt = (unsigned int) ReqdShaftCount;
    1e26:	69 81       	ldd	r22, Y+1	; 0x01
    1e28:	7a 81       	ldd	r23, Y+2	; 0x02
    1e2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e2e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1e32:	dc 01       	movw	r26, r24
    1e34:	cb 01       	movw	r24, r22
    1e36:	cc 01       	movw	r24, r24
    1e38:	a0 e0       	ldi	r26, 0x00	; 0
    1e3a:	b0 e0       	ldi	r27, 0x00	; 0
    1e3c:	8d 83       	std	Y+5, r24	; 0x05
    1e3e:	9e 83       	std	Y+6, r25	; 0x06
    1e40:	af 83       	std	Y+7, r26	; 0x07
    1e42:	b8 87       	std	Y+8, r27	; 0x08
 ShaftCountRight = 0; 
    1e44:	10 92 78 04 	sts	0x0478, r1
    1e48:	10 92 79 04 	sts	0x0479, r1
    1e4c:	10 92 7a 04 	sts	0x047A, r1
    1e50:	10 92 7b 04 	sts	0x047B, r1
 ShaftCountLeft = 0; 
    1e54:	10 92 74 04 	sts	0x0474, r1
    1e58:	10 92 75 04 	sts	0x0475, r1
    1e5c:	10 92 76 04 	sts	0x0476, r1
    1e60:	10 92 77 04 	sts	0x0477, r1
    1e64:	01 c0       	rjmp	.+2      	; 0x1e68 <angle_rotate+0xa2>

 while (1)
 {
  if((ShaftCountRight >= ReqdShaftCountInt) | (ShaftCountLeft >= ReqdShaftCountInt))
  break;
 }
    1e66:	00 00       	nop
 ShaftCountRight = 0; 
 ShaftCountLeft = 0; 

 while (1)
 {
  if((ShaftCountRight >= ReqdShaftCountInt) | (ShaftCountLeft >= ReqdShaftCountInt))
    1e68:	20 91 78 04 	lds	r18, 0x0478
    1e6c:	30 91 79 04 	lds	r19, 0x0479
    1e70:	40 91 7a 04 	lds	r20, 0x047A
    1e74:	50 91 7b 04 	lds	r21, 0x047B
    1e78:	71 e0       	ldi	r23, 0x01	; 1
    1e7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1e7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1e7e:	af 81       	ldd	r26, Y+7	; 0x07
    1e80:	b8 85       	ldd	r27, Y+8	; 0x08
    1e82:	28 17       	cp	r18, r24
    1e84:	39 07       	cpc	r19, r25
    1e86:	4a 07       	cpc	r20, r26
    1e88:	5b 07       	cpc	r21, r27
    1e8a:	08 f4       	brcc	.+2      	; 0x1e8e <angle_rotate+0xc8>
    1e8c:	70 e0       	ldi	r23, 0x00	; 0
    1e8e:	20 91 74 04 	lds	r18, 0x0474
    1e92:	30 91 75 04 	lds	r19, 0x0475
    1e96:	40 91 76 04 	lds	r20, 0x0476
    1e9a:	50 91 77 04 	lds	r21, 0x0477
    1e9e:	61 e0       	ldi	r22, 0x01	; 1
    1ea0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ea4:	af 81       	ldd	r26, Y+7	; 0x07
    1ea6:	b8 85       	ldd	r27, Y+8	; 0x08
    1ea8:	28 17       	cp	r18, r24
    1eaa:	39 07       	cpc	r19, r25
    1eac:	4a 07       	cpc	r20, r26
    1eae:	5b 07       	cpc	r21, r27
    1eb0:	08 f4       	brcc	.+2      	; 0x1eb4 <angle_rotate+0xee>
    1eb2:	60 e0       	ldi	r22, 0x00	; 0
    1eb4:	87 2f       	mov	r24, r23
    1eb6:	86 2b       	or	r24, r22
    1eb8:	88 23       	and	r24, r24
    1eba:	a9 f2       	breq	.-86     	; 0x1e66 <angle_rotate+0xa0>
  break;
    1ebc:	00 00       	nop
 }
 stop(); //Stop robot
    1ebe:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
}
    1ec2:	2a 96       	adiw	r28, 0x0a	; 10
    1ec4:	0f b6       	in	r0, 0x3f	; 63
    1ec6:	f8 94       	cli
    1ec8:	de bf       	out	0x3e, r29	; 62
    1eca:	0f be       	out	0x3f, r0	; 63
    1ecc:	cd bf       	out	0x3d, r28	; 61
    1ece:	df 91       	pop	r29
    1ed0:	cf 91       	pop	r28
    1ed2:	08 95       	ret

00001ed4 <left_degrees>:

void left_degrees(unsigned int Degrees) 
{
    1ed4:	cf 93       	push	r28
    1ed6:	df 93       	push	r29
    1ed8:	0f 92       	push	r0
    1eda:	0f 92       	push	r0
    1edc:	cd b7       	in	r28, 0x3d	; 61
    1ede:	de b7       	in	r29, 0x3e	; 62
    1ee0:	9a 83       	std	Y+2, r25	; 0x02
    1ee2:	89 83       	std	Y+1, r24	; 0x01
// 88 pulses for 360 degrees rotation 4.090 degrees per count
 left(); //Turn left
    1ee4:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <left>
 angle_rotate(Degrees);
    1ee8:	89 81       	ldd	r24, Y+1	; 0x01
    1eea:	9a 81       	ldd	r25, Y+2	; 0x02
    1eec:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <angle_rotate>
}
    1ef0:	0f 90       	pop	r0
    1ef2:	0f 90       	pop	r0
    1ef4:	df 91       	pop	r29
    1ef6:	cf 91       	pop	r28
    1ef8:	08 95       	ret

00001efa <right_degrees>:



void right_degrees(unsigned int Degrees)
{
    1efa:	cf 93       	push	r28
    1efc:	df 93       	push	r29
    1efe:	0f 92       	push	r0
    1f00:	0f 92       	push	r0
    1f02:	cd b7       	in	r28, 0x3d	; 61
    1f04:	de b7       	in	r29, 0x3e	; 62
    1f06:	9a 83       	std	Y+2, r25	; 0x02
    1f08:	89 83       	std	Y+1, r24	; 0x01
// 88 pulses for 360 degrees rotation 4.090 degrees per count
 right(); //Turn right
    1f0a:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <right>
 angle_rotate(Degrees);
    1f0e:	89 81       	ldd	r24, Y+1	; 0x01
    1f10:	9a 81       	ldd	r25, Y+2	; 0x02
    1f12:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <angle_rotate>
}
    1f16:	0f 90       	pop	r0
    1f18:	0f 90       	pop	r0
    1f1a:	df 91       	pop	r29
    1f1c:	cf 91       	pop	r28
    1f1e:	08 95       	ret

00001f20 <linear_distance_mm>:

void linear_distance_mm(unsigned int DistanceInMM)
{
    1f20:	cf 93       	push	r28
    1f22:	df 93       	push	r29
    1f24:	cd b7       	in	r28, 0x3d	; 61
    1f26:	de b7       	in	r29, 0x3e	; 62
    1f28:	2a 97       	sbiw	r28, 0x0a	; 10
    1f2a:	0f b6       	in	r0, 0x3f	; 63
    1f2c:	f8 94       	cli
    1f2e:	de bf       	out	0x3e, r29	; 62
    1f30:	0f be       	out	0x3f, r0	; 63
    1f32:	cd bf       	out	0x3d, r28	; 61
    1f34:	9a 87       	std	Y+10, r25	; 0x0a
    1f36:	89 87       	std	Y+9, r24	; 0x09
	float ReqdShaftCount = 0;
    1f38:	80 e0       	ldi	r24, 0x00	; 0
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	89 83       	std	Y+1, r24	; 0x01
    1f40:	9a 83       	std	Y+2, r25	; 0x02
    1f42:	ab 83       	std	Y+3, r26	; 0x03
    1f44:	bc 83       	std	Y+4, r27	; 0x04
	unsigned long int ReqdShaftCountInt = 0;
    1f46:	1d 82       	std	Y+5, r1	; 0x05
    1f48:	1e 82       	std	Y+6, r1	; 0x06
    1f4a:	1f 82       	std	Y+7, r1	; 0x07
    1f4c:	18 86       	std	Y+8, r1	; 0x08

	ReqdShaftCount = DistanceInMM / 5.338; // division by resolution to get shaft count
    1f4e:	89 85       	ldd	r24, Y+9	; 0x09
    1f50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f52:	cc 01       	movw	r24, r24
    1f54:	a0 e0       	ldi	r26, 0x00	; 0
    1f56:	b0 e0       	ldi	r27, 0x00	; 0
    1f58:	bc 01       	movw	r22, r24
    1f5a:	cd 01       	movw	r24, r26
    1f5c:	0e 94 98 68 	call	0xd130	; 0xd130 <__floatunsisf>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	bc 01       	movw	r22, r24
    1f66:	cd 01       	movw	r24, r26
    1f68:	25 ee       	ldi	r18, 0xE5	; 229
    1f6a:	30 ed       	ldi	r19, 0xD0	; 208
    1f6c:	4a ea       	ldi	r20, 0xAA	; 170
    1f6e:	50 e4       	ldi	r21, 0x40	; 64
    1f70:	0e 94 04 68 	call	0xd008	; 0xd008 <__divsf3>
    1f74:	dc 01       	movw	r26, r24
    1f76:	cb 01       	movw	r24, r22
    1f78:	89 83       	std	Y+1, r24	; 0x01
    1f7a:	9a 83       	std	Y+2, r25	; 0x02
    1f7c:	ab 83       	std	Y+3, r26	; 0x03
    1f7e:	bc 83       	std	Y+4, r27	; 0x04
	ReqdShaftCountInt = (unsigned long int) ReqdShaftCount;
    1f80:	69 81       	ldd	r22, Y+1	; 0x01
    1f82:	7a 81       	ldd	r23, Y+2	; 0x02
    1f84:	8b 81       	ldd	r24, Y+3	; 0x03
    1f86:	9c 81       	ldd	r25, Y+4	; 0x04
    1f88:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    1f8c:	dc 01       	movw	r26, r24
    1f8e:	cb 01       	movw	r24, r22
    1f90:	8d 83       	std	Y+5, r24	; 0x05
    1f92:	9e 83       	std	Y+6, r25	; 0x06
    1f94:	af 83       	std	Y+7, r26	; 0x07
    1f96:	b8 87       	std	Y+8, r27	; 0x08
	
	ShaftCountRight = 0;
    1f98:	10 92 78 04 	sts	0x0478, r1
    1f9c:	10 92 79 04 	sts	0x0479, r1
    1fa0:	10 92 7a 04 	sts	0x047A, r1
    1fa4:	10 92 7b 04 	sts	0x047B, r1
    1fa8:	01 c0       	rjmp	.+2      	; 0x1fac <linear_distance_mm+0x8c>
	{
		if(ShaftCountRight > ReqdShaftCountInt)
		{
			break;
		}
	}
    1faa:	00 00       	nop
	ReqdShaftCountInt = (unsigned long int) ReqdShaftCount;
	
	ShaftCountRight = 0;
	while(1)
	{
		if(ShaftCountRight > ReqdShaftCountInt)
    1fac:	20 91 78 04 	lds	r18, 0x0478
    1fb0:	30 91 79 04 	lds	r19, 0x0479
    1fb4:	40 91 7a 04 	lds	r20, 0x047A
    1fb8:	50 91 7b 04 	lds	r21, 0x047B
    1fbc:	8d 81       	ldd	r24, Y+5	; 0x05
    1fbe:	9e 81       	ldd	r25, Y+6	; 0x06
    1fc0:	af 81       	ldd	r26, Y+7	; 0x07
    1fc2:	b8 85       	ldd	r27, Y+8	; 0x08
    1fc4:	82 17       	cp	r24, r18
    1fc6:	93 07       	cpc	r25, r19
    1fc8:	a4 07       	cpc	r26, r20
    1fca:	b5 07       	cpc	r27, r21
    1fcc:	70 f7       	brcc	.-36     	; 0x1faa <linear_distance_mm+0x8a>
		{
			break;
    1fce:	00 00       	nop
		}
	}
	stop(); //Stop robot
    1fd0:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
}
    1fd4:	2a 96       	adiw	r28, 0x0a	; 10
    1fd6:	0f b6       	in	r0, 0x3f	; 63
    1fd8:	f8 94       	cli
    1fda:	de bf       	out	0x3e, r29	; 62
    1fdc:	0f be       	out	0x3f, r0	; 63
    1fde:	cd bf       	out	0x3d, r28	; 61
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	08 95       	ret

00001fe6 <forward_mm>:

void forward_mm(unsigned int DistanceInMM)
{
    1fe6:	cf 93       	push	r28
    1fe8:	df 93       	push	r29
    1fea:	0f 92       	push	r0
    1fec:	0f 92       	push	r0
    1fee:	cd b7       	in	r28, 0x3d	; 61
    1ff0:	de b7       	in	r29, 0x3e	; 62
    1ff2:	9a 83       	std	Y+2, r25	; 0x02
    1ff4:	89 83       	std	Y+1, r24	; 0x01
	forward();
    1ff6:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
	linear_distance_mm(DistanceInMM);
    1ffa:	89 81       	ldd	r24, Y+1	; 0x01
    1ffc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ffe:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <linear_distance_mm>
}
    2002:	0f 90       	pop	r0
    2004:	0f 90       	pop	r0
    2006:	df 91       	pop	r29
    2008:	cf 91       	pop	r28
    200a:	08 95       	ret

0000200c <back_mm>:

void back_mm(unsigned int DistanceInMM)
{
    200c:	cf 93       	push	r28
    200e:	df 93       	push	r29
    2010:	0f 92       	push	r0
    2012:	0f 92       	push	r0
    2014:	cd b7       	in	r28, 0x3d	; 61
    2016:	de b7       	in	r29, 0x3e	; 62
    2018:	9a 83       	std	Y+2, r25	; 0x02
    201a:	89 83       	std	Y+1, r24	; 0x01
	back();
    201c:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <back>
	linear_distance_mm(DistanceInMM);
    2020:	89 81       	ldd	r24, Y+1	; 0x01
    2022:	9a 81       	ldd	r25, Y+2	; 0x02
    2024:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <linear_distance_mm>
}
    2028:	0f 90       	pop	r0
    202a:	0f 90       	pop	r0
    202c:	df 91       	pop	r29
    202e:	cf 91       	pop	r28
    2030:	08 95       	ret

00002032 <timer1_init>:

void timer1_init(void)
{
    2032:	cf 93       	push	r28
    2034:	df 93       	push	r29
    2036:	cd b7       	in	r28, 0x3d	; 61
    2038:	de b7       	in	r29, 0x3e	; 62
 TCCR1B = 0x00; //stop
    203a:	81 e8       	ldi	r24, 0x81	; 129
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	fc 01       	movw	r30, r24
    2040:	10 82       	st	Z, r1
 TCNT1H = 0xFC; //Counter high value to which OCR1xH value is to be compared with
    2042:	85 e8       	ldi	r24, 0x85	; 133
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	2c ef       	ldi	r18, 0xFC	; 252
    2048:	fc 01       	movw	r30, r24
    204a:	20 83       	st	Z, r18
 TCNT1L = 0x01;	//Counter low value to which OCR1xH value is to be compared with
    204c:	84 e8       	ldi	r24, 0x84	; 132
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	21 e0       	ldi	r18, 0x01	; 1
    2052:	fc 01       	movw	r30, r24
    2054:	20 83       	st	Z, r18
 OCR1AH = 0x03;	//Output compare Register high value for servo 1
    2056:	89 e8       	ldi	r24, 0x89	; 137
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	23 e0       	ldi	r18, 0x03	; 3
    205c:	fc 01       	movw	r30, r24
    205e:	20 83       	st	Z, r18
 OCR1AL = 0xFF;	//Output Compare Register low Value For servo 1
    2060:	88 e8       	ldi	r24, 0x88	; 136
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	2f ef       	ldi	r18, 0xFF	; 255
    2066:	fc 01       	movw	r30, r24
    2068:	20 83       	st	Z, r18
 OCR1BH = 0x03;	//Output compare Register high value for servo 2
    206a:	8b e8       	ldi	r24, 0x8B	; 139
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	23 e0       	ldi	r18, 0x03	; 3
    2070:	fc 01       	movw	r30, r24
    2072:	20 83       	st	Z, r18
 OCR1BL = 0xFF;	//Output Compare Register low Value For servo 2
    2074:	8a e8       	ldi	r24, 0x8A	; 138
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	2f ef       	ldi	r18, 0xFF	; 255
    207a:	fc 01       	movw	r30, r24
    207c:	20 83       	st	Z, r18
 OCR1CH = 0x03;	//Output compare Register high value for servo 3
    207e:	8d e8       	ldi	r24, 0x8D	; 141
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	23 e0       	ldi	r18, 0x03	; 3
    2084:	fc 01       	movw	r30, r24
    2086:	20 83       	st	Z, r18
 OCR1CL = 0xFF;	//Output Compare Register low Value For servo 3
    2088:	8c e8       	ldi	r24, 0x8C	; 140
    208a:	90 e0       	ldi	r25, 0x00	; 0
    208c:	2f ef       	ldi	r18, 0xFF	; 255
    208e:	fc 01       	movw	r30, r24
    2090:	20 83       	st	Z, r18
 ICR1H  = 0x03;	
    2092:	87 e8       	ldi	r24, 0x87	; 135
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	23 e0       	ldi	r18, 0x03	; 3
    2098:	fc 01       	movw	r30, r24
    209a:	20 83       	st	Z, r18
 ICR1L  = 0xFF;
    209c:	86 e8       	ldi	r24, 0x86	; 134
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	2f ef       	ldi	r18, 0xFF	; 255
    20a2:	fc 01       	movw	r30, r24
    20a4:	20 83       	st	Z, r18
 TCCR1A = 0xAB; /*{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0}
    20a6:	80 e8       	ldi	r24, 0x80	; 128
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	2b ea       	ldi	r18, 0xAB	; 171
    20ac:	fc 01       	movw	r30, r24
    20ae:	20 83       	st	Z, r18
 					For Overriding normal port functionality to OCRnA outputs.
				  {WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode*/
 TCCR1C = 0x00;
    20b0:	82 e8       	ldi	r24, 0x82	; 130
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	fc 01       	movw	r30, r24
    20b6:	10 82       	st	Z, r1
 TCCR1B = 0x0C; //WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
    20b8:	81 e8       	ldi	r24, 0x81	; 129
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	2c e0       	ldi	r18, 0x0C	; 12
    20be:	fc 01       	movw	r30, r24
    20c0:	20 83       	st	Z, r18
}
    20c2:	df 91       	pop	r29
    20c4:	cf 91       	pop	r28
    20c6:	08 95       	ret

000020c8 <init_devices>:



void init_devices (void)
{
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	cd b7       	in	r28, 0x3d	; 61
    20ce:	de b7       	in	r29, 0x3e	; 62
 	cli(); //Clears the global interrupts
    20d0:	f8 94       	cli
	port_init();
    20d2:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <port_init>
	adc_init();
    20d6:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <adc_init>
	timer5_init();
    20da:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <timer5_init>
	timer1_init();
    20de:	0e 94 19 10 	call	0x2032	; 0x2032 <timer1_init>
	left_position_encoder_interrupt_init();
    20e2:	0e 94 57 0e 	call	0x1cae	; 0x1cae <left_position_encoder_interrupt_init>
 	right_position_encoder_interrupt_init();
    20e6:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <right_position_encoder_interrupt_init>
	sei();   //Enables the global interrupts
    20ea:	78 94       	sei
}
    20ec:	df 91       	pop	r29
    20ee:	cf 91       	pop	r28
    20f0:	08 95       	ret

000020f2 <whitesensor>:

void whitesensor()
{
    20f2:	cf 93       	push	r28
    20f4:	df 93       	push	r29
    20f6:	cd b7       	in	r28, 0x3d	; 61
    20f8:	de b7       	in	r29, 0x3e	; 62
	Left_white_line = ADC_Conversion(3);	//Getting data of Left WL Sensor
    20fa:	83 e0       	ldi	r24, 0x03	; 3
    20fc:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <ADC_Conversion>
    2100:	80 93 7d 04 	sts	0x047D, r24
	Center_white_line = ADC_Conversion(2);	//Getting data of Center WL Sensor
    2104:	82 e0       	ldi	r24, 0x02	; 2
    2106:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <ADC_Conversion>
    210a:	80 93 7e 04 	sts	0x047E, r24
	Right_white_line = ADC_Conversion(1);	//Getting data of Right WL Sensor
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <ADC_Conversion>
    2114:	80 93 7f 04 	sts	0x047F, r24
}
    2118:	df 91       	pop	r29
    211a:	cf 91       	pop	r28
    211c:	08 95       	ret

0000211e <printlcd>:

void printlcd(int x,int y)
{
    211e:	cf 93       	push	r28
    2120:	df 93       	push	r29
    2122:	00 d0       	rcall	.+0      	; 0x2124 <printlcd+0x6>
    2124:	0f 92       	push	r0
    2126:	cd b7       	in	r28, 0x3d	; 61
    2128:	de b7       	in	r29, 0x3e	; 62
    212a:	9a 83       	std	Y+2, r25	; 0x02
    212c:	89 83       	std	Y+1, r24	; 0x01
    212e:	7c 83       	std	Y+4, r23	; 0x04
    2130:	6b 83       	std	Y+3, r22	; 0x03
	
	lcd_init();
    2132:	0e 94 8b 06 	call	0xd16	; 0xd16 <lcd_init>
	if (x>=0)
    2136:	89 81       	ldd	r24, Y+1	; 0x01
    2138:	9a 81       	ldd	r25, Y+2	; 0x02
    213a:	99 23       	and	r25, r25
    213c:	4c f0       	brlt	.+18     	; 0x2150 <printlcd+0x32>
	lcd_print(1,1,x,1);
    213e:	29 81       	ldd	r18, Y+1	; 0x01
    2140:	3a 81       	ldd	r19, Y+2	; 0x02
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	61 e0       	ldi	r22, 0x01	; 1
    2146:	a9 01       	movw	r20, r18
    2148:	21 e0       	ldi	r18, 0x01	; 1
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
	
	if(x<0)
    2150:	89 81       	ldd	r24, Y+1	; 0x01
    2152:	9a 81       	ldd	r25, Y+2	; 0x02
    2154:	99 23       	and	r25, r25
    2156:	c4 f4       	brge	.+48     	; 0x2188 <printlcd+0x6a>
	{
		lcd_cursor(1,1);
    2158:	81 e0       	ldi	r24, 0x01	; 1
    215a:	61 e0       	ldi	r22, 0x01	; 1
    215c:	0e 94 80 0a 	call	0x1500	; 0x1500 <lcd_cursor>
		lcd_string("-");
    2160:	80 e0       	ldi	r24, 0x00	; 0
    2162:	92 e0       	ldi	r25, 0x02	; 2
    2164:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <lcd_string>
		x=x*-1;
    2168:	89 81       	ldd	r24, Y+1	; 0x01
    216a:	9a 81       	ldd	r25, Y+2	; 0x02
    216c:	90 95       	com	r25
    216e:	81 95       	neg	r24
    2170:	9f 4f       	sbci	r25, 0xFF	; 255
    2172:	9a 83       	std	Y+2, r25	; 0x02
    2174:	89 83       	std	Y+1, r24	; 0x01
		lcd_print(1,2,x,1);
    2176:	29 81       	ldd	r18, Y+1	; 0x01
    2178:	3a 81       	ldd	r19, Y+2	; 0x02
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	62 e0       	ldi	r22, 0x02	; 2
    217e:	a9 01       	movw	r20, r18
    2180:	21 e0       	ldi	r18, 0x01	; 1
    2182:	30 e0       	ldi	r19, 0x00	; 0
    2184:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
	}
	
	if (y>=0)
    2188:	8b 81       	ldd	r24, Y+3	; 0x03
    218a:	9c 81       	ldd	r25, Y+4	; 0x04
    218c:	99 23       	and	r25, r25
    218e:	4c f0       	brlt	.+18     	; 0x21a2 <printlcd+0x84>
	lcd_print(1,4,y,1);
    2190:	2b 81       	ldd	r18, Y+3	; 0x03
    2192:	3c 81       	ldd	r19, Y+4	; 0x04
    2194:	81 e0       	ldi	r24, 0x01	; 1
    2196:	64 e0       	ldi	r22, 0x04	; 4
    2198:	a9 01       	movw	r20, r18
    219a:	21 e0       	ldi	r18, 0x01	; 1
    219c:	30 e0       	ldi	r19, 0x00	; 0
    219e:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
	
	if(y<0)
    21a2:	8b 81       	ldd	r24, Y+3	; 0x03
    21a4:	9c 81       	ldd	r25, Y+4	; 0x04
    21a6:	99 23       	and	r25, r25
    21a8:	c4 f4       	brge	.+48     	; 0x21da <printlcd+0xbc>
	{
		lcd_cursor(1,4);
    21aa:	81 e0       	ldi	r24, 0x01	; 1
    21ac:	64 e0       	ldi	r22, 0x04	; 4
    21ae:	0e 94 80 0a 	call	0x1500	; 0x1500 <lcd_cursor>
		lcd_string("-");
    21b2:	80 e0       	ldi	r24, 0x00	; 0
    21b4:	92 e0       	ldi	r25, 0x02	; 2
    21b6:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <lcd_string>
		y=y*-1;
    21ba:	8b 81       	ldd	r24, Y+3	; 0x03
    21bc:	9c 81       	ldd	r25, Y+4	; 0x04
    21be:	90 95       	com	r25
    21c0:	81 95       	neg	r24
    21c2:	9f 4f       	sbci	r25, 0xFF	; 255
    21c4:	9c 83       	std	Y+4, r25	; 0x04
    21c6:	8b 83       	std	Y+3, r24	; 0x03
		lcd_print(1,5,y,1);
    21c8:	2b 81       	ldd	r18, Y+3	; 0x03
    21ca:	3c 81       	ldd	r19, Y+4	; 0x04
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	65 e0       	ldi	r22, 0x05	; 5
    21d0:	a9 01       	movw	r20, r18
    21d2:	21 e0       	ldi	r18, 0x01	; 1
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
	}
}
    21da:	0f 90       	pop	r0
    21dc:	0f 90       	pop	r0
    21de:	0f 90       	pop	r0
    21e0:	0f 90       	pop	r0
    21e2:	df 91       	pop	r29
    21e4:	cf 91       	pop	r28
    21e6:	08 95       	ret

000021e8 <linefollwer>:
int count=1;
int helper1=0;
int helper2=0;

void linefollwer()
{
    21e8:	0f 93       	push	r16
    21ea:	1f 93       	push	r17
    21ec:	cf 93       	push	r28
    21ee:	df 93       	push	r29
    21f0:	cd b7       	in	r28, 0x3d	; 61
    21f2:	de b7       	in	r29, 0x3e	; 62
    21f4:	c4 55       	subi	r28, 0x54	; 84
    21f6:	d0 40       	sbci	r29, 0x00	; 0
    21f8:	0f b6       	in	r0, 0x3f	; 63
    21fa:	f8 94       	cli
    21fc:	de bf       	out	0x3e, r29	; 62
    21fe:	0f be       	out	0x3f, r0	; 63
    2200:	cd bf       	out	0x3d, r28	; 61
    2202:	01 c0       	rjmp	.+2      	; 0x2206 <__stack+0x7>
				stop();
				printlcd(coor[0],coor[1]);
				break;
		}
		
	}
    2204:	00 00       	nop

void linefollwer()
{
	while(1)
	{
		whitesensor();
    2206:	0e 94 79 10 	call	0x20f2	; 0x20f2 <whitesensor>
		flag=0;
    220a:	10 92 7c 04 	sts	0x047C, r1
	
	
		if(Center_white_line>16)
    220e:	80 91 7e 04 	lds	r24, 0x047E
    2212:	81 31       	cpi	r24, 0x11	; 17
    2214:	88 f0       	brcs	.+34     	; 0x2238 <__stack+0x39>
		{	
			helper1=0;
    2216:	10 92 81 04 	sts	0x0481, r1
    221a:	10 92 80 04 	sts	0x0480, r1
			helper2=0;
    221e:	10 92 83 04 	sts	0x0483, r1
    2222:	10 92 82 04 	sts	0x0482, r1
			flag=1;
    2226:	81 e0       	ldi	r24, 0x01	; 1
    2228:	80 93 7c 04 	sts	0x047C, r24
			forward();
    222c:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(250,250);
    2230:	8a ef       	ldi	r24, 0xFA	; 250
    2232:	6a ef       	ldi	r22, 0xFA	; 250
    2234:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		
		if((Left_white_line>16) && (flag==0))
    2238:	80 91 7d 04 	lds	r24, 0x047D
    223c:	81 31       	cpi	r24, 0x11	; 17
    223e:	18 f1       	brcs	.+70     	; 0x2286 <__stack+0x87>
    2240:	80 91 7c 04 	lds	r24, 0x047C
    2244:	88 23       	and	r24, r24
    2246:	f9 f4       	brne	.+62     	; 0x2286 <__stack+0x87>
		{
			if(helper1>2)
    2248:	80 91 80 04 	lds	r24, 0x0480
    224c:	90 91 81 04 	lds	r25, 0x0481
    2250:	83 30       	cpi	r24, 0x03	; 3
    2252:	91 05       	cpc	r25, r1
    2254:	34 f0       	brlt	.+12     	; 0x2262 <__stack+0x63>
			{
				forward();
    2256:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(60,180);
    225a:	8c e3       	ldi	r24, 0x3C	; 60
    225c:	64 eb       	ldi	r22, 0xB4	; 180
    225e:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
			}
			helper1=helper1+1;
    2262:	80 91 80 04 	lds	r24, 0x0480
    2266:	90 91 81 04 	lds	r25, 0x0481
    226a:	01 96       	adiw	r24, 0x01	; 1
    226c:	90 93 81 04 	sts	0x0481, r25
    2270:	80 93 80 04 	sts	0x0480, r24
			flag=1;
    2274:	81 e0       	ldi	r24, 0x01	; 1
    2276:	80 93 7c 04 	sts	0x047C, r24
			forward();
    227a:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(60,180);
    227e:	8c e3       	ldi	r24, 0x3C	; 60
    2280:	64 eb       	ldi	r22, 0xB4	; 180
    2282:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}

		if((Right_white_line>16) && (flag==0))
    2286:	80 91 7f 04 	lds	r24, 0x047F
    228a:	81 31       	cpi	r24, 0x11	; 17
    228c:	18 f1       	brcs	.+70     	; 0x22d4 <__stack+0xd5>
    228e:	80 91 7c 04 	lds	r24, 0x047C
    2292:	88 23       	and	r24, r24
    2294:	f9 f4       	brne	.+62     	; 0x22d4 <__stack+0xd5>
		{
			if(helper2>2)
    2296:	80 91 82 04 	lds	r24, 0x0482
    229a:	90 91 83 04 	lds	r25, 0x0483
    229e:	83 30       	cpi	r24, 0x03	; 3
    22a0:	91 05       	cpc	r25, r1
    22a2:	34 f0       	brlt	.+12     	; 0x22b0 <__stack+0xb1>
			{
				forward();
    22a4:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(180,60);
    22a8:	84 eb       	ldi	r24, 0xB4	; 180
    22aa:	6c e3       	ldi	r22, 0x3C	; 60
    22ac:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
			}
			helper2=helper2+1;
    22b0:	80 91 82 04 	lds	r24, 0x0482
    22b4:	90 91 83 04 	lds	r25, 0x0483
    22b8:	01 96       	adiw	r24, 0x01	; 1
    22ba:	90 93 83 04 	sts	0x0483, r25
    22be:	80 93 82 04 	sts	0x0482, r24
			flag=1;
    22c2:	81 e0       	ldi	r24, 0x01	; 1
    22c4:	80 93 7c 04 	sts	0x047C, r24
			forward();
    22c8:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(180,60);
    22cc:	84 eb       	ldi	r24, 0xB4	; 180
    22ce:	6c e3       	ldi	r22, 0x3C	; 60
    22d0:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    22d4:	80 91 7e 04 	lds	r24, 0x047E
    22d8:	80 31       	cpi	r24, 0x10	; 16
    22da:	08 f0       	brcs	.+2      	; 0x22de <__stack+0xdf>
    22dc:	13 c4       	rjmp	.+2086   	; 0x2b04 <__stack+0x905>
    22de:	80 91 7d 04 	lds	r24, 0x047D
    22e2:	80 31       	cpi	r24, 0x10	; 16
    22e4:	08 f0       	brcs	.+2      	; 0x22e8 <__stack+0xe9>
    22e6:	0e c4       	rjmp	.+2076   	; 0x2b04 <__stack+0x905>
    22e8:	80 91 7f 04 	lds	r24, 0x047F
    22ec:	80 31       	cpi	r24, 0x10	; 16
    22ee:	08 f0       	brcs	.+2      	; 0x22f2 <__stack+0xf3>
    22f0:	09 c4       	rjmp	.+2066   	; 0x2b04 <__stack+0x905>
		{
			if(helper1!=0)
    22f2:	80 91 80 04 	lds	r24, 0x0480
    22f6:	90 91 81 04 	lds	r25, 0x0481
    22fa:	00 97       	sbiw	r24, 0x00	; 0
    22fc:	09 f4       	brne	.+2      	; 0x2300 <__stack+0x101>
    22fe:	b0 c1       	rjmp	.+864    	; 0x2660 <__stack+0x461>
			{
				forward();
    2300:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(60,180);
    2304:	8c e3       	ldi	r24, 0x3C	; 60
    2306:	64 eb       	ldi	r22, 0xB4	; 180
    2308:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    230c:	80 e0       	ldi	r24, 0x00	; 0
    230e:	90 e0       	ldi	r25, 0x00	; 0
    2310:	a0 e2       	ldi	r26, 0x20	; 32
    2312:	b1 e4       	ldi	r27, 0x41	; 65
    2314:	89 83       	std	Y+1, r24	; 0x01
    2316:	9a 83       	std	Y+2, r25	; 0x02
    2318:	ab 83       	std	Y+3, r26	; 0x03
    231a:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    231c:	69 81       	ldd	r22, Y+1	; 0x01
    231e:	7a 81       	ldd	r23, Y+2	; 0x02
    2320:	8b 81       	ldd	r24, Y+3	; 0x03
    2322:	9c 81       	ldd	r25, Y+4	; 0x04
    2324:	26 e6       	ldi	r18, 0x66	; 102
    2326:	36 e6       	ldi	r19, 0x66	; 102
    2328:	46 e6       	ldi	r20, 0x66	; 102
    232a:	55 e4       	ldi	r21, 0x45	; 69
    232c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2330:	dc 01       	movw	r26, r24
    2332:	cb 01       	movw	r24, r22
    2334:	8d 83       	std	Y+5, r24	; 0x05
    2336:	9e 83       	std	Y+6, r25	; 0x06
    2338:	af 83       	std	Y+7, r26	; 0x07
    233a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    233c:	11 e0       	ldi	r17, 0x01	; 1
    233e:	6d 81       	ldd	r22, Y+5	; 0x05
    2340:	7e 81       	ldd	r23, Y+6	; 0x06
    2342:	8f 81       	ldd	r24, Y+7	; 0x07
    2344:	98 85       	ldd	r25, Y+8	; 0x08
    2346:	20 e0       	ldi	r18, 0x00	; 0
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	40 e8       	ldi	r20, 0x80	; 128
    234c:	5f e3       	ldi	r21, 0x3F	; 63
    234e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    2352:	88 23       	and	r24, r24
    2354:	0c f0       	brlt	.+2      	; 0x2358 <__stack+0x159>
    2356:	10 e0       	ldi	r17, 0x00	; 0
    2358:	11 23       	and	r17, r17
    235a:	29 f0       	breq	.+10     	; 0x2366 <__stack+0x167>
		__ticks = 1;
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	9a 87       	std	Y+10, r25	; 0x0a
    2362:	89 87       	std	Y+9, r24	; 0x09
    2364:	46 c0       	rjmp	.+140    	; 0x23f2 <__stack+0x1f3>
	else if (__tmp > 65535)
    2366:	11 e0       	ldi	r17, 0x01	; 1
    2368:	6d 81       	ldd	r22, Y+5	; 0x05
    236a:	7e 81       	ldd	r23, Y+6	; 0x06
    236c:	8f 81       	ldd	r24, Y+7	; 0x07
    236e:	98 85       	ldd	r25, Y+8	; 0x08
    2370:	20 e0       	ldi	r18, 0x00	; 0
    2372:	3f ef       	ldi	r19, 0xFF	; 255
    2374:	4f e7       	ldi	r20, 0x7F	; 127
    2376:	57 e4       	ldi	r21, 0x47	; 71
    2378:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    237c:	18 16       	cp	r1, r24
    237e:	0c f0       	brlt	.+2      	; 0x2382 <__stack+0x183>
    2380:	10 e0       	ldi	r17, 0x00	; 0
    2382:	11 23       	and	r17, r17
    2384:	61 f1       	breq	.+88     	; 0x23de <__stack+0x1df>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2386:	69 81       	ldd	r22, Y+1	; 0x01
    2388:	7a 81       	ldd	r23, Y+2	; 0x02
    238a:	8b 81       	ldd	r24, Y+3	; 0x03
    238c:	9c 81       	ldd	r25, Y+4	; 0x04
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	40 e2       	ldi	r20, 0x20	; 32
    2394:	51 e4       	ldi	r21, 0x41	; 65
    2396:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    239a:	dc 01       	movw	r26, r24
    239c:	cb 01       	movw	r24, r22
    239e:	bc 01       	movw	r22, r24
    23a0:	cd 01       	movw	r24, r26
    23a2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    23a6:	dc 01       	movw	r26, r24
    23a8:	cb 01       	movw	r24, r22
    23aa:	9a 87       	std	Y+10, r25	; 0x0a
    23ac:	89 87       	std	Y+9, r24	; 0x09
    23ae:	12 c0       	rjmp	.+36     	; 0x23d4 <__stack+0x1d5>
    23b0:	80 e7       	ldi	r24, 0x70	; 112
    23b2:	91 e0       	ldi	r25, 0x01	; 1
    23b4:	9c 87       	std	Y+12, r25	; 0x0c
    23b6:	8b 87       	std	Y+11, r24	; 0x0b
    23b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    23ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    23bc:	8c 01       	movw	r16, r24
    23be:	c8 01       	movw	r24, r16
    23c0:	01 97       	sbiw	r24, 0x01	; 1
    23c2:	f1 f7       	brne	.-4      	; 0x23c0 <__stack+0x1c1>
    23c4:	8c 01       	movw	r16, r24
    23c6:	1c 87       	std	Y+12, r17	; 0x0c
    23c8:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23ca:	89 85       	ldd	r24, Y+9	; 0x09
    23cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ce:	01 97       	sbiw	r24, 0x01	; 1
    23d0:	9a 87       	std	Y+10, r25	; 0x0a
    23d2:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23d4:	89 85       	ldd	r24, Y+9	; 0x09
    23d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    23d8:	00 97       	sbiw	r24, 0x00	; 0
    23da:	51 f7       	brne	.-44     	; 0x23b0 <__stack+0x1b1>
    23dc:	17 c0       	rjmp	.+46     	; 0x240c <__stack+0x20d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23de:	6d 81       	ldd	r22, Y+5	; 0x05
    23e0:	7e 81       	ldd	r23, Y+6	; 0x06
    23e2:	8f 81       	ldd	r24, Y+7	; 0x07
    23e4:	98 85       	ldd	r25, Y+8	; 0x08
    23e6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    23ea:	dc 01       	movw	r26, r24
    23ec:	cb 01       	movw	r24, r22
    23ee:	9a 87       	std	Y+10, r25	; 0x0a
    23f0:	89 87       	std	Y+9, r24	; 0x09
    23f2:	89 85       	ldd	r24, Y+9	; 0x09
    23f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    23f6:	9e 87       	std	Y+14, r25	; 0x0e
    23f8:	8d 87       	std	Y+13, r24	; 0x0d
    23fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    23fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    23fe:	8c 01       	movw	r16, r24
    2400:	f8 01       	movw	r30, r16
    2402:	31 97       	sbiw	r30, 0x01	; 1
    2404:	f1 f7       	brne	.-4      	; 0x2402 <__stack+0x203>
    2406:	8f 01       	movw	r16, r30
    2408:	1e 87       	std	Y+14, r17	; 0x0e
    240a:	0d 87       	std	Y+13, r16	; 0x0d
				_delay_ms(10);
				if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    240c:	80 91 7e 04 	lds	r24, 0x047E
    2410:	80 31       	cpi	r24, 0x10	; 16
    2412:	08 f0       	brcs	.+2      	; 0x2416 <__stack+0x217>
    2414:	90 c0       	rjmp	.+288    	; 0x2536 <__stack+0x337>
    2416:	80 91 7d 04 	lds	r24, 0x047D
    241a:	80 31       	cpi	r24, 0x10	; 16
    241c:	08 f0       	brcs	.+2      	; 0x2420 <__stack+0x221>
    241e:	8b c0       	rjmp	.+278    	; 0x2536 <__stack+0x337>
    2420:	80 91 7f 04 	lds	r24, 0x047F
    2424:	80 31       	cpi	r24, 0x10	; 16
    2426:	08 f0       	brcs	.+2      	; 0x242a <__stack+0x22b>
    2428:	86 c0       	rjmp	.+268    	; 0x2536 <__stack+0x337>
				{
					forward();
    242a:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
					velocity(60,180);
    242e:	8c e3       	ldi	r24, 0x3C	; 60
    2430:	64 eb       	ldi	r22, 0xB4	; 180
    2432:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	a0 ea       	ldi	r26, 0xA0	; 160
    243c:	b0 e4       	ldi	r27, 0x40	; 64
    243e:	8f 87       	std	Y+15, r24	; 0x0f
    2440:	98 8b       	std	Y+16, r25	; 0x10
    2442:	a9 8b       	std	Y+17, r26	; 0x11
    2444:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    2446:	6f 85       	ldd	r22, Y+15	; 0x0f
    2448:	78 89       	ldd	r23, Y+16	; 0x10
    244a:	89 89       	ldd	r24, Y+17	; 0x11
    244c:	9a 89       	ldd	r25, Y+18	; 0x12
    244e:	26 e6       	ldi	r18, 0x66	; 102
    2450:	36 e6       	ldi	r19, 0x66	; 102
    2452:	46 e6       	ldi	r20, 0x66	; 102
    2454:	55 e4       	ldi	r21, 0x45	; 69
    2456:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    245a:	dc 01       	movw	r26, r24
    245c:	cb 01       	movw	r24, r22
    245e:	8b 8b       	std	Y+19, r24	; 0x13
    2460:	9c 8b       	std	Y+20, r25	; 0x14
    2462:	ad 8b       	std	Y+21, r26	; 0x15
    2464:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    2466:	11 e0       	ldi	r17, 0x01	; 1
    2468:	6b 89       	ldd	r22, Y+19	; 0x13
    246a:	7c 89       	ldd	r23, Y+20	; 0x14
    246c:	8d 89       	ldd	r24, Y+21	; 0x15
    246e:	9e 89       	ldd	r25, Y+22	; 0x16
    2470:	20 e0       	ldi	r18, 0x00	; 0
    2472:	30 e0       	ldi	r19, 0x00	; 0
    2474:	40 e8       	ldi	r20, 0x80	; 128
    2476:	5f e3       	ldi	r21, 0x3F	; 63
    2478:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    247c:	88 23       	and	r24, r24
    247e:	0c f0       	brlt	.+2      	; 0x2482 <__stack+0x283>
    2480:	10 e0       	ldi	r17, 0x00	; 0
    2482:	11 23       	and	r17, r17
    2484:	29 f0       	breq	.+10     	; 0x2490 <__stack+0x291>
		__ticks = 1;
    2486:	81 e0       	ldi	r24, 0x01	; 1
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	98 8f       	std	Y+24, r25	; 0x18
    248c:	8f 8b       	std	Y+23, r24	; 0x17
    248e:	46 c0       	rjmp	.+140    	; 0x251c <__stack+0x31d>
	else if (__tmp > 65535)
    2490:	11 e0       	ldi	r17, 0x01	; 1
    2492:	6b 89       	ldd	r22, Y+19	; 0x13
    2494:	7c 89       	ldd	r23, Y+20	; 0x14
    2496:	8d 89       	ldd	r24, Y+21	; 0x15
    2498:	9e 89       	ldd	r25, Y+22	; 0x16
    249a:	20 e0       	ldi	r18, 0x00	; 0
    249c:	3f ef       	ldi	r19, 0xFF	; 255
    249e:	4f e7       	ldi	r20, 0x7F	; 127
    24a0:	57 e4       	ldi	r21, 0x47	; 71
    24a2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    24a6:	18 16       	cp	r1, r24
    24a8:	0c f0       	brlt	.+2      	; 0x24ac <__stack+0x2ad>
    24aa:	10 e0       	ldi	r17, 0x00	; 0
    24ac:	11 23       	and	r17, r17
    24ae:	61 f1       	breq	.+88     	; 0x2508 <__stack+0x309>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24b0:	6f 85       	ldd	r22, Y+15	; 0x0f
    24b2:	78 89       	ldd	r23, Y+16	; 0x10
    24b4:	89 89       	ldd	r24, Y+17	; 0x11
    24b6:	9a 89       	ldd	r25, Y+18	; 0x12
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	40 e2       	ldi	r20, 0x20	; 32
    24be:	51 e4       	ldi	r21, 0x41	; 65
    24c0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    24c4:	dc 01       	movw	r26, r24
    24c6:	cb 01       	movw	r24, r22
    24c8:	bc 01       	movw	r22, r24
    24ca:	cd 01       	movw	r24, r26
    24cc:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    24d0:	dc 01       	movw	r26, r24
    24d2:	cb 01       	movw	r24, r22
    24d4:	98 8f       	std	Y+24, r25	; 0x18
    24d6:	8f 8b       	std	Y+23, r24	; 0x17
    24d8:	12 c0       	rjmp	.+36     	; 0x24fe <__stack+0x2ff>
    24da:	80 e7       	ldi	r24, 0x70	; 112
    24dc:	91 e0       	ldi	r25, 0x01	; 1
    24de:	9a 8f       	std	Y+26, r25	; 0x1a
    24e0:	89 8f       	std	Y+25, r24	; 0x19
    24e2:	89 8d       	ldd	r24, Y+25	; 0x19
    24e4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    24e6:	8c 01       	movw	r16, r24
    24e8:	c8 01       	movw	r24, r16
    24ea:	01 97       	sbiw	r24, 0x01	; 1
    24ec:	f1 f7       	brne	.-4      	; 0x24ea <__stack+0x2eb>
    24ee:	8c 01       	movw	r16, r24
    24f0:	1a 8f       	std	Y+26, r17	; 0x1a
    24f2:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24f4:	8f 89       	ldd	r24, Y+23	; 0x17
    24f6:	98 8d       	ldd	r25, Y+24	; 0x18
    24f8:	01 97       	sbiw	r24, 0x01	; 1
    24fa:	98 8f       	std	Y+24, r25	; 0x18
    24fc:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24fe:	8f 89       	ldd	r24, Y+23	; 0x17
    2500:	98 8d       	ldd	r25, Y+24	; 0x18
    2502:	00 97       	sbiw	r24, 0x00	; 0
    2504:	51 f7       	brne	.-44     	; 0x24da <__stack+0x2db>
    2506:	17 c0       	rjmp	.+46     	; 0x2536 <__stack+0x337>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2508:	6b 89       	ldd	r22, Y+19	; 0x13
    250a:	7c 89       	ldd	r23, Y+20	; 0x14
    250c:	8d 89       	ldd	r24, Y+21	; 0x15
    250e:	9e 89       	ldd	r25, Y+22	; 0x16
    2510:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2514:	dc 01       	movw	r26, r24
    2516:	cb 01       	movw	r24, r22
    2518:	98 8f       	std	Y+24, r25	; 0x18
    251a:	8f 8b       	std	Y+23, r24	; 0x17
    251c:	8f 89       	ldd	r24, Y+23	; 0x17
    251e:	98 8d       	ldd	r25, Y+24	; 0x18
    2520:	9c 8f       	std	Y+28, r25	; 0x1c
    2522:	8b 8f       	std	Y+27, r24	; 0x1b
    2524:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2526:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2528:	8c 01       	movw	r16, r24
    252a:	f8 01       	movw	r30, r16
    252c:	31 97       	sbiw	r30, 0x01	; 1
    252e:	f1 f7       	brne	.-4      	; 0x252c <__stack+0x32d>
    2530:	8f 01       	movw	r16, r30
    2532:	1c 8f       	std	Y+28, r17	; 0x1c
    2534:	0b 8f       	std	Y+27, r16	; 0x1b
					_delay_ms(5);
					
				}
					if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    2536:	80 91 7e 04 	lds	r24, 0x047E
    253a:	80 31       	cpi	r24, 0x10	; 16
    253c:	08 f0       	brcs	.+2      	; 0x2540 <__stack+0x341>
    253e:	90 c0       	rjmp	.+288    	; 0x2660 <__stack+0x461>
    2540:	80 91 7d 04 	lds	r24, 0x047D
    2544:	80 31       	cpi	r24, 0x10	; 16
    2546:	08 f0       	brcs	.+2      	; 0x254a <__stack+0x34b>
    2548:	8b c0       	rjmp	.+278    	; 0x2660 <__stack+0x461>
    254a:	80 91 7f 04 	lds	r24, 0x047F
    254e:	80 31       	cpi	r24, 0x10	; 16
    2550:	08 f0       	brcs	.+2      	; 0x2554 <__stack+0x355>
    2552:	86 c0       	rjmp	.+268    	; 0x2660 <__stack+0x461>
					{
						forward();
    2554:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
						velocity(60,180);
    2558:	8c e3       	ldi	r24, 0x3C	; 60
    255a:	64 eb       	ldi	r22, 0xB4	; 180
    255c:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2560:	80 e0       	ldi	r24, 0x00	; 0
    2562:	90 e0       	ldi	r25, 0x00	; 0
    2564:	a0 ea       	ldi	r26, 0xA0	; 160
    2566:	b0 e4       	ldi	r27, 0x40	; 64
    2568:	8d 8f       	std	Y+29, r24	; 0x1d
    256a:	9e 8f       	std	Y+30, r25	; 0x1e
    256c:	af 8f       	std	Y+31, r26	; 0x1f
    256e:	b8 a3       	lds	r27, 0x58
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    2570:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2572:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2574:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2576:	98 a1       	lds	r25, 0x48
    2578:	26 e6       	ldi	r18, 0x66	; 102
    257a:	36 e6       	ldi	r19, 0x66	; 102
    257c:	46 e6       	ldi	r20, 0x66	; 102
    257e:	55 e4       	ldi	r21, 0x45	; 69
    2580:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2584:	dc 01       	movw	r26, r24
    2586:	cb 01       	movw	r24, r22
    2588:	89 a3       	lds	r24, 0x59
    258a:	9a a3       	lds	r25, 0x5a
    258c:	ab a3       	lds	r26, 0x5b
    258e:	bc a3       	lds	r27, 0x5c
	if (__tmp < 1.0)
    2590:	11 e0       	ldi	r17, 0x01	; 1
    2592:	69 a1       	lds	r22, 0x49
    2594:	7a a1       	lds	r23, 0x4a
    2596:	8b a1       	lds	r24, 0x4b
    2598:	9c a1       	lds	r25, 0x4c
    259a:	20 e0       	ldi	r18, 0x00	; 0
    259c:	30 e0       	ldi	r19, 0x00	; 0
    259e:	40 e8       	ldi	r20, 0x80	; 128
    25a0:	5f e3       	ldi	r21, 0x3F	; 63
    25a2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    25a6:	88 23       	and	r24, r24
    25a8:	0c f0       	brlt	.+2      	; 0x25ac <__stack+0x3ad>
    25aa:	10 e0       	ldi	r17, 0x00	; 0
    25ac:	11 23       	and	r17, r17
    25ae:	29 f0       	breq	.+10     	; 0x25ba <__stack+0x3bb>
		__ticks = 1;
    25b0:	81 e0       	ldi	r24, 0x01	; 1
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	9e a3       	lds	r25, 0x5e
    25b6:	8d a3       	lds	r24, 0x5d
    25b8:	46 c0       	rjmp	.+140    	; 0x2646 <__stack+0x447>
	else if (__tmp > 65535)
    25ba:	11 e0       	ldi	r17, 0x01	; 1
    25bc:	69 a1       	lds	r22, 0x49
    25be:	7a a1       	lds	r23, 0x4a
    25c0:	8b a1       	lds	r24, 0x4b
    25c2:	9c a1       	lds	r25, 0x4c
    25c4:	20 e0       	ldi	r18, 0x00	; 0
    25c6:	3f ef       	ldi	r19, 0xFF	; 255
    25c8:	4f e7       	ldi	r20, 0x7F	; 127
    25ca:	57 e4       	ldi	r21, 0x47	; 71
    25cc:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    25d0:	18 16       	cp	r1, r24
    25d2:	0c f0       	brlt	.+2      	; 0x25d6 <__stack+0x3d7>
    25d4:	10 e0       	ldi	r17, 0x00	; 0
    25d6:	11 23       	and	r17, r17
    25d8:	61 f1       	breq	.+88     	; 0x2632 <__stack+0x433>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25da:	6d 8d       	ldd	r22, Y+29	; 0x1d
    25dc:	7e 8d       	ldd	r23, Y+30	; 0x1e
    25de:	8f 8d       	ldd	r24, Y+31	; 0x1f
    25e0:	98 a1       	lds	r25, 0x48
    25e2:	20 e0       	ldi	r18, 0x00	; 0
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	40 e2       	ldi	r20, 0x20	; 32
    25e8:	51 e4       	ldi	r21, 0x41	; 65
    25ea:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	bc 01       	movw	r22, r24
    25f4:	cd 01       	movw	r24, r26
    25f6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    25fa:	dc 01       	movw	r26, r24
    25fc:	cb 01       	movw	r24, r22
    25fe:	9e a3       	lds	r25, 0x5e
    2600:	8d a3       	lds	r24, 0x5d
    2602:	12 c0       	rjmp	.+36     	; 0x2628 <__stack+0x429>
    2604:	80 e7       	ldi	r24, 0x70	; 112
    2606:	91 e0       	ldi	r25, 0x01	; 1
    2608:	98 a7       	lds	r25, 0x78
    260a:	8f a3       	lds	r24, 0x5f
    260c:	8f a1       	lds	r24, 0x4f
    260e:	98 a5       	lds	r25, 0x68
    2610:	8c 01       	movw	r16, r24
    2612:	c8 01       	movw	r24, r16
    2614:	01 97       	sbiw	r24, 0x01	; 1
    2616:	f1 f7       	brne	.-4      	; 0x2614 <__stack+0x415>
    2618:	8c 01       	movw	r16, r24
    261a:	18 a7       	lds	r17, 0x78
    261c:	0f a3       	lds	r16, 0x5f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    261e:	8d a1       	lds	r24, 0x4d
    2620:	9e a1       	lds	r25, 0x4e
    2622:	01 97       	sbiw	r24, 0x01	; 1
    2624:	9e a3       	lds	r25, 0x5e
    2626:	8d a3       	lds	r24, 0x5d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2628:	8d a1       	lds	r24, 0x4d
    262a:	9e a1       	lds	r25, 0x4e
    262c:	00 97       	sbiw	r24, 0x00	; 0
    262e:	51 f7       	brne	.-44     	; 0x2604 <__stack+0x405>
    2630:	17 c0       	rjmp	.+46     	; 0x2660 <__stack+0x461>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2632:	69 a1       	lds	r22, 0x49
    2634:	7a a1       	lds	r23, 0x4a
    2636:	8b a1       	lds	r24, 0x4b
    2638:	9c a1       	lds	r25, 0x4c
    263a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    263e:	dc 01       	movw	r26, r24
    2640:	cb 01       	movw	r24, r22
    2642:	9e a3       	lds	r25, 0x5e
    2644:	8d a3       	lds	r24, 0x5d
    2646:	8d a1       	lds	r24, 0x4d
    2648:	9e a1       	lds	r25, 0x4e
    264a:	9a a7       	lds	r25, 0x7a
    264c:	89 a7       	lds	r24, 0x79
    264e:	89 a5       	lds	r24, 0x69
    2650:	9a a5       	lds	r25, 0x6a
    2652:	8c 01       	movw	r16, r24
    2654:	f8 01       	movw	r30, r16
    2656:	31 97       	sbiw	r30, 0x01	; 1
    2658:	f1 f7       	brne	.-4      	; 0x2656 <__stack+0x457>
    265a:	8f 01       	movw	r16, r30
    265c:	1a a7       	lds	r17, 0x7a
    265e:	09 a7       	lds	r16, 0x79
						_delay_ms(5);
						
					}
			}
			if(helper2!=0)
    2660:	80 91 82 04 	lds	r24, 0x0482
    2664:	90 91 83 04 	lds	r25, 0x0483
    2668:	00 97       	sbiw	r24, 0x00	; 0
    266a:	09 f4       	brne	.+2      	; 0x266e <__stack+0x46f>
    266c:	45 c2       	rjmp	.+1162   	; 0x2af8 <__stack+0x8f9>
			{
				forward();
    266e:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(180,60);
    2672:	84 eb       	ldi	r24, 0xB4	; 180
    2674:	6c e3       	ldi	r22, 0x3C	; 60
    2676:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    267a:	80 e0       	ldi	r24, 0x00	; 0
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	a0 e2       	ldi	r26, 0x20	; 32
    2680:	b1 e4       	ldi	r27, 0x41	; 65
    2682:	8b a7       	lds	r24, 0x7b
    2684:	9c a7       	lds	r25, 0x7c
    2686:	ad a7       	lds	r26, 0x7d
    2688:	be a7       	lds	r27, 0x7e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    268a:	6b a5       	lds	r22, 0x6b
    268c:	7c a5       	lds	r23, 0x6c
    268e:	8d a5       	lds	r24, 0x6d
    2690:	9e a5       	lds	r25, 0x6e
    2692:	26 e6       	ldi	r18, 0x66	; 102
    2694:	36 e6       	ldi	r19, 0x66	; 102
    2696:	46 e6       	ldi	r20, 0x66	; 102
    2698:	55 e4       	ldi	r21, 0x45	; 69
    269a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    269e:	dc 01       	movw	r26, r24
    26a0:	cb 01       	movw	r24, r22
    26a2:	8f a7       	lds	r24, 0x7f
    26a4:	98 ab       	sts	0x58, r25
    26a6:	a9 ab       	sts	0x59, r26
    26a8:	ba ab       	sts	0x5a, r27
	if (__tmp < 1.0)
    26aa:	11 e0       	ldi	r17, 0x01	; 1
    26ac:	6f a5       	lds	r22, 0x6f
    26ae:	78 a9       	sts	0x48, r23
    26b0:	89 a9       	sts	0x49, r24
    26b2:	9a a9       	sts	0x4a, r25
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e8       	ldi	r20, 0x80	; 128
    26ba:	5f e3       	ldi	r21, 0x3F	; 63
    26bc:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    26c0:	88 23       	and	r24, r24
    26c2:	0c f0       	brlt	.+2      	; 0x26c6 <__stack+0x4c7>
    26c4:	10 e0       	ldi	r17, 0x00	; 0
    26c6:	11 23       	and	r17, r17
    26c8:	29 f0       	breq	.+10     	; 0x26d4 <__stack+0x4d5>
		__ticks = 1;
    26ca:	81 e0       	ldi	r24, 0x01	; 1
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	9c ab       	sts	0x5c, r25
    26d0:	8b ab       	sts	0x5b, r24
    26d2:	46 c0       	rjmp	.+140    	; 0x2760 <__stack+0x561>
	else if (__tmp > 65535)
    26d4:	11 e0       	ldi	r17, 0x01	; 1
    26d6:	6f a5       	lds	r22, 0x6f
    26d8:	78 a9       	sts	0x48, r23
    26da:	89 a9       	sts	0x49, r24
    26dc:	9a a9       	sts	0x4a, r25
    26de:	20 e0       	ldi	r18, 0x00	; 0
    26e0:	3f ef       	ldi	r19, 0xFF	; 255
    26e2:	4f e7       	ldi	r20, 0x7F	; 127
    26e4:	57 e4       	ldi	r21, 0x47	; 71
    26e6:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    26ea:	18 16       	cp	r1, r24
    26ec:	0c f0       	brlt	.+2      	; 0x26f0 <__stack+0x4f1>
    26ee:	10 e0       	ldi	r17, 0x00	; 0
    26f0:	11 23       	and	r17, r17
    26f2:	61 f1       	breq	.+88     	; 0x274c <__stack+0x54d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f4:	6b a5       	lds	r22, 0x6b
    26f6:	7c a5       	lds	r23, 0x6c
    26f8:	8d a5       	lds	r24, 0x6d
    26fa:	9e a5       	lds	r25, 0x6e
    26fc:	20 e0       	ldi	r18, 0x00	; 0
    26fe:	30 e0       	ldi	r19, 0x00	; 0
    2700:	40 e2       	ldi	r20, 0x20	; 32
    2702:	51 e4       	ldi	r21, 0x41	; 65
    2704:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2708:	dc 01       	movw	r26, r24
    270a:	cb 01       	movw	r24, r22
    270c:	bc 01       	movw	r22, r24
    270e:	cd 01       	movw	r24, r26
    2710:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2714:	dc 01       	movw	r26, r24
    2716:	cb 01       	movw	r24, r22
    2718:	9c ab       	sts	0x5c, r25
    271a:	8b ab       	sts	0x5b, r24
    271c:	12 c0       	rjmp	.+36     	; 0x2742 <__stack+0x543>
    271e:	80 e7       	ldi	r24, 0x70	; 112
    2720:	91 e0       	ldi	r25, 0x01	; 1
    2722:	9e ab       	sts	0x5e, r25
    2724:	8d ab       	sts	0x5d, r24
    2726:	8d a9       	sts	0x4d, r24
    2728:	9e a9       	sts	0x4e, r25
    272a:	8c 01       	movw	r16, r24
    272c:	c8 01       	movw	r24, r16
    272e:	01 97       	sbiw	r24, 0x01	; 1
    2730:	f1 f7       	brne	.-4      	; 0x272e <__stack+0x52f>
    2732:	8c 01       	movw	r16, r24
    2734:	1e ab       	sts	0x5e, r17
    2736:	0d ab       	sts	0x5d, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2738:	8b a9       	sts	0x4b, r24
    273a:	9c a9       	sts	0x4c, r25
    273c:	01 97       	sbiw	r24, 0x01	; 1
    273e:	9c ab       	sts	0x5c, r25
    2740:	8b ab       	sts	0x5b, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2742:	8b a9       	sts	0x4b, r24
    2744:	9c a9       	sts	0x4c, r25
    2746:	00 97       	sbiw	r24, 0x00	; 0
    2748:	51 f7       	brne	.-44     	; 0x271e <__stack+0x51f>
    274a:	17 c0       	rjmp	.+46     	; 0x277a <__stack+0x57b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    274c:	6f a5       	lds	r22, 0x6f
    274e:	78 a9       	sts	0x48, r23
    2750:	89 a9       	sts	0x49, r24
    2752:	9a a9       	sts	0x4a, r25
    2754:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	9c ab       	sts	0x5c, r25
    275e:	8b ab       	sts	0x5b, r24
    2760:	8b a9       	sts	0x4b, r24
    2762:	9c a9       	sts	0x4c, r25
    2764:	98 af       	sts	0x78, r25
    2766:	8f ab       	sts	0x5f, r24
    2768:	8f a9       	sts	0x4f, r24
    276a:	98 ad       	sts	0x68, r25
    276c:	8c 01       	movw	r16, r24
    276e:	f8 01       	movw	r30, r16
    2770:	31 97       	sbiw	r30, 0x01	; 1
    2772:	f1 f7       	brne	.-4      	; 0x2770 <__stack+0x571>
    2774:	8f 01       	movw	r16, r30
    2776:	18 af       	sts	0x78, r17
    2778:	0f ab       	sts	0x5f, r16
				_delay_ms(10);
				if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    277a:	80 91 7e 04 	lds	r24, 0x047E
    277e:	80 31       	cpi	r24, 0x10	; 16
    2780:	08 f0       	brcs	.+2      	; 0x2784 <__stack+0x585>
    2782:	d3 c0       	rjmp	.+422    	; 0x292a <__stack+0x72b>
    2784:	80 91 7d 04 	lds	r24, 0x047D
    2788:	80 31       	cpi	r24, 0x10	; 16
    278a:	08 f0       	brcs	.+2      	; 0x278e <__stack+0x58f>
    278c:	ce c0       	rjmp	.+412    	; 0x292a <__stack+0x72b>
    278e:	80 91 7f 04 	lds	r24, 0x047F
    2792:	80 31       	cpi	r24, 0x10	; 16
    2794:	08 f0       	brcs	.+2      	; 0x2798 <__stack+0x599>
    2796:	c9 c0       	rjmp	.+402    	; 0x292a <__stack+0x72b>
				{
					forward();
    2798:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
					velocity(180,60);
    279c:	84 eb       	ldi	r24, 0xB4	; 180
    279e:	6c e3       	ldi	r22, 0x3C	; 60
    27a0:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    27a4:	80 e0       	ldi	r24, 0x00	; 0
    27a6:	90 e0       	ldi	r25, 0x00	; 0
    27a8:	a0 ea       	ldi	r26, 0xA0	; 160
    27aa:	b0 e4       	ldi	r27, 0x40	; 64
    27ac:	89 af       	sts	0x79, r24
    27ae:	9a af       	sts	0x7a, r25
    27b0:	ab af       	sts	0x7b, r26
    27b2:	bc af       	sts	0x7c, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    27b4:	69 ad       	sts	0x69, r22
    27b6:	7a ad       	sts	0x6a, r23
    27b8:	8b ad       	sts	0x6b, r24
    27ba:	9c ad       	sts	0x6c, r25
    27bc:	26 e6       	ldi	r18, 0x66	; 102
    27be:	36 e6       	ldi	r19, 0x66	; 102
    27c0:	46 e6       	ldi	r20, 0x66	; 102
    27c2:	55 e4       	ldi	r21, 0x45	; 69
    27c4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    27c8:	dc 01       	movw	r26, r24
    27ca:	cb 01       	movw	r24, r22
    27cc:	9e 01       	movw	r18, r28
    27ce:	23 5c       	subi	r18, 0xC3	; 195
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	f9 01       	movw	r30, r18
    27d4:	80 83       	st	Z, r24
    27d6:	91 83       	std	Z+1, r25	; 0x01
    27d8:	a2 83       	std	Z+2, r26	; 0x02
    27da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27dc:	11 e0       	ldi	r17, 0x01	; 1
    27de:	ce 01       	movw	r24, r28
    27e0:	cd 96       	adiw	r24, 0x3d	; 61
    27e2:	fc 01       	movw	r30, r24
    27e4:	60 81       	ld	r22, Z
    27e6:	71 81       	ldd	r23, Z+1	; 0x01
    27e8:	82 81       	ldd	r24, Z+2	; 0x02
    27ea:	93 81       	ldd	r25, Z+3	; 0x03
    27ec:	20 e0       	ldi	r18, 0x00	; 0
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	40 e8       	ldi	r20, 0x80	; 128
    27f2:	5f e3       	ldi	r21, 0x3F	; 63
    27f4:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    27f8:	88 23       	and	r24, r24
    27fa:	0c f0       	brlt	.+2      	; 0x27fe <__stack+0x5ff>
    27fc:	10 e0       	ldi	r17, 0x00	; 0
    27fe:	11 23       	and	r17, r17
    2800:	49 f0       	breq	.+18     	; 0x2814 <__stack+0x615>
		__ticks = 1;
    2802:	ce 01       	movw	r24, r28
    2804:	8f 5b       	subi	r24, 0xBF	; 191
    2806:	9f 4f       	sbci	r25, 0xFF	; 255
    2808:	21 e0       	ldi	r18, 0x01	; 1
    280a:	30 e0       	ldi	r19, 0x00	; 0
    280c:	fc 01       	movw	r30, r24
    280e:	31 83       	std	Z+1, r19	; 0x01
    2810:	20 83       	st	Z, r18
    2812:	6e c0       	rjmp	.+220    	; 0x28f0 <__stack+0x6f1>
	else if (__tmp > 65535)
    2814:	11 e0       	ldi	r17, 0x01	; 1
    2816:	ce 01       	movw	r24, r28
    2818:	cd 96       	adiw	r24, 0x3d	; 61
    281a:	fc 01       	movw	r30, r24
    281c:	60 81       	ld	r22, Z
    281e:	71 81       	ldd	r23, Z+1	; 0x01
    2820:	82 81       	ldd	r24, Z+2	; 0x02
    2822:	93 81       	ldd	r25, Z+3	; 0x03
    2824:	20 e0       	ldi	r18, 0x00	; 0
    2826:	3f ef       	ldi	r19, 0xFF	; 255
    2828:	4f e7       	ldi	r20, 0x7F	; 127
    282a:	57 e4       	ldi	r21, 0x47	; 71
    282c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    2830:	18 16       	cp	r1, r24
    2832:	0c f0       	brlt	.+2      	; 0x2836 <__stack+0x637>
    2834:	10 e0       	ldi	r17, 0x00	; 0
    2836:	11 23       	and	r17, r17
    2838:	09 f4       	brne	.+2      	; 0x283c <__stack+0x63d>
    283a:	49 c0       	rjmp	.+146    	; 0x28ce <__stack+0x6cf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    283c:	69 ad       	sts	0x69, r22
    283e:	7a ad       	sts	0x6a, r23
    2840:	8b ad       	sts	0x6b, r24
    2842:	9c ad       	sts	0x6c, r25
    2844:	20 e0       	ldi	r18, 0x00	; 0
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	40 e2       	ldi	r20, 0x20	; 32
    284a:	51 e4       	ldi	r21, 0x41	; 65
    284c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2850:	dc 01       	movw	r26, r24
    2852:	cb 01       	movw	r24, r22
    2854:	8e 01       	movw	r16, r28
    2856:	0f 5b       	subi	r16, 0xBF	; 191
    2858:	1f 4f       	sbci	r17, 0xFF	; 255
    285a:	bc 01       	movw	r22, r24
    285c:	cd 01       	movw	r24, r26
    285e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2862:	dc 01       	movw	r26, r24
    2864:	cb 01       	movw	r24, r22
    2866:	f8 01       	movw	r30, r16
    2868:	91 83       	std	Z+1, r25	; 0x01
    286a:	80 83       	st	Z, r24
    286c:	27 c0       	rjmp	.+78     	; 0x28bc <__stack+0x6bd>
    286e:	ce 01       	movw	r24, r28
    2870:	8d 5b       	subi	r24, 0xBD	; 189
    2872:	9f 4f       	sbci	r25, 0xFF	; 255
    2874:	20 e7       	ldi	r18, 0x70	; 112
    2876:	31 e0       	ldi	r19, 0x01	; 1
    2878:	fc 01       	movw	r30, r24
    287a:	31 83       	std	Z+1, r19	; 0x01
    287c:	20 83       	st	Z, r18
    287e:	ce 01       	movw	r24, r28
    2880:	8d 5b       	subi	r24, 0xBD	; 189
    2882:	9f 4f       	sbci	r25, 0xFF	; 255
    2884:	fc 01       	movw	r30, r24
    2886:	80 81       	ld	r24, Z
    2888:	91 81       	ldd	r25, Z+1	; 0x01
    288a:	8c 01       	movw	r16, r24
    288c:	c8 01       	movw	r24, r16
    288e:	01 97       	sbiw	r24, 0x01	; 1
    2890:	f1 f7       	brne	.-4      	; 0x288e <__stack+0x68f>
    2892:	8c 01       	movw	r16, r24
    2894:	ce 01       	movw	r24, r28
    2896:	8d 5b       	subi	r24, 0xBD	; 189
    2898:	9f 4f       	sbci	r25, 0xFF	; 255
    289a:	fc 01       	movw	r30, r24
    289c:	11 83       	std	Z+1, r17	; 0x01
    289e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28a0:	ce 01       	movw	r24, r28
    28a2:	8f 5b       	subi	r24, 0xBF	; 191
    28a4:	9f 4f       	sbci	r25, 0xFF	; 255
    28a6:	9e 01       	movw	r18, r28
    28a8:	2f 5b       	subi	r18, 0xBF	; 191
    28aa:	3f 4f       	sbci	r19, 0xFF	; 255
    28ac:	f9 01       	movw	r30, r18
    28ae:	20 81       	ld	r18, Z
    28b0:	31 81       	ldd	r19, Z+1	; 0x01
    28b2:	21 50       	subi	r18, 0x01	; 1
    28b4:	30 40       	sbci	r19, 0x00	; 0
    28b6:	fc 01       	movw	r30, r24
    28b8:	31 83       	std	Z+1, r19	; 0x01
    28ba:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28bc:	ce 01       	movw	r24, r28
    28be:	8f 5b       	subi	r24, 0xBF	; 191
    28c0:	9f 4f       	sbci	r25, 0xFF	; 255
    28c2:	fc 01       	movw	r30, r24
    28c4:	80 81       	ld	r24, Z
    28c6:	91 81       	ldd	r25, Z+1	; 0x01
    28c8:	00 97       	sbiw	r24, 0x00	; 0
    28ca:	89 f6       	brne	.-94     	; 0x286e <__stack+0x66f>
    28cc:	2e c0       	rjmp	.+92     	; 0x292a <__stack+0x72b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28ce:	8e 01       	movw	r16, r28
    28d0:	0f 5b       	subi	r16, 0xBF	; 191
    28d2:	1f 4f       	sbci	r17, 0xFF	; 255
    28d4:	ce 01       	movw	r24, r28
    28d6:	cd 96       	adiw	r24, 0x3d	; 61
    28d8:	fc 01       	movw	r30, r24
    28da:	60 81       	ld	r22, Z
    28dc:	71 81       	ldd	r23, Z+1	; 0x01
    28de:	82 81       	ldd	r24, Z+2	; 0x02
    28e0:	93 81       	ldd	r25, Z+3	; 0x03
    28e2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    28e6:	dc 01       	movw	r26, r24
    28e8:	cb 01       	movw	r24, r22
    28ea:	f8 01       	movw	r30, r16
    28ec:	91 83       	std	Z+1, r25	; 0x01
    28ee:	80 83       	st	Z, r24
    28f0:	ce 01       	movw	r24, r28
    28f2:	8b 5b       	subi	r24, 0xBB	; 187
    28f4:	9f 4f       	sbci	r25, 0xFF	; 255
    28f6:	9e 01       	movw	r18, r28
    28f8:	2f 5b       	subi	r18, 0xBF	; 191
    28fa:	3f 4f       	sbci	r19, 0xFF	; 255
    28fc:	f9 01       	movw	r30, r18
    28fe:	20 81       	ld	r18, Z
    2900:	31 81       	ldd	r19, Z+1	; 0x01
    2902:	fc 01       	movw	r30, r24
    2904:	31 83       	std	Z+1, r19	; 0x01
    2906:	20 83       	st	Z, r18
    2908:	ce 01       	movw	r24, r28
    290a:	8b 5b       	subi	r24, 0xBB	; 187
    290c:	9f 4f       	sbci	r25, 0xFF	; 255
    290e:	fc 01       	movw	r30, r24
    2910:	80 81       	ld	r24, Z
    2912:	91 81       	ldd	r25, Z+1	; 0x01
    2914:	8c 01       	movw	r16, r24
    2916:	c8 01       	movw	r24, r16
    2918:	01 97       	sbiw	r24, 0x01	; 1
    291a:	f1 f7       	brne	.-4      	; 0x2918 <__stack+0x719>
    291c:	8c 01       	movw	r16, r24
    291e:	ce 01       	movw	r24, r28
    2920:	8b 5b       	subi	r24, 0xBB	; 187
    2922:	9f 4f       	sbci	r25, 0xFF	; 255
    2924:	fc 01       	movw	r30, r24
    2926:	11 83       	std	Z+1, r17	; 0x01
    2928:	00 83       	st	Z, r16
					_delay_ms(5);
							
				}
						if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    292a:	80 91 7e 04 	lds	r24, 0x047E
    292e:	80 31       	cpi	r24, 0x10	; 16
    2930:	08 f0       	brcs	.+2      	; 0x2934 <__stack+0x735>
    2932:	e2 c0       	rjmp	.+452    	; 0x2af8 <__stack+0x8f9>
    2934:	80 91 7d 04 	lds	r24, 0x047D
    2938:	80 31       	cpi	r24, 0x10	; 16
    293a:	08 f0       	brcs	.+2      	; 0x293e <__stack+0x73f>
    293c:	dd c0       	rjmp	.+442    	; 0x2af8 <__stack+0x8f9>
    293e:	80 91 7f 04 	lds	r24, 0x047F
    2942:	80 31       	cpi	r24, 0x10	; 16
    2944:	08 f0       	brcs	.+2      	; 0x2948 <__stack+0x749>
    2946:	d8 c0       	rjmp	.+432    	; 0x2af8 <__stack+0x8f9>
						{
							forward();
    2948:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
							velocity(180,60);
    294c:	84 eb       	ldi	r24, 0xB4	; 180
    294e:	6c e3       	ldi	r22, 0x3C	; 60
    2950:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2954:	9e 01       	movw	r18, r28
    2956:	29 5b       	subi	r18, 0xB9	; 185
    2958:	3f 4f       	sbci	r19, 0xFF	; 255
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	90 e0       	ldi	r25, 0x00	; 0
    295e:	a0 ea       	ldi	r26, 0xA0	; 160
    2960:	b0 e4       	ldi	r27, 0x40	; 64
    2962:	f9 01       	movw	r30, r18
    2964:	80 83       	st	Z, r24
    2966:	91 83       	std	Z+1, r25	; 0x01
    2968:	a2 83       	std	Z+2, r26	; 0x02
    296a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    296c:	8e 01       	movw	r16, r28
    296e:	05 5b       	subi	r16, 0xB5	; 181
    2970:	1f 4f       	sbci	r17, 0xFF	; 255
    2972:	ce 01       	movw	r24, r28
    2974:	89 5b       	subi	r24, 0xB9	; 185
    2976:	9f 4f       	sbci	r25, 0xFF	; 255
    2978:	fc 01       	movw	r30, r24
    297a:	60 81       	ld	r22, Z
    297c:	71 81       	ldd	r23, Z+1	; 0x01
    297e:	82 81       	ldd	r24, Z+2	; 0x02
    2980:	93 81       	ldd	r25, Z+3	; 0x03
    2982:	26 e6       	ldi	r18, 0x66	; 102
    2984:	36 e6       	ldi	r19, 0x66	; 102
    2986:	46 e6       	ldi	r20, 0x66	; 102
    2988:	55 e4       	ldi	r21, 0x45	; 69
    298a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    298e:	dc 01       	movw	r26, r24
    2990:	cb 01       	movw	r24, r22
    2992:	f8 01       	movw	r30, r16
    2994:	80 83       	st	Z, r24
    2996:	91 83       	std	Z+1, r25	; 0x01
    2998:	a2 83       	std	Z+2, r26	; 0x02
    299a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    299c:	ce 01       	movw	r24, r28
    299e:	85 5b       	subi	r24, 0xB5	; 181
    29a0:	9f 4f       	sbci	r25, 0xFF	; 255
    29a2:	11 e0       	ldi	r17, 0x01	; 1
    29a4:	fc 01       	movw	r30, r24
    29a6:	60 81       	ld	r22, Z
    29a8:	71 81       	ldd	r23, Z+1	; 0x01
    29aa:	82 81       	ldd	r24, Z+2	; 0x02
    29ac:	93 81       	ldd	r25, Z+3	; 0x03
    29ae:	20 e0       	ldi	r18, 0x00	; 0
    29b0:	30 e0       	ldi	r19, 0x00	; 0
    29b2:	40 e8       	ldi	r20, 0x80	; 128
    29b4:	5f e3       	ldi	r21, 0x3F	; 63
    29b6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    29ba:	88 23       	and	r24, r24
    29bc:	0c f0       	brlt	.+2      	; 0x29c0 <__stack+0x7c1>
    29be:	10 e0       	ldi	r17, 0x00	; 0
    29c0:	11 23       	and	r17, r17
    29c2:	49 f0       	breq	.+18     	; 0x29d6 <__stack+0x7d7>
		__ticks = 1;
    29c4:	ce 01       	movw	r24, r28
    29c6:	81 5b       	subi	r24, 0xB1	; 177
    29c8:	9f 4f       	sbci	r25, 0xFF	; 255
    29ca:	21 e0       	ldi	r18, 0x01	; 1
    29cc:	30 e0       	ldi	r19, 0x00	; 0
    29ce:	fc 01       	movw	r30, r24
    29d0:	31 83       	std	Z+1, r19	; 0x01
    29d2:	20 83       	st	Z, r18
    29d4:	74 c0       	rjmp	.+232    	; 0x2abe <__stack+0x8bf>
	else if (__tmp > 65535)
    29d6:	ce 01       	movw	r24, r28
    29d8:	85 5b       	subi	r24, 0xB5	; 181
    29da:	9f 4f       	sbci	r25, 0xFF	; 255
    29dc:	11 e0       	ldi	r17, 0x01	; 1
    29de:	fc 01       	movw	r30, r24
    29e0:	60 81       	ld	r22, Z
    29e2:	71 81       	ldd	r23, Z+1	; 0x01
    29e4:	82 81       	ldd	r24, Z+2	; 0x02
    29e6:	93 81       	ldd	r25, Z+3	; 0x03
    29e8:	20 e0       	ldi	r18, 0x00	; 0
    29ea:	3f ef       	ldi	r19, 0xFF	; 255
    29ec:	4f e7       	ldi	r20, 0x7F	; 127
    29ee:	57 e4       	ldi	r21, 0x47	; 71
    29f0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    29f4:	18 16       	cp	r1, r24
    29f6:	0c f0       	brlt	.+2      	; 0x29fa <__stack+0x7fb>
    29f8:	10 e0       	ldi	r17, 0x00	; 0
    29fa:	11 23       	and	r17, r17
    29fc:	09 f4       	brne	.+2      	; 0x2a00 <__stack+0x801>
    29fe:	4d c0       	rjmp	.+154    	; 0x2a9a <__stack+0x89b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a00:	ce 01       	movw	r24, r28
    2a02:	89 5b       	subi	r24, 0xB9	; 185
    2a04:	9f 4f       	sbci	r25, 0xFF	; 255
    2a06:	fc 01       	movw	r30, r24
    2a08:	60 81       	ld	r22, Z
    2a0a:	71 81       	ldd	r23, Z+1	; 0x01
    2a0c:	82 81       	ldd	r24, Z+2	; 0x02
    2a0e:	93 81       	ldd	r25, Z+3	; 0x03
    2a10:	20 e0       	ldi	r18, 0x00	; 0
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	40 e2       	ldi	r20, 0x20	; 32
    2a16:	51 e4       	ldi	r21, 0x41	; 65
    2a18:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2a1c:	dc 01       	movw	r26, r24
    2a1e:	cb 01       	movw	r24, r22
    2a20:	8e 01       	movw	r16, r28
    2a22:	01 5b       	subi	r16, 0xB1	; 177
    2a24:	1f 4f       	sbci	r17, 0xFF	; 255
    2a26:	bc 01       	movw	r22, r24
    2a28:	cd 01       	movw	r24, r26
    2a2a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2a2e:	dc 01       	movw	r26, r24
    2a30:	cb 01       	movw	r24, r22
    2a32:	f8 01       	movw	r30, r16
    2a34:	91 83       	std	Z+1, r25	; 0x01
    2a36:	80 83       	st	Z, r24
    2a38:	27 c0       	rjmp	.+78     	; 0x2a88 <__stack+0x889>
    2a3a:	ce 01       	movw	r24, r28
    2a3c:	8f 5a       	subi	r24, 0xAF	; 175
    2a3e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a40:	20 e7       	ldi	r18, 0x70	; 112
    2a42:	31 e0       	ldi	r19, 0x01	; 1
    2a44:	fc 01       	movw	r30, r24
    2a46:	31 83       	std	Z+1, r19	; 0x01
    2a48:	20 83       	st	Z, r18
    2a4a:	ce 01       	movw	r24, r28
    2a4c:	8f 5a       	subi	r24, 0xAF	; 175
    2a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a50:	fc 01       	movw	r30, r24
    2a52:	80 81       	ld	r24, Z
    2a54:	91 81       	ldd	r25, Z+1	; 0x01
    2a56:	8c 01       	movw	r16, r24
    2a58:	c8 01       	movw	r24, r16
    2a5a:	01 97       	sbiw	r24, 0x01	; 1
    2a5c:	f1 f7       	brne	.-4      	; 0x2a5a <__stack+0x85b>
    2a5e:	8c 01       	movw	r16, r24
    2a60:	ce 01       	movw	r24, r28
    2a62:	8f 5a       	subi	r24, 0xAF	; 175
    2a64:	9f 4f       	sbci	r25, 0xFF	; 255
    2a66:	fc 01       	movw	r30, r24
    2a68:	11 83       	std	Z+1, r17	; 0x01
    2a6a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a6c:	ce 01       	movw	r24, r28
    2a6e:	81 5b       	subi	r24, 0xB1	; 177
    2a70:	9f 4f       	sbci	r25, 0xFF	; 255
    2a72:	9e 01       	movw	r18, r28
    2a74:	21 5b       	subi	r18, 0xB1	; 177
    2a76:	3f 4f       	sbci	r19, 0xFF	; 255
    2a78:	f9 01       	movw	r30, r18
    2a7a:	20 81       	ld	r18, Z
    2a7c:	31 81       	ldd	r19, Z+1	; 0x01
    2a7e:	21 50       	subi	r18, 0x01	; 1
    2a80:	30 40       	sbci	r19, 0x00	; 0
    2a82:	fc 01       	movw	r30, r24
    2a84:	31 83       	std	Z+1, r19	; 0x01
    2a86:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a88:	ce 01       	movw	r24, r28
    2a8a:	81 5b       	subi	r24, 0xB1	; 177
    2a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a8e:	fc 01       	movw	r30, r24
    2a90:	80 81       	ld	r24, Z
    2a92:	91 81       	ldd	r25, Z+1	; 0x01
    2a94:	00 97       	sbiw	r24, 0x00	; 0
    2a96:	89 f6       	brne	.-94     	; 0x2a3a <__stack+0x83b>
    2a98:	2f c0       	rjmp	.+94     	; 0x2af8 <__stack+0x8f9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a9a:	8e 01       	movw	r16, r28
    2a9c:	01 5b       	subi	r16, 0xB1	; 177
    2a9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2aa0:	ce 01       	movw	r24, r28
    2aa2:	85 5b       	subi	r24, 0xB5	; 181
    2aa4:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	60 81       	ld	r22, Z
    2aaa:	71 81       	ldd	r23, Z+1	; 0x01
    2aac:	82 81       	ldd	r24, Z+2	; 0x02
    2aae:	93 81       	ldd	r25, Z+3	; 0x03
    2ab0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2ab4:	dc 01       	movw	r26, r24
    2ab6:	cb 01       	movw	r24, r22
    2ab8:	f8 01       	movw	r30, r16
    2aba:	91 83       	std	Z+1, r25	; 0x01
    2abc:	80 83       	st	Z, r24
    2abe:	ce 01       	movw	r24, r28
    2ac0:	8d 5a       	subi	r24, 0xAD	; 173
    2ac2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac4:	9e 01       	movw	r18, r28
    2ac6:	21 5b       	subi	r18, 0xB1	; 177
    2ac8:	3f 4f       	sbci	r19, 0xFF	; 255
    2aca:	f9 01       	movw	r30, r18
    2acc:	20 81       	ld	r18, Z
    2ace:	31 81       	ldd	r19, Z+1	; 0x01
    2ad0:	fc 01       	movw	r30, r24
    2ad2:	31 83       	std	Z+1, r19	; 0x01
    2ad4:	20 83       	st	Z, r18
    2ad6:	ce 01       	movw	r24, r28
    2ad8:	8d 5a       	subi	r24, 0xAD	; 173
    2ada:	9f 4f       	sbci	r25, 0xFF	; 255
    2adc:	fc 01       	movw	r30, r24
    2ade:	80 81       	ld	r24, Z
    2ae0:	91 81       	ldd	r25, Z+1	; 0x01
    2ae2:	8c 01       	movw	r16, r24
    2ae4:	c8 01       	movw	r24, r16
    2ae6:	01 97       	sbiw	r24, 0x01	; 1
    2ae8:	f1 f7       	brne	.-4      	; 0x2ae6 <__stack+0x8e7>
    2aea:	8c 01       	movw	r16, r24
    2aec:	ce 01       	movw	r24, r28
    2aee:	8d 5a       	subi	r24, 0xAD	; 173
    2af0:	9f 4f       	sbci	r25, 0xFF	; 255
    2af2:	fc 01       	movw	r30, r24
    2af4:	11 83       	std	Z+1, r17	; 0x01
    2af6:	00 83       	st	Z, r16
							_delay_ms(5);
							
						}
			}
			forward();
    2af8:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(140,140);                      ///change
    2afc:	8c e8       	ldi	r24, 0x8C	; 140
    2afe:	6c e8       	ldi	r22, 0x8C	; 140
    2b00:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		
		if((Center_white_line>16 && Left_white_line>16) || (Center_white_line>16 && Right_white_line>16))
    2b04:	80 91 7e 04 	lds	r24, 0x047E
    2b08:	81 31       	cpi	r24, 0x11	; 17
    2b0a:	20 f0       	brcs	.+8      	; 0x2b14 <__stack+0x915>
    2b0c:	80 91 7d 04 	lds	r24, 0x047D
    2b10:	81 31       	cpi	r24, 0x11	; 17
    2b12:	50 f4       	brcc	.+20     	; 0x2b28 <__stack+0x929>
    2b14:	80 91 7e 04 	lds	r24, 0x047E
    2b18:	81 31       	cpi	r24, 0x11	; 17
    2b1a:	08 f4       	brcc	.+2      	; 0x2b1e <__stack+0x91f>
    2b1c:	73 cb       	rjmp	.-2330   	; 0x2204 <__stack+0x5>
    2b1e:	80 91 7f 04 	lds	r24, 0x047F
    2b22:	81 31       	cpi	r24, 0x11	; 17
    2b24:	08 f4       	brcc	.+2      	; 0x2b28 <__stack+0x929>
    2b26:	6e cb       	rjmp	.-2340   	; 0x2204 <__stack+0x5>
		{
			    helper1=0;
    2b28:	10 92 81 04 	sts	0x0481, r1
    2b2c:	10 92 80 04 	sts	0x0480, r1
				helper2=0;
    2b30:	10 92 83 04 	sts	0x0483, r1
    2b34:	10 92 82 04 	sts	0x0482, r1
				forward_mm(80);
    2b38:	80 e5       	ldi	r24, 0x50	; 80
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
				stop();
    2b40:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
				printlcd(coor[0],coor[1]);
    2b44:	80 91 a6 04 	lds	r24, 0x04A6
    2b48:	90 91 a7 04 	lds	r25, 0x04A7
    2b4c:	20 91 a8 04 	lds	r18, 0x04A8
    2b50:	30 91 a9 04 	lds	r19, 0x04A9
    2b54:	b9 01       	movw	r22, r18
    2b56:	0e 94 8f 10 	call	0x211e	; 0x211e <printlcd>
				break;
    2b5a:	00 00       	nop
		}
		
	}
}
    2b5c:	cc 5a       	subi	r28, 0xAC	; 172
    2b5e:	df 4f       	sbci	r29, 0xFF	; 255
    2b60:	0f b6       	in	r0, 0x3f	; 63
    2b62:	f8 94       	cli
    2b64:	de bf       	out	0x3e, r29	; 62
    2b66:	0f be       	out	0x3f, r0	; 63
    2b68:	cd bf       	out	0x3d, r28	; 61
    2b6a:	df 91       	pop	r29
    2b6c:	cf 91       	pop	r28
    2b6e:	1f 91       	pop	r17
    2b70:	0f 91       	pop	r16
    2b72:	08 95       	ret

00002b74 <linefollwer1>:

void linefollwer1()
{
    2b74:	0f 93       	push	r16
    2b76:	1f 93       	push	r17
    2b78:	cf 93       	push	r28
    2b7a:	df 93       	push	r29
    2b7c:	cd b7       	in	r28, 0x3d	; 61
    2b7e:	de b7       	in	r29, 0x3e	; 62
    2b80:	e8 97       	sbiw	r28, 0x38	; 56
    2b82:	0f b6       	in	r0, 0x3f	; 63
    2b84:	f8 94       	cli
    2b86:	de bf       	out	0x3e, r29	; 62
    2b88:	0f be       	out	0x3f, r0	; 63
    2b8a:	cd bf       	out	0x3d, r28	; 61
    2b8c:	01 c0       	rjmp	.+2      	; 0x2b90 <linefollwer1+0x1c>
			stop();
			printlcd(coor[0],coor[1]);
			break;
		}
		
	}
    2b8e:	00 00       	nop

void linefollwer1()
{
	while(1)
	{
		whitesensor();
    2b90:	0e 94 79 10 	call	0x20f2	; 0x20f2 <whitesensor>
		flag=0;
    2b94:	10 92 7c 04 	sts	0x047C, r1
		
		
		if(Center_white_line>16)
    2b98:	80 91 7e 04 	lds	r24, 0x047E
    2b9c:	81 31       	cpi	r24, 0x11	; 17
    2b9e:	88 f0       	brcs	.+34     	; 0x2bc2 <linefollwer1+0x4e>
		{
			helper1=0;
    2ba0:	10 92 81 04 	sts	0x0481, r1
    2ba4:	10 92 80 04 	sts	0x0480, r1
			helper2=0;
    2ba8:	10 92 83 04 	sts	0x0483, r1
    2bac:	10 92 82 04 	sts	0x0482, r1
			flag=1;
    2bb0:	81 e0       	ldi	r24, 0x01	; 1
    2bb2:	80 93 7c 04 	sts	0x047C, r24
			forward();
    2bb6:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(200,200);
    2bba:	88 ec       	ldi	r24, 0xC8	; 200
    2bbc:	68 ec       	ldi	r22, 0xC8	; 200
    2bbe:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		
		if((Left_white_line>16) && (flag==0))
    2bc2:	80 91 7d 04 	lds	r24, 0x047D
    2bc6:	81 31       	cpi	r24, 0x11	; 17
    2bc8:	18 f1       	brcs	.+70     	; 0x2c10 <linefollwer1+0x9c>
    2bca:	80 91 7c 04 	lds	r24, 0x047C
    2bce:	88 23       	and	r24, r24
    2bd0:	f9 f4       	brne	.+62     	; 0x2c10 <linefollwer1+0x9c>
		{
			if(helper1>2)
    2bd2:	80 91 80 04 	lds	r24, 0x0480
    2bd6:	90 91 81 04 	lds	r25, 0x0481
    2bda:	83 30       	cpi	r24, 0x03	; 3
    2bdc:	91 05       	cpc	r25, r1
    2bde:	34 f0       	brlt	.+12     	; 0x2bec <linefollwer1+0x78>
			{
				forward();
    2be0:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(60,180);
    2be4:	8c e3       	ldi	r24, 0x3C	; 60
    2be6:	64 eb       	ldi	r22, 0xB4	; 180
    2be8:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
			}
			helper1=helper1+1;
    2bec:	80 91 80 04 	lds	r24, 0x0480
    2bf0:	90 91 81 04 	lds	r25, 0x0481
    2bf4:	01 96       	adiw	r24, 0x01	; 1
    2bf6:	90 93 81 04 	sts	0x0481, r25
    2bfa:	80 93 80 04 	sts	0x0480, r24
			flag=1;
    2bfe:	81 e0       	ldi	r24, 0x01	; 1
    2c00:	80 93 7c 04 	sts	0x047C, r24
			forward();
    2c04:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(60,180);
    2c08:	8c e3       	ldi	r24, 0x3C	; 60
    2c0a:	64 eb       	ldi	r22, 0xB4	; 180
    2c0c:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}

		if((Right_white_line>16) && (flag==0))
    2c10:	80 91 7f 04 	lds	r24, 0x047F
    2c14:	81 31       	cpi	r24, 0x11	; 17
    2c16:	18 f1       	brcs	.+70     	; 0x2c5e <linefollwer1+0xea>
    2c18:	80 91 7c 04 	lds	r24, 0x047C
    2c1c:	88 23       	and	r24, r24
    2c1e:	f9 f4       	brne	.+62     	; 0x2c5e <linefollwer1+0xea>
		{
			if(helper2>2)
    2c20:	80 91 82 04 	lds	r24, 0x0482
    2c24:	90 91 83 04 	lds	r25, 0x0483
    2c28:	83 30       	cpi	r24, 0x03	; 3
    2c2a:	91 05       	cpc	r25, r1
    2c2c:	34 f0       	brlt	.+12     	; 0x2c3a <linefollwer1+0xc6>
			{
				forward();
    2c2e:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(180,60);
    2c32:	84 eb       	ldi	r24, 0xB4	; 180
    2c34:	6c e3       	ldi	r22, 0x3C	; 60
    2c36:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
			}
			helper2=helper2+1;
    2c3a:	80 91 82 04 	lds	r24, 0x0482
    2c3e:	90 91 83 04 	lds	r25, 0x0483
    2c42:	01 96       	adiw	r24, 0x01	; 1
    2c44:	90 93 83 04 	sts	0x0483, r25
    2c48:	80 93 82 04 	sts	0x0482, r24
			flag=1;
    2c4c:	81 e0       	ldi	r24, 0x01	; 1
    2c4e:	80 93 7c 04 	sts	0x047C, r24
			forward();
    2c52:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(180,60);
    2c56:	84 eb       	ldi	r24, 0xB4	; 180
    2c58:	6c e3       	ldi	r22, 0x3C	; 60
    2c5a:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    2c5e:	80 91 7e 04 	lds	r24, 0x047E
    2c62:	80 31       	cpi	r24, 0x10	; 16
    2c64:	08 f0       	brcs	.+2      	; 0x2c68 <linefollwer1+0xf4>
    2c66:	54 c2       	rjmp	.+1192   	; 0x3110 <linefollwer1+0x59c>
    2c68:	80 91 7d 04 	lds	r24, 0x047D
    2c6c:	80 31       	cpi	r24, 0x10	; 16
    2c6e:	08 f0       	brcs	.+2      	; 0x2c72 <linefollwer1+0xfe>
    2c70:	4f c2       	rjmp	.+1182   	; 0x3110 <linefollwer1+0x59c>
    2c72:	80 91 7f 04 	lds	r24, 0x047F
    2c76:	80 31       	cpi	r24, 0x10	; 16
    2c78:	08 f0       	brcs	.+2      	; 0x2c7c <linefollwer1+0x108>
    2c7a:	4a c2       	rjmp	.+1172   	; 0x3110 <linefollwer1+0x59c>
		{
			if(helper1!=0)
    2c7c:	80 91 80 04 	lds	r24, 0x0480
    2c80:	90 91 81 04 	lds	r25, 0x0481
    2c84:	00 97       	sbiw	r24, 0x00	; 0
    2c86:	09 f4       	brne	.+2      	; 0x2c8a <linefollwer1+0x116>
    2c88:	1b c1       	rjmp	.+566    	; 0x2ec0 <linefollwer1+0x34c>
			{
				forward();
    2c8a:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(60,180);
    2c8e:	8c e3       	ldi	r24, 0x3C	; 60
    2c90:	64 eb       	ldi	r22, 0xB4	; 180
    2c92:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2c96:	80 e0       	ldi	r24, 0x00	; 0
    2c98:	90 e0       	ldi	r25, 0x00	; 0
    2c9a:	a0 e2       	ldi	r26, 0x20	; 32
    2c9c:	b1 e4       	ldi	r27, 0x41	; 65
    2c9e:	89 83       	std	Y+1, r24	; 0x01
    2ca0:	9a 83       	std	Y+2, r25	; 0x02
    2ca2:	ab 83       	std	Y+3, r26	; 0x03
    2ca4:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    2ca6:	69 81       	ldd	r22, Y+1	; 0x01
    2ca8:	7a 81       	ldd	r23, Y+2	; 0x02
    2caa:	8b 81       	ldd	r24, Y+3	; 0x03
    2cac:	9c 81       	ldd	r25, Y+4	; 0x04
    2cae:	26 e6       	ldi	r18, 0x66	; 102
    2cb0:	36 e6       	ldi	r19, 0x66	; 102
    2cb2:	46 e6       	ldi	r20, 0x66	; 102
    2cb4:	55 e4       	ldi	r21, 0x45	; 69
    2cb6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2cba:	dc 01       	movw	r26, r24
    2cbc:	cb 01       	movw	r24, r22
    2cbe:	8d 83       	std	Y+5, r24	; 0x05
    2cc0:	9e 83       	std	Y+6, r25	; 0x06
    2cc2:	af 83       	std	Y+7, r26	; 0x07
    2cc4:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    2cc6:	11 e0       	ldi	r17, 0x01	; 1
    2cc8:	6d 81       	ldd	r22, Y+5	; 0x05
    2cca:	7e 81       	ldd	r23, Y+6	; 0x06
    2ccc:	8f 81       	ldd	r24, Y+7	; 0x07
    2cce:	98 85       	ldd	r25, Y+8	; 0x08
    2cd0:	20 e0       	ldi	r18, 0x00	; 0
    2cd2:	30 e0       	ldi	r19, 0x00	; 0
    2cd4:	40 e8       	ldi	r20, 0x80	; 128
    2cd6:	5f e3       	ldi	r21, 0x3F	; 63
    2cd8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    2cdc:	88 23       	and	r24, r24
    2cde:	0c f0       	brlt	.+2      	; 0x2ce2 <linefollwer1+0x16e>
    2ce0:	10 e0       	ldi	r17, 0x00	; 0
    2ce2:	11 23       	and	r17, r17
    2ce4:	29 f0       	breq	.+10     	; 0x2cf0 <linefollwer1+0x17c>
		__ticks = 1;
    2ce6:	81 e0       	ldi	r24, 0x01	; 1
    2ce8:	90 e0       	ldi	r25, 0x00	; 0
    2cea:	9a 87       	std	Y+10, r25	; 0x0a
    2cec:	89 87       	std	Y+9, r24	; 0x09
    2cee:	46 c0       	rjmp	.+140    	; 0x2d7c <linefollwer1+0x208>
	else if (__tmp > 65535)
    2cf0:	11 e0       	ldi	r17, 0x01	; 1
    2cf2:	6d 81       	ldd	r22, Y+5	; 0x05
    2cf4:	7e 81       	ldd	r23, Y+6	; 0x06
    2cf6:	8f 81       	ldd	r24, Y+7	; 0x07
    2cf8:	98 85       	ldd	r25, Y+8	; 0x08
    2cfa:	20 e0       	ldi	r18, 0x00	; 0
    2cfc:	3f ef       	ldi	r19, 0xFF	; 255
    2cfe:	4f e7       	ldi	r20, 0x7F	; 127
    2d00:	57 e4       	ldi	r21, 0x47	; 71
    2d02:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    2d06:	18 16       	cp	r1, r24
    2d08:	0c f0       	brlt	.+2      	; 0x2d0c <linefollwer1+0x198>
    2d0a:	10 e0       	ldi	r17, 0x00	; 0
    2d0c:	11 23       	and	r17, r17
    2d0e:	61 f1       	breq	.+88     	; 0x2d68 <linefollwer1+0x1f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d10:	69 81       	ldd	r22, Y+1	; 0x01
    2d12:	7a 81       	ldd	r23, Y+2	; 0x02
    2d14:	8b 81       	ldd	r24, Y+3	; 0x03
    2d16:	9c 81       	ldd	r25, Y+4	; 0x04
    2d18:	20 e0       	ldi	r18, 0x00	; 0
    2d1a:	30 e0       	ldi	r19, 0x00	; 0
    2d1c:	40 e2       	ldi	r20, 0x20	; 32
    2d1e:	51 e4       	ldi	r21, 0x41	; 65
    2d20:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2d24:	dc 01       	movw	r26, r24
    2d26:	cb 01       	movw	r24, r22
    2d28:	bc 01       	movw	r22, r24
    2d2a:	cd 01       	movw	r24, r26
    2d2c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2d30:	dc 01       	movw	r26, r24
    2d32:	cb 01       	movw	r24, r22
    2d34:	9a 87       	std	Y+10, r25	; 0x0a
    2d36:	89 87       	std	Y+9, r24	; 0x09
    2d38:	12 c0       	rjmp	.+36     	; 0x2d5e <linefollwer1+0x1ea>
    2d3a:	80 e7       	ldi	r24, 0x70	; 112
    2d3c:	91 e0       	ldi	r25, 0x01	; 1
    2d3e:	9c 87       	std	Y+12, r25	; 0x0c
    2d40:	8b 87       	std	Y+11, r24	; 0x0b
    2d42:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d44:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d46:	8c 01       	movw	r16, r24
    2d48:	c8 01       	movw	r24, r16
    2d4a:	01 97       	sbiw	r24, 0x01	; 1
    2d4c:	f1 f7       	brne	.-4      	; 0x2d4a <linefollwer1+0x1d6>
    2d4e:	8c 01       	movw	r16, r24
    2d50:	1c 87       	std	Y+12, r17	; 0x0c
    2d52:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d54:	89 85       	ldd	r24, Y+9	; 0x09
    2d56:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d58:	01 97       	sbiw	r24, 0x01	; 1
    2d5a:	9a 87       	std	Y+10, r25	; 0x0a
    2d5c:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d5e:	89 85       	ldd	r24, Y+9	; 0x09
    2d60:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d62:	00 97       	sbiw	r24, 0x00	; 0
    2d64:	51 f7       	brne	.-44     	; 0x2d3a <linefollwer1+0x1c6>
    2d66:	17 c0       	rjmp	.+46     	; 0x2d96 <linefollwer1+0x222>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d68:	6d 81       	ldd	r22, Y+5	; 0x05
    2d6a:	7e 81       	ldd	r23, Y+6	; 0x06
    2d6c:	8f 81       	ldd	r24, Y+7	; 0x07
    2d6e:	98 85       	ldd	r25, Y+8	; 0x08
    2d70:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2d74:	dc 01       	movw	r26, r24
    2d76:	cb 01       	movw	r24, r22
    2d78:	9a 87       	std	Y+10, r25	; 0x0a
    2d7a:	89 87       	std	Y+9, r24	; 0x09
    2d7c:	89 85       	ldd	r24, Y+9	; 0x09
    2d7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d80:	9e 87       	std	Y+14, r25	; 0x0e
    2d82:	8d 87       	std	Y+13, r24	; 0x0d
    2d84:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d86:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d88:	8c 01       	movw	r16, r24
    2d8a:	c8 01       	movw	r24, r16
    2d8c:	01 97       	sbiw	r24, 0x01	; 1
    2d8e:	f1 f7       	brne	.-4      	; 0x2d8c <linefollwer1+0x218>
    2d90:	8c 01       	movw	r16, r24
    2d92:	1e 87       	std	Y+14, r17	; 0x0e
    2d94:	0d 87       	std	Y+13, r16	; 0x0d
				_delay_ms(10);
				if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    2d96:	80 91 7e 04 	lds	r24, 0x047E
    2d9a:	80 31       	cpi	r24, 0x10	; 16
    2d9c:	08 f0       	brcs	.+2      	; 0x2da0 <linefollwer1+0x22c>
    2d9e:	90 c0       	rjmp	.+288    	; 0x2ec0 <linefollwer1+0x34c>
    2da0:	80 91 7d 04 	lds	r24, 0x047D
    2da4:	80 31       	cpi	r24, 0x10	; 16
    2da6:	08 f0       	brcs	.+2      	; 0x2daa <linefollwer1+0x236>
    2da8:	8b c0       	rjmp	.+278    	; 0x2ec0 <linefollwer1+0x34c>
    2daa:	80 91 7f 04 	lds	r24, 0x047F
    2dae:	80 31       	cpi	r24, 0x10	; 16
    2db0:	08 f0       	brcs	.+2      	; 0x2db4 <linefollwer1+0x240>
    2db2:	86 c0       	rjmp	.+268    	; 0x2ec0 <linefollwer1+0x34c>
				{
					forward();
    2db4:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
					velocity(60,180);
    2db8:	8c e3       	ldi	r24, 0x3C	; 60
    2dba:	64 eb       	ldi	r22, 0xB4	; 180
    2dbc:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2dc0:	80 e0       	ldi	r24, 0x00	; 0
    2dc2:	90 e0       	ldi	r25, 0x00	; 0
    2dc4:	a0 ea       	ldi	r26, 0xA0	; 160
    2dc6:	b0 e4       	ldi	r27, 0x40	; 64
    2dc8:	8f 87       	std	Y+15, r24	; 0x0f
    2dca:	98 8b       	std	Y+16, r25	; 0x10
    2dcc:	a9 8b       	std	Y+17, r26	; 0x11
    2dce:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    2dd0:	6f 85       	ldd	r22, Y+15	; 0x0f
    2dd2:	78 89       	ldd	r23, Y+16	; 0x10
    2dd4:	89 89       	ldd	r24, Y+17	; 0x11
    2dd6:	9a 89       	ldd	r25, Y+18	; 0x12
    2dd8:	26 e6       	ldi	r18, 0x66	; 102
    2dda:	36 e6       	ldi	r19, 0x66	; 102
    2ddc:	46 e6       	ldi	r20, 0x66	; 102
    2dde:	55 e4       	ldi	r21, 0x45	; 69
    2de0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2de4:	dc 01       	movw	r26, r24
    2de6:	cb 01       	movw	r24, r22
    2de8:	8b 8b       	std	Y+19, r24	; 0x13
    2dea:	9c 8b       	std	Y+20, r25	; 0x14
    2dec:	ad 8b       	std	Y+21, r26	; 0x15
    2dee:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    2df0:	11 e0       	ldi	r17, 0x01	; 1
    2df2:	6b 89       	ldd	r22, Y+19	; 0x13
    2df4:	7c 89       	ldd	r23, Y+20	; 0x14
    2df6:	8d 89       	ldd	r24, Y+21	; 0x15
    2df8:	9e 89       	ldd	r25, Y+22	; 0x16
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	40 e8       	ldi	r20, 0x80	; 128
    2e00:	5f e3       	ldi	r21, 0x3F	; 63
    2e02:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    2e06:	88 23       	and	r24, r24
    2e08:	0c f0       	brlt	.+2      	; 0x2e0c <linefollwer1+0x298>
    2e0a:	10 e0       	ldi	r17, 0x00	; 0
    2e0c:	11 23       	and	r17, r17
    2e0e:	29 f0       	breq	.+10     	; 0x2e1a <linefollwer1+0x2a6>
		__ticks = 1;
    2e10:	81 e0       	ldi	r24, 0x01	; 1
    2e12:	90 e0       	ldi	r25, 0x00	; 0
    2e14:	98 8f       	std	Y+24, r25	; 0x18
    2e16:	8f 8b       	std	Y+23, r24	; 0x17
    2e18:	46 c0       	rjmp	.+140    	; 0x2ea6 <linefollwer1+0x332>
	else if (__tmp > 65535)
    2e1a:	11 e0       	ldi	r17, 0x01	; 1
    2e1c:	6b 89       	ldd	r22, Y+19	; 0x13
    2e1e:	7c 89       	ldd	r23, Y+20	; 0x14
    2e20:	8d 89       	ldd	r24, Y+21	; 0x15
    2e22:	9e 89       	ldd	r25, Y+22	; 0x16
    2e24:	20 e0       	ldi	r18, 0x00	; 0
    2e26:	3f ef       	ldi	r19, 0xFF	; 255
    2e28:	4f e7       	ldi	r20, 0x7F	; 127
    2e2a:	57 e4       	ldi	r21, 0x47	; 71
    2e2c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    2e30:	18 16       	cp	r1, r24
    2e32:	0c f0       	brlt	.+2      	; 0x2e36 <linefollwer1+0x2c2>
    2e34:	10 e0       	ldi	r17, 0x00	; 0
    2e36:	11 23       	and	r17, r17
    2e38:	61 f1       	breq	.+88     	; 0x2e92 <linefollwer1+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e3a:	6f 85       	ldd	r22, Y+15	; 0x0f
    2e3c:	78 89       	ldd	r23, Y+16	; 0x10
    2e3e:	89 89       	ldd	r24, Y+17	; 0x11
    2e40:	9a 89       	ldd	r25, Y+18	; 0x12
    2e42:	20 e0       	ldi	r18, 0x00	; 0
    2e44:	30 e0       	ldi	r19, 0x00	; 0
    2e46:	40 e2       	ldi	r20, 0x20	; 32
    2e48:	51 e4       	ldi	r21, 0x41	; 65
    2e4a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2e4e:	dc 01       	movw	r26, r24
    2e50:	cb 01       	movw	r24, r22
    2e52:	bc 01       	movw	r22, r24
    2e54:	cd 01       	movw	r24, r26
    2e56:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2e5a:	dc 01       	movw	r26, r24
    2e5c:	cb 01       	movw	r24, r22
    2e5e:	98 8f       	std	Y+24, r25	; 0x18
    2e60:	8f 8b       	std	Y+23, r24	; 0x17
    2e62:	12 c0       	rjmp	.+36     	; 0x2e88 <linefollwer1+0x314>
    2e64:	80 e7       	ldi	r24, 0x70	; 112
    2e66:	91 e0       	ldi	r25, 0x01	; 1
    2e68:	9a 8f       	std	Y+26, r25	; 0x1a
    2e6a:	89 8f       	std	Y+25, r24	; 0x19
    2e6c:	89 8d       	ldd	r24, Y+25	; 0x19
    2e6e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2e70:	8c 01       	movw	r16, r24
    2e72:	c8 01       	movw	r24, r16
    2e74:	01 97       	sbiw	r24, 0x01	; 1
    2e76:	f1 f7       	brne	.-4      	; 0x2e74 <linefollwer1+0x300>
    2e78:	8c 01       	movw	r16, r24
    2e7a:	1a 8f       	std	Y+26, r17	; 0x1a
    2e7c:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e7e:	8f 89       	ldd	r24, Y+23	; 0x17
    2e80:	98 8d       	ldd	r25, Y+24	; 0x18
    2e82:	01 97       	sbiw	r24, 0x01	; 1
    2e84:	98 8f       	std	Y+24, r25	; 0x18
    2e86:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e88:	8f 89       	ldd	r24, Y+23	; 0x17
    2e8a:	98 8d       	ldd	r25, Y+24	; 0x18
    2e8c:	00 97       	sbiw	r24, 0x00	; 0
    2e8e:	51 f7       	brne	.-44     	; 0x2e64 <linefollwer1+0x2f0>
    2e90:	17 c0       	rjmp	.+46     	; 0x2ec0 <linefollwer1+0x34c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e92:	6b 89       	ldd	r22, Y+19	; 0x13
    2e94:	7c 89       	ldd	r23, Y+20	; 0x14
    2e96:	8d 89       	ldd	r24, Y+21	; 0x15
    2e98:	9e 89       	ldd	r25, Y+22	; 0x16
    2e9a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2e9e:	dc 01       	movw	r26, r24
    2ea0:	cb 01       	movw	r24, r22
    2ea2:	98 8f       	std	Y+24, r25	; 0x18
    2ea4:	8f 8b       	std	Y+23, r24	; 0x17
    2ea6:	8f 89       	ldd	r24, Y+23	; 0x17
    2ea8:	98 8d       	ldd	r25, Y+24	; 0x18
    2eaa:	9c 8f       	std	Y+28, r25	; 0x1c
    2eac:	8b 8f       	std	Y+27, r24	; 0x1b
    2eae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2eb0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2eb2:	8c 01       	movw	r16, r24
    2eb4:	c8 01       	movw	r24, r16
    2eb6:	01 97       	sbiw	r24, 0x01	; 1
    2eb8:	f1 f7       	brne	.-4      	; 0x2eb6 <linefollwer1+0x342>
    2eba:	8c 01       	movw	r16, r24
    2ebc:	1c 8f       	std	Y+28, r17	; 0x1c
    2ebe:	0b 8f       	std	Y+27, r16	; 0x1b
					_delay_ms(5);
					
				}
			}
			if(helper2!=0)
    2ec0:	80 91 82 04 	lds	r24, 0x0482
    2ec4:	90 91 83 04 	lds	r25, 0x0483
    2ec8:	00 97       	sbiw	r24, 0x00	; 0
    2eca:	09 f4       	brne	.+2      	; 0x2ece <linefollwer1+0x35a>
    2ecc:	1b c1       	rjmp	.+566    	; 0x3104 <linefollwer1+0x590>
			{
				forward();
    2ece:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
				velocity(180,60);
    2ed2:	84 eb       	ldi	r24, 0xB4	; 180
    2ed4:	6c e3       	ldi	r22, 0x3C	; 60
    2ed6:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    2eda:	80 e0       	ldi	r24, 0x00	; 0
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	a0 e2       	ldi	r26, 0x20	; 32
    2ee0:	b1 e4       	ldi	r27, 0x41	; 65
    2ee2:	8d 8f       	std	Y+29, r24	; 0x1d
    2ee4:	9e 8f       	std	Y+30, r25	; 0x1e
    2ee6:	af 8f       	std	Y+31, r26	; 0x1f
    2ee8:	b8 a3       	lds	r27, 0x58
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    2eea:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2eec:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2eee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2ef0:	98 a1       	lds	r25, 0x48
    2ef2:	26 e6       	ldi	r18, 0x66	; 102
    2ef4:	36 e6       	ldi	r19, 0x66	; 102
    2ef6:	46 e6       	ldi	r20, 0x66	; 102
    2ef8:	55 e4       	ldi	r21, 0x45	; 69
    2efa:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2efe:	dc 01       	movw	r26, r24
    2f00:	cb 01       	movw	r24, r22
    2f02:	89 a3       	lds	r24, 0x59
    2f04:	9a a3       	lds	r25, 0x5a
    2f06:	ab a3       	lds	r26, 0x5b
    2f08:	bc a3       	lds	r27, 0x5c
	if (__tmp < 1.0)
    2f0a:	11 e0       	ldi	r17, 0x01	; 1
    2f0c:	69 a1       	lds	r22, 0x49
    2f0e:	7a a1       	lds	r23, 0x4a
    2f10:	8b a1       	lds	r24, 0x4b
    2f12:	9c a1       	lds	r25, 0x4c
    2f14:	20 e0       	ldi	r18, 0x00	; 0
    2f16:	30 e0       	ldi	r19, 0x00	; 0
    2f18:	40 e8       	ldi	r20, 0x80	; 128
    2f1a:	5f e3       	ldi	r21, 0x3F	; 63
    2f1c:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    2f20:	88 23       	and	r24, r24
    2f22:	0c f0       	brlt	.+2      	; 0x2f26 <linefollwer1+0x3b2>
    2f24:	10 e0       	ldi	r17, 0x00	; 0
    2f26:	11 23       	and	r17, r17
    2f28:	29 f0       	breq	.+10     	; 0x2f34 <linefollwer1+0x3c0>
		__ticks = 1;
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	9e a3       	lds	r25, 0x5e
    2f30:	8d a3       	lds	r24, 0x5d
    2f32:	46 c0       	rjmp	.+140    	; 0x2fc0 <linefollwer1+0x44c>
	else if (__tmp > 65535)
    2f34:	11 e0       	ldi	r17, 0x01	; 1
    2f36:	69 a1       	lds	r22, 0x49
    2f38:	7a a1       	lds	r23, 0x4a
    2f3a:	8b a1       	lds	r24, 0x4b
    2f3c:	9c a1       	lds	r25, 0x4c
    2f3e:	20 e0       	ldi	r18, 0x00	; 0
    2f40:	3f ef       	ldi	r19, 0xFF	; 255
    2f42:	4f e7       	ldi	r20, 0x7F	; 127
    2f44:	57 e4       	ldi	r21, 0x47	; 71
    2f46:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    2f4a:	18 16       	cp	r1, r24
    2f4c:	0c f0       	brlt	.+2      	; 0x2f50 <linefollwer1+0x3dc>
    2f4e:	10 e0       	ldi	r17, 0x00	; 0
    2f50:	11 23       	and	r17, r17
    2f52:	61 f1       	breq	.+88     	; 0x2fac <linefollwer1+0x438>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f54:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2f56:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2f58:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f5a:	98 a1       	lds	r25, 0x48
    2f5c:	20 e0       	ldi	r18, 0x00	; 0
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	40 e2       	ldi	r20, 0x20	; 32
    2f62:	51 e4       	ldi	r21, 0x41	; 65
    2f64:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    2f68:	dc 01       	movw	r26, r24
    2f6a:	cb 01       	movw	r24, r22
    2f6c:	bc 01       	movw	r22, r24
    2f6e:	cd 01       	movw	r24, r26
    2f70:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2f74:	dc 01       	movw	r26, r24
    2f76:	cb 01       	movw	r24, r22
    2f78:	9e a3       	lds	r25, 0x5e
    2f7a:	8d a3       	lds	r24, 0x5d
    2f7c:	12 c0       	rjmp	.+36     	; 0x2fa2 <linefollwer1+0x42e>
    2f7e:	80 e7       	ldi	r24, 0x70	; 112
    2f80:	91 e0       	ldi	r25, 0x01	; 1
    2f82:	98 a7       	lds	r25, 0x78
    2f84:	8f a3       	lds	r24, 0x5f
    2f86:	8f a1       	lds	r24, 0x4f
    2f88:	98 a5       	lds	r25, 0x68
    2f8a:	8c 01       	movw	r16, r24
    2f8c:	c8 01       	movw	r24, r16
    2f8e:	01 97       	sbiw	r24, 0x01	; 1
    2f90:	f1 f7       	brne	.-4      	; 0x2f8e <linefollwer1+0x41a>
    2f92:	8c 01       	movw	r16, r24
    2f94:	18 a7       	lds	r17, 0x78
    2f96:	0f a3       	lds	r16, 0x5f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f98:	8d a1       	lds	r24, 0x4d
    2f9a:	9e a1       	lds	r25, 0x4e
    2f9c:	01 97       	sbiw	r24, 0x01	; 1
    2f9e:	9e a3       	lds	r25, 0x5e
    2fa0:	8d a3       	lds	r24, 0x5d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fa2:	8d a1       	lds	r24, 0x4d
    2fa4:	9e a1       	lds	r25, 0x4e
    2fa6:	00 97       	sbiw	r24, 0x00	; 0
    2fa8:	51 f7       	brne	.-44     	; 0x2f7e <linefollwer1+0x40a>
    2faa:	17 c0       	rjmp	.+46     	; 0x2fda <linefollwer1+0x466>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fac:	69 a1       	lds	r22, 0x49
    2fae:	7a a1       	lds	r23, 0x4a
    2fb0:	8b a1       	lds	r24, 0x4b
    2fb2:	9c a1       	lds	r25, 0x4c
    2fb4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    2fb8:	dc 01       	movw	r26, r24
    2fba:	cb 01       	movw	r24, r22
    2fbc:	9e a3       	lds	r25, 0x5e
    2fbe:	8d a3       	lds	r24, 0x5d
    2fc0:	8d a1       	lds	r24, 0x4d
    2fc2:	9e a1       	lds	r25, 0x4e
    2fc4:	9a a7       	lds	r25, 0x7a
    2fc6:	89 a7       	lds	r24, 0x79
    2fc8:	89 a5       	lds	r24, 0x69
    2fca:	9a a5       	lds	r25, 0x6a
    2fcc:	8c 01       	movw	r16, r24
    2fce:	c8 01       	movw	r24, r16
    2fd0:	01 97       	sbiw	r24, 0x01	; 1
    2fd2:	f1 f7       	brne	.-4      	; 0x2fd0 <linefollwer1+0x45c>
    2fd4:	8c 01       	movw	r16, r24
    2fd6:	1a a7       	lds	r17, 0x7a
    2fd8:	09 a7       	lds	r16, 0x79
				_delay_ms(10);
				if(Center_white_line<16 && Left_white_line<16 && Right_white_line<16)
    2fda:	80 91 7e 04 	lds	r24, 0x047E
    2fde:	80 31       	cpi	r24, 0x10	; 16
    2fe0:	08 f0       	brcs	.+2      	; 0x2fe4 <linefollwer1+0x470>
    2fe2:	90 c0       	rjmp	.+288    	; 0x3104 <linefollwer1+0x590>
    2fe4:	80 91 7d 04 	lds	r24, 0x047D
    2fe8:	80 31       	cpi	r24, 0x10	; 16
    2fea:	08 f0       	brcs	.+2      	; 0x2fee <linefollwer1+0x47a>
    2fec:	8b c0       	rjmp	.+278    	; 0x3104 <linefollwer1+0x590>
    2fee:	80 91 7f 04 	lds	r24, 0x047F
    2ff2:	80 31       	cpi	r24, 0x10	; 16
    2ff4:	08 f0       	brcs	.+2      	; 0x2ff8 <linefollwer1+0x484>
    2ff6:	86 c0       	rjmp	.+268    	; 0x3104 <linefollwer1+0x590>
				{
					forward();
    2ff8:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
					velocity(180,60);
    2ffc:	84 eb       	ldi	r24, 0xB4	; 180
    2ffe:	6c e3       	ldi	r22, 0x3C	; 60
    3000:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
    3004:	80 e0       	ldi	r24, 0x00	; 0
    3006:	90 e0       	ldi	r25, 0x00	; 0
    3008:	a0 ea       	ldi	r26, 0xA0	; 160
    300a:	b0 e4       	ldi	r27, 0x40	; 64
    300c:	8b a7       	lds	r24, 0x7b
    300e:	9c a7       	lds	r25, 0x7c
    3010:	ad a7       	lds	r26, 0x7d
    3012:	be a7       	lds	r27, 0x7e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3014:	6b a5       	lds	r22, 0x6b
    3016:	7c a5       	lds	r23, 0x6c
    3018:	8d a5       	lds	r24, 0x6d
    301a:	9e a5       	lds	r25, 0x6e
    301c:	26 e6       	ldi	r18, 0x66	; 102
    301e:	36 e6       	ldi	r19, 0x66	; 102
    3020:	46 e6       	ldi	r20, 0x66	; 102
    3022:	55 e4       	ldi	r21, 0x45	; 69
    3024:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3028:	dc 01       	movw	r26, r24
    302a:	cb 01       	movw	r24, r22
    302c:	8f a7       	lds	r24, 0x7f
    302e:	98 ab       	sts	0x58, r25
    3030:	a9 ab       	sts	0x59, r26
    3032:	ba ab       	sts	0x5a, r27
	if (__tmp < 1.0)
    3034:	11 e0       	ldi	r17, 0x01	; 1
    3036:	6f a5       	lds	r22, 0x6f
    3038:	78 a9       	sts	0x48, r23
    303a:	89 a9       	sts	0x49, r24
    303c:	9a a9       	sts	0x4a, r25
    303e:	20 e0       	ldi	r18, 0x00	; 0
    3040:	30 e0       	ldi	r19, 0x00	; 0
    3042:	40 e8       	ldi	r20, 0x80	; 128
    3044:	5f e3       	ldi	r21, 0x3F	; 63
    3046:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    304a:	88 23       	and	r24, r24
    304c:	0c f0       	brlt	.+2      	; 0x3050 <linefollwer1+0x4dc>
    304e:	10 e0       	ldi	r17, 0x00	; 0
    3050:	11 23       	and	r17, r17
    3052:	29 f0       	breq	.+10     	; 0x305e <linefollwer1+0x4ea>
		__ticks = 1;
    3054:	81 e0       	ldi	r24, 0x01	; 1
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	9c ab       	sts	0x5c, r25
    305a:	8b ab       	sts	0x5b, r24
    305c:	46 c0       	rjmp	.+140    	; 0x30ea <linefollwer1+0x576>
	else if (__tmp > 65535)
    305e:	11 e0       	ldi	r17, 0x01	; 1
    3060:	6f a5       	lds	r22, 0x6f
    3062:	78 a9       	sts	0x48, r23
    3064:	89 a9       	sts	0x49, r24
    3066:	9a a9       	sts	0x4a, r25
    3068:	20 e0       	ldi	r18, 0x00	; 0
    306a:	3f ef       	ldi	r19, 0xFF	; 255
    306c:	4f e7       	ldi	r20, 0x7F	; 127
    306e:	57 e4       	ldi	r21, 0x47	; 71
    3070:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3074:	18 16       	cp	r1, r24
    3076:	0c f0       	brlt	.+2      	; 0x307a <linefollwer1+0x506>
    3078:	10 e0       	ldi	r17, 0x00	; 0
    307a:	11 23       	and	r17, r17
    307c:	61 f1       	breq	.+88     	; 0x30d6 <linefollwer1+0x562>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    307e:	6b a5       	lds	r22, 0x6b
    3080:	7c a5       	lds	r23, 0x6c
    3082:	8d a5       	lds	r24, 0x6d
    3084:	9e a5       	lds	r25, 0x6e
    3086:	20 e0       	ldi	r18, 0x00	; 0
    3088:	30 e0       	ldi	r19, 0x00	; 0
    308a:	40 e2       	ldi	r20, 0x20	; 32
    308c:	51 e4       	ldi	r21, 0x41	; 65
    308e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3092:	dc 01       	movw	r26, r24
    3094:	cb 01       	movw	r24, r22
    3096:	bc 01       	movw	r22, r24
    3098:	cd 01       	movw	r24, r26
    309a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    309e:	dc 01       	movw	r26, r24
    30a0:	cb 01       	movw	r24, r22
    30a2:	9c ab       	sts	0x5c, r25
    30a4:	8b ab       	sts	0x5b, r24
    30a6:	12 c0       	rjmp	.+36     	; 0x30cc <linefollwer1+0x558>
    30a8:	80 e7       	ldi	r24, 0x70	; 112
    30aa:	91 e0       	ldi	r25, 0x01	; 1
    30ac:	9e ab       	sts	0x5e, r25
    30ae:	8d ab       	sts	0x5d, r24
    30b0:	8d a9       	sts	0x4d, r24
    30b2:	9e a9       	sts	0x4e, r25
    30b4:	8c 01       	movw	r16, r24
    30b6:	c8 01       	movw	r24, r16
    30b8:	01 97       	sbiw	r24, 0x01	; 1
    30ba:	f1 f7       	brne	.-4      	; 0x30b8 <linefollwer1+0x544>
    30bc:	8c 01       	movw	r16, r24
    30be:	1e ab       	sts	0x5e, r17
    30c0:	0d ab       	sts	0x5d, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30c2:	8b a9       	sts	0x4b, r24
    30c4:	9c a9       	sts	0x4c, r25
    30c6:	01 97       	sbiw	r24, 0x01	; 1
    30c8:	9c ab       	sts	0x5c, r25
    30ca:	8b ab       	sts	0x5b, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30cc:	8b a9       	sts	0x4b, r24
    30ce:	9c a9       	sts	0x4c, r25
    30d0:	00 97       	sbiw	r24, 0x00	; 0
    30d2:	51 f7       	brne	.-44     	; 0x30a8 <linefollwer1+0x534>
    30d4:	17 c0       	rjmp	.+46     	; 0x3104 <linefollwer1+0x590>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30d6:	6f a5       	lds	r22, 0x6f
    30d8:	78 a9       	sts	0x48, r23
    30da:	89 a9       	sts	0x49, r24
    30dc:	9a a9       	sts	0x4a, r25
    30de:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    30e2:	dc 01       	movw	r26, r24
    30e4:	cb 01       	movw	r24, r22
    30e6:	9c ab       	sts	0x5c, r25
    30e8:	8b ab       	sts	0x5b, r24
    30ea:	8b a9       	sts	0x4b, r24
    30ec:	9c a9       	sts	0x4c, r25
    30ee:	98 af       	sts	0x78, r25
    30f0:	8f ab       	sts	0x5f, r24
    30f2:	8f a9       	sts	0x4f, r24
    30f4:	98 ad       	sts	0x68, r25
    30f6:	8c 01       	movw	r16, r24
    30f8:	c8 01       	movw	r24, r16
    30fa:	01 97       	sbiw	r24, 0x01	; 1
    30fc:	f1 f7       	brne	.-4      	; 0x30fa <linefollwer1+0x586>
    30fe:	8c 01       	movw	r16, r24
    3100:	18 af       	sts	0x78, r17
    3102:	0f ab       	sts	0x5f, r16
					_delay_ms(5);
					
				}
			}
			forward();
    3104:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(160,160);                      ///change
    3108:	80 ea       	ldi	r24, 0xA0	; 160
    310a:	60 ea       	ldi	r22, 0xA0	; 160
    310c:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		
		if((Center_white_line>16 && Left_white_line>16) || (Center_white_line>16 && Right_white_line>16))
    3110:	80 91 7e 04 	lds	r24, 0x047E
    3114:	81 31       	cpi	r24, 0x11	; 17
    3116:	20 f0       	brcs	.+8      	; 0x3120 <linefollwer1+0x5ac>
    3118:	80 91 7d 04 	lds	r24, 0x047D
    311c:	81 31       	cpi	r24, 0x11	; 17
    311e:	50 f4       	brcc	.+20     	; 0x3134 <linefollwer1+0x5c0>
    3120:	80 91 7e 04 	lds	r24, 0x047E
    3124:	81 31       	cpi	r24, 0x11	; 17
    3126:	08 f4       	brcc	.+2      	; 0x312a <linefollwer1+0x5b6>
    3128:	32 cd       	rjmp	.-1436   	; 0x2b8e <linefollwer1+0x1a>
    312a:	80 91 7f 04 	lds	r24, 0x047F
    312e:	81 31       	cpi	r24, 0x11	; 17
    3130:	08 f4       	brcc	.+2      	; 0x3134 <linefollwer1+0x5c0>
    3132:	2d cd       	rjmp	.-1446   	; 0x2b8e <linefollwer1+0x1a>
		{
			helper1=0;
    3134:	10 92 81 04 	sts	0x0481, r1
    3138:	10 92 80 04 	sts	0x0480, r1
			helper2=0;
    313c:	10 92 83 04 	sts	0x0483, r1
    3140:	10 92 82 04 	sts	0x0482, r1
			stop();
    3144:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
			printlcd(coor[0],coor[1]);
    3148:	80 91 a6 04 	lds	r24, 0x04A6
    314c:	90 91 a7 04 	lds	r25, 0x04A7
    3150:	20 91 a8 04 	lds	r18, 0x04A8
    3154:	30 91 a9 04 	lds	r19, 0x04A9
    3158:	b9 01       	movw	r22, r18
    315a:	0e 94 8f 10 	call	0x211e	; 0x211e <printlcd>
			break;
    315e:	00 00       	nop
		}
		
	}
}
    3160:	e8 96       	adiw	r28, 0x38	; 56
    3162:	0f b6       	in	r0, 0x3f	; 63
    3164:	f8 94       	cli
    3166:	de bf       	out	0x3e, r29	; 62
    3168:	0f be       	out	0x3f, r0	; 63
    316a:	cd bf       	out	0x3d, r28	; 61
    316c:	df 91       	pop	r29
    316e:	cf 91       	pop	r28
    3170:	1f 91       	pop	r17
    3172:	0f 91       	pop	r16
    3174:	08 95       	ret

00003176 <servo1_pin_config>:

void servo1_pin_config (void)
{
    3176:	cf 93       	push	r28
    3178:	df 93       	push	r29
    317a:	cd b7       	in	r28, 0x3d	; 61
    317c:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x20;  //making PORTB 5 pin output
    317e:	84 e2       	ldi	r24, 0x24	; 36
    3180:	90 e0       	ldi	r25, 0x00	; 0
    3182:	24 e2       	ldi	r18, 0x24	; 36
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	f9 01       	movw	r30, r18
    3188:	20 81       	ld	r18, Z
    318a:	20 62       	ori	r18, 0x20	; 32
    318c:	fc 01       	movw	r30, r24
    318e:	20 83       	st	Z, r18
 PORTB = PORTB | 0x20; //setting PORTB 5 pin to logic 1
    3190:	85 e2       	ldi	r24, 0x25	; 37
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	25 e2       	ldi	r18, 0x25	; 37
    3196:	30 e0       	ldi	r19, 0x00	; 0
    3198:	f9 01       	movw	r30, r18
    319a:	20 81       	ld	r18, Z
    319c:	20 62       	ori	r18, 0x20	; 32
    319e:	fc 01       	movw	r30, r24
    31a0:	20 83       	st	Z, r18
}
    31a2:	df 91       	pop	r29
    31a4:	cf 91       	pop	r28
    31a6:	08 95       	ret

000031a8 <servo2_pin_config>:

//Configure PORTB 6 pin for servo motor 2 operation
void servo2_pin_config (void)
{
    31a8:	cf 93       	push	r28
    31aa:	df 93       	push	r29
    31ac:	cd b7       	in	r28, 0x3d	; 61
    31ae:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x40;  //making PORTB 6 pin output
    31b0:	84 e2       	ldi	r24, 0x24	; 36
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	24 e2       	ldi	r18, 0x24	; 36
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	f9 01       	movw	r30, r18
    31ba:	20 81       	ld	r18, Z
    31bc:	20 64       	ori	r18, 0x40	; 64
    31be:	fc 01       	movw	r30, r24
    31c0:	20 83       	st	Z, r18
 PORTB = PORTB | 0x40; //setting PORTB 6 pin to logic 1
    31c2:	85 e2       	ldi	r24, 0x25	; 37
    31c4:	90 e0       	ldi	r25, 0x00	; 0
    31c6:	25 e2       	ldi	r18, 0x25	; 37
    31c8:	30 e0       	ldi	r19, 0x00	; 0
    31ca:	f9 01       	movw	r30, r18
    31cc:	20 81       	ld	r18, Z
    31ce:	20 64       	ori	r18, 0x40	; 64
    31d0:	fc 01       	movw	r30, r24
    31d2:	20 83       	st	Z, r18
}
    31d4:	df 91       	pop	r29
    31d6:	cf 91       	pop	r28
    31d8:	08 95       	ret

000031da <servo_1_free>:
//servo_free functions unlocks the servo motors from the any angle
//and make them free by giving 100% duty cycle at the PWM. This function can be used to
//reduce the power consumption of the motor if it is holding load against the gravity.

void servo_1_free (void) //makes servo 1 free rotating
{
    31da:	cf 93       	push	r28
    31dc:	df 93       	push	r29
    31de:	cd b7       	in	r28, 0x3d	; 61
    31e0:	de b7       	in	r29, 0x3e	; 62
	OCR1AH = 0x03;
    31e2:	89 e8       	ldi	r24, 0x89	; 137
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	23 e0       	ldi	r18, 0x03	; 3
    31e8:	fc 01       	movw	r30, r24
    31ea:	20 83       	st	Z, r18
	OCR1AL = 0xFF; //Servo 1 off
    31ec:	88 e8       	ldi	r24, 0x88	; 136
    31ee:	90 e0       	ldi	r25, 0x00	; 0
    31f0:	2f ef       	ldi	r18, 0xFF	; 255
    31f2:	fc 01       	movw	r30, r24
    31f4:	20 83       	st	Z, r18
}
    31f6:	df 91       	pop	r29
    31f8:	cf 91       	pop	r28
    31fa:	08 95       	ret

000031fc <servo_2_free>:

void servo_2_free (void) //makes servo 2 free rotating
{
    31fc:	cf 93       	push	r28
    31fe:	df 93       	push	r29
    3200:	cd b7       	in	r28, 0x3d	; 61
    3202:	de b7       	in	r29, 0x3e	; 62
	OCR1BH = 0x03;
    3204:	8b e8       	ldi	r24, 0x8B	; 139
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	23 e0       	ldi	r18, 0x03	; 3
    320a:	fc 01       	movw	r30, r24
    320c:	20 83       	st	Z, r18
	OCR1BL = 0xFF; //Servo 2 off
    320e:	8a e8       	ldi	r24, 0x8A	; 138
    3210:	90 e0       	ldi	r25, 0x00	; 0
    3212:	2f ef       	ldi	r18, 0xFF	; 255
    3214:	fc 01       	movw	r30, r24
    3216:	20 83       	st	Z, r18
}
    3218:	df 91       	pop	r29
    321a:	cf 91       	pop	r28
    321c:	08 95       	ret

0000321e <uart2_init>:

unsigned char data;

void uart2_init(void)
{
    321e:	cf 93       	push	r28
    3220:	df 93       	push	r29
    3222:	cd b7       	in	r28, 0x3d	; 61
    3224:	de b7       	in	r29, 0x3e	; 62
	UCSR2B = 0x00; //disable while setting baud rate
    3226:	81 ed       	ldi	r24, 0xD1	; 209
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	fc 01       	movw	r30, r24
    322c:	10 82       	st	Z, r1
	UCSR2A = 0x00;
    322e:	80 ed       	ldi	r24, 0xD0	; 208
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	fc 01       	movw	r30, r24
    3234:	10 82       	st	Z, r1
	UCSR2C = 0x06;
    3236:	82 ed       	ldi	r24, 0xD2	; 210
    3238:	90 e0       	ldi	r25, 0x00	; 0
    323a:	26 e0       	ldi	r18, 0x06	; 6
    323c:	fc 01       	movw	r30, r24
    323e:	20 83       	st	Z, r18
	UBRR2L = 0x5F; //set baud rate lo
    3240:	84 ed       	ldi	r24, 0xD4	; 212
    3242:	90 e0       	ldi	r25, 0x00	; 0
    3244:	2f e5       	ldi	r18, 0x5F	; 95
    3246:	fc 01       	movw	r30, r24
    3248:	20 83       	st	Z, r18
	UBRR2H = 0x00; //set baud rate hi
    324a:	85 ed       	ldi	r24, 0xD5	; 213
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	fc 01       	movw	r30, r24
    3250:	10 82       	st	Z, r1
	UCSR2B = 0x98;
    3252:	81 ed       	ldi	r24, 0xD1	; 209
    3254:	90 e0       	ldi	r25, 0x00	; 0
    3256:	28 e9       	ldi	r18, 0x98	; 152
    3258:	fc 01       	movw	r30, r24
    325a:	20 83       	st	Z, r18
}
    325c:	df 91       	pop	r29
    325e:	cf 91       	pop	r28
    3260:	08 95       	ret

00003262 <__vector_51>:
int D1[12];              ///// change
int D2[4][4];	      ///// change
int summ1[12];          ////  change

SIGNAL(SIG_USART2_RECV) 		// ISR for receive complete interrupt
{
    3262:	1f 92       	push	r1
    3264:	0f 92       	push	r0
    3266:	0f b6       	in	r0, 0x3f	; 63
    3268:	0f 92       	push	r0
    326a:	00 90 5b 00 	lds	r0, 0x005B
    326e:	0f 92       	push	r0
    3270:	11 24       	eor	r1, r1
    3272:	ef 92       	push	r14
    3274:	ff 92       	push	r15
    3276:	0f 93       	push	r16
    3278:	1f 93       	push	r17
    327a:	2f 93       	push	r18
    327c:	3f 93       	push	r19
    327e:	4f 93       	push	r20
    3280:	5f 93       	push	r21
    3282:	6f 93       	push	r22
    3284:	7f 93       	push	r23
    3286:	8f 93       	push	r24
    3288:	9f 93       	push	r25
    328a:	af 93       	push	r26
    328c:	bf 93       	push	r27
    328e:	ef 93       	push	r30
    3290:	ff 93       	push	r31
    3292:	cf 93       	push	r28
    3294:	df 93       	push	r29
    3296:	cd b7       	in	r28, 0x3d	; 61
    3298:	de b7       	in	r29, 0x3e	; 62
    329a:	c4 54       	subi	r28, 0x44	; 68
    329c:	d0 40       	sbci	r29, 0x00	; 0
    329e:	de bf       	out	0x3e, r29	; 62
    32a0:	cd bf       	out	0x3d, r28	; 61
	{
		summ1[i-12-(2*y)]=data-64;
	}
	i=i+1;
	
}
    32a2:	2d b7       	in	r18, 0x3d	; 61
    32a4:	3e b7       	in	r19, 0x3e	; 62
int D1[12];              ///// change
int D2[4][4];	      ///// change
int summ1[12];          ////  change

SIGNAL(SIG_USART2_RECV) 		// ISR for receive complete interrupt
{
    32a6:	8d b7       	in	r24, 0x3d	; 61
    32a8:	9e b7       	in	r25, 0x3e	; 62
    32aa:	ac 01       	movw	r20, r24
	data = UDR2; 				//making copy of data from UDR2 in 'data' variable
    32ac:	86 ed       	ldi	r24, 0xD6	; 214
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	fc 01       	movw	r30, r24
    32b2:	80 81       	ld	r24, Z
    32b4:	80 93 cc 04 	sts	0x04CC, r24

	UDR2 = data; 			//echo data back to PC
    32b8:	86 ed       	ldi	r24, 0xD6	; 214
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	60 91 cc 04 	lds	r22, 0x04CC
    32c0:	fc 01       	movw	r30, r24
    32c2:	60 83       	st	Z, r22
	
	int i=0,y,z,a[12];
    32c4:	1e 82       	std	Y+6, r1	; 0x06
    32c6:	1d 82       	std	Y+5, r1	; 0x05
	if(i<12)
    32c8:	8d 81       	ldd	r24, Y+5	; 0x05
    32ca:	9e 81       	ldd	r25, Y+6	; 0x06
    32cc:	8c 30       	cpi	r24, 0x0C	; 12
    32ce:	91 05       	cpc	r25, r1
    32d0:	84 f4       	brge	.+32     	; 0x32f2 <__vector_51+0x90>
	{
		D1[i]=data-64;
    32d2:	80 91 cc 04 	lds	r24, 0x04CC
    32d6:	88 2f       	mov	r24, r24
    32d8:	90 e0       	ldi	r25, 0x00	; 0
    32da:	bc 01       	movw	r22, r24
    32dc:	60 54       	subi	r22, 0x40	; 64
    32de:	70 40       	sbci	r23, 0x00	; 0
    32e0:	8d 81       	ldd	r24, Y+5	; 0x05
    32e2:	9e 81       	ldd	r25, Y+6	; 0x06
    32e4:	88 0f       	add	r24, r24
    32e6:	99 1f       	adc	r25, r25
    32e8:	8d 52       	subi	r24, 0x2D	; 45
    32ea:	9b 4f       	sbci	r25, 0xFB	; 251
    32ec:	fc 01       	movw	r30, r24
    32ee:	71 83       	std	Z+1, r23	; 0x01
    32f0:	60 83       	st	Z, r22
	}
	
	if(i==12)
    32f2:	8d 81       	ldd	r24, Y+5	; 0x05
    32f4:	9e 81       	ldd	r25, Y+6	; 0x06
    32f6:	8c 30       	cpi	r24, 0x0C	; 12
    32f8:	91 05       	cpc	r25, r1
    32fa:	69 f4       	brne	.+26     	; 0x3316 <__vector_51+0xb4>
	y=((data-64)/2);
    32fc:	80 91 cc 04 	lds	r24, 0x04CC
    3300:	88 2f       	mov	r24, r24
    3302:	90 e0       	ldi	r25, 0x00	; 0
    3304:	80 54       	subi	r24, 0x40	; 64
    3306:	90 40       	sbci	r25, 0x00	; 0
    3308:	99 23       	and	r25, r25
    330a:	0c f4       	brge	.+2      	; 0x330e <__vector_51+0xac>
    330c:	01 96       	adiw	r24, 0x01	; 1
    330e:	95 95       	asr	r25
    3310:	87 95       	ror	r24
    3312:	9a 83       	std	Y+2, r25	; 0x02
    3314:	89 83       	std	Y+1, r24	; 0x01
	z=y;
    3316:	89 81       	ldd	r24, Y+1	; 0x01
    3318:	9a 81       	ldd	r25, Y+2	; 0x02
    331a:	98 87       	std	Y+8, r25	; 0x08
    331c:	8f 83       	std	Y+7, r24	; 0x07
	
	int D2[2][z], count=1;
    331e:	8f 81       	ldd	r24, Y+7	; 0x07
    3320:	98 85       	ldd	r25, Y+8	; 0x08
    3322:	bc 01       	movw	r22, r24
    3324:	61 50       	subi	r22, 0x01	; 1
    3326:	70 40       	sbci	r23, 0x00	; 0
    3328:	7a 87       	std	Y+10, r23	; 0x0a
    332a:	69 87       	std	Y+9, r22	; 0x09
    332c:	bc 01       	movw	r22, r24
    332e:	7b 01       	movw	r14, r22
    3330:	ee 0c       	add	r14, r14
    3332:	ff 1c       	adc	r15, r15
    3334:	88 0f       	add	r24, r24
    3336:	99 1f       	adc	r25, r25
    3338:	88 0f       	add	r24, r24
    333a:	99 1f       	adc	r25, r25
    333c:	6d b7       	in	r22, 0x3d	; 61
    333e:	7e b7       	in	r23, 0x3e	; 62
    3340:	68 1b       	sub	r22, r24
    3342:	79 0b       	sbc	r23, r25
    3344:	0f b6       	in	r0, 0x3f	; 63
    3346:	f8 94       	cli
    3348:	7e bf       	out	0x3e, r23	; 62
    334a:	0f be       	out	0x3f, r0	; 63
    334c:	6d bf       	out	0x3d, r22	; 61
    334e:	8d b7       	in	r24, 0x3d	; 61
    3350:	9e b7       	in	r25, 0x3e	; 62
    3352:	01 96       	adiw	r24, 0x01	; 1
    3354:	00 96       	adiw	r24, 0x00	; 0
    3356:	9c 87       	std	Y+12, r25	; 0x0c
    3358:	8b 87       	std	Y+11, r24	; 0x0b
    335a:	81 e0       	ldi	r24, 0x01	; 1
    335c:	90 e0       	ldi	r25, 0x00	; 0
    335e:	9c 83       	std	Y+4, r25	; 0x04
    3360:	8b 83       	std	Y+3, r24	; 0x03
	if(i>12)
    3362:	8d 81       	ldd	r24, Y+5	; 0x05
    3364:	9e 81       	ldd	r25, Y+6	; 0x06
    3366:	8d 30       	cpi	r24, 0x0D	; 13
    3368:	91 05       	cpc	r25, r1
    336a:	9c f1       	brlt	.+102    	; 0x33d2 <__vector_51+0x170>
	{
		if(count>=0)
    336c:	8b 81       	ldd	r24, Y+3	; 0x03
    336e:	9c 81       	ldd	r25, Y+4	; 0x04
    3370:	99 23       	and	r25, r25
    3372:	14 f1       	brlt	.+68     	; 0x33b8 <__vector_51+0x156>
		{
			//b[i-12]=data-64;
			D2[count][y]=data-64;
    3374:	80 91 cc 04 	lds	r24, 0x04CC
    3378:	88 2f       	mov	r24, r24
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	bc 01       	movw	r22, r24
    337e:	60 54       	subi	r22, 0x40	; 64
    3380:	70 40       	sbci	r23, 0x00	; 0
    3382:	eb 85       	ldd	r30, Y+11	; 0x0b
    3384:	fc 85       	ldd	r31, Y+12	; 0x0c
    3386:	a9 81       	ldd	r26, Y+1	; 0x01
    3388:	ba 81       	ldd	r27, Y+2	; 0x02
    338a:	0b 81       	ldd	r16, Y+3	; 0x03
    338c:	1c 81       	ldd	r17, Y+4	; 0x04
    338e:	e0 9e       	mul	r14, r16
    3390:	c0 01       	movw	r24, r0
    3392:	e1 9e       	mul	r14, r17
    3394:	90 0d       	add	r25, r0
    3396:	f0 9e       	mul	r15, r16
    3398:	90 0d       	add	r25, r0
    339a:	11 24       	eor	r1, r1
    339c:	aa 0f       	add	r26, r26
    339e:	bb 1f       	adc	r27, r27
    33a0:	8a 0f       	add	r24, r26
    33a2:	9b 1f       	adc	r25, r27
    33a4:	8e 0f       	add	r24, r30
    33a6:	9f 1f       	adc	r25, r31
    33a8:	fc 01       	movw	r30, r24
    33aa:	71 83       	std	Z+1, r23	; 0x01
    33ac:	60 83       	st	Z, r22
			count-=1;
    33ae:	8b 81       	ldd	r24, Y+3	; 0x03
    33b0:	9c 81       	ldd	r25, Y+4	; 0x04
    33b2:	01 97       	sbiw	r24, 0x01	; 1
    33b4:	9c 83       	std	Y+4, r25	; 0x04
    33b6:	8b 83       	std	Y+3, r24	; 0x03
		}
		if(count<0)
    33b8:	8b 81       	ldd	r24, Y+3	; 0x03
    33ba:	9c 81       	ldd	r25, Y+4	; 0x04
    33bc:	99 23       	and	r25, r25
    33be:	4c f4       	brge	.+18     	; 0x33d2 <__vector_51+0x170>
		{
			y=y-1;
    33c0:	89 81       	ldd	r24, Y+1	; 0x01
    33c2:	9a 81       	ldd	r25, Y+2	; 0x02
    33c4:	01 97       	sbiw	r24, 0x01	; 1
    33c6:	9a 83       	std	Y+2, r25	; 0x02
    33c8:	89 83       	std	Y+1, r24	; 0x01
			count=1;
    33ca:	81 e0       	ldi	r24, 0x01	; 1
    33cc:	90 e0       	ldi	r25, 0x00	; 0
    33ce:	9c 83       	std	Y+4, r25	; 0x04
    33d0:	8b 83       	std	Y+3, r24	; 0x03
		}
	}
	int summ1[16];
	if(i>12+y)
    33d2:	89 81       	ldd	r24, Y+1	; 0x01
    33d4:	9a 81       	ldd	r25, Y+2	; 0x02
    33d6:	bc 01       	movw	r22, r24
    33d8:	64 5f       	subi	r22, 0xF4	; 244
    33da:	7f 4f       	sbci	r23, 0xFF	; 255
    33dc:	8d 81       	ldd	r24, Y+5	; 0x05
    33de:	9e 81       	ldd	r25, Y+6	; 0x06
    33e0:	68 17       	cp	r22, r24
    33e2:	79 07       	cpc	r23, r25
    33e4:	fc f4       	brge	.+62     	; 0x3424 <__vector_51+0x1c2>
	{
		summ1[i-12-(2*y)]=data-64;
    33e6:	8d 81       	ldd	r24, Y+5	; 0x05
    33e8:	9e 81       	ldd	r25, Y+6	; 0x06
    33ea:	bc 01       	movw	r22, r24
    33ec:	6c 50       	subi	r22, 0x0C	; 12
    33ee:	70 40       	sbci	r23, 0x00	; 0
    33f0:	e9 81       	ldd	r30, Y+1	; 0x01
    33f2:	fa 81       	ldd	r31, Y+2	; 0x02
    33f4:	80 e0       	ldi	r24, 0x00	; 0
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	8e 1b       	sub	r24, r30
    33fa:	9f 0b       	sbc	r25, r31
    33fc:	88 0f       	add	r24, r24
    33fe:	99 1f       	adc	r25, r25
    3400:	86 0f       	add	r24, r22
    3402:	97 1f       	adc	r25, r23
    3404:	60 91 cc 04 	lds	r22, 0x04CC
    3408:	66 2f       	mov	r22, r22
    340a:	70 e0       	ldi	r23, 0x00	; 0
    340c:	60 54       	subi	r22, 0x40	; 64
    340e:	70 40       	sbci	r23, 0x00	; 0
    3410:	88 0f       	add	r24, r24
    3412:	99 1f       	adc	r25, r25
    3414:	fe 01       	movw	r30, r28
    3416:	31 96       	adiw	r30, 0x01	; 1
    3418:	8e 0f       	add	r24, r30
    341a:	9f 1f       	adc	r25, r31
    341c:	84 96       	adiw	r24, 0x24	; 36
    341e:	fc 01       	movw	r30, r24
    3420:	71 83       	std	Z+1, r23	; 0x01
    3422:	60 83       	st	Z, r22
	}
	i=i+1;
    3424:	8d 81       	ldd	r24, Y+5	; 0x05
    3426:	9e 81       	ldd	r25, Y+6	; 0x06
    3428:	01 96       	adiw	r24, 0x01	; 1
    342a:	9e 83       	std	Y+6, r25	; 0x06
    342c:	8d 83       	std	Y+5, r24	; 0x05
    342e:	0f b6       	in	r0, 0x3f	; 63
    3430:	f8 94       	cli
    3432:	5e bf       	out	0x3e, r21	; 62
    3434:	0f be       	out	0x3f, r0	; 63
    3436:	4d bf       	out	0x3d, r20	; 61
	
}
    3438:	0f b6       	in	r0, 0x3f	; 63
    343a:	f8 94       	cli
    343c:	3e bf       	out	0x3e, r19	; 62
    343e:	0f be       	out	0x3f, r0	; 63
    3440:	2d bf       	out	0x3d, r18	; 61
    3442:	cc 5b       	subi	r28, 0xBC	; 188
    3444:	df 4f       	sbci	r29, 0xFF	; 255
    3446:	de bf       	out	0x3e, r29	; 62
    3448:	cd bf       	out	0x3d, r28	; 61
    344a:	df 91       	pop	r29
    344c:	cf 91       	pop	r28
    344e:	ff 91       	pop	r31
    3450:	ef 91       	pop	r30
    3452:	bf 91       	pop	r27
    3454:	af 91       	pop	r26
    3456:	9f 91       	pop	r25
    3458:	8f 91       	pop	r24
    345a:	7f 91       	pop	r23
    345c:	6f 91       	pop	r22
    345e:	5f 91       	pop	r21
    3460:	4f 91       	pop	r20
    3462:	3f 91       	pop	r19
    3464:	2f 91       	pop	r18
    3466:	1f 91       	pop	r17
    3468:	0f 91       	pop	r16
    346a:	ff 90       	pop	r15
    346c:	ef 90       	pop	r14
    346e:	0f 90       	pop	r0
    3470:	00 92 5b 00 	sts	0x005B, r0
    3474:	0f 90       	pop	r0
    3476:	0f be       	out	0x3f, r0	; 63
    3478:	0f 90       	pop	r0
    347a:	1f 90       	pop	r1
    347c:	18 95       	reti

0000347e <matrix1>:
unsigned char iii = 0;
unsigned char jjj = 0;
unsigned char kkk= 0;

void matrix1()
{    
    347e:	0f 93       	push	r16
    3480:	1f 93       	push	r17
    3482:	cf 93       	push	r28
    3484:	df 93       	push	r29
    3486:	cd b7       	in	r28, 0x3d	; 61
    3488:	de b7       	in	r29, 0x3e	; 62
    348a:	aa 97       	sbiw	r28, 0x2a	; 42
    348c:	0f b6       	in	r0, 0x3f	; 63
    348e:	f8 94       	cli
    3490:	de bf       	out	0x3e, r29	; 62
    3492:	0f be       	out	0x3f, r0	; 63
    3494:	cd bf       	out	0x3d, r28	; 61
	 for(jjj=0;jjj<65;jjj++)     ///////////////////////////////// arm down
    3496:	10 92 85 04 	sts	0x0485, r1
    349a:	89 c0       	rjmp	.+274    	; 0x35ae <matrix1+0x130>
	 {
		 servo_1(jjj);
    349c:	80 91 85 04 	lds	r24, 0x0485
    34a0:	0e 94 44 0c 	call	0x1888	; 0x1888 <servo_1>
    34a4:	80 e0       	ldi	r24, 0x00	; 0
    34a6:	90 e0       	ldi	r25, 0x00	; 0
    34a8:	a0 ef       	ldi	r26, 0xF0	; 240
    34aa:	b1 e4       	ldi	r27, 0x41	; 65
    34ac:	89 83       	std	Y+1, r24	; 0x01
    34ae:	9a 83       	std	Y+2, r25	; 0x02
    34b0:	ab 83       	std	Y+3, r26	; 0x03
    34b2:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    34b4:	69 81       	ldd	r22, Y+1	; 0x01
    34b6:	7a 81       	ldd	r23, Y+2	; 0x02
    34b8:	8b 81       	ldd	r24, Y+3	; 0x03
    34ba:	9c 81       	ldd	r25, Y+4	; 0x04
    34bc:	26 e6       	ldi	r18, 0x66	; 102
    34be:	36 e6       	ldi	r19, 0x66	; 102
    34c0:	46 e6       	ldi	r20, 0x66	; 102
    34c2:	55 e4       	ldi	r21, 0x45	; 69
    34c4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    34c8:	dc 01       	movw	r26, r24
    34ca:	cb 01       	movw	r24, r22
    34cc:	8d 83       	std	Y+5, r24	; 0x05
    34ce:	9e 83       	std	Y+6, r25	; 0x06
    34d0:	af 83       	std	Y+7, r26	; 0x07
    34d2:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    34d4:	11 e0       	ldi	r17, 0x01	; 1
    34d6:	6d 81       	ldd	r22, Y+5	; 0x05
    34d8:	7e 81       	ldd	r23, Y+6	; 0x06
    34da:	8f 81       	ldd	r24, Y+7	; 0x07
    34dc:	98 85       	ldd	r25, Y+8	; 0x08
    34de:	20 e0       	ldi	r18, 0x00	; 0
    34e0:	30 e0       	ldi	r19, 0x00	; 0
    34e2:	40 e8       	ldi	r20, 0x80	; 128
    34e4:	5f e3       	ldi	r21, 0x3F	; 63
    34e6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    34ea:	88 23       	and	r24, r24
    34ec:	0c f0       	brlt	.+2      	; 0x34f0 <matrix1+0x72>
    34ee:	10 e0       	ldi	r17, 0x00	; 0
    34f0:	11 23       	and	r17, r17
    34f2:	29 f0       	breq	.+10     	; 0x34fe <matrix1+0x80>
		__ticks = 1;
    34f4:	81 e0       	ldi	r24, 0x01	; 1
    34f6:	90 e0       	ldi	r25, 0x00	; 0
    34f8:	9a 87       	std	Y+10, r25	; 0x0a
    34fa:	89 87       	std	Y+9, r24	; 0x09
    34fc:	46 c0       	rjmp	.+140    	; 0x358a <matrix1+0x10c>
	else if (__tmp > 65535)
    34fe:	11 e0       	ldi	r17, 0x01	; 1
    3500:	6d 81       	ldd	r22, Y+5	; 0x05
    3502:	7e 81       	ldd	r23, Y+6	; 0x06
    3504:	8f 81       	ldd	r24, Y+7	; 0x07
    3506:	98 85       	ldd	r25, Y+8	; 0x08
    3508:	20 e0       	ldi	r18, 0x00	; 0
    350a:	3f ef       	ldi	r19, 0xFF	; 255
    350c:	4f e7       	ldi	r20, 0x7F	; 127
    350e:	57 e4       	ldi	r21, 0x47	; 71
    3510:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3514:	18 16       	cp	r1, r24
    3516:	0c f0       	brlt	.+2      	; 0x351a <matrix1+0x9c>
    3518:	10 e0       	ldi	r17, 0x00	; 0
    351a:	11 23       	and	r17, r17
    351c:	61 f1       	breq	.+88     	; 0x3576 <matrix1+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    351e:	69 81       	ldd	r22, Y+1	; 0x01
    3520:	7a 81       	ldd	r23, Y+2	; 0x02
    3522:	8b 81       	ldd	r24, Y+3	; 0x03
    3524:	9c 81       	ldd	r25, Y+4	; 0x04
    3526:	20 e0       	ldi	r18, 0x00	; 0
    3528:	30 e0       	ldi	r19, 0x00	; 0
    352a:	40 e2       	ldi	r20, 0x20	; 32
    352c:	51 e4       	ldi	r21, 0x41	; 65
    352e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3532:	dc 01       	movw	r26, r24
    3534:	cb 01       	movw	r24, r22
    3536:	bc 01       	movw	r22, r24
    3538:	cd 01       	movw	r24, r26
    353a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    353e:	dc 01       	movw	r26, r24
    3540:	cb 01       	movw	r24, r22
    3542:	9a 87       	std	Y+10, r25	; 0x0a
    3544:	89 87       	std	Y+9, r24	; 0x09
    3546:	12 c0       	rjmp	.+36     	; 0x356c <matrix1+0xee>
    3548:	80 e7       	ldi	r24, 0x70	; 112
    354a:	91 e0       	ldi	r25, 0x01	; 1
    354c:	9c 87       	std	Y+12, r25	; 0x0c
    354e:	8b 87       	std	Y+11, r24	; 0x0b
    3550:	8b 85       	ldd	r24, Y+11	; 0x0b
    3552:	9c 85       	ldd	r25, Y+12	; 0x0c
    3554:	8c 01       	movw	r16, r24
    3556:	c8 01       	movw	r24, r16
    3558:	01 97       	sbiw	r24, 0x01	; 1
    355a:	f1 f7       	brne	.-4      	; 0x3558 <matrix1+0xda>
    355c:	8c 01       	movw	r16, r24
    355e:	1c 87       	std	Y+12, r17	; 0x0c
    3560:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3562:	89 85       	ldd	r24, Y+9	; 0x09
    3564:	9a 85       	ldd	r25, Y+10	; 0x0a
    3566:	01 97       	sbiw	r24, 0x01	; 1
    3568:	9a 87       	std	Y+10, r25	; 0x0a
    356a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    356c:	89 85       	ldd	r24, Y+9	; 0x09
    356e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3570:	00 97       	sbiw	r24, 0x00	; 0
    3572:	51 f7       	brne	.-44     	; 0x3548 <matrix1+0xca>
    3574:	17 c0       	rjmp	.+46     	; 0x35a4 <matrix1+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3576:	6d 81       	ldd	r22, Y+5	; 0x05
    3578:	7e 81       	ldd	r23, Y+6	; 0x06
    357a:	8f 81       	ldd	r24, Y+7	; 0x07
    357c:	98 85       	ldd	r25, Y+8	; 0x08
    357e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3582:	dc 01       	movw	r26, r24
    3584:	cb 01       	movw	r24, r22
    3586:	9a 87       	std	Y+10, r25	; 0x0a
    3588:	89 87       	std	Y+9, r24	; 0x09
    358a:	89 85       	ldd	r24, Y+9	; 0x09
    358c:	9a 85       	ldd	r25, Y+10	; 0x0a
    358e:	9e 87       	std	Y+14, r25	; 0x0e
    3590:	8d 87       	std	Y+13, r24	; 0x0d
    3592:	8d 85       	ldd	r24, Y+13	; 0x0d
    3594:	9e 85       	ldd	r25, Y+14	; 0x0e
    3596:	8c 01       	movw	r16, r24
    3598:	c8 01       	movw	r24, r16
    359a:	01 97       	sbiw	r24, 0x01	; 1
    359c:	f1 f7       	brne	.-4      	; 0x359a <matrix1+0x11c>
    359e:	8c 01       	movw	r16, r24
    35a0:	1e 87       	std	Y+14, r17	; 0x0e
    35a2:	0d 87       	std	Y+13, r16	; 0x0d
unsigned char jjj = 0;
unsigned char kkk= 0;

void matrix1()
{    
	 for(jjj=0;jjj<65;jjj++)     ///////////////////////////////// arm down
    35a4:	80 91 85 04 	lds	r24, 0x0485
    35a8:	8f 5f       	subi	r24, 0xFF	; 255
    35aa:	80 93 85 04 	sts	0x0485, r24
    35ae:	80 91 85 04 	lds	r24, 0x0485
    35b2:	81 34       	cpi	r24, 0x41	; 65
    35b4:	08 f4       	brcc	.+2      	; 0x35b8 <matrix1+0x13a>
    35b6:	72 cf       	rjmp	.-284    	; 0x349c <matrix1+0x1e>
	 {
		 servo_1(jjj);
		 _delay_ms(30);
	 }
	 
	 for (iii=65; iii>15; iii--)  ////////////////////////////// gripper grip
    35b8:	81 e4       	ldi	r24, 0x41	; 65
    35ba:	80 93 84 04 	sts	0x0484, r24
    35be:	89 c0       	rjmp	.+274    	; 0x36d2 <matrix1+0x254>
	 {
		 servo_2(iii);
    35c0:	80 91 84 04 	lds	r24, 0x0484
    35c4:	0e 94 92 0c 	call	0x1924	; 0x1924 <servo_2>
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	90 e0       	ldi	r25, 0x00	; 0
    35cc:	a0 ef       	ldi	r26, 0xF0	; 240
    35ce:	b1 e4       	ldi	r27, 0x41	; 65
    35d0:	8f 87       	std	Y+15, r24	; 0x0f
    35d2:	98 8b       	std	Y+16, r25	; 0x10
    35d4:	a9 8b       	std	Y+17, r26	; 0x11
    35d6:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    35d8:	6f 85       	ldd	r22, Y+15	; 0x0f
    35da:	78 89       	ldd	r23, Y+16	; 0x10
    35dc:	89 89       	ldd	r24, Y+17	; 0x11
    35de:	9a 89       	ldd	r25, Y+18	; 0x12
    35e0:	26 e6       	ldi	r18, 0x66	; 102
    35e2:	36 e6       	ldi	r19, 0x66	; 102
    35e4:	46 e6       	ldi	r20, 0x66	; 102
    35e6:	55 e4       	ldi	r21, 0x45	; 69
    35e8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    35ec:	dc 01       	movw	r26, r24
    35ee:	cb 01       	movw	r24, r22
    35f0:	8b 8b       	std	Y+19, r24	; 0x13
    35f2:	9c 8b       	std	Y+20, r25	; 0x14
    35f4:	ad 8b       	std	Y+21, r26	; 0x15
    35f6:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    35f8:	11 e0       	ldi	r17, 0x01	; 1
    35fa:	6b 89       	ldd	r22, Y+19	; 0x13
    35fc:	7c 89       	ldd	r23, Y+20	; 0x14
    35fe:	8d 89       	ldd	r24, Y+21	; 0x15
    3600:	9e 89       	ldd	r25, Y+22	; 0x16
    3602:	20 e0       	ldi	r18, 0x00	; 0
    3604:	30 e0       	ldi	r19, 0x00	; 0
    3606:	40 e8       	ldi	r20, 0x80	; 128
    3608:	5f e3       	ldi	r21, 0x3F	; 63
    360a:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    360e:	88 23       	and	r24, r24
    3610:	0c f0       	brlt	.+2      	; 0x3614 <matrix1+0x196>
    3612:	10 e0       	ldi	r17, 0x00	; 0
    3614:	11 23       	and	r17, r17
    3616:	29 f0       	breq	.+10     	; 0x3622 <matrix1+0x1a4>
		__ticks = 1;
    3618:	81 e0       	ldi	r24, 0x01	; 1
    361a:	90 e0       	ldi	r25, 0x00	; 0
    361c:	98 8f       	std	Y+24, r25	; 0x18
    361e:	8f 8b       	std	Y+23, r24	; 0x17
    3620:	46 c0       	rjmp	.+140    	; 0x36ae <matrix1+0x230>
	else if (__tmp > 65535)
    3622:	11 e0       	ldi	r17, 0x01	; 1
    3624:	6b 89       	ldd	r22, Y+19	; 0x13
    3626:	7c 89       	ldd	r23, Y+20	; 0x14
    3628:	8d 89       	ldd	r24, Y+21	; 0x15
    362a:	9e 89       	ldd	r25, Y+22	; 0x16
    362c:	20 e0       	ldi	r18, 0x00	; 0
    362e:	3f ef       	ldi	r19, 0xFF	; 255
    3630:	4f e7       	ldi	r20, 0x7F	; 127
    3632:	57 e4       	ldi	r21, 0x47	; 71
    3634:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3638:	18 16       	cp	r1, r24
    363a:	0c f0       	brlt	.+2      	; 0x363e <matrix1+0x1c0>
    363c:	10 e0       	ldi	r17, 0x00	; 0
    363e:	11 23       	and	r17, r17
    3640:	61 f1       	breq	.+88     	; 0x369a <matrix1+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3642:	6f 85       	ldd	r22, Y+15	; 0x0f
    3644:	78 89       	ldd	r23, Y+16	; 0x10
    3646:	89 89       	ldd	r24, Y+17	; 0x11
    3648:	9a 89       	ldd	r25, Y+18	; 0x12
    364a:	20 e0       	ldi	r18, 0x00	; 0
    364c:	30 e0       	ldi	r19, 0x00	; 0
    364e:	40 e2       	ldi	r20, 0x20	; 32
    3650:	51 e4       	ldi	r21, 0x41	; 65
    3652:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3656:	dc 01       	movw	r26, r24
    3658:	cb 01       	movw	r24, r22
    365a:	bc 01       	movw	r22, r24
    365c:	cd 01       	movw	r24, r26
    365e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3662:	dc 01       	movw	r26, r24
    3664:	cb 01       	movw	r24, r22
    3666:	98 8f       	std	Y+24, r25	; 0x18
    3668:	8f 8b       	std	Y+23, r24	; 0x17
    366a:	12 c0       	rjmp	.+36     	; 0x3690 <matrix1+0x212>
    366c:	80 e7       	ldi	r24, 0x70	; 112
    366e:	91 e0       	ldi	r25, 0x01	; 1
    3670:	9a 8f       	std	Y+26, r25	; 0x1a
    3672:	89 8f       	std	Y+25, r24	; 0x19
    3674:	89 8d       	ldd	r24, Y+25	; 0x19
    3676:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3678:	8c 01       	movw	r16, r24
    367a:	c8 01       	movw	r24, r16
    367c:	01 97       	sbiw	r24, 0x01	; 1
    367e:	f1 f7       	brne	.-4      	; 0x367c <matrix1+0x1fe>
    3680:	8c 01       	movw	r16, r24
    3682:	1a 8f       	std	Y+26, r17	; 0x1a
    3684:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3686:	8f 89       	ldd	r24, Y+23	; 0x17
    3688:	98 8d       	ldd	r25, Y+24	; 0x18
    368a:	01 97       	sbiw	r24, 0x01	; 1
    368c:	98 8f       	std	Y+24, r25	; 0x18
    368e:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3690:	8f 89       	ldd	r24, Y+23	; 0x17
    3692:	98 8d       	ldd	r25, Y+24	; 0x18
    3694:	00 97       	sbiw	r24, 0x00	; 0
    3696:	51 f7       	brne	.-44     	; 0x366c <matrix1+0x1ee>
    3698:	17 c0       	rjmp	.+46     	; 0x36c8 <matrix1+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    369a:	6b 89       	ldd	r22, Y+19	; 0x13
    369c:	7c 89       	ldd	r23, Y+20	; 0x14
    369e:	8d 89       	ldd	r24, Y+21	; 0x15
    36a0:	9e 89       	ldd	r25, Y+22	; 0x16
    36a2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    36a6:	dc 01       	movw	r26, r24
    36a8:	cb 01       	movw	r24, r22
    36aa:	98 8f       	std	Y+24, r25	; 0x18
    36ac:	8f 8b       	std	Y+23, r24	; 0x17
    36ae:	8f 89       	ldd	r24, Y+23	; 0x17
    36b0:	98 8d       	ldd	r25, Y+24	; 0x18
    36b2:	9c 8f       	std	Y+28, r25	; 0x1c
    36b4:	8b 8f       	std	Y+27, r24	; 0x1b
    36b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36ba:	8c 01       	movw	r16, r24
    36bc:	c8 01       	movw	r24, r16
    36be:	01 97       	sbiw	r24, 0x01	; 1
    36c0:	f1 f7       	brne	.-4      	; 0x36be <matrix1+0x240>
    36c2:	8c 01       	movw	r16, r24
    36c4:	1c 8f       	std	Y+28, r17	; 0x1c
    36c6:	0b 8f       	std	Y+27, r16	; 0x1b
	 {
		 servo_1(jjj);
		 _delay_ms(30);
	 }
	 
	 for (iii=65; iii>15; iii--)  ////////////////////////////// gripper grip
    36c8:	80 91 84 04 	lds	r24, 0x0484
    36cc:	81 50       	subi	r24, 0x01	; 1
    36ce:	80 93 84 04 	sts	0x0484, r24
    36d2:	80 91 84 04 	lds	r24, 0x0484
    36d6:	80 31       	cpi	r24, 0x10	; 16
    36d8:	08 f0       	brcs	.+2      	; 0x36dc <matrix1+0x25e>
    36da:	72 cf       	rjmp	.-284    	; 0x35c0 <matrix1+0x142>
	 {
		 servo_2(iii);
		 _delay_ms(30);
	 }
	 
	 for(jjj=55;jjj>0;jjj--)    ////////////////////////////////  arm up
    36dc:	87 e3       	ldi	r24, 0x37	; 55
    36de:	80 93 85 04 	sts	0x0485, r24
    36e2:	89 c0       	rjmp	.+274    	; 0x37f6 <matrix1+0x378>
	 {
		 servo_1(jjj);
    36e4:	80 91 85 04 	lds	r24, 0x0485
    36e8:	0e 94 44 0c 	call	0x1888	; 0x1888 <servo_1>
    36ec:	80 e0       	ldi	r24, 0x00	; 0
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	a0 ef       	ldi	r26, 0xF0	; 240
    36f2:	b1 e4       	ldi	r27, 0x41	; 65
    36f4:	8d 8f       	std	Y+29, r24	; 0x1d
    36f6:	9e 8f       	std	Y+30, r25	; 0x1e
    36f8:	af 8f       	std	Y+31, r26	; 0x1f
    36fa:	b8 a3       	lds	r27, 0x58
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    36fc:	6d 8d       	ldd	r22, Y+29	; 0x1d
    36fe:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3700:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3702:	98 a1       	lds	r25, 0x48
    3704:	26 e6       	ldi	r18, 0x66	; 102
    3706:	36 e6       	ldi	r19, 0x66	; 102
    3708:	46 e6       	ldi	r20, 0x66	; 102
    370a:	55 e4       	ldi	r21, 0x45	; 69
    370c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3710:	dc 01       	movw	r26, r24
    3712:	cb 01       	movw	r24, r22
    3714:	89 a3       	lds	r24, 0x59
    3716:	9a a3       	lds	r25, 0x5a
    3718:	ab a3       	lds	r26, 0x5b
    371a:	bc a3       	lds	r27, 0x5c
	if (__tmp < 1.0)
    371c:	11 e0       	ldi	r17, 0x01	; 1
    371e:	69 a1       	lds	r22, 0x49
    3720:	7a a1       	lds	r23, 0x4a
    3722:	8b a1       	lds	r24, 0x4b
    3724:	9c a1       	lds	r25, 0x4c
    3726:	20 e0       	ldi	r18, 0x00	; 0
    3728:	30 e0       	ldi	r19, 0x00	; 0
    372a:	40 e8       	ldi	r20, 0x80	; 128
    372c:	5f e3       	ldi	r21, 0x3F	; 63
    372e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3732:	88 23       	and	r24, r24
    3734:	0c f0       	brlt	.+2      	; 0x3738 <matrix1+0x2ba>
    3736:	10 e0       	ldi	r17, 0x00	; 0
    3738:	11 23       	and	r17, r17
    373a:	29 f0       	breq	.+10     	; 0x3746 <matrix1+0x2c8>
		__ticks = 1;
    373c:	81 e0       	ldi	r24, 0x01	; 1
    373e:	90 e0       	ldi	r25, 0x00	; 0
    3740:	9e a3       	lds	r25, 0x5e
    3742:	8d a3       	lds	r24, 0x5d
    3744:	46 c0       	rjmp	.+140    	; 0x37d2 <matrix1+0x354>
	else if (__tmp > 65535)
    3746:	11 e0       	ldi	r17, 0x01	; 1
    3748:	69 a1       	lds	r22, 0x49
    374a:	7a a1       	lds	r23, 0x4a
    374c:	8b a1       	lds	r24, 0x4b
    374e:	9c a1       	lds	r25, 0x4c
    3750:	20 e0       	ldi	r18, 0x00	; 0
    3752:	3f ef       	ldi	r19, 0xFF	; 255
    3754:	4f e7       	ldi	r20, 0x7F	; 127
    3756:	57 e4       	ldi	r21, 0x47	; 71
    3758:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    375c:	18 16       	cp	r1, r24
    375e:	0c f0       	brlt	.+2      	; 0x3762 <matrix1+0x2e4>
    3760:	10 e0       	ldi	r17, 0x00	; 0
    3762:	11 23       	and	r17, r17
    3764:	61 f1       	breq	.+88     	; 0x37be <matrix1+0x340>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3766:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3768:	7e 8d       	ldd	r23, Y+30	; 0x1e
    376a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    376c:	98 a1       	lds	r25, 0x48
    376e:	20 e0       	ldi	r18, 0x00	; 0
    3770:	30 e0       	ldi	r19, 0x00	; 0
    3772:	40 e2       	ldi	r20, 0x20	; 32
    3774:	51 e4       	ldi	r21, 0x41	; 65
    3776:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    377a:	dc 01       	movw	r26, r24
    377c:	cb 01       	movw	r24, r22
    377e:	bc 01       	movw	r22, r24
    3780:	cd 01       	movw	r24, r26
    3782:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3786:	dc 01       	movw	r26, r24
    3788:	cb 01       	movw	r24, r22
    378a:	9e a3       	lds	r25, 0x5e
    378c:	8d a3       	lds	r24, 0x5d
    378e:	12 c0       	rjmp	.+36     	; 0x37b4 <matrix1+0x336>
    3790:	80 e7       	ldi	r24, 0x70	; 112
    3792:	91 e0       	ldi	r25, 0x01	; 1
    3794:	98 a7       	lds	r25, 0x78
    3796:	8f a3       	lds	r24, 0x5f
    3798:	8f a1       	lds	r24, 0x4f
    379a:	98 a5       	lds	r25, 0x68
    379c:	8c 01       	movw	r16, r24
    379e:	c8 01       	movw	r24, r16
    37a0:	01 97       	sbiw	r24, 0x01	; 1
    37a2:	f1 f7       	brne	.-4      	; 0x37a0 <matrix1+0x322>
    37a4:	8c 01       	movw	r16, r24
    37a6:	18 a7       	lds	r17, 0x78
    37a8:	0f a3       	lds	r16, 0x5f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37aa:	8d a1       	lds	r24, 0x4d
    37ac:	9e a1       	lds	r25, 0x4e
    37ae:	01 97       	sbiw	r24, 0x01	; 1
    37b0:	9e a3       	lds	r25, 0x5e
    37b2:	8d a3       	lds	r24, 0x5d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37b4:	8d a1       	lds	r24, 0x4d
    37b6:	9e a1       	lds	r25, 0x4e
    37b8:	00 97       	sbiw	r24, 0x00	; 0
    37ba:	51 f7       	brne	.-44     	; 0x3790 <matrix1+0x312>
    37bc:	17 c0       	rjmp	.+46     	; 0x37ec <matrix1+0x36e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37be:	69 a1       	lds	r22, 0x49
    37c0:	7a a1       	lds	r23, 0x4a
    37c2:	8b a1       	lds	r24, 0x4b
    37c4:	9c a1       	lds	r25, 0x4c
    37c6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    37ca:	dc 01       	movw	r26, r24
    37cc:	cb 01       	movw	r24, r22
    37ce:	9e a3       	lds	r25, 0x5e
    37d0:	8d a3       	lds	r24, 0x5d
    37d2:	8d a1       	lds	r24, 0x4d
    37d4:	9e a1       	lds	r25, 0x4e
    37d6:	9a a7       	lds	r25, 0x7a
    37d8:	89 a7       	lds	r24, 0x79
    37da:	89 a5       	lds	r24, 0x69
    37dc:	9a a5       	lds	r25, 0x6a
    37de:	8c 01       	movw	r16, r24
    37e0:	c8 01       	movw	r24, r16
    37e2:	01 97       	sbiw	r24, 0x01	; 1
    37e4:	f1 f7       	brne	.-4      	; 0x37e2 <matrix1+0x364>
    37e6:	8c 01       	movw	r16, r24
    37e8:	1a a7       	lds	r17, 0x7a
    37ea:	09 a7       	lds	r16, 0x79
	 {
		 servo_2(iii);
		 _delay_ms(30);
	 }
	 
	 for(jjj=55;jjj>0;jjj--)    ////////////////////////////////  arm up
    37ec:	80 91 85 04 	lds	r24, 0x0485
    37f0:	81 50       	subi	r24, 0x01	; 1
    37f2:	80 93 85 04 	sts	0x0485, r24
    37f6:	80 91 85 04 	lds	r24, 0x0485
    37fa:	88 23       	and	r24, r24
    37fc:	09 f0       	breq	.+2      	; 0x3800 <matrix1+0x382>
    37fe:	72 cf       	rjmp	.-284    	; 0x36e4 <matrix1+0x266>
	 {
		 servo_1(jjj);
		 _delay_ms(30);
	 }
	 
}
    3800:	aa 96       	adiw	r28, 0x2a	; 42
    3802:	0f b6       	in	r0, 0x3f	; 63
    3804:	f8 94       	cli
    3806:	de bf       	out	0x3e, r29	; 62
    3808:	0f be       	out	0x3f, r0	; 63
    380a:	cd bf       	out	0x3d, r28	; 61
    380c:	df 91       	pop	r29
    380e:	cf 91       	pop	r28
    3810:	1f 91       	pop	r17
    3812:	0f 91       	pop	r16
    3814:	08 95       	ret

00003816 <matrix2>:

void matrix2 (void)
{
    3816:	0f 93       	push	r16
    3818:	1f 93       	push	r17
    381a:	cf 93       	push	r28
    381c:	df 93       	push	r29
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	e8 97       	sbiw	r28, 0x38	; 56
    3824:	0f b6       	in	r0, 0x3f	; 63
    3826:	f8 94       	cli
    3828:	de bf       	out	0x3e, r29	; 62
    382a:	0f be       	out	0x3f, r0	; 63
    382c:	cd bf       	out	0x3d, r28	; 61
	 for(jjj=15;jjj<65;jjj++)     ///////////////////////////////// arm down
    382e:	8f e0       	ldi	r24, 0x0F	; 15
    3830:	80 93 85 04 	sts	0x0485, r24
    3834:	89 c0       	rjmp	.+274    	; 0x3948 <matrix2+0x132>
	 {
		 servo_1(jjj);
    3836:	80 91 85 04 	lds	r24, 0x0485
    383a:	0e 94 44 0c 	call	0x1888	; 0x1888 <servo_1>
    383e:	80 e0       	ldi	r24, 0x00	; 0
    3840:	90 e0       	ldi	r25, 0x00	; 0
    3842:	a0 ef       	ldi	r26, 0xF0	; 240
    3844:	b1 e4       	ldi	r27, 0x41	; 65
    3846:	89 83       	std	Y+1, r24	; 0x01
    3848:	9a 83       	std	Y+2, r25	; 0x02
    384a:	ab 83       	std	Y+3, r26	; 0x03
    384c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    384e:	69 81       	ldd	r22, Y+1	; 0x01
    3850:	7a 81       	ldd	r23, Y+2	; 0x02
    3852:	8b 81       	ldd	r24, Y+3	; 0x03
    3854:	9c 81       	ldd	r25, Y+4	; 0x04
    3856:	26 e6       	ldi	r18, 0x66	; 102
    3858:	36 e6       	ldi	r19, 0x66	; 102
    385a:	46 e6       	ldi	r20, 0x66	; 102
    385c:	55 e4       	ldi	r21, 0x45	; 69
    385e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3862:	dc 01       	movw	r26, r24
    3864:	cb 01       	movw	r24, r22
    3866:	8d 83       	std	Y+5, r24	; 0x05
    3868:	9e 83       	std	Y+6, r25	; 0x06
    386a:	af 83       	std	Y+7, r26	; 0x07
    386c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    386e:	11 e0       	ldi	r17, 0x01	; 1
    3870:	6d 81       	ldd	r22, Y+5	; 0x05
    3872:	7e 81       	ldd	r23, Y+6	; 0x06
    3874:	8f 81       	ldd	r24, Y+7	; 0x07
    3876:	98 85       	ldd	r25, Y+8	; 0x08
    3878:	20 e0       	ldi	r18, 0x00	; 0
    387a:	30 e0       	ldi	r19, 0x00	; 0
    387c:	40 e8       	ldi	r20, 0x80	; 128
    387e:	5f e3       	ldi	r21, 0x3F	; 63
    3880:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3884:	88 23       	and	r24, r24
    3886:	0c f0       	brlt	.+2      	; 0x388a <matrix2+0x74>
    3888:	10 e0       	ldi	r17, 0x00	; 0
    388a:	11 23       	and	r17, r17
    388c:	29 f0       	breq	.+10     	; 0x3898 <matrix2+0x82>
		__ticks = 1;
    388e:	81 e0       	ldi	r24, 0x01	; 1
    3890:	90 e0       	ldi	r25, 0x00	; 0
    3892:	9a 87       	std	Y+10, r25	; 0x0a
    3894:	89 87       	std	Y+9, r24	; 0x09
    3896:	46 c0       	rjmp	.+140    	; 0x3924 <matrix2+0x10e>
	else if (__tmp > 65535)
    3898:	11 e0       	ldi	r17, 0x01	; 1
    389a:	6d 81       	ldd	r22, Y+5	; 0x05
    389c:	7e 81       	ldd	r23, Y+6	; 0x06
    389e:	8f 81       	ldd	r24, Y+7	; 0x07
    38a0:	98 85       	ldd	r25, Y+8	; 0x08
    38a2:	20 e0       	ldi	r18, 0x00	; 0
    38a4:	3f ef       	ldi	r19, 0xFF	; 255
    38a6:	4f e7       	ldi	r20, 0x7F	; 127
    38a8:	57 e4       	ldi	r21, 0x47	; 71
    38aa:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    38ae:	18 16       	cp	r1, r24
    38b0:	0c f0       	brlt	.+2      	; 0x38b4 <matrix2+0x9e>
    38b2:	10 e0       	ldi	r17, 0x00	; 0
    38b4:	11 23       	and	r17, r17
    38b6:	61 f1       	breq	.+88     	; 0x3910 <matrix2+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38b8:	69 81       	ldd	r22, Y+1	; 0x01
    38ba:	7a 81       	ldd	r23, Y+2	; 0x02
    38bc:	8b 81       	ldd	r24, Y+3	; 0x03
    38be:	9c 81       	ldd	r25, Y+4	; 0x04
    38c0:	20 e0       	ldi	r18, 0x00	; 0
    38c2:	30 e0       	ldi	r19, 0x00	; 0
    38c4:	40 e2       	ldi	r20, 0x20	; 32
    38c6:	51 e4       	ldi	r21, 0x41	; 65
    38c8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    38cc:	dc 01       	movw	r26, r24
    38ce:	cb 01       	movw	r24, r22
    38d0:	bc 01       	movw	r22, r24
    38d2:	cd 01       	movw	r24, r26
    38d4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    38d8:	dc 01       	movw	r26, r24
    38da:	cb 01       	movw	r24, r22
    38dc:	9a 87       	std	Y+10, r25	; 0x0a
    38de:	89 87       	std	Y+9, r24	; 0x09
    38e0:	12 c0       	rjmp	.+36     	; 0x3906 <matrix2+0xf0>
    38e2:	80 e7       	ldi	r24, 0x70	; 112
    38e4:	91 e0       	ldi	r25, 0x01	; 1
    38e6:	9c 87       	std	Y+12, r25	; 0x0c
    38e8:	8b 87       	std	Y+11, r24	; 0x0b
    38ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    38ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    38ee:	8c 01       	movw	r16, r24
    38f0:	c8 01       	movw	r24, r16
    38f2:	01 97       	sbiw	r24, 0x01	; 1
    38f4:	f1 f7       	brne	.-4      	; 0x38f2 <matrix2+0xdc>
    38f6:	8c 01       	movw	r16, r24
    38f8:	1c 87       	std	Y+12, r17	; 0x0c
    38fa:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38fc:	89 85       	ldd	r24, Y+9	; 0x09
    38fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3900:	01 97       	sbiw	r24, 0x01	; 1
    3902:	9a 87       	std	Y+10, r25	; 0x0a
    3904:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3906:	89 85       	ldd	r24, Y+9	; 0x09
    3908:	9a 85       	ldd	r25, Y+10	; 0x0a
    390a:	00 97       	sbiw	r24, 0x00	; 0
    390c:	51 f7       	brne	.-44     	; 0x38e2 <matrix2+0xcc>
    390e:	17 c0       	rjmp	.+46     	; 0x393e <matrix2+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3910:	6d 81       	ldd	r22, Y+5	; 0x05
    3912:	7e 81       	ldd	r23, Y+6	; 0x06
    3914:	8f 81       	ldd	r24, Y+7	; 0x07
    3916:	98 85       	ldd	r25, Y+8	; 0x08
    3918:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    391c:	dc 01       	movw	r26, r24
    391e:	cb 01       	movw	r24, r22
    3920:	9a 87       	std	Y+10, r25	; 0x0a
    3922:	89 87       	std	Y+9, r24	; 0x09
    3924:	89 85       	ldd	r24, Y+9	; 0x09
    3926:	9a 85       	ldd	r25, Y+10	; 0x0a
    3928:	9e 87       	std	Y+14, r25	; 0x0e
    392a:	8d 87       	std	Y+13, r24	; 0x0d
    392c:	8d 85       	ldd	r24, Y+13	; 0x0d
    392e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3930:	8c 01       	movw	r16, r24
    3932:	c8 01       	movw	r24, r16
    3934:	01 97       	sbiw	r24, 0x01	; 1
    3936:	f1 f7       	brne	.-4      	; 0x3934 <matrix2+0x11e>
    3938:	8c 01       	movw	r16, r24
    393a:	1e 87       	std	Y+14, r17	; 0x0e
    393c:	0d 87       	std	Y+13, r16	; 0x0d
	 
}

void matrix2 (void)
{
	 for(jjj=15;jjj<65;jjj++)     ///////////////////////////////// arm down
    393e:	80 91 85 04 	lds	r24, 0x0485
    3942:	8f 5f       	subi	r24, 0xFF	; 255
    3944:	80 93 85 04 	sts	0x0485, r24
    3948:	80 91 85 04 	lds	r24, 0x0485
    394c:	81 34       	cpi	r24, 0x41	; 65
    394e:	08 f4       	brcc	.+2      	; 0x3952 <matrix2+0x13c>
    3950:	72 cf       	rjmp	.-284    	; 0x3836 <matrix2+0x20>
	 {
		 servo_1(jjj);
		 _delay_ms(30);
	 }
	 for(iii=25;iii<40;iii++)   //////////////////////////////////////  gripper ungrip
    3952:	89 e1       	ldi	r24, 0x19	; 25
    3954:	80 93 84 04 	sts	0x0484, r24
    3958:	89 c0       	rjmp	.+274    	; 0x3a6c <matrix2+0x256>
	 {
		 servo_2(iii);
    395a:	80 91 84 04 	lds	r24, 0x0484
    395e:	0e 94 92 0c 	call	0x1924	; 0x1924 <servo_2>
    3962:	80 e0       	ldi	r24, 0x00	; 0
    3964:	90 e0       	ldi	r25, 0x00	; 0
    3966:	a0 ef       	ldi	r26, 0xF0	; 240
    3968:	b1 e4       	ldi	r27, 0x41	; 65
    396a:	8f 87       	std	Y+15, r24	; 0x0f
    396c:	98 8b       	std	Y+16, r25	; 0x10
    396e:	a9 8b       	std	Y+17, r26	; 0x11
    3970:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3972:	6f 85       	ldd	r22, Y+15	; 0x0f
    3974:	78 89       	ldd	r23, Y+16	; 0x10
    3976:	89 89       	ldd	r24, Y+17	; 0x11
    3978:	9a 89       	ldd	r25, Y+18	; 0x12
    397a:	26 e6       	ldi	r18, 0x66	; 102
    397c:	36 e6       	ldi	r19, 0x66	; 102
    397e:	46 e6       	ldi	r20, 0x66	; 102
    3980:	55 e4       	ldi	r21, 0x45	; 69
    3982:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3986:	dc 01       	movw	r26, r24
    3988:	cb 01       	movw	r24, r22
    398a:	8b 8b       	std	Y+19, r24	; 0x13
    398c:	9c 8b       	std	Y+20, r25	; 0x14
    398e:	ad 8b       	std	Y+21, r26	; 0x15
    3990:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    3992:	11 e0       	ldi	r17, 0x01	; 1
    3994:	6b 89       	ldd	r22, Y+19	; 0x13
    3996:	7c 89       	ldd	r23, Y+20	; 0x14
    3998:	8d 89       	ldd	r24, Y+21	; 0x15
    399a:	9e 89       	ldd	r25, Y+22	; 0x16
    399c:	20 e0       	ldi	r18, 0x00	; 0
    399e:	30 e0       	ldi	r19, 0x00	; 0
    39a0:	40 e8       	ldi	r20, 0x80	; 128
    39a2:	5f e3       	ldi	r21, 0x3F	; 63
    39a4:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    39a8:	88 23       	and	r24, r24
    39aa:	0c f0       	brlt	.+2      	; 0x39ae <matrix2+0x198>
    39ac:	10 e0       	ldi	r17, 0x00	; 0
    39ae:	11 23       	and	r17, r17
    39b0:	29 f0       	breq	.+10     	; 0x39bc <matrix2+0x1a6>
		__ticks = 1;
    39b2:	81 e0       	ldi	r24, 0x01	; 1
    39b4:	90 e0       	ldi	r25, 0x00	; 0
    39b6:	98 8f       	std	Y+24, r25	; 0x18
    39b8:	8f 8b       	std	Y+23, r24	; 0x17
    39ba:	46 c0       	rjmp	.+140    	; 0x3a48 <matrix2+0x232>
	else if (__tmp > 65535)
    39bc:	11 e0       	ldi	r17, 0x01	; 1
    39be:	6b 89       	ldd	r22, Y+19	; 0x13
    39c0:	7c 89       	ldd	r23, Y+20	; 0x14
    39c2:	8d 89       	ldd	r24, Y+21	; 0x15
    39c4:	9e 89       	ldd	r25, Y+22	; 0x16
    39c6:	20 e0       	ldi	r18, 0x00	; 0
    39c8:	3f ef       	ldi	r19, 0xFF	; 255
    39ca:	4f e7       	ldi	r20, 0x7F	; 127
    39cc:	57 e4       	ldi	r21, 0x47	; 71
    39ce:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    39d2:	18 16       	cp	r1, r24
    39d4:	0c f0       	brlt	.+2      	; 0x39d8 <matrix2+0x1c2>
    39d6:	10 e0       	ldi	r17, 0x00	; 0
    39d8:	11 23       	and	r17, r17
    39da:	61 f1       	breq	.+88     	; 0x3a34 <matrix2+0x21e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39dc:	6f 85       	ldd	r22, Y+15	; 0x0f
    39de:	78 89       	ldd	r23, Y+16	; 0x10
    39e0:	89 89       	ldd	r24, Y+17	; 0x11
    39e2:	9a 89       	ldd	r25, Y+18	; 0x12
    39e4:	20 e0       	ldi	r18, 0x00	; 0
    39e6:	30 e0       	ldi	r19, 0x00	; 0
    39e8:	40 e2       	ldi	r20, 0x20	; 32
    39ea:	51 e4       	ldi	r21, 0x41	; 65
    39ec:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    39f0:	dc 01       	movw	r26, r24
    39f2:	cb 01       	movw	r24, r22
    39f4:	bc 01       	movw	r22, r24
    39f6:	cd 01       	movw	r24, r26
    39f8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    39fc:	dc 01       	movw	r26, r24
    39fe:	cb 01       	movw	r24, r22
    3a00:	98 8f       	std	Y+24, r25	; 0x18
    3a02:	8f 8b       	std	Y+23, r24	; 0x17
    3a04:	12 c0       	rjmp	.+36     	; 0x3a2a <matrix2+0x214>
    3a06:	80 e7       	ldi	r24, 0x70	; 112
    3a08:	91 e0       	ldi	r25, 0x01	; 1
    3a0a:	9a 8f       	std	Y+26, r25	; 0x1a
    3a0c:	89 8f       	std	Y+25, r24	; 0x19
    3a0e:	89 8d       	ldd	r24, Y+25	; 0x19
    3a10:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3a12:	8c 01       	movw	r16, r24
    3a14:	c8 01       	movw	r24, r16
    3a16:	01 97       	sbiw	r24, 0x01	; 1
    3a18:	f1 f7       	brne	.-4      	; 0x3a16 <matrix2+0x200>
    3a1a:	8c 01       	movw	r16, r24
    3a1c:	1a 8f       	std	Y+26, r17	; 0x1a
    3a1e:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a20:	8f 89       	ldd	r24, Y+23	; 0x17
    3a22:	98 8d       	ldd	r25, Y+24	; 0x18
    3a24:	01 97       	sbiw	r24, 0x01	; 1
    3a26:	98 8f       	std	Y+24, r25	; 0x18
    3a28:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a2a:	8f 89       	ldd	r24, Y+23	; 0x17
    3a2c:	98 8d       	ldd	r25, Y+24	; 0x18
    3a2e:	00 97       	sbiw	r24, 0x00	; 0
    3a30:	51 f7       	brne	.-44     	; 0x3a06 <matrix2+0x1f0>
    3a32:	17 c0       	rjmp	.+46     	; 0x3a62 <matrix2+0x24c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a34:	6b 89       	ldd	r22, Y+19	; 0x13
    3a36:	7c 89       	ldd	r23, Y+20	; 0x14
    3a38:	8d 89       	ldd	r24, Y+21	; 0x15
    3a3a:	9e 89       	ldd	r25, Y+22	; 0x16
    3a3c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3a40:	dc 01       	movw	r26, r24
    3a42:	cb 01       	movw	r24, r22
    3a44:	98 8f       	std	Y+24, r25	; 0x18
    3a46:	8f 8b       	std	Y+23, r24	; 0x17
    3a48:	8f 89       	ldd	r24, Y+23	; 0x17
    3a4a:	98 8d       	ldd	r25, Y+24	; 0x18
    3a4c:	9c 8f       	std	Y+28, r25	; 0x1c
    3a4e:	8b 8f       	std	Y+27, r24	; 0x1b
    3a50:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a52:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a54:	8c 01       	movw	r16, r24
    3a56:	c8 01       	movw	r24, r16
    3a58:	01 97       	sbiw	r24, 0x01	; 1
    3a5a:	f1 f7       	brne	.-4      	; 0x3a58 <matrix2+0x242>
    3a5c:	8c 01       	movw	r16, r24
    3a5e:	1c 8f       	std	Y+28, r17	; 0x1c
    3a60:	0b 8f       	std	Y+27, r16	; 0x1b
	 for(jjj=15;jjj<65;jjj++)     ///////////////////////////////// arm down
	 {
		 servo_1(jjj);
		 _delay_ms(30);
	 }
	 for(iii=25;iii<40;iii++)   //////////////////////////////////////  gripper ungrip
    3a62:	80 91 84 04 	lds	r24, 0x0484
    3a66:	8f 5f       	subi	r24, 0xFF	; 255
    3a68:	80 93 84 04 	sts	0x0484, r24
    3a6c:	80 91 84 04 	lds	r24, 0x0484
    3a70:	88 32       	cpi	r24, 0x28	; 40
    3a72:	08 f4       	brcc	.+2      	; 0x3a76 <matrix2+0x260>
    3a74:	72 cf       	rjmp	.-284    	; 0x395a <matrix2+0x144>
	 {
		 servo_2(iii);
		 _delay_ms(30);
	 }
	  for(jjj=65;jjj>15;jjj--)    ////////////////////////////////  arm up
    3a76:	81 e4       	ldi	r24, 0x41	; 65
    3a78:	80 93 85 04 	sts	0x0485, r24
    3a7c:	89 c0       	rjmp	.+274    	; 0x3b90 <matrix2+0x37a>
	  {
		  servo_1(jjj);
    3a7e:	80 91 85 04 	lds	r24, 0x0485
    3a82:	0e 94 44 0c 	call	0x1888	; 0x1888 <servo_1>
    3a86:	80 e0       	ldi	r24, 0x00	; 0
    3a88:	90 e0       	ldi	r25, 0x00	; 0
    3a8a:	a0 ef       	ldi	r26, 0xF0	; 240
    3a8c:	b1 e4       	ldi	r27, 0x41	; 65
    3a8e:	8d 8f       	std	Y+29, r24	; 0x1d
    3a90:	9e 8f       	std	Y+30, r25	; 0x1e
    3a92:	af 8f       	std	Y+31, r26	; 0x1f
    3a94:	b8 a3       	lds	r27, 0x58
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3a96:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3a98:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3a9a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3a9c:	98 a1       	lds	r25, 0x48
    3a9e:	26 e6       	ldi	r18, 0x66	; 102
    3aa0:	36 e6       	ldi	r19, 0x66	; 102
    3aa2:	46 e6       	ldi	r20, 0x66	; 102
    3aa4:	55 e4       	ldi	r21, 0x45	; 69
    3aa6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3aaa:	dc 01       	movw	r26, r24
    3aac:	cb 01       	movw	r24, r22
    3aae:	89 a3       	lds	r24, 0x59
    3ab0:	9a a3       	lds	r25, 0x5a
    3ab2:	ab a3       	lds	r26, 0x5b
    3ab4:	bc a3       	lds	r27, 0x5c
	if (__tmp < 1.0)
    3ab6:	11 e0       	ldi	r17, 0x01	; 1
    3ab8:	69 a1       	lds	r22, 0x49
    3aba:	7a a1       	lds	r23, 0x4a
    3abc:	8b a1       	lds	r24, 0x4b
    3abe:	9c a1       	lds	r25, 0x4c
    3ac0:	20 e0       	ldi	r18, 0x00	; 0
    3ac2:	30 e0       	ldi	r19, 0x00	; 0
    3ac4:	40 e8       	ldi	r20, 0x80	; 128
    3ac6:	5f e3       	ldi	r21, 0x3F	; 63
    3ac8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3acc:	88 23       	and	r24, r24
    3ace:	0c f0       	brlt	.+2      	; 0x3ad2 <matrix2+0x2bc>
    3ad0:	10 e0       	ldi	r17, 0x00	; 0
    3ad2:	11 23       	and	r17, r17
    3ad4:	29 f0       	breq	.+10     	; 0x3ae0 <matrix2+0x2ca>
		__ticks = 1;
    3ad6:	81 e0       	ldi	r24, 0x01	; 1
    3ad8:	90 e0       	ldi	r25, 0x00	; 0
    3ada:	9e a3       	lds	r25, 0x5e
    3adc:	8d a3       	lds	r24, 0x5d
    3ade:	46 c0       	rjmp	.+140    	; 0x3b6c <matrix2+0x356>
	else if (__tmp > 65535)
    3ae0:	11 e0       	ldi	r17, 0x01	; 1
    3ae2:	69 a1       	lds	r22, 0x49
    3ae4:	7a a1       	lds	r23, 0x4a
    3ae6:	8b a1       	lds	r24, 0x4b
    3ae8:	9c a1       	lds	r25, 0x4c
    3aea:	20 e0       	ldi	r18, 0x00	; 0
    3aec:	3f ef       	ldi	r19, 0xFF	; 255
    3aee:	4f e7       	ldi	r20, 0x7F	; 127
    3af0:	57 e4       	ldi	r21, 0x47	; 71
    3af2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3af6:	18 16       	cp	r1, r24
    3af8:	0c f0       	brlt	.+2      	; 0x3afc <matrix2+0x2e6>
    3afa:	10 e0       	ldi	r17, 0x00	; 0
    3afc:	11 23       	and	r17, r17
    3afe:	61 f1       	breq	.+88     	; 0x3b58 <matrix2+0x342>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b00:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3b02:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3b04:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3b06:	98 a1       	lds	r25, 0x48
    3b08:	20 e0       	ldi	r18, 0x00	; 0
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	40 e2       	ldi	r20, 0x20	; 32
    3b0e:	51 e4       	ldi	r21, 0x41	; 65
    3b10:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3b14:	dc 01       	movw	r26, r24
    3b16:	cb 01       	movw	r24, r22
    3b18:	bc 01       	movw	r22, r24
    3b1a:	cd 01       	movw	r24, r26
    3b1c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3b20:	dc 01       	movw	r26, r24
    3b22:	cb 01       	movw	r24, r22
    3b24:	9e a3       	lds	r25, 0x5e
    3b26:	8d a3       	lds	r24, 0x5d
    3b28:	12 c0       	rjmp	.+36     	; 0x3b4e <matrix2+0x338>
    3b2a:	80 e7       	ldi	r24, 0x70	; 112
    3b2c:	91 e0       	ldi	r25, 0x01	; 1
    3b2e:	98 a7       	lds	r25, 0x78
    3b30:	8f a3       	lds	r24, 0x5f
    3b32:	8f a1       	lds	r24, 0x4f
    3b34:	98 a5       	lds	r25, 0x68
    3b36:	8c 01       	movw	r16, r24
    3b38:	c8 01       	movw	r24, r16
    3b3a:	01 97       	sbiw	r24, 0x01	; 1
    3b3c:	f1 f7       	brne	.-4      	; 0x3b3a <matrix2+0x324>
    3b3e:	8c 01       	movw	r16, r24
    3b40:	18 a7       	lds	r17, 0x78
    3b42:	0f a3       	lds	r16, 0x5f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b44:	8d a1       	lds	r24, 0x4d
    3b46:	9e a1       	lds	r25, 0x4e
    3b48:	01 97       	sbiw	r24, 0x01	; 1
    3b4a:	9e a3       	lds	r25, 0x5e
    3b4c:	8d a3       	lds	r24, 0x5d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b4e:	8d a1       	lds	r24, 0x4d
    3b50:	9e a1       	lds	r25, 0x4e
    3b52:	00 97       	sbiw	r24, 0x00	; 0
    3b54:	51 f7       	brne	.-44     	; 0x3b2a <matrix2+0x314>
    3b56:	17 c0       	rjmp	.+46     	; 0x3b86 <matrix2+0x370>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b58:	69 a1       	lds	r22, 0x49
    3b5a:	7a a1       	lds	r23, 0x4a
    3b5c:	8b a1       	lds	r24, 0x4b
    3b5e:	9c a1       	lds	r25, 0x4c
    3b60:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3b64:	dc 01       	movw	r26, r24
    3b66:	cb 01       	movw	r24, r22
    3b68:	9e a3       	lds	r25, 0x5e
    3b6a:	8d a3       	lds	r24, 0x5d
    3b6c:	8d a1       	lds	r24, 0x4d
    3b6e:	9e a1       	lds	r25, 0x4e
    3b70:	9a a7       	lds	r25, 0x7a
    3b72:	89 a7       	lds	r24, 0x79
    3b74:	89 a5       	lds	r24, 0x69
    3b76:	9a a5       	lds	r25, 0x6a
    3b78:	8c 01       	movw	r16, r24
    3b7a:	c8 01       	movw	r24, r16
    3b7c:	01 97       	sbiw	r24, 0x01	; 1
    3b7e:	f1 f7       	brne	.-4      	; 0x3b7c <matrix2+0x366>
    3b80:	8c 01       	movw	r16, r24
    3b82:	1a a7       	lds	r17, 0x7a
    3b84:	09 a7       	lds	r16, 0x79
	 for(iii=25;iii<40;iii++)   //////////////////////////////////////  gripper ungrip
	 {
		 servo_2(iii);
		 _delay_ms(30);
	 }
	  for(jjj=65;jjj>15;jjj--)    ////////////////////////////////  arm up
    3b86:	80 91 85 04 	lds	r24, 0x0485
    3b8a:	81 50       	subi	r24, 0x01	; 1
    3b8c:	80 93 85 04 	sts	0x0485, r24
    3b90:	80 91 85 04 	lds	r24, 0x0485
    3b94:	80 31       	cpi	r24, 0x10	; 16
    3b96:	08 f0       	brcs	.+2      	; 0x3b9a <matrix2+0x384>
    3b98:	72 cf       	rjmp	.-284    	; 0x3a7e <matrix2+0x268>
	  {
		  servo_1(jjj);
		  _delay_ms(30);
	  }
	   for(iii=40;iii<65;iii++)   //////////////////////////////////////  gripper ungrip
    3b9a:	88 e2       	ldi	r24, 0x28	; 40
    3b9c:	80 93 84 04 	sts	0x0484, r24
    3ba0:	89 c0       	rjmp	.+274    	; 0x3cb4 <matrix2+0x49e>
	   {
		   servo_2(iii);
    3ba2:	80 91 84 04 	lds	r24, 0x0484
    3ba6:	0e 94 92 0c 	call	0x1924	; 0x1924 <servo_2>
    3baa:	80 e0       	ldi	r24, 0x00	; 0
    3bac:	90 e0       	ldi	r25, 0x00	; 0
    3bae:	a0 ef       	ldi	r26, 0xF0	; 240
    3bb0:	b1 e4       	ldi	r27, 0x41	; 65
    3bb2:	8b a7       	lds	r24, 0x7b
    3bb4:	9c a7       	lds	r25, 0x7c
    3bb6:	ad a7       	lds	r26, 0x7d
    3bb8:	be a7       	lds	r27, 0x7e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3bba:	6b a5       	lds	r22, 0x6b
    3bbc:	7c a5       	lds	r23, 0x6c
    3bbe:	8d a5       	lds	r24, 0x6d
    3bc0:	9e a5       	lds	r25, 0x6e
    3bc2:	26 e6       	ldi	r18, 0x66	; 102
    3bc4:	36 e6       	ldi	r19, 0x66	; 102
    3bc6:	46 e6       	ldi	r20, 0x66	; 102
    3bc8:	55 e4       	ldi	r21, 0x45	; 69
    3bca:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3bce:	dc 01       	movw	r26, r24
    3bd0:	cb 01       	movw	r24, r22
    3bd2:	8f a7       	lds	r24, 0x7f
    3bd4:	98 ab       	sts	0x58, r25
    3bd6:	a9 ab       	sts	0x59, r26
    3bd8:	ba ab       	sts	0x5a, r27
	if (__tmp < 1.0)
    3bda:	11 e0       	ldi	r17, 0x01	; 1
    3bdc:	6f a5       	lds	r22, 0x6f
    3bde:	78 a9       	sts	0x48, r23
    3be0:	89 a9       	sts	0x49, r24
    3be2:	9a a9       	sts	0x4a, r25
    3be4:	20 e0       	ldi	r18, 0x00	; 0
    3be6:	30 e0       	ldi	r19, 0x00	; 0
    3be8:	40 e8       	ldi	r20, 0x80	; 128
    3bea:	5f e3       	ldi	r21, 0x3F	; 63
    3bec:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3bf0:	88 23       	and	r24, r24
    3bf2:	0c f0       	brlt	.+2      	; 0x3bf6 <matrix2+0x3e0>
    3bf4:	10 e0       	ldi	r17, 0x00	; 0
    3bf6:	11 23       	and	r17, r17
    3bf8:	29 f0       	breq	.+10     	; 0x3c04 <matrix2+0x3ee>
		__ticks = 1;
    3bfa:	81 e0       	ldi	r24, 0x01	; 1
    3bfc:	90 e0       	ldi	r25, 0x00	; 0
    3bfe:	9c ab       	sts	0x5c, r25
    3c00:	8b ab       	sts	0x5b, r24
    3c02:	46 c0       	rjmp	.+140    	; 0x3c90 <matrix2+0x47a>
	else if (__tmp > 65535)
    3c04:	11 e0       	ldi	r17, 0x01	; 1
    3c06:	6f a5       	lds	r22, 0x6f
    3c08:	78 a9       	sts	0x48, r23
    3c0a:	89 a9       	sts	0x49, r24
    3c0c:	9a a9       	sts	0x4a, r25
    3c0e:	20 e0       	ldi	r18, 0x00	; 0
    3c10:	3f ef       	ldi	r19, 0xFF	; 255
    3c12:	4f e7       	ldi	r20, 0x7F	; 127
    3c14:	57 e4       	ldi	r21, 0x47	; 71
    3c16:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3c1a:	18 16       	cp	r1, r24
    3c1c:	0c f0       	brlt	.+2      	; 0x3c20 <matrix2+0x40a>
    3c1e:	10 e0       	ldi	r17, 0x00	; 0
    3c20:	11 23       	and	r17, r17
    3c22:	61 f1       	breq	.+88     	; 0x3c7c <matrix2+0x466>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c24:	6b a5       	lds	r22, 0x6b
    3c26:	7c a5       	lds	r23, 0x6c
    3c28:	8d a5       	lds	r24, 0x6d
    3c2a:	9e a5       	lds	r25, 0x6e
    3c2c:	20 e0       	ldi	r18, 0x00	; 0
    3c2e:	30 e0       	ldi	r19, 0x00	; 0
    3c30:	40 e2       	ldi	r20, 0x20	; 32
    3c32:	51 e4       	ldi	r21, 0x41	; 65
    3c34:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3c38:	dc 01       	movw	r26, r24
    3c3a:	cb 01       	movw	r24, r22
    3c3c:	bc 01       	movw	r22, r24
    3c3e:	cd 01       	movw	r24, r26
    3c40:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3c44:	dc 01       	movw	r26, r24
    3c46:	cb 01       	movw	r24, r22
    3c48:	9c ab       	sts	0x5c, r25
    3c4a:	8b ab       	sts	0x5b, r24
    3c4c:	12 c0       	rjmp	.+36     	; 0x3c72 <matrix2+0x45c>
    3c4e:	80 e7       	ldi	r24, 0x70	; 112
    3c50:	91 e0       	ldi	r25, 0x01	; 1
    3c52:	9e ab       	sts	0x5e, r25
    3c54:	8d ab       	sts	0x5d, r24
    3c56:	8d a9       	sts	0x4d, r24
    3c58:	9e a9       	sts	0x4e, r25
    3c5a:	8c 01       	movw	r16, r24
    3c5c:	c8 01       	movw	r24, r16
    3c5e:	01 97       	sbiw	r24, 0x01	; 1
    3c60:	f1 f7       	brne	.-4      	; 0x3c5e <matrix2+0x448>
    3c62:	8c 01       	movw	r16, r24
    3c64:	1e ab       	sts	0x5e, r17
    3c66:	0d ab       	sts	0x5d, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c68:	8b a9       	sts	0x4b, r24
    3c6a:	9c a9       	sts	0x4c, r25
    3c6c:	01 97       	sbiw	r24, 0x01	; 1
    3c6e:	9c ab       	sts	0x5c, r25
    3c70:	8b ab       	sts	0x5b, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c72:	8b a9       	sts	0x4b, r24
    3c74:	9c a9       	sts	0x4c, r25
    3c76:	00 97       	sbiw	r24, 0x00	; 0
    3c78:	51 f7       	brne	.-44     	; 0x3c4e <matrix2+0x438>
    3c7a:	17 c0       	rjmp	.+46     	; 0x3caa <matrix2+0x494>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c7c:	6f a5       	lds	r22, 0x6f
    3c7e:	78 a9       	sts	0x48, r23
    3c80:	89 a9       	sts	0x49, r24
    3c82:	9a a9       	sts	0x4a, r25
    3c84:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3c88:	dc 01       	movw	r26, r24
    3c8a:	cb 01       	movw	r24, r22
    3c8c:	9c ab       	sts	0x5c, r25
    3c8e:	8b ab       	sts	0x5b, r24
    3c90:	8b a9       	sts	0x4b, r24
    3c92:	9c a9       	sts	0x4c, r25
    3c94:	98 af       	sts	0x78, r25
    3c96:	8f ab       	sts	0x5f, r24
    3c98:	8f a9       	sts	0x4f, r24
    3c9a:	98 ad       	sts	0x68, r25
    3c9c:	8c 01       	movw	r16, r24
    3c9e:	c8 01       	movw	r24, r16
    3ca0:	01 97       	sbiw	r24, 0x01	; 1
    3ca2:	f1 f7       	brne	.-4      	; 0x3ca0 <matrix2+0x48a>
    3ca4:	8c 01       	movw	r16, r24
    3ca6:	18 af       	sts	0x78, r17
    3ca8:	0f ab       	sts	0x5f, r16
	  for(jjj=65;jjj>15;jjj--)    ////////////////////////////////  arm up
	  {
		  servo_1(jjj);
		  _delay_ms(30);
	  }
	   for(iii=40;iii<65;iii++)   //////////////////////////////////////  gripper ungrip
    3caa:	80 91 84 04 	lds	r24, 0x0484
    3cae:	8f 5f       	subi	r24, 0xFF	; 255
    3cb0:	80 93 84 04 	sts	0x0484, r24
    3cb4:	80 91 84 04 	lds	r24, 0x0484
    3cb8:	81 34       	cpi	r24, 0x41	; 65
    3cba:	08 f4       	brcc	.+2      	; 0x3cbe <matrix2+0x4a8>
    3cbc:	72 cf       	rjmp	.-284    	; 0x3ba2 <matrix2+0x38c>
	   {
		   servo_2(iii);
		   _delay_ms(30);
	   }
	   
}
    3cbe:	e8 96       	adiw	r28, 0x38	; 56
    3cc0:	0f b6       	in	r0, 0x3f	; 63
    3cc2:	f8 94       	cli
    3cc4:	de bf       	out	0x3e, r29	; 62
    3cc6:	0f be       	out	0x3f, r0	; 63
    3cc8:	cd bf       	out	0x3d, r28	; 61
    3cca:	df 91       	pop	r29
    3ccc:	cf 91       	pop	r28
    3cce:	1f 91       	pop	r17
    3cd0:	0f 91       	pop	r16
    3cd2:	08 95       	ret

00003cd4 <main>:

//Main Function
int main()
{   
    3cd4:	0f 93       	push	r16
    3cd6:	1f 93       	push	r17
    3cd8:	cf 93       	push	r28
    3cda:	df 93       	push	r29
    3cdc:	cd b7       	in	r28, 0x3d	; 61
    3cde:	de b7       	in	r29, 0x3e	; 62
    3ce0:	ce 5d       	subi	r28, 0xDE	; 222
    3ce2:	d6 40       	sbci	r29, 0x06	; 6
    3ce4:	0f b6       	in	r0, 0x3f	; 63
    3ce6:	f8 94       	cli
    3ce8:	de bf       	out	0x3e, r29	; 62
    3cea:	0f be       	out	0x3f, r0	; 63
    3cec:	cd bf       	out	0x3d, r28	; 61
	init_devices();
    3cee:	0e 94 64 10 	call	0x20c8	; 0x20c8 <init_devices>
	lcd_set_4bit();
    3cf2:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_set_4bit>
	
    int origin1[12][4][2]=
    3cf6:	ce 01       	movw	r24, r28
    3cf8:	8d 5b       	subi	r24, 0xBD	; 189
    3cfa:	9b 4f       	sbci	r25, 0xFB	; 251
    3cfc:	24 e0       	ldi	r18, 0x04	; 4
    3cfe:	32 e0       	ldi	r19, 0x02	; 2
    3d00:	40 ec       	ldi	r20, 0xC0	; 192
    3d02:	f9 01       	movw	r30, r18
    3d04:	00 80       	ld	r0, Z
    3d06:	2f 5f       	subi	r18, 0xFF	; 255
    3d08:	3f 4f       	sbci	r19, 0xFF	; 255
    3d0a:	fc 01       	movw	r30, r24
    3d0c:	00 82       	st	Z, r0
    3d0e:	01 96       	adiw	r24, 0x01	; 1
    3d10:	41 50       	subi	r20, 0x01	; 1
    3d12:	44 23       	and	r20, r20
    3d14:	b1 f7       	brne	.-20     	; 0x3d02 <main+0x2e>
	   {{-2,3},{-1,3},{-2,2},{-1,2}},
	   {{-2,2},{-1,2},{-2,1},{-1,1}},
	   {{-2,1},{-1,1},{-2,0},{-1,0}},	   	   	   	   	   	   	         
	};
	
	int origin2[24][4][2]=
    3d16:	ce 01       	movw	r24, r28
    3d18:	8d 5f       	subi	r24, 0xFD	; 253
    3d1a:	9a 4f       	sbci	r25, 0xFA	; 250
    3d1c:	9c 01       	movw	r18, r24
    3d1e:	44 ec       	ldi	r20, 0xC4	; 196
    3d20:	52 e0       	ldi	r21, 0x02	; 2
    3d22:	80 e8       	ldi	r24, 0x80	; 128
    3d24:	91 e0       	ldi	r25, 0x01	; 1
    3d26:	fa 01       	movw	r30, r20
    3d28:	00 80       	ld	r0, Z
    3d2a:	4f 5f       	subi	r20, 0xFF	; 255
    3d2c:	5f 4f       	sbci	r21, 0xFF	; 255
    3d2e:	f9 01       	movw	r30, r18
    3d30:	00 82       	st	Z, r0
    3d32:	2f 5f       	subi	r18, 0xFF	; 255
    3d34:	3f 4f       	sbci	r19, 0xFF	; 255
    3d36:	01 97       	sbiw	r24, 0x01	; 1
    3d38:	00 97       	sbiw	r24, 0x00	; 0
    3d3a:	a9 f7       	brne	.-22     	; 0x3d26 <main+0x52>
		{{2,0},{3,0},{2,1},{3,1}},
		{{2,1},{3,1},{2,2},{3,2}},
		{{2,2},{3,2},{2,3},{3,3}},
		{{2,4},{3,3},{3,4},{2,3}},																							
	};
	coor[0]=-2;
    3d3c:	8e ef       	ldi	r24, 0xFE	; 254
    3d3e:	9f ef       	ldi	r25, 0xFF	; 255
    3d40:	90 93 a7 04 	sts	0x04A7, r25
    3d44:	80 93 a6 04 	sts	0x04A6, r24
	coor[1]=2;
    3d48:	82 e0       	ldi	r24, 0x02	; 2
    3d4a:	90 e0       	ldi	r25, 0x00	; 0
    3d4c:	90 93 a9 04 	sts	0x04A9, r25
    3d50:	80 93 a8 04 	sts	0x04A8, r24
	int flag1=1;
    3d54:	81 e0       	ldi	r24, 0x01	; 1
    3d56:	90 e0       	ldi	r25, 0x00	; 0
    3d58:	9a 83       	std	Y+2, r25	; 0x02
    3d5a:	89 83       	std	Y+1, r24	; 0x01
	while(1)
	{
		whitesensor();
    3d5c:	0e 94 79 10 	call	0x20f2	; 0x20f2 <whitesensor>
		if((Center_white_line>16 && Left_white_line>16) || (Center_white_line>16 && Right_white_line>16))
    3d60:	80 91 7e 04 	lds	r24, 0x047E
    3d64:	81 31       	cpi	r24, 0x11	; 17
    3d66:	20 f0       	brcs	.+8      	; 0x3d70 <main+0x9c>
    3d68:	80 91 7d 04 	lds	r24, 0x047D
    3d6c:	81 31       	cpi	r24, 0x11	; 17
    3d6e:	40 f4       	brcc	.+16     	; 0x3d80 <main+0xac>
    3d70:	80 91 7e 04 	lds	r24, 0x047E
    3d74:	81 31       	cpi	r24, 0x11	; 17
    3d76:	58 f0       	brcs	.+22     	; 0x3d8e <main+0xba>
    3d78:	80 91 7f 04 	lds	r24, 0x047F
    3d7c:	81 31       	cpi	r24, 0x11	; 17
    3d7e:	38 f0       	brcs	.+14     	; 0x3d8e <main+0xba>
		{
			forward();
    3d80:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <forward>
			velocity(140,140);
    3d84:	8c e8       	ldi	r24, 0x8C	; 140
    3d86:	6c e8       	ldi	r22, 0x8C	; 140
    3d88:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <velocity>
		}
		else
		{
			break;
		}
	}		
    3d8c:	e7 cf       	rjmp	.-50     	; 0x3d5c <main+0x88>
	linefollwer();
    3d8e:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
	  for(jjj=55;jjj>15;jjj--)    ////////////////////////////////  arm up
    3d92:	87 e3       	ldi	r24, 0x37	; 55
    3d94:	80 93 85 04 	sts	0x0485, r24
    3d98:	89 c0       	rjmp	.+274    	; 0x3eac <main+0x1d8>
	  {
		  servo_1(jjj);
    3d9a:	80 91 85 04 	lds	r24, 0x0485
    3d9e:	0e 94 44 0c 	call	0x1888	; 0x1888 <servo_1>
    3da2:	80 e0       	ldi	r24, 0x00	; 0
    3da4:	90 e0       	ldi	r25, 0x00	; 0
    3da6:	a0 ef       	ldi	r26, 0xF0	; 240
    3da8:	b1 e4       	ldi	r27, 0x41	; 65
    3daa:	89 a7       	lds	r24, 0x79
    3dac:	9a a7       	lds	r25, 0x7a
    3dae:	ab a7       	lds	r26, 0x7b
    3db0:	bc a7       	lds	r27, 0x7c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3db2:	69 a5       	lds	r22, 0x69
    3db4:	7a a5       	lds	r23, 0x6a
    3db6:	8b a5       	lds	r24, 0x6b
    3db8:	9c a5       	lds	r25, 0x6c
    3dba:	26 e6       	ldi	r18, 0x66	; 102
    3dbc:	36 e6       	ldi	r19, 0x66	; 102
    3dbe:	46 e6       	ldi	r20, 0x66	; 102
    3dc0:	55 e4       	ldi	r21, 0x45	; 69
    3dc2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3dc6:	dc 01       	movw	r26, r24
    3dc8:	cb 01       	movw	r24, r22
    3dca:	8d a7       	lds	r24, 0x7d
    3dcc:	9e a7       	lds	r25, 0x7e
    3dce:	af a7       	lds	r26, 0x7f
    3dd0:	b8 ab       	sts	0x58, r27
	if (__tmp < 1.0)
    3dd2:	11 e0       	ldi	r17, 0x01	; 1
    3dd4:	6d a5       	lds	r22, 0x6d
    3dd6:	7e a5       	lds	r23, 0x6e
    3dd8:	8f a5       	lds	r24, 0x6f
    3dda:	98 a9       	sts	0x48, r25
    3ddc:	20 e0       	ldi	r18, 0x00	; 0
    3dde:	30 e0       	ldi	r19, 0x00	; 0
    3de0:	40 e8       	ldi	r20, 0x80	; 128
    3de2:	5f e3       	ldi	r21, 0x3F	; 63
    3de4:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3de8:	88 23       	and	r24, r24
    3dea:	0c f0       	brlt	.+2      	; 0x3dee <main+0x11a>
    3dec:	10 e0       	ldi	r17, 0x00	; 0
    3dee:	11 23       	and	r17, r17
    3df0:	29 f0       	breq	.+10     	; 0x3dfc <main+0x128>
		__ticks = 1;
    3df2:	81 e0       	ldi	r24, 0x01	; 1
    3df4:	90 e0       	ldi	r25, 0x00	; 0
    3df6:	9a ab       	sts	0x5a, r25
    3df8:	89 ab       	sts	0x59, r24
    3dfa:	46 c0       	rjmp	.+140    	; 0x3e88 <main+0x1b4>
	else if (__tmp > 65535)
    3dfc:	11 e0       	ldi	r17, 0x01	; 1
    3dfe:	6d a5       	lds	r22, 0x6d
    3e00:	7e a5       	lds	r23, 0x6e
    3e02:	8f a5       	lds	r24, 0x6f
    3e04:	98 a9       	sts	0x48, r25
    3e06:	20 e0       	ldi	r18, 0x00	; 0
    3e08:	3f ef       	ldi	r19, 0xFF	; 255
    3e0a:	4f e7       	ldi	r20, 0x7F	; 127
    3e0c:	57 e4       	ldi	r21, 0x47	; 71
    3e0e:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3e12:	18 16       	cp	r1, r24
    3e14:	0c f0       	brlt	.+2      	; 0x3e18 <main+0x144>
    3e16:	10 e0       	ldi	r17, 0x00	; 0
    3e18:	11 23       	and	r17, r17
    3e1a:	61 f1       	breq	.+88     	; 0x3e74 <main+0x1a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e1c:	69 a5       	lds	r22, 0x69
    3e1e:	7a a5       	lds	r23, 0x6a
    3e20:	8b a5       	lds	r24, 0x6b
    3e22:	9c a5       	lds	r25, 0x6c
    3e24:	20 e0       	ldi	r18, 0x00	; 0
    3e26:	30 e0       	ldi	r19, 0x00	; 0
    3e28:	40 e2       	ldi	r20, 0x20	; 32
    3e2a:	51 e4       	ldi	r21, 0x41	; 65
    3e2c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3e30:	dc 01       	movw	r26, r24
    3e32:	cb 01       	movw	r24, r22
    3e34:	bc 01       	movw	r22, r24
    3e36:	cd 01       	movw	r24, r26
    3e38:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3e3c:	dc 01       	movw	r26, r24
    3e3e:	cb 01       	movw	r24, r22
    3e40:	9a ab       	sts	0x5a, r25
    3e42:	89 ab       	sts	0x59, r24
    3e44:	12 c0       	rjmp	.+36     	; 0x3e6a <main+0x196>
    3e46:	80 e7       	ldi	r24, 0x70	; 112
    3e48:	91 e0       	ldi	r25, 0x01	; 1
    3e4a:	9c ab       	sts	0x5c, r25
    3e4c:	8b ab       	sts	0x5b, r24
    3e4e:	8b a9       	sts	0x4b, r24
    3e50:	9c a9       	sts	0x4c, r25
    3e52:	8c 01       	movw	r16, r24
    3e54:	c8 01       	movw	r24, r16
    3e56:	01 97       	sbiw	r24, 0x01	; 1
    3e58:	f1 f7       	brne	.-4      	; 0x3e56 <main+0x182>
    3e5a:	8c 01       	movw	r16, r24
    3e5c:	1c ab       	sts	0x5c, r17
    3e5e:	0b ab       	sts	0x5b, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e60:	89 a9       	sts	0x49, r24
    3e62:	9a a9       	sts	0x4a, r25
    3e64:	01 97       	sbiw	r24, 0x01	; 1
    3e66:	9a ab       	sts	0x5a, r25
    3e68:	89 ab       	sts	0x59, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e6a:	89 a9       	sts	0x49, r24
    3e6c:	9a a9       	sts	0x4a, r25
    3e6e:	00 97       	sbiw	r24, 0x00	; 0
    3e70:	51 f7       	brne	.-44     	; 0x3e46 <main+0x172>
    3e72:	17 c0       	rjmp	.+46     	; 0x3ea2 <main+0x1ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e74:	6d a5       	lds	r22, 0x6d
    3e76:	7e a5       	lds	r23, 0x6e
    3e78:	8f a5       	lds	r24, 0x6f
    3e7a:	98 a9       	sts	0x48, r25
    3e7c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3e80:	dc 01       	movw	r26, r24
    3e82:	cb 01       	movw	r24, r22
    3e84:	9a ab       	sts	0x5a, r25
    3e86:	89 ab       	sts	0x59, r24
    3e88:	89 a9       	sts	0x49, r24
    3e8a:	9a a9       	sts	0x4a, r25
    3e8c:	9e ab       	sts	0x5e, r25
    3e8e:	8d ab       	sts	0x5d, r24
    3e90:	8d a9       	sts	0x4d, r24
    3e92:	9e a9       	sts	0x4e, r25
    3e94:	8c 01       	movw	r16, r24
    3e96:	f8 01       	movw	r30, r16
    3e98:	31 97       	sbiw	r30, 0x01	; 1
    3e9a:	f1 f7       	brne	.-4      	; 0x3e98 <main+0x1c4>
    3e9c:	8f 01       	movw	r16, r30
    3e9e:	1e ab       	sts	0x5e, r17
    3ea0:	0d ab       	sts	0x5d, r16
		{
			break;
		}
	}		
	linefollwer();
	  for(jjj=55;jjj>15;jjj--)    ////////////////////////////////  arm up
    3ea2:	80 91 85 04 	lds	r24, 0x0485
    3ea6:	81 50       	subi	r24, 0x01	; 1
    3ea8:	80 93 85 04 	sts	0x0485, r24
    3eac:	80 91 85 04 	lds	r24, 0x0485
    3eb0:	80 31       	cpi	r24, 0x10	; 16
    3eb2:	08 f0       	brcs	.+2      	; 0x3eb6 <main+0x1e2>
    3eb4:	72 cf       	rjmp	.-284    	; 0x3d9a <main+0xc6>
	  {
		  servo_1(jjj);
		  _delay_ms(30);
	  }
	for(iii=20;iii<65;iii++)   //////////////////////////////////////  gripper ungrip
    3eb6:	84 e1       	ldi	r24, 0x14	; 20
    3eb8:	80 93 84 04 	sts	0x0484, r24
    3ebc:	bc c0       	rjmp	.+376    	; 0x4036 <main+0x362>
	 {
		 servo_2(iii);
    3ebe:	80 91 84 04 	lds	r24, 0x0484
    3ec2:	0e 94 92 0c 	call	0x1924	; 0x1924 <servo_2>
    3ec6:	80 e0       	ldi	r24, 0x00	; 0
    3ec8:	90 e0       	ldi	r25, 0x00	; 0
    3eca:	a0 ef       	ldi	r26, 0xF0	; 240
    3ecc:	b1 e4       	ldi	r27, 0x41	; 65
    3ece:	8f ab       	sts	0x5f, r24
    3ed0:	98 af       	sts	0x78, r25
    3ed2:	a9 af       	sts	0x79, r26
    3ed4:	ba af       	sts	0x7a, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3ed6:	6f a9       	sts	0x4f, r22
    3ed8:	78 ad       	sts	0x68, r23
    3eda:	89 ad       	sts	0x69, r24
    3edc:	9a ad       	sts	0x6a, r25
    3ede:	26 e6       	ldi	r18, 0x66	; 102
    3ee0:	36 e6       	ldi	r19, 0x66	; 102
    3ee2:	46 e6       	ldi	r20, 0x66	; 102
    3ee4:	55 e4       	ldi	r21, 0x45	; 69
    3ee6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3eea:	dc 01       	movw	r26, r24
    3eec:	cb 01       	movw	r24, r22
    3eee:	8b af       	sts	0x7b, r24
    3ef0:	9c af       	sts	0x7c, r25
    3ef2:	ad af       	sts	0x7d, r26
    3ef4:	be af       	sts	0x7e, r27
	if (__tmp < 1.0)
    3ef6:	11 e0       	ldi	r17, 0x01	; 1
    3ef8:	6b ad       	sts	0x6b, r22
    3efa:	7c ad       	sts	0x6c, r23
    3efc:	8d ad       	sts	0x6d, r24
    3efe:	9e ad       	sts	0x6e, r25
    3f00:	20 e0       	ldi	r18, 0x00	; 0
    3f02:	30 e0       	ldi	r19, 0x00	; 0
    3f04:	40 e8       	ldi	r20, 0x80	; 128
    3f06:	5f e3       	ldi	r21, 0x3F	; 63
    3f08:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    3f0c:	88 23       	and	r24, r24
    3f0e:	0c f0       	brlt	.+2      	; 0x3f12 <main+0x23e>
    3f10:	10 e0       	ldi	r17, 0x00	; 0
    3f12:	11 23       	and	r17, r17
    3f14:	41 f0       	breq	.+16     	; 0x3f26 <main+0x252>
		__ticks = 1;
    3f16:	21 e0       	ldi	r18, 0x01	; 1
    3f18:	30 e0       	ldi	r19, 0x00	; 0
    3f1a:	ce 01       	movw	r24, r28
    3f1c:	cf 96       	adiw	r24, 0x3f	; 63
    3f1e:	fc 01       	movw	r30, r24
    3f20:	31 83       	std	Z+1, r19	; 0x01
    3f22:	20 83       	st	Z, r18
    3f24:	66 c0       	rjmp	.+204    	; 0x3ff2 <main+0x31e>
	else if (__tmp > 65535)
    3f26:	11 e0       	ldi	r17, 0x01	; 1
    3f28:	6b ad       	sts	0x6b, r22
    3f2a:	7c ad       	sts	0x6c, r23
    3f2c:	8d ad       	sts	0x6d, r24
    3f2e:	9e ad       	sts	0x6e, r25
    3f30:	20 e0       	ldi	r18, 0x00	; 0
    3f32:	3f ef       	ldi	r19, 0xFF	; 255
    3f34:	4f e7       	ldi	r20, 0x7F	; 127
    3f36:	57 e4       	ldi	r21, 0x47	; 71
    3f38:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    3f3c:	18 16       	cp	r1, r24
    3f3e:	0c f0       	brlt	.+2      	; 0x3f42 <main+0x26e>
    3f40:	10 e0       	ldi	r17, 0x00	; 0
    3f42:	11 23       	and	r17, r17
    3f44:	09 f4       	brne	.+2      	; 0x3f48 <main+0x274>
    3f46:	47 c0       	rjmp	.+142    	; 0x3fd6 <main+0x302>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f48:	6f a9       	sts	0x4f, r22
    3f4a:	78 ad       	sts	0x68, r23
    3f4c:	89 ad       	sts	0x69, r24
    3f4e:	9a ad       	sts	0x6a, r25
    3f50:	20 e0       	ldi	r18, 0x00	; 0
    3f52:	30 e0       	ldi	r19, 0x00	; 0
    3f54:	40 e2       	ldi	r20, 0x20	; 32
    3f56:	51 e4       	ldi	r21, 0x41	; 65
    3f58:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    3f5c:	dc 01       	movw	r26, r24
    3f5e:	cb 01       	movw	r24, r22
    3f60:	bc 01       	movw	r22, r24
    3f62:	cd 01       	movw	r24, r26
    3f64:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3f68:	dc 01       	movw	r26, r24
    3f6a:	cb 01       	movw	r24, r22
    3f6c:	9e 01       	movw	r18, r28
    3f6e:	21 5c       	subi	r18, 0xC1	; 193
    3f70:	3f 4f       	sbci	r19, 0xFF	; 255
    3f72:	f9 01       	movw	r30, r18
    3f74:	91 83       	std	Z+1, r25	; 0x01
    3f76:	80 83       	st	Z, r24
    3f78:	26 c0       	rjmp	.+76     	; 0x3fc6 <main+0x2f2>
    3f7a:	ce 01       	movw	r24, r28
    3f7c:	8f 5b       	subi	r24, 0xBF	; 191
    3f7e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f80:	20 e7       	ldi	r18, 0x70	; 112
    3f82:	31 e0       	ldi	r19, 0x01	; 1
    3f84:	fc 01       	movw	r30, r24
    3f86:	31 83       	std	Z+1, r19	; 0x01
    3f88:	20 83       	st	Z, r18
    3f8a:	ce 01       	movw	r24, r28
    3f8c:	8f 5b       	subi	r24, 0xBF	; 191
    3f8e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f90:	fc 01       	movw	r30, r24
    3f92:	80 81       	ld	r24, Z
    3f94:	91 81       	ldd	r25, Z+1	; 0x01
    3f96:	8c 01       	movw	r16, r24
    3f98:	c8 01       	movw	r24, r16
    3f9a:	01 97       	sbiw	r24, 0x01	; 1
    3f9c:	f1 f7       	brne	.-4      	; 0x3f9a <main+0x2c6>
    3f9e:	8c 01       	movw	r16, r24
    3fa0:	ce 01       	movw	r24, r28
    3fa2:	8f 5b       	subi	r24, 0xBF	; 191
    3fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    3fa6:	fc 01       	movw	r30, r24
    3fa8:	11 83       	std	Z+1, r17	; 0x01
    3faa:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fac:	ce 01       	movw	r24, r28
    3fae:	cf 96       	adiw	r24, 0x3f	; 63
    3fb0:	fc 01       	movw	r30, r24
    3fb2:	80 81       	ld	r24, Z
    3fb4:	91 81       	ldd	r25, Z+1	; 0x01
    3fb6:	9c 01       	movw	r18, r24
    3fb8:	21 50       	subi	r18, 0x01	; 1
    3fba:	30 40       	sbci	r19, 0x00	; 0
    3fbc:	ce 01       	movw	r24, r28
    3fbe:	cf 96       	adiw	r24, 0x3f	; 63
    3fc0:	fc 01       	movw	r30, r24
    3fc2:	31 83       	std	Z+1, r19	; 0x01
    3fc4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fc6:	ce 01       	movw	r24, r28
    3fc8:	cf 96       	adiw	r24, 0x3f	; 63
    3fca:	fc 01       	movw	r30, r24
    3fcc:	80 81       	ld	r24, Z
    3fce:	91 81       	ldd	r25, Z+1	; 0x01
    3fd0:	00 97       	sbiw	r24, 0x00	; 0
    3fd2:	99 f6       	brne	.-90     	; 0x3f7a <main+0x2a6>
    3fd4:	2b c0       	rjmp	.+86     	; 0x402c <main+0x358>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fd6:	6b ad       	sts	0x6b, r22
    3fd8:	7c ad       	sts	0x6c, r23
    3fda:	8d ad       	sts	0x6d, r24
    3fdc:	9e ad       	sts	0x6e, r25
    3fde:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    3fe2:	dc 01       	movw	r26, r24
    3fe4:	cb 01       	movw	r24, r22
    3fe6:	9e 01       	movw	r18, r28
    3fe8:	21 5c       	subi	r18, 0xC1	; 193
    3fea:	3f 4f       	sbci	r19, 0xFF	; 255
    3fec:	f9 01       	movw	r30, r18
    3fee:	91 83       	std	Z+1, r25	; 0x01
    3ff0:	80 83       	st	Z, r24
    3ff2:	ce 01       	movw	r24, r28
    3ff4:	8d 5b       	subi	r24, 0xBD	; 189
    3ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff8:	9e 01       	movw	r18, r28
    3ffa:	21 5c       	subi	r18, 0xC1	; 193
    3ffc:	3f 4f       	sbci	r19, 0xFF	; 255
    3ffe:	f9 01       	movw	r30, r18
    4000:	20 81       	ld	r18, Z
    4002:	31 81       	ldd	r19, Z+1	; 0x01
    4004:	fc 01       	movw	r30, r24
    4006:	31 83       	std	Z+1, r19	; 0x01
    4008:	20 83       	st	Z, r18
    400a:	ce 01       	movw	r24, r28
    400c:	8d 5b       	subi	r24, 0xBD	; 189
    400e:	9f 4f       	sbci	r25, 0xFF	; 255
    4010:	fc 01       	movw	r30, r24
    4012:	80 81       	ld	r24, Z
    4014:	91 81       	ldd	r25, Z+1	; 0x01
    4016:	8c 01       	movw	r16, r24
    4018:	c8 01       	movw	r24, r16
    401a:	01 97       	sbiw	r24, 0x01	; 1
    401c:	f1 f7       	brne	.-4      	; 0x401a <main+0x346>
    401e:	8c 01       	movw	r16, r24
    4020:	ce 01       	movw	r24, r28
    4022:	8d 5b       	subi	r24, 0xBD	; 189
    4024:	9f 4f       	sbci	r25, 0xFF	; 255
    4026:	fc 01       	movw	r30, r24
    4028:	11 83       	std	Z+1, r17	; 0x01
    402a:	00 83       	st	Z, r16
	  for(jjj=55;jjj>15;jjj--)    ////////////////////////////////  arm up
	  {
		  servo_1(jjj);
		  _delay_ms(30);
	  }
	for(iii=20;iii<65;iii++)   //////////////////////////////////////  gripper ungrip
    402c:	80 91 84 04 	lds	r24, 0x0484
    4030:	8f 5f       	subi	r24, 0xFF	; 255
    4032:	80 93 84 04 	sts	0x0484, r24
    4036:	80 91 84 04 	lds	r24, 0x0484
    403a:	81 34       	cpi	r24, 0x41	; 65
    403c:	08 f4       	brcc	.+2      	; 0x4040 <main+0x36c>
    403e:	3f cf       	rjmp	.-386    	; 0x3ebe <main+0x1ea>
	 {
		 servo_2(iii);
		 _delay_ms(30);
	 }
	int compass=6;
    4040:	86 e0       	ldi	r24, 0x06	; 6
    4042:	90 e0       	ldi	r25, 0x00	; 0
    4044:	9c 83       	std	Y+4, r25	; 0x04
    4046:	8b 83       	std	Y+3, r24	; 0x03
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    int D1[12]={7,9,5,8,2,4,7,1,6,1,2,4};                 ///// change
    4048:	ce 01       	movw	r24, r28
    404a:	8d 57       	subi	r24, 0x7D	; 125
    404c:	99 4f       	sbci	r25, 0xF9	; 249
    404e:	24 e4       	ldi	r18, 0x44	; 68
    4050:	34 e0       	ldi	r19, 0x04	; 4
    4052:	48 e1       	ldi	r20, 0x18	; 24
    4054:	f9 01       	movw	r30, r18
    4056:	00 80       	ld	r0, Z
    4058:	2f 5f       	subi	r18, 0xFF	; 255
    405a:	3f 4f       	sbci	r19, 0xFF	; 255
    405c:	fc 01       	movw	r30, r24
    405e:	00 82       	st	Z, r0
    4060:	01 96       	adiw	r24, 0x01	; 1
    4062:	41 50       	subi	r20, 0x01	; 1
    4064:	44 23       	and	r20, r20
    4066:	b1 f7       	brne	.-20     	; 0x4054 <main+0x380>
	int D2[4][4]={{1,13},{10,16},{12,13},{23,3}};	      ///// change
    4068:	ce 01       	movw	r24, r28
    406a:	85 56       	subi	r24, 0x65	; 101
    406c:	99 4f       	sbci	r25, 0xF9	; 249
    406e:	20 e2       	ldi	r18, 0x20	; 32
    4070:	fc 01       	movw	r30, r24
    4072:	32 2f       	mov	r19, r18
    4074:	11 92       	st	Z+, r1
    4076:	3a 95       	dec	r19
    4078:	e9 f7       	brne	.-6      	; 0x4074 <main+0x3a0>
    407a:	ce 01       	movw	r24, r28
    407c:	85 56       	subi	r24, 0x65	; 101
    407e:	99 4f       	sbci	r25, 0xF9	; 249
    4080:	21 e0       	ldi	r18, 0x01	; 1
    4082:	30 e0       	ldi	r19, 0x00	; 0
    4084:	fc 01       	movw	r30, r24
    4086:	31 83       	std	Z+1, r19	; 0x01
    4088:	20 83       	st	Z, r18
    408a:	ce 01       	movw	r24, r28
    408c:	85 56       	subi	r24, 0x65	; 101
    408e:	99 4f       	sbci	r25, 0xF9	; 249
    4090:	2d e0       	ldi	r18, 0x0D	; 13
    4092:	30 e0       	ldi	r19, 0x00	; 0
    4094:	fc 01       	movw	r30, r24
    4096:	33 83       	std	Z+3, r19	; 0x03
    4098:	22 83       	std	Z+2, r18	; 0x02
    409a:	ce 01       	movw	r24, r28
    409c:	85 56       	subi	r24, 0x65	; 101
    409e:	99 4f       	sbci	r25, 0xF9	; 249
    40a0:	2a e0       	ldi	r18, 0x0A	; 10
    40a2:	30 e0       	ldi	r19, 0x00	; 0
    40a4:	fc 01       	movw	r30, r24
    40a6:	31 87       	std	Z+9, r19	; 0x09
    40a8:	20 87       	std	Z+8, r18	; 0x08
    40aa:	ce 01       	movw	r24, r28
    40ac:	85 56       	subi	r24, 0x65	; 101
    40ae:	99 4f       	sbci	r25, 0xF9	; 249
    40b0:	20 e1       	ldi	r18, 0x10	; 16
    40b2:	30 e0       	ldi	r19, 0x00	; 0
    40b4:	fc 01       	movw	r30, r24
    40b6:	33 87       	std	Z+11, r19	; 0x0b
    40b8:	22 87       	std	Z+10, r18	; 0x0a
    40ba:	ce 01       	movw	r24, r28
    40bc:	85 56       	subi	r24, 0x65	; 101
    40be:	99 4f       	sbci	r25, 0xF9	; 249
    40c0:	2c e0       	ldi	r18, 0x0C	; 12
    40c2:	30 e0       	ldi	r19, 0x00	; 0
    40c4:	fc 01       	movw	r30, r24
    40c6:	31 8b       	std	Z+17, r19	; 0x11
    40c8:	20 8b       	std	Z+16, r18	; 0x10
    40ca:	ce 01       	movw	r24, r28
    40cc:	85 56       	subi	r24, 0x65	; 101
    40ce:	99 4f       	sbci	r25, 0xF9	; 249
    40d0:	2d e0       	ldi	r18, 0x0D	; 13
    40d2:	30 e0       	ldi	r19, 0x00	; 0
    40d4:	fc 01       	movw	r30, r24
    40d6:	33 8b       	std	Z+19, r19	; 0x13
    40d8:	22 8b       	std	Z+18, r18	; 0x12
    40da:	ce 01       	movw	r24, r28
    40dc:	85 56       	subi	r24, 0x65	; 101
    40de:	99 4f       	sbci	r25, 0xF9	; 249
    40e0:	27 e1       	ldi	r18, 0x17	; 23
    40e2:	30 e0       	ldi	r19, 0x00	; 0
    40e4:	fc 01       	movw	r30, r24
    40e6:	31 8f       	std	Z+25, r19	; 0x19
    40e8:	20 8f       	std	Z+24, r18	; 0x18
    40ea:	ce 01       	movw	r24, r28
    40ec:	85 56       	subi	r24, 0x65	; 101
    40ee:	99 4f       	sbci	r25, 0xF9	; 249
    40f0:	23 e0       	ldi	r18, 0x03	; 3
    40f2:	30 e0       	ldi	r19, 0x00	; 0
    40f4:	fc 01       	movw	r30, r24
    40f6:	33 8f       	std	Z+27, r19	; 0x1b
    40f8:	22 8f       	std	Z+26, r18	; 0x1a
	int summ1[12]={7,6,13,9,7,16,5,8,13,1,2,3};           ////  change
    40fa:	ce 01       	movw	r24, r28
    40fc:	85 54       	subi	r24, 0x45	; 69
    40fe:	99 4f       	sbci	r25, 0xF9	; 249
    4100:	2c e5       	ldi	r18, 0x5C	; 92
    4102:	34 e0       	ldi	r19, 0x04	; 4
    4104:	48 e1       	ldi	r20, 0x18	; 24
    4106:	f9 01       	movw	r30, r18
    4108:	00 80       	ld	r0, Z
    410a:	2f 5f       	subi	r18, 0xFF	; 255
    410c:	3f 4f       	sbci	r19, 0xFF	; 255
    410e:	fc 01       	movw	r30, r24
    4110:	00 82       	st	Z, r0
    4112:	01 96       	adiw	r24, 0x01	; 1
    4114:	41 50       	subi	r20, 0x01	; 1
    4116:	44 23       	and	r20, r20
    4118:	b1 f7       	brne	.-20     	; 0x4106 <main+0x432>
	int boxnumber;	
	int final[2];
	int recur=0;
    411a:	18 86       	std	Y+8, r1	; 0x08
    411c:	1f 82       	std	Y+7, r1	; 0x07
	int recur1=0;
    411e:	1a 86       	std	Y+10, r1	; 0x0a
    4120:	19 86       	std	Y+9, r1	; 0x09
	int help=summ1[recur];
    4122:	9e 01       	movw	r18, r28
    4124:	25 54       	subi	r18, 0x45	; 69
    4126:	39 4f       	sbci	r19, 0xF9	; 249
    4128:	8f 81       	ldd	r24, Y+7	; 0x07
    412a:	98 85       	ldd	r25, Y+8	; 0x08
    412c:	88 0f       	add	r24, r24
    412e:	99 1f       	adc	r25, r25
    4130:	82 0f       	add	r24, r18
    4132:	93 1f       	adc	r25, r19
    4134:	fc 01       	movw	r30, r24
    4136:	80 81       	ld	r24, Z
    4138:	91 81       	ldd	r25, Z+1	; 0x01
    413a:	9c 87       	std	Y+12, r25	; 0x0c
    413c:	8b 87       	std	Y+11, r24	; 0x0b
	int flag2=0;
    413e:	1e 86       	std	Y+14, r1	; 0x0e
    4140:	1d 86       	std	Y+13, r1	; 0x0d
	int flag3=0;
    4142:	18 8a       	std	Y+16, r1	; 0x10
    4144:	1f 86       	std	Y+15, r1	; 0x0f
	int flag4=0;
    4146:	1a 8a       	std	Y+18, r1	; 0x12
    4148:	19 8a       	std	Y+17, r1	; 0x11
	
	point1 : if(flag1%2!=0)
    414a:	89 81       	ldd	r24, Y+1	; 0x01
    414c:	9a 81       	ldd	r25, Y+2	; 0x02
    414e:	81 70       	andi	r24, 0x01	; 1
    4150:	90 70       	andi	r25, 0x00	; 0
    4152:	88 23       	and	r24, r24
    4154:	09 f4       	brne	.+2      	; 0x4158 <main+0x484>
    4156:	5b c1       	rjmp	.+694    	; 0x440e <main+0x73a>
	{
		flag4=0;
    4158:	1a 8a       	std	Y+18, r1	; 0x12
    415a:	19 8a       	std	Y+17, r1	; 0x11
		flag3=flag3+1;
    415c:	8f 85       	ldd	r24, Y+15	; 0x0f
    415e:	98 89       	ldd	r25, Y+16	; 0x10
    4160:	01 96       	adiw	r24, 0x01	; 1
    4162:	98 8b       	std	Y+16, r25	; 0x10
    4164:	8f 87       	std	Y+15, r24	; 0x0f
		if(help>=10 || help==3)                           ////// change
    4166:	8b 85       	ldd	r24, Y+11	; 0x0b
    4168:	9c 85       	ldd	r25, Y+12	; 0x0c
    416a:	8a 30       	cpi	r24, 0x0A	; 10
    416c:	91 05       	cpc	r25, r1
    416e:	2c f4       	brge	.+10     	; 0x417a <main+0x4a6>
    4170:	8b 85       	ldd	r24, Y+11	; 0x0b
    4172:	9c 85       	ldd	r25, Y+12	; 0x0c
    4174:	83 30       	cpi	r24, 0x03	; 3
    4176:	91 05       	cpc	r25, r1
    4178:	41 f5       	brne	.+80     	; 0x41ca <main+0x4f6>
		{
			flag3=0;
    417a:	18 8a       	std	Y+16, r1	; 0x10
    417c:	1f 86       	std	Y+15, r1	; 0x0f
			flag2=flag2+1;
    417e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4180:	9e 85       	ldd	r25, Y+14	; 0x0e
    4182:	01 96       	adiw	r24, 0x01	; 1
    4184:	9e 87       	std	Y+14, r25	; 0x0e
    4186:	8d 87       	std	Y+13, r24	; 0x0d
			if(flag2==4)                                  ////// change
    4188:	8d 85       	ldd	r24, Y+13	; 0x0d
    418a:	9e 85       	ldd	r25, Y+14	; 0x0e
    418c:	84 30       	cpi	r24, 0x04	; 4
    418e:	91 05       	cpc	r25, r1
    4190:	21 f4       	brne	.+8      	; 0x419a <main+0x4c6>
			{
				stop();
    4192:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
				goto point2;
    4196:	0c 94 8b 67 	jmp	0xcf16	; 0xcf16 <main+0x9242>
			}
			else
			{
				recur1=recur1+1;
    419a:	89 85       	ldd	r24, Y+9	; 0x09
    419c:	9a 85       	ldd	r25, Y+10	; 0x0a
    419e:	01 96       	adiw	r24, 0x01	; 1
    41a0:	9a 87       	std	Y+10, r25	; 0x0a
    41a2:	89 87       	std	Y+9, r24	; 0x09
				recur=recur+1;
    41a4:	8f 81       	ldd	r24, Y+7	; 0x07
    41a6:	98 85       	ldd	r25, Y+8	; 0x08
    41a8:	01 96       	adiw	r24, 0x01	; 1
    41aa:	98 87       	std	Y+8, r25	; 0x08
    41ac:	8f 83       	std	Y+7, r24	; 0x07
				help=summ1[recur];
    41ae:	9e 01       	movw	r18, r28
    41b0:	25 54       	subi	r18, 0x45	; 69
    41b2:	39 4f       	sbci	r19, 0xF9	; 249
    41b4:	8f 81       	ldd	r24, Y+7	; 0x07
    41b6:	98 85       	ldd	r25, Y+8	; 0x08
    41b8:	88 0f       	add	r24, r24
    41ba:	99 1f       	adc	r25, r25
    41bc:	82 0f       	add	r24, r18
    41be:	93 1f       	adc	r25, r19
    41c0:	fc 01       	movw	r30, r24
    41c2:	80 81       	ld	r24, Z
    41c4:	91 81       	ldd	r25, Z+1	; 0x01
    41c6:	9c 87       	std	Y+12, r25	; 0x0c
    41c8:	8b 87       	std	Y+11, r24	; 0x0b
			}				
		}
		int x1,y1;
		int result,index;
		int arr[4];
		for(int x=0;x<12;x++)
    41ca:	1c 8e       	std	Y+28, r1	; 0x1c
    41cc:	1b 8e       	std	Y+27, r1	; 0x1b
    41ce:	29 c0       	rjmp	.+82     	; 0x4222 <main+0x54e>
		{
			if(D1[x]==help)
    41d0:	9e 01       	movw	r18, r28
    41d2:	2d 57       	subi	r18, 0x7D	; 125
    41d4:	39 4f       	sbci	r19, 0xF9	; 249
    41d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    41da:	88 0f       	add	r24, r24
    41dc:	99 1f       	adc	r25, r25
    41de:	82 0f       	add	r24, r18
    41e0:	93 1f       	adc	r25, r19
    41e2:	fc 01       	movw	r30, r24
    41e4:	20 81       	ld	r18, Z
    41e6:	31 81       	ldd	r19, Z+1	; 0x01
    41e8:	8b 85       	ldd	r24, Y+11	; 0x0b
    41ea:	9c 85       	ldd	r25, Y+12	; 0x0c
    41ec:	28 17       	cp	r18, r24
    41ee:	39 07       	cpc	r19, r25
    41f0:	99 f4       	brne	.+38     	; 0x4218 <main+0x544>
			{
				boxnumber=x;
    41f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    41f6:	9e 83       	std	Y+6, r25	; 0x06
    41f8:	8d 83       	std	Y+5, r24	; 0x05
				D1[x]=-1;
    41fa:	9e 01       	movw	r18, r28
    41fc:	2d 57       	subi	r18, 0x7D	; 125
    41fe:	39 4f       	sbci	r19, 0xF9	; 249
    4200:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4202:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4204:	88 0f       	add	r24, r24
    4206:	99 1f       	adc	r25, r25
    4208:	82 0f       	add	r24, r18
    420a:	93 1f       	adc	r25, r19
    420c:	2f ef       	ldi	r18, 0xFF	; 255
    420e:	3f ef       	ldi	r19, 0xFF	; 255
    4210:	fc 01       	movw	r30, r24
    4212:	31 83       	std	Z+1, r19	; 0x01
    4214:	20 83       	st	Z, r18
				break;
    4216:	0a c0       	rjmp	.+20     	; 0x422c <main+0x558>
			}				
		}
		int x1,y1;
		int result,index;
		int arr[4];
		for(int x=0;x<12;x++)
    4218:	8b 8d       	ldd	r24, Y+27	; 0x1b
    421a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    421c:	01 96       	adiw	r24, 0x01	; 1
    421e:	9c 8f       	std	Y+28, r25	; 0x1c
    4220:	8b 8f       	std	Y+27, r24	; 0x1b
    4222:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4224:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4226:	8c 30       	cpi	r24, 0x0C	; 12
    4228:	91 05       	cpc	r25, r1
    422a:	94 f2       	brlt	.-92     	; 0x41d0 <main+0x4fc>
				boxnumber=x;
				D1[x]=-1;
				break;
			}				
		}
		for(int k=0;k<4;k++)
    422c:	1e 8e       	std	Y+30, r1	; 0x1e
    422e:	1d 8e       	std	Y+29, r1	; 0x1d
    4230:	70 c0       	rjmp	.+224    	; 0x4312 <main+0x63e>
		{
			x1=coor[0]-origin1[boxnumber][k][0];
    4232:	20 91 a6 04 	lds	r18, 0x04A6
    4236:	30 91 a7 04 	lds	r19, 0x04A7
    423a:	ae 01       	movw	r20, r28
    423c:	4d 5b       	subi	r20, 0xBD	; 189
    423e:	5b 4f       	sbci	r21, 0xFB	; 251
    4240:	8d 81       	ldd	r24, Y+5	; 0x05
    4242:	9e 81       	ldd	r25, Y+6	; 0x06
    4244:	bc 01       	movw	r22, r24
    4246:	66 0f       	add	r22, r22
    4248:	77 1f       	adc	r23, r23
    424a:	66 0f       	add	r22, r22
    424c:	77 1f       	adc	r23, r23
    424e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4250:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4252:	86 0f       	add	r24, r22
    4254:	97 1f       	adc	r25, r23
    4256:	88 0f       	add	r24, r24
    4258:	99 1f       	adc	r25, r25
    425a:	88 0f       	add	r24, r24
    425c:	99 1f       	adc	r25, r25
    425e:	84 0f       	add	r24, r20
    4260:	95 1f       	adc	r25, r21
    4262:	fc 01       	movw	r30, r24
    4264:	80 81       	ld	r24, Z
    4266:	91 81       	ldd	r25, Z+1	; 0x01
    4268:	a9 01       	movw	r20, r18
    426a:	48 1b       	sub	r20, r24
    426c:	59 0b       	sbc	r21, r25
    426e:	ca 01       	movw	r24, r20
    4270:	9c 8b       	std	Y+20, r25	; 0x14
    4272:	8b 8b       	std	Y+19, r24	; 0x13
			y1=coor[1]-origin1[boxnumber][k][1];
    4274:	20 91 a8 04 	lds	r18, 0x04A8
    4278:	30 91 a9 04 	lds	r19, 0x04A9
    427c:	ae 01       	movw	r20, r28
    427e:	4d 5b       	subi	r20, 0xBD	; 189
    4280:	5b 4f       	sbci	r21, 0xFB	; 251
    4282:	8d 81       	ldd	r24, Y+5	; 0x05
    4284:	9e 81       	ldd	r25, Y+6	; 0x06
    4286:	bc 01       	movw	r22, r24
    4288:	66 0f       	add	r22, r22
    428a:	77 1f       	adc	r23, r23
    428c:	66 0f       	add	r22, r22
    428e:	77 1f       	adc	r23, r23
    4290:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4292:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4294:	86 0f       	add	r24, r22
    4296:	97 1f       	adc	r25, r23
    4298:	88 0f       	add	r24, r24
    429a:	99 1f       	adc	r25, r25
    429c:	88 0f       	add	r24, r24
    429e:	99 1f       	adc	r25, r25
    42a0:	84 0f       	add	r24, r20
    42a2:	95 1f       	adc	r25, r21
    42a4:	02 96       	adiw	r24, 0x02	; 2
    42a6:	fc 01       	movw	r30, r24
    42a8:	80 81       	ld	r24, Z
    42aa:	91 81       	ldd	r25, Z+1	; 0x01
    42ac:	a9 01       	movw	r20, r18
    42ae:	48 1b       	sub	r20, r24
    42b0:	59 0b       	sbc	r21, r25
    42b2:	ca 01       	movw	r24, r20
    42b4:	9e 8b       	std	Y+22, r25	; 0x16
    42b6:	8d 8b       	std	Y+21, r24	; 0x15
			if(x1<0)
    42b8:	8b 89       	ldd	r24, Y+19	; 0x13
    42ba:	9c 89       	ldd	r25, Y+20	; 0x14
    42bc:	99 23       	and	r25, r25
    42be:	3c f4       	brge	.+14     	; 0x42ce <main+0x5fa>
				x1=x1*-1;
    42c0:	8b 89       	ldd	r24, Y+19	; 0x13
    42c2:	9c 89       	ldd	r25, Y+20	; 0x14
    42c4:	90 95       	com	r25
    42c6:	81 95       	neg	r24
    42c8:	9f 4f       	sbci	r25, 0xFF	; 255
    42ca:	9c 8b       	std	Y+20, r25	; 0x14
    42cc:	8b 8b       	std	Y+19, r24	; 0x13
			if(y1<0)
    42ce:	8d 89       	ldd	r24, Y+21	; 0x15
    42d0:	9e 89       	ldd	r25, Y+22	; 0x16
    42d2:	99 23       	and	r25, r25
    42d4:	3c f4       	brge	.+14     	; 0x42e4 <main+0x610>
				y1=y1*-1;
    42d6:	8d 89       	ldd	r24, Y+21	; 0x15
    42d8:	9e 89       	ldd	r25, Y+22	; 0x16
    42da:	90 95       	com	r25
    42dc:	81 95       	neg	r24
    42de:	9f 4f       	sbci	r25, 0xFF	; 255
    42e0:	9e 8b       	std	Y+22, r25	; 0x16
    42e2:	8d 8b       	std	Y+21, r24	; 0x15
			arr[k]=x1+y1;
    42e4:	2b 89       	ldd	r18, Y+19	; 0x13
    42e6:	3c 89       	ldd	r19, Y+20	; 0x14
    42e8:	8d 89       	ldd	r24, Y+21	; 0x15
    42ea:	9e 89       	ldd	r25, Y+22	; 0x16
    42ec:	28 0f       	add	r18, r24
    42ee:	39 1f       	adc	r19, r25
    42f0:	ae 01       	movw	r20, r28
    42f2:	49 52       	subi	r20, 0x29	; 41
    42f4:	59 4f       	sbci	r21, 0xF9	; 249
    42f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    42f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    42fa:	88 0f       	add	r24, r24
    42fc:	99 1f       	adc	r25, r25
    42fe:	84 0f       	add	r24, r20
    4300:	95 1f       	adc	r25, r21
    4302:	fc 01       	movw	r30, r24
    4304:	31 83       	std	Z+1, r19	; 0x01
    4306:	20 83       	st	Z, r18
				boxnumber=x;
				D1[x]=-1;
				break;
			}				
		}
		for(int k=0;k<4;k++)
    4308:	8d 8d       	ldd	r24, Y+29	; 0x1d
    430a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    430c:	01 96       	adiw	r24, 0x01	; 1
    430e:	9e 8f       	std	Y+30, r25	; 0x1e
    4310:	8d 8f       	std	Y+29, r24	; 0x1d
    4312:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4314:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4316:	84 30       	cpi	r24, 0x04	; 4
    4318:	91 05       	cpc	r25, r1
    431a:	0c f4       	brge	.+2      	; 0x431e <main+0x64a>
    431c:	8a cf       	rjmp	.-236    	; 0x4232 <main+0x55e>
				x1=x1*-1;
			if(y1<0)
				y1=y1*-1;
			arr[k]=x1+y1;
		}
		result=arr[0];
    431e:	ce 01       	movw	r24, r28
    4320:	89 52       	subi	r24, 0x29	; 41
    4322:	99 4f       	sbci	r25, 0xF9	; 249
    4324:	fc 01       	movw	r30, r24
    4326:	80 81       	ld	r24, Z
    4328:	91 81       	ldd	r25, Z+1	; 0x01
    432a:	98 8f       	std	Y+24, r25	; 0x18
    432c:	8f 8b       	std	Y+23, r24	; 0x17
		index=0;
    432e:	1a 8e       	std	Y+26, r1	; 0x1a
    4330:	19 8e       	std	Y+25, r1	; 0x19
		for(int j=1;j<4;j++)
    4332:	81 e0       	ldi	r24, 0x01	; 1
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	98 a3       	lds	r25, 0x58
    4338:	8f 8f       	std	Y+31, r24	; 0x1f
    433a:	28 c0       	rjmp	.+80     	; 0x438c <main+0x6b8>
		{
			if(arr[j]<result)
    433c:	9e 01       	movw	r18, r28
    433e:	29 52       	subi	r18, 0x29	; 41
    4340:	39 4f       	sbci	r19, 0xF9	; 249
    4342:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4344:	98 a1       	lds	r25, 0x48
    4346:	88 0f       	add	r24, r24
    4348:	99 1f       	adc	r25, r25
    434a:	82 0f       	add	r24, r18
    434c:	93 1f       	adc	r25, r19
    434e:	fc 01       	movw	r30, r24
    4350:	20 81       	ld	r18, Z
    4352:	31 81       	ldd	r19, Z+1	; 0x01
    4354:	8f 89       	ldd	r24, Y+23	; 0x17
    4356:	98 8d       	ldd	r25, Y+24	; 0x18
    4358:	28 17       	cp	r18, r24
    435a:	39 07       	cpc	r19, r25
    435c:	94 f4       	brge	.+36     	; 0x4382 <main+0x6ae>
			{
				result=arr[j];
    435e:	9e 01       	movw	r18, r28
    4360:	29 52       	subi	r18, 0x29	; 41
    4362:	39 4f       	sbci	r19, 0xF9	; 249
    4364:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4366:	98 a1       	lds	r25, 0x48
    4368:	88 0f       	add	r24, r24
    436a:	99 1f       	adc	r25, r25
    436c:	82 0f       	add	r24, r18
    436e:	93 1f       	adc	r25, r19
    4370:	fc 01       	movw	r30, r24
    4372:	80 81       	ld	r24, Z
    4374:	91 81       	ldd	r25, Z+1	; 0x01
    4376:	98 8f       	std	Y+24, r25	; 0x18
    4378:	8f 8b       	std	Y+23, r24	; 0x17
				index=j;
    437a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    437c:	98 a1       	lds	r25, 0x48
    437e:	9a 8f       	std	Y+26, r25	; 0x1a
    4380:	89 8f       	std	Y+25, r24	; 0x19
				y1=y1*-1;
			arr[k]=x1+y1;
		}
		result=arr[0];
		index=0;
		for(int j=1;j<4;j++)
    4382:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4384:	98 a1       	lds	r25, 0x48
    4386:	01 96       	adiw	r24, 0x01	; 1
    4388:	98 a3       	lds	r25, 0x58
    438a:	8f 8f       	std	Y+31, r24	; 0x1f
    438c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    438e:	98 a1       	lds	r25, 0x48
    4390:	84 30       	cpi	r24, 0x04	; 4
    4392:	91 05       	cpc	r25, r1
    4394:	9c f2       	brlt	.-90     	; 0x433c <main+0x668>
			{
				result=arr[j];
				index=j;
			}
		}
		final[0]=origin1[boxnumber][index][0];
    4396:	9e 01       	movw	r18, r28
    4398:	2d 5b       	subi	r18, 0xBD	; 189
    439a:	3b 4f       	sbci	r19, 0xFB	; 251
    439c:	8d 81       	ldd	r24, Y+5	; 0x05
    439e:	9e 81       	ldd	r25, Y+6	; 0x06
    43a0:	ac 01       	movw	r20, r24
    43a2:	44 0f       	add	r20, r20
    43a4:	55 1f       	adc	r21, r21
    43a6:	44 0f       	add	r20, r20
    43a8:	55 1f       	adc	r21, r21
    43aa:	89 8d       	ldd	r24, Y+25	; 0x19
    43ac:	9a 8d       	ldd	r25, Y+26	; 0x1a
    43ae:	84 0f       	add	r24, r20
    43b0:	95 1f       	adc	r25, r21
    43b2:	88 0f       	add	r24, r24
    43b4:	99 1f       	adc	r25, r25
    43b6:	88 0f       	add	r24, r24
    43b8:	99 1f       	adc	r25, r25
    43ba:	82 0f       	add	r24, r18
    43bc:	93 1f       	adc	r25, r19
    43be:	fc 01       	movw	r30, r24
    43c0:	20 81       	ld	r18, Z
    43c2:	31 81       	ldd	r19, Z+1	; 0x01
    43c4:	ce 01       	movw	r24, r28
    43c6:	8d 52       	subi	r24, 0x2D	; 45
    43c8:	99 4f       	sbci	r25, 0xF9	; 249
    43ca:	fc 01       	movw	r30, r24
    43cc:	31 83       	std	Z+1, r19	; 0x01
    43ce:	20 83       	st	Z, r18
		final[1]=origin1[boxnumber][index][1];
    43d0:	9e 01       	movw	r18, r28
    43d2:	2d 5b       	subi	r18, 0xBD	; 189
    43d4:	3b 4f       	sbci	r19, 0xFB	; 251
    43d6:	8d 81       	ldd	r24, Y+5	; 0x05
    43d8:	9e 81       	ldd	r25, Y+6	; 0x06
    43da:	ac 01       	movw	r20, r24
    43dc:	44 0f       	add	r20, r20
    43de:	55 1f       	adc	r21, r21
    43e0:	44 0f       	add	r20, r20
    43e2:	55 1f       	adc	r21, r21
    43e4:	89 8d       	ldd	r24, Y+25	; 0x19
    43e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    43e8:	84 0f       	add	r24, r20
    43ea:	95 1f       	adc	r25, r21
    43ec:	88 0f       	add	r24, r24
    43ee:	99 1f       	adc	r25, r25
    43f0:	88 0f       	add	r24, r24
    43f2:	99 1f       	adc	r25, r25
    43f4:	82 0f       	add	r24, r18
    43f6:	93 1f       	adc	r25, r19
    43f8:	02 96       	adiw	r24, 0x02	; 2
    43fa:	fc 01       	movw	r30, r24
    43fc:	20 81       	ld	r18, Z
    43fe:	31 81       	ldd	r19, Z+1	; 0x01
    4400:	ce 01       	movw	r24, r28
    4402:	8d 52       	subi	r24, 0x2D	; 45
    4404:	99 4f       	sbci	r25, 0xF9	; 249
    4406:	fc 01       	movw	r30, r24
    4408:	33 83       	std	Z+3, r19	; 0x03
    440a:	22 83       	std	Z+2, r18	; 0x02
    440c:	46 c0       	rjmp	.+140    	; 0x449a <main+0x7c6>
	}  			
	else
	{
		if(flag1%2==0)
    440e:	89 81       	ldd	r24, Y+1	; 0x01
    4410:	9a 81       	ldd	r25, Y+2	; 0x02
    4412:	81 70       	andi	r24, 0x01	; 1
    4414:	90 70       	andi	r25, 0x00	; 0
    4416:	00 97       	sbiw	r24, 0x00	; 0
    4418:	09 f0       	breq	.+2      	; 0x441c <main+0x748>
    441a:	3f c0       	rjmp	.+126    	; 0x449a <main+0x7c6>
		{
			flag4=0;
    441c:	1a 8a       	std	Y+18, r1	; 0x12
    441e:	19 8a       	std	Y+17, r1	; 0x11
			final[0]=origin2[boxnumber][flag3][0];
    4420:	9e 01       	movw	r18, r28
    4422:	2d 5f       	subi	r18, 0xFD	; 253
    4424:	3a 4f       	sbci	r19, 0xFA	; 250
    4426:	8d 81       	ldd	r24, Y+5	; 0x05
    4428:	9e 81       	ldd	r25, Y+6	; 0x06
    442a:	ac 01       	movw	r20, r24
    442c:	44 0f       	add	r20, r20
    442e:	55 1f       	adc	r21, r21
    4430:	44 0f       	add	r20, r20
    4432:	55 1f       	adc	r21, r21
    4434:	8f 85       	ldd	r24, Y+15	; 0x0f
    4436:	98 89       	ldd	r25, Y+16	; 0x10
    4438:	84 0f       	add	r24, r20
    443a:	95 1f       	adc	r25, r21
    443c:	88 0f       	add	r24, r24
    443e:	99 1f       	adc	r25, r25
    4440:	88 0f       	add	r24, r24
    4442:	99 1f       	adc	r25, r25
    4444:	82 0f       	add	r24, r18
    4446:	93 1f       	adc	r25, r19
    4448:	fc 01       	movw	r30, r24
    444a:	20 81       	ld	r18, Z
    444c:	31 81       	ldd	r19, Z+1	; 0x01
    444e:	ce 01       	movw	r24, r28
    4450:	8d 52       	subi	r24, 0x2D	; 45
    4452:	99 4f       	sbci	r25, 0xF9	; 249
    4454:	fc 01       	movw	r30, r24
    4456:	31 83       	std	Z+1, r19	; 0x01
    4458:	20 83       	st	Z, r18
			final[1]=origin2[boxnumber][flag3][1];
    445a:	9e 01       	movw	r18, r28
    445c:	2d 5f       	subi	r18, 0xFD	; 253
    445e:	3a 4f       	sbci	r19, 0xFA	; 250
    4460:	8d 81       	ldd	r24, Y+5	; 0x05
    4462:	9e 81       	ldd	r25, Y+6	; 0x06
    4464:	ac 01       	movw	r20, r24
    4466:	44 0f       	add	r20, r20
    4468:	55 1f       	adc	r21, r21
    446a:	44 0f       	add	r20, r20
    446c:	55 1f       	adc	r21, r21
    446e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4470:	98 89       	ldd	r25, Y+16	; 0x10
    4472:	84 0f       	add	r24, r20
    4474:	95 1f       	adc	r25, r21
    4476:	88 0f       	add	r24, r24
    4478:	99 1f       	adc	r25, r25
    447a:	88 0f       	add	r24, r24
    447c:	99 1f       	adc	r25, r25
    447e:	82 0f       	add	r24, r18
    4480:	93 1f       	adc	r25, r19
    4482:	02 96       	adiw	r24, 0x02	; 2
    4484:	fc 01       	movw	r30, r24
    4486:	20 81       	ld	r18, Z
    4488:	31 81       	ldd	r19, Z+1	; 0x01
    448a:	ce 01       	movw	r24, r28
    448c:	8d 52       	subi	r24, 0x2D	; 45
    448e:	99 4f       	sbci	r25, 0xF9	; 249
    4490:	fc 01       	movw	r30, r24
    4492:	33 83       	std	Z+3, r19	; 0x03
    4494:	22 83       	std	Z+2, r18	; 0x02
    4496:	01 c0       	rjmp	.+2      	; 0x449a <main+0x7c6>
					else
						break;
				}						
			}					
		}
	}
    4498:	00 00       	nop
	
	
	point : while(1)         ///////////////////////////////////////////////////////////////////////////////////////////////////////
	{
		
		if(final[1]>coor[1])
    449a:	ce 01       	movw	r24, r28
    449c:	8d 52       	subi	r24, 0x2D	; 45
    449e:	99 4f       	sbci	r25, 0xF9	; 249
    44a0:	fc 01       	movw	r30, r24
    44a2:	22 81       	ldd	r18, Z+2	; 0x02
    44a4:	33 81       	ldd	r19, Z+3	; 0x03
    44a6:	80 91 a8 04 	lds	r24, 0x04A8
    44aa:	90 91 a9 04 	lds	r25, 0x04A9
    44ae:	82 17       	cp	r24, r18
    44b0:	93 07       	cpc	r25, r19
    44b2:	0c f0       	brlt	.+2      	; 0x44b6 <main+0x7e2>
    44b4:	27 c6       	rjmp	.+3150   	; 0x5104 <main+0x1430>
		{
			if(compass==4)
    44b6:	8b 81       	ldd	r24, Y+3	; 0x03
    44b8:	9c 81       	ldd	r25, Y+4	; 0x04
    44ba:	84 30       	cpi	r24, 0x04	; 4
    44bc:	91 05       	cpc	r25, r1
    44be:	09 f0       	breq	.+2      	; 0x44c2 <main+0x7ee>
    44c0:	e3 c0       	rjmp	.+454    	; 0x4688 <main+0x9b4>
			{
				coor[1]=coor[1]+1;
    44c2:	80 91 a8 04 	lds	r24, 0x04A8
    44c6:	90 91 a9 04 	lds	r25, 0x04A9
    44ca:	01 96       	adiw	r24, 0x01	; 1
    44cc:	90 93 a9 04 	sts	0x04A9, r25
    44d0:	80 93 a8 04 	sts	0x04A8, r24
				compass=4;
    44d4:	84 e0       	ldi	r24, 0x04	; 4
    44d6:	90 e0       	ldi	r25, 0x00	; 0
    44d8:	9c 83       	std	Y+4, r25	; 0x04
    44da:	8b 83       	std	Y+3, r24	; 0x03
    44dc:	9e 01       	movw	r18, r28
    44de:	2b 5b       	subi	r18, 0xBB	; 187
    44e0:	3f 4f       	sbci	r19, 0xFF	; 255
    44e2:	80 e0       	ldi	r24, 0x00	; 0
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	a8 ec       	ldi	r26, 0xC8	; 200
    44e8:	b2 e4       	ldi	r27, 0x42	; 66
    44ea:	f9 01       	movw	r30, r18
    44ec:	80 83       	st	Z, r24
    44ee:	91 83       	std	Z+1, r25	; 0x01
    44f0:	a2 83       	std	Z+2, r26	; 0x02
    44f2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    44f4:	8e 01       	movw	r16, r28
    44f6:	07 5b       	subi	r16, 0xB7	; 183
    44f8:	1f 4f       	sbci	r17, 0xFF	; 255
    44fa:	ce 01       	movw	r24, r28
    44fc:	8b 5b       	subi	r24, 0xBB	; 187
    44fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4500:	fc 01       	movw	r30, r24
    4502:	60 81       	ld	r22, Z
    4504:	71 81       	ldd	r23, Z+1	; 0x01
    4506:	82 81       	ldd	r24, Z+2	; 0x02
    4508:	93 81       	ldd	r25, Z+3	; 0x03
    450a:	26 e6       	ldi	r18, 0x66	; 102
    450c:	36 e6       	ldi	r19, 0x66	; 102
    450e:	46 e6       	ldi	r20, 0x66	; 102
    4510:	55 e4       	ldi	r21, 0x45	; 69
    4512:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4516:	dc 01       	movw	r26, r24
    4518:	cb 01       	movw	r24, r22
    451a:	f8 01       	movw	r30, r16
    451c:	80 83       	st	Z, r24
    451e:	91 83       	std	Z+1, r25	; 0x01
    4520:	a2 83       	std	Z+2, r26	; 0x02
    4522:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4524:	ce 01       	movw	r24, r28
    4526:	87 5b       	subi	r24, 0xB7	; 183
    4528:	9f 4f       	sbci	r25, 0xFF	; 255
    452a:	11 e0       	ldi	r17, 0x01	; 1
    452c:	fc 01       	movw	r30, r24
    452e:	60 81       	ld	r22, Z
    4530:	71 81       	ldd	r23, Z+1	; 0x01
    4532:	82 81       	ldd	r24, Z+2	; 0x02
    4534:	93 81       	ldd	r25, Z+3	; 0x03
    4536:	20 e0       	ldi	r18, 0x00	; 0
    4538:	30 e0       	ldi	r19, 0x00	; 0
    453a:	40 e8       	ldi	r20, 0x80	; 128
    453c:	5f e3       	ldi	r21, 0x3F	; 63
    453e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4542:	88 23       	and	r24, r24
    4544:	0c f0       	brlt	.+2      	; 0x4548 <main+0x874>
    4546:	10 e0       	ldi	r17, 0x00	; 0
    4548:	11 23       	and	r17, r17
    454a:	49 f0       	breq	.+18     	; 0x455e <main+0x88a>
		__ticks = 1;
    454c:	ce 01       	movw	r24, r28
    454e:	83 5b       	subi	r24, 0xB3	; 179
    4550:	9f 4f       	sbci	r25, 0xFF	; 255
    4552:	21 e0       	ldi	r18, 0x01	; 1
    4554:	30 e0       	ldi	r19, 0x00	; 0
    4556:	fc 01       	movw	r30, r24
    4558:	31 83       	std	Z+1, r19	; 0x01
    455a:	20 83       	st	Z, r18
    455c:	74 c0       	rjmp	.+232    	; 0x4646 <main+0x972>
	else if (__tmp > 65535)
    455e:	ce 01       	movw	r24, r28
    4560:	87 5b       	subi	r24, 0xB7	; 183
    4562:	9f 4f       	sbci	r25, 0xFF	; 255
    4564:	11 e0       	ldi	r17, 0x01	; 1
    4566:	fc 01       	movw	r30, r24
    4568:	60 81       	ld	r22, Z
    456a:	71 81       	ldd	r23, Z+1	; 0x01
    456c:	82 81       	ldd	r24, Z+2	; 0x02
    456e:	93 81       	ldd	r25, Z+3	; 0x03
    4570:	20 e0       	ldi	r18, 0x00	; 0
    4572:	3f ef       	ldi	r19, 0xFF	; 255
    4574:	4f e7       	ldi	r20, 0x7F	; 127
    4576:	57 e4       	ldi	r21, 0x47	; 71
    4578:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    457c:	18 16       	cp	r1, r24
    457e:	0c f0       	brlt	.+2      	; 0x4582 <main+0x8ae>
    4580:	10 e0       	ldi	r17, 0x00	; 0
    4582:	11 23       	and	r17, r17
    4584:	09 f4       	brne	.+2      	; 0x4588 <main+0x8b4>
    4586:	4d c0       	rjmp	.+154    	; 0x4622 <main+0x94e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4588:	ce 01       	movw	r24, r28
    458a:	8b 5b       	subi	r24, 0xBB	; 187
    458c:	9f 4f       	sbci	r25, 0xFF	; 255
    458e:	fc 01       	movw	r30, r24
    4590:	60 81       	ld	r22, Z
    4592:	71 81       	ldd	r23, Z+1	; 0x01
    4594:	82 81       	ldd	r24, Z+2	; 0x02
    4596:	93 81       	ldd	r25, Z+3	; 0x03
    4598:	20 e0       	ldi	r18, 0x00	; 0
    459a:	30 e0       	ldi	r19, 0x00	; 0
    459c:	40 e2       	ldi	r20, 0x20	; 32
    459e:	51 e4       	ldi	r21, 0x41	; 65
    45a0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    45a4:	dc 01       	movw	r26, r24
    45a6:	cb 01       	movw	r24, r22
    45a8:	8e 01       	movw	r16, r28
    45aa:	03 5b       	subi	r16, 0xB3	; 179
    45ac:	1f 4f       	sbci	r17, 0xFF	; 255
    45ae:	bc 01       	movw	r22, r24
    45b0:	cd 01       	movw	r24, r26
    45b2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    45b6:	dc 01       	movw	r26, r24
    45b8:	cb 01       	movw	r24, r22
    45ba:	f8 01       	movw	r30, r16
    45bc:	91 83       	std	Z+1, r25	; 0x01
    45be:	80 83       	st	Z, r24
    45c0:	27 c0       	rjmp	.+78     	; 0x4610 <main+0x93c>
    45c2:	ce 01       	movw	r24, r28
    45c4:	81 5b       	subi	r24, 0xB1	; 177
    45c6:	9f 4f       	sbci	r25, 0xFF	; 255
    45c8:	20 e7       	ldi	r18, 0x70	; 112
    45ca:	31 e0       	ldi	r19, 0x01	; 1
    45cc:	fc 01       	movw	r30, r24
    45ce:	31 83       	std	Z+1, r19	; 0x01
    45d0:	20 83       	st	Z, r18
    45d2:	ce 01       	movw	r24, r28
    45d4:	81 5b       	subi	r24, 0xB1	; 177
    45d6:	9f 4f       	sbci	r25, 0xFF	; 255
    45d8:	fc 01       	movw	r30, r24
    45da:	80 81       	ld	r24, Z
    45dc:	91 81       	ldd	r25, Z+1	; 0x01
    45de:	8c 01       	movw	r16, r24
    45e0:	c8 01       	movw	r24, r16
    45e2:	01 97       	sbiw	r24, 0x01	; 1
    45e4:	f1 f7       	brne	.-4      	; 0x45e2 <main+0x90e>
    45e6:	8c 01       	movw	r16, r24
    45e8:	ce 01       	movw	r24, r28
    45ea:	81 5b       	subi	r24, 0xB1	; 177
    45ec:	9f 4f       	sbci	r25, 0xFF	; 255
    45ee:	fc 01       	movw	r30, r24
    45f0:	11 83       	std	Z+1, r17	; 0x01
    45f2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45f4:	ce 01       	movw	r24, r28
    45f6:	83 5b       	subi	r24, 0xB3	; 179
    45f8:	9f 4f       	sbci	r25, 0xFF	; 255
    45fa:	9e 01       	movw	r18, r28
    45fc:	23 5b       	subi	r18, 0xB3	; 179
    45fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4600:	f9 01       	movw	r30, r18
    4602:	20 81       	ld	r18, Z
    4604:	31 81       	ldd	r19, Z+1	; 0x01
    4606:	21 50       	subi	r18, 0x01	; 1
    4608:	30 40       	sbci	r19, 0x00	; 0
    460a:	fc 01       	movw	r30, r24
    460c:	31 83       	std	Z+1, r19	; 0x01
    460e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4610:	ce 01       	movw	r24, r28
    4612:	83 5b       	subi	r24, 0xB3	; 179
    4614:	9f 4f       	sbci	r25, 0xFF	; 255
    4616:	fc 01       	movw	r30, r24
    4618:	80 81       	ld	r24, Z
    461a:	91 81       	ldd	r25, Z+1	; 0x01
    461c:	00 97       	sbiw	r24, 0x00	; 0
    461e:	89 f6       	brne	.-94     	; 0x45c2 <main+0x8ee>
    4620:	2f c0       	rjmp	.+94     	; 0x4680 <main+0x9ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4622:	8e 01       	movw	r16, r28
    4624:	03 5b       	subi	r16, 0xB3	; 179
    4626:	1f 4f       	sbci	r17, 0xFF	; 255
    4628:	ce 01       	movw	r24, r28
    462a:	87 5b       	subi	r24, 0xB7	; 183
    462c:	9f 4f       	sbci	r25, 0xFF	; 255
    462e:	fc 01       	movw	r30, r24
    4630:	60 81       	ld	r22, Z
    4632:	71 81       	ldd	r23, Z+1	; 0x01
    4634:	82 81       	ldd	r24, Z+2	; 0x02
    4636:	93 81       	ldd	r25, Z+3	; 0x03
    4638:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    463c:	dc 01       	movw	r26, r24
    463e:	cb 01       	movw	r24, r22
    4640:	f8 01       	movw	r30, r16
    4642:	91 83       	std	Z+1, r25	; 0x01
    4644:	80 83       	st	Z, r24
    4646:	ce 01       	movw	r24, r28
    4648:	8f 5a       	subi	r24, 0xAF	; 175
    464a:	9f 4f       	sbci	r25, 0xFF	; 255
    464c:	9e 01       	movw	r18, r28
    464e:	23 5b       	subi	r18, 0xB3	; 179
    4650:	3f 4f       	sbci	r19, 0xFF	; 255
    4652:	f9 01       	movw	r30, r18
    4654:	20 81       	ld	r18, Z
    4656:	31 81       	ldd	r19, Z+1	; 0x01
    4658:	fc 01       	movw	r30, r24
    465a:	31 83       	std	Z+1, r19	; 0x01
    465c:	20 83       	st	Z, r18
    465e:	ce 01       	movw	r24, r28
    4660:	8f 5a       	subi	r24, 0xAF	; 175
    4662:	9f 4f       	sbci	r25, 0xFF	; 255
    4664:	fc 01       	movw	r30, r24
    4666:	80 81       	ld	r24, Z
    4668:	91 81       	ldd	r25, Z+1	; 0x01
    466a:	8c 01       	movw	r16, r24
    466c:	c8 01       	movw	r24, r16
    466e:	01 97       	sbiw	r24, 0x01	; 1
    4670:	f1 f7       	brne	.-4      	; 0x466e <main+0x99a>
    4672:	8c 01       	movw	r16, r24
    4674:	ce 01       	movw	r24, r28
    4676:	8f 5a       	subi	r24, 0xAF	; 175
    4678:	9f 4f       	sbci	r25, 0xFF	; 255
    467a:	fc 01       	movw	r30, r24
    467c:	11 83       	std	Z+1, r17	; 0x01
    467e:	00 83       	st	Z, r16
				_delay_ms(100);
				linefollwer();
    4680:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    4684:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
			}
			else
			{
				
				if(compass==6)
    4688:	8b 81       	ldd	r24, Y+3	; 0x03
    468a:	9c 81       	ldd	r25, Y+4	; 0x04
    468c:	86 30       	cpi	r24, 0x06	; 6
    468e:	91 05       	cpc	r25, r1
    4690:	09 f0       	breq	.+2      	; 0x4694 <main+0x9c0>
    4692:	b9 c1       	rjmp	.+882    	; 0x4a06 <main+0xd32>
				{
					coor[1]=coor[1]+1;
    4694:	80 91 a8 04 	lds	r24, 0x04A8
    4698:	90 91 a9 04 	lds	r25, 0x04A9
    469c:	01 96       	adiw	r24, 0x01	; 1
    469e:	90 93 a9 04 	sts	0x04A9, r25
    46a2:	80 93 a8 04 	sts	0x04A8, r24
					compass=4;
    46a6:	84 e0       	ldi	r24, 0x04	; 4
    46a8:	90 e0       	ldi	r25, 0x00	; 0
    46aa:	9c 83       	std	Y+4, r25	; 0x04
    46ac:	8b 83       	std	Y+3, r24	; 0x03
    46ae:	9e 01       	movw	r18, r28
    46b0:	2d 5a       	subi	r18, 0xAD	; 173
    46b2:	3f 4f       	sbci	r19, 0xFF	; 255
    46b4:	80 e0       	ldi	r24, 0x00	; 0
    46b6:	90 e0       	ldi	r25, 0x00	; 0
    46b8:	aa ef       	ldi	r26, 0xFA	; 250
    46ba:	b3 e4       	ldi	r27, 0x43	; 67
    46bc:	f9 01       	movw	r30, r18
    46be:	80 83       	st	Z, r24
    46c0:	91 83       	std	Z+1, r25	; 0x01
    46c2:	a2 83       	std	Z+2, r26	; 0x02
    46c4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    46c6:	8e 01       	movw	r16, r28
    46c8:	09 5a       	subi	r16, 0xA9	; 169
    46ca:	1f 4f       	sbci	r17, 0xFF	; 255
    46cc:	ce 01       	movw	r24, r28
    46ce:	8d 5a       	subi	r24, 0xAD	; 173
    46d0:	9f 4f       	sbci	r25, 0xFF	; 255
    46d2:	fc 01       	movw	r30, r24
    46d4:	60 81       	ld	r22, Z
    46d6:	71 81       	ldd	r23, Z+1	; 0x01
    46d8:	82 81       	ldd	r24, Z+2	; 0x02
    46da:	93 81       	ldd	r25, Z+3	; 0x03
    46dc:	26 e6       	ldi	r18, 0x66	; 102
    46de:	36 e6       	ldi	r19, 0x66	; 102
    46e0:	46 e6       	ldi	r20, 0x66	; 102
    46e2:	55 e4       	ldi	r21, 0x45	; 69
    46e4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    46e8:	dc 01       	movw	r26, r24
    46ea:	cb 01       	movw	r24, r22
    46ec:	f8 01       	movw	r30, r16
    46ee:	80 83       	st	Z, r24
    46f0:	91 83       	std	Z+1, r25	; 0x01
    46f2:	a2 83       	std	Z+2, r26	; 0x02
    46f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46f6:	ce 01       	movw	r24, r28
    46f8:	89 5a       	subi	r24, 0xA9	; 169
    46fa:	9f 4f       	sbci	r25, 0xFF	; 255
    46fc:	11 e0       	ldi	r17, 0x01	; 1
    46fe:	fc 01       	movw	r30, r24
    4700:	60 81       	ld	r22, Z
    4702:	71 81       	ldd	r23, Z+1	; 0x01
    4704:	82 81       	ldd	r24, Z+2	; 0x02
    4706:	93 81       	ldd	r25, Z+3	; 0x03
    4708:	20 e0       	ldi	r18, 0x00	; 0
    470a:	30 e0       	ldi	r19, 0x00	; 0
    470c:	40 e8       	ldi	r20, 0x80	; 128
    470e:	5f e3       	ldi	r21, 0x3F	; 63
    4710:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4714:	88 23       	and	r24, r24
    4716:	0c f0       	brlt	.+2      	; 0x471a <main+0xa46>
    4718:	10 e0       	ldi	r17, 0x00	; 0
    471a:	11 23       	and	r17, r17
    471c:	49 f0       	breq	.+18     	; 0x4730 <main+0xa5c>
		__ticks = 1;
    471e:	ce 01       	movw	r24, r28
    4720:	85 5a       	subi	r24, 0xA5	; 165
    4722:	9f 4f       	sbci	r25, 0xFF	; 255
    4724:	21 e0       	ldi	r18, 0x01	; 1
    4726:	30 e0       	ldi	r19, 0x00	; 0
    4728:	fc 01       	movw	r30, r24
    472a:	31 83       	std	Z+1, r19	; 0x01
    472c:	20 83       	st	Z, r18
    472e:	74 c0       	rjmp	.+232    	; 0x4818 <main+0xb44>
	else if (__tmp > 65535)
    4730:	ce 01       	movw	r24, r28
    4732:	89 5a       	subi	r24, 0xA9	; 169
    4734:	9f 4f       	sbci	r25, 0xFF	; 255
    4736:	11 e0       	ldi	r17, 0x01	; 1
    4738:	fc 01       	movw	r30, r24
    473a:	60 81       	ld	r22, Z
    473c:	71 81       	ldd	r23, Z+1	; 0x01
    473e:	82 81       	ldd	r24, Z+2	; 0x02
    4740:	93 81       	ldd	r25, Z+3	; 0x03
    4742:	20 e0       	ldi	r18, 0x00	; 0
    4744:	3f ef       	ldi	r19, 0xFF	; 255
    4746:	4f e7       	ldi	r20, 0x7F	; 127
    4748:	57 e4       	ldi	r21, 0x47	; 71
    474a:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    474e:	18 16       	cp	r1, r24
    4750:	0c f0       	brlt	.+2      	; 0x4754 <main+0xa80>
    4752:	10 e0       	ldi	r17, 0x00	; 0
    4754:	11 23       	and	r17, r17
    4756:	09 f4       	brne	.+2      	; 0x475a <main+0xa86>
    4758:	4d c0       	rjmp	.+154    	; 0x47f4 <main+0xb20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    475a:	ce 01       	movw	r24, r28
    475c:	8d 5a       	subi	r24, 0xAD	; 173
    475e:	9f 4f       	sbci	r25, 0xFF	; 255
    4760:	fc 01       	movw	r30, r24
    4762:	60 81       	ld	r22, Z
    4764:	71 81       	ldd	r23, Z+1	; 0x01
    4766:	82 81       	ldd	r24, Z+2	; 0x02
    4768:	93 81       	ldd	r25, Z+3	; 0x03
    476a:	20 e0       	ldi	r18, 0x00	; 0
    476c:	30 e0       	ldi	r19, 0x00	; 0
    476e:	40 e2       	ldi	r20, 0x20	; 32
    4770:	51 e4       	ldi	r21, 0x41	; 65
    4772:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4776:	dc 01       	movw	r26, r24
    4778:	cb 01       	movw	r24, r22
    477a:	8e 01       	movw	r16, r28
    477c:	05 5a       	subi	r16, 0xA5	; 165
    477e:	1f 4f       	sbci	r17, 0xFF	; 255
    4780:	bc 01       	movw	r22, r24
    4782:	cd 01       	movw	r24, r26
    4784:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4788:	dc 01       	movw	r26, r24
    478a:	cb 01       	movw	r24, r22
    478c:	f8 01       	movw	r30, r16
    478e:	91 83       	std	Z+1, r25	; 0x01
    4790:	80 83       	st	Z, r24
    4792:	27 c0       	rjmp	.+78     	; 0x47e2 <main+0xb0e>
    4794:	ce 01       	movw	r24, r28
    4796:	83 5a       	subi	r24, 0xA3	; 163
    4798:	9f 4f       	sbci	r25, 0xFF	; 255
    479a:	20 e7       	ldi	r18, 0x70	; 112
    479c:	31 e0       	ldi	r19, 0x01	; 1
    479e:	fc 01       	movw	r30, r24
    47a0:	31 83       	std	Z+1, r19	; 0x01
    47a2:	20 83       	st	Z, r18
    47a4:	ce 01       	movw	r24, r28
    47a6:	83 5a       	subi	r24, 0xA3	; 163
    47a8:	9f 4f       	sbci	r25, 0xFF	; 255
    47aa:	fc 01       	movw	r30, r24
    47ac:	80 81       	ld	r24, Z
    47ae:	91 81       	ldd	r25, Z+1	; 0x01
    47b0:	8c 01       	movw	r16, r24
    47b2:	c8 01       	movw	r24, r16
    47b4:	01 97       	sbiw	r24, 0x01	; 1
    47b6:	f1 f7       	brne	.-4      	; 0x47b4 <main+0xae0>
    47b8:	8c 01       	movw	r16, r24
    47ba:	ce 01       	movw	r24, r28
    47bc:	83 5a       	subi	r24, 0xA3	; 163
    47be:	9f 4f       	sbci	r25, 0xFF	; 255
    47c0:	fc 01       	movw	r30, r24
    47c2:	11 83       	std	Z+1, r17	; 0x01
    47c4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47c6:	ce 01       	movw	r24, r28
    47c8:	85 5a       	subi	r24, 0xA5	; 165
    47ca:	9f 4f       	sbci	r25, 0xFF	; 255
    47cc:	9e 01       	movw	r18, r28
    47ce:	25 5a       	subi	r18, 0xA5	; 165
    47d0:	3f 4f       	sbci	r19, 0xFF	; 255
    47d2:	f9 01       	movw	r30, r18
    47d4:	20 81       	ld	r18, Z
    47d6:	31 81       	ldd	r19, Z+1	; 0x01
    47d8:	21 50       	subi	r18, 0x01	; 1
    47da:	30 40       	sbci	r19, 0x00	; 0
    47dc:	fc 01       	movw	r30, r24
    47de:	31 83       	std	Z+1, r19	; 0x01
    47e0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47e2:	ce 01       	movw	r24, r28
    47e4:	85 5a       	subi	r24, 0xA5	; 165
    47e6:	9f 4f       	sbci	r25, 0xFF	; 255
    47e8:	fc 01       	movw	r30, r24
    47ea:	80 81       	ld	r24, Z
    47ec:	91 81       	ldd	r25, Z+1	; 0x01
    47ee:	00 97       	sbiw	r24, 0x00	; 0
    47f0:	89 f6       	brne	.-94     	; 0x4794 <main+0xac0>
    47f2:	2f c0       	rjmp	.+94     	; 0x4852 <main+0xb7e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47f4:	8e 01       	movw	r16, r28
    47f6:	05 5a       	subi	r16, 0xA5	; 165
    47f8:	1f 4f       	sbci	r17, 0xFF	; 255
    47fa:	ce 01       	movw	r24, r28
    47fc:	89 5a       	subi	r24, 0xA9	; 169
    47fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4800:	fc 01       	movw	r30, r24
    4802:	60 81       	ld	r22, Z
    4804:	71 81       	ldd	r23, Z+1	; 0x01
    4806:	82 81       	ldd	r24, Z+2	; 0x02
    4808:	93 81       	ldd	r25, Z+3	; 0x03
    480a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    480e:	dc 01       	movw	r26, r24
    4810:	cb 01       	movw	r24, r22
    4812:	f8 01       	movw	r30, r16
    4814:	91 83       	std	Z+1, r25	; 0x01
    4816:	80 83       	st	Z, r24
    4818:	ce 01       	movw	r24, r28
    481a:	81 5a       	subi	r24, 0xA1	; 161
    481c:	9f 4f       	sbci	r25, 0xFF	; 255
    481e:	9e 01       	movw	r18, r28
    4820:	25 5a       	subi	r18, 0xA5	; 165
    4822:	3f 4f       	sbci	r19, 0xFF	; 255
    4824:	f9 01       	movw	r30, r18
    4826:	20 81       	ld	r18, Z
    4828:	31 81       	ldd	r19, Z+1	; 0x01
    482a:	fc 01       	movw	r30, r24
    482c:	31 83       	std	Z+1, r19	; 0x01
    482e:	20 83       	st	Z, r18
    4830:	ce 01       	movw	r24, r28
    4832:	81 5a       	subi	r24, 0xA1	; 161
    4834:	9f 4f       	sbci	r25, 0xFF	; 255
    4836:	fc 01       	movw	r30, r24
    4838:	80 81       	ld	r24, Z
    483a:	91 81       	ldd	r25, Z+1	; 0x01
    483c:	8c 01       	movw	r16, r24
    483e:	c8 01       	movw	r24, r16
    4840:	01 97       	sbiw	r24, 0x01	; 1
    4842:	f1 f7       	brne	.-4      	; 0x4840 <main+0xb6c>
    4844:	8c 01       	movw	r16, r24
    4846:	ce 01       	movw	r24, r28
    4848:	81 5a       	subi	r24, 0xA1	; 161
    484a:	9f 4f       	sbci	r25, 0xFF	; 255
    484c:	fc 01       	movw	r30, r24
    484e:	11 83       	std	Z+1, r17	; 0x01
    4850:	00 83       	st	Z, r16
					_delay_ms(500);
					left_degrees(85);
    4852:	85 e5       	ldi	r24, 0x55	; 85
    4854:	90 e0       	ldi	r25, 0x00	; 0
    4856:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    485a:	9e 01       	movw	r18, r28
    485c:	2f 59       	subi	r18, 0x9F	; 159
    485e:	3f 4f       	sbci	r19, 0xFF	; 255
    4860:	80 e0       	ldi	r24, 0x00	; 0
    4862:	90 e0       	ldi	r25, 0x00	; 0
    4864:	a8 ec       	ldi	r26, 0xC8	; 200
    4866:	b2 e4       	ldi	r27, 0x42	; 66
    4868:	f9 01       	movw	r30, r18
    486a:	80 83       	st	Z, r24
    486c:	91 83       	std	Z+1, r25	; 0x01
    486e:	a2 83       	std	Z+2, r26	; 0x02
    4870:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4872:	8e 01       	movw	r16, r28
    4874:	0b 59       	subi	r16, 0x9B	; 155
    4876:	1f 4f       	sbci	r17, 0xFF	; 255
    4878:	ce 01       	movw	r24, r28
    487a:	8f 59       	subi	r24, 0x9F	; 159
    487c:	9f 4f       	sbci	r25, 0xFF	; 255
    487e:	fc 01       	movw	r30, r24
    4880:	60 81       	ld	r22, Z
    4882:	71 81       	ldd	r23, Z+1	; 0x01
    4884:	82 81       	ldd	r24, Z+2	; 0x02
    4886:	93 81       	ldd	r25, Z+3	; 0x03
    4888:	26 e6       	ldi	r18, 0x66	; 102
    488a:	36 e6       	ldi	r19, 0x66	; 102
    488c:	46 e6       	ldi	r20, 0x66	; 102
    488e:	55 e4       	ldi	r21, 0x45	; 69
    4890:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4894:	dc 01       	movw	r26, r24
    4896:	cb 01       	movw	r24, r22
    4898:	f8 01       	movw	r30, r16
    489a:	80 83       	st	Z, r24
    489c:	91 83       	std	Z+1, r25	; 0x01
    489e:	a2 83       	std	Z+2, r26	; 0x02
    48a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    48a2:	ce 01       	movw	r24, r28
    48a4:	8b 59       	subi	r24, 0x9B	; 155
    48a6:	9f 4f       	sbci	r25, 0xFF	; 255
    48a8:	11 e0       	ldi	r17, 0x01	; 1
    48aa:	fc 01       	movw	r30, r24
    48ac:	60 81       	ld	r22, Z
    48ae:	71 81       	ldd	r23, Z+1	; 0x01
    48b0:	82 81       	ldd	r24, Z+2	; 0x02
    48b2:	93 81       	ldd	r25, Z+3	; 0x03
    48b4:	20 e0       	ldi	r18, 0x00	; 0
    48b6:	30 e0       	ldi	r19, 0x00	; 0
    48b8:	40 e8       	ldi	r20, 0x80	; 128
    48ba:	5f e3       	ldi	r21, 0x3F	; 63
    48bc:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    48c0:	88 23       	and	r24, r24
    48c2:	0c f0       	brlt	.+2      	; 0x48c6 <main+0xbf2>
    48c4:	10 e0       	ldi	r17, 0x00	; 0
    48c6:	11 23       	and	r17, r17
    48c8:	49 f0       	breq	.+18     	; 0x48dc <main+0xc08>
		__ticks = 1;
    48ca:	ce 01       	movw	r24, r28
    48cc:	87 59       	subi	r24, 0x97	; 151
    48ce:	9f 4f       	sbci	r25, 0xFF	; 255
    48d0:	21 e0       	ldi	r18, 0x01	; 1
    48d2:	30 e0       	ldi	r19, 0x00	; 0
    48d4:	fc 01       	movw	r30, r24
    48d6:	31 83       	std	Z+1, r19	; 0x01
    48d8:	20 83       	st	Z, r18
    48da:	74 c0       	rjmp	.+232    	; 0x49c4 <main+0xcf0>
	else if (__tmp > 65535)
    48dc:	ce 01       	movw	r24, r28
    48de:	8b 59       	subi	r24, 0x9B	; 155
    48e0:	9f 4f       	sbci	r25, 0xFF	; 255
    48e2:	11 e0       	ldi	r17, 0x01	; 1
    48e4:	fc 01       	movw	r30, r24
    48e6:	60 81       	ld	r22, Z
    48e8:	71 81       	ldd	r23, Z+1	; 0x01
    48ea:	82 81       	ldd	r24, Z+2	; 0x02
    48ec:	93 81       	ldd	r25, Z+3	; 0x03
    48ee:	20 e0       	ldi	r18, 0x00	; 0
    48f0:	3f ef       	ldi	r19, 0xFF	; 255
    48f2:	4f e7       	ldi	r20, 0x7F	; 127
    48f4:	57 e4       	ldi	r21, 0x47	; 71
    48f6:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    48fa:	18 16       	cp	r1, r24
    48fc:	0c f0       	brlt	.+2      	; 0x4900 <main+0xc2c>
    48fe:	10 e0       	ldi	r17, 0x00	; 0
    4900:	11 23       	and	r17, r17
    4902:	09 f4       	brne	.+2      	; 0x4906 <main+0xc32>
    4904:	4d c0       	rjmp	.+154    	; 0x49a0 <main+0xccc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4906:	ce 01       	movw	r24, r28
    4908:	8f 59       	subi	r24, 0x9F	; 159
    490a:	9f 4f       	sbci	r25, 0xFF	; 255
    490c:	fc 01       	movw	r30, r24
    490e:	60 81       	ld	r22, Z
    4910:	71 81       	ldd	r23, Z+1	; 0x01
    4912:	82 81       	ldd	r24, Z+2	; 0x02
    4914:	93 81       	ldd	r25, Z+3	; 0x03
    4916:	20 e0       	ldi	r18, 0x00	; 0
    4918:	30 e0       	ldi	r19, 0x00	; 0
    491a:	40 e2       	ldi	r20, 0x20	; 32
    491c:	51 e4       	ldi	r21, 0x41	; 65
    491e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4922:	dc 01       	movw	r26, r24
    4924:	cb 01       	movw	r24, r22
    4926:	8e 01       	movw	r16, r28
    4928:	07 59       	subi	r16, 0x97	; 151
    492a:	1f 4f       	sbci	r17, 0xFF	; 255
    492c:	bc 01       	movw	r22, r24
    492e:	cd 01       	movw	r24, r26
    4930:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4934:	dc 01       	movw	r26, r24
    4936:	cb 01       	movw	r24, r22
    4938:	f8 01       	movw	r30, r16
    493a:	91 83       	std	Z+1, r25	; 0x01
    493c:	80 83       	st	Z, r24
    493e:	27 c0       	rjmp	.+78     	; 0x498e <main+0xcba>
    4940:	ce 01       	movw	r24, r28
    4942:	85 59       	subi	r24, 0x95	; 149
    4944:	9f 4f       	sbci	r25, 0xFF	; 255
    4946:	20 e7       	ldi	r18, 0x70	; 112
    4948:	31 e0       	ldi	r19, 0x01	; 1
    494a:	fc 01       	movw	r30, r24
    494c:	31 83       	std	Z+1, r19	; 0x01
    494e:	20 83       	st	Z, r18
    4950:	ce 01       	movw	r24, r28
    4952:	85 59       	subi	r24, 0x95	; 149
    4954:	9f 4f       	sbci	r25, 0xFF	; 255
    4956:	fc 01       	movw	r30, r24
    4958:	80 81       	ld	r24, Z
    495a:	91 81       	ldd	r25, Z+1	; 0x01
    495c:	8c 01       	movw	r16, r24
    495e:	c8 01       	movw	r24, r16
    4960:	01 97       	sbiw	r24, 0x01	; 1
    4962:	f1 f7       	brne	.-4      	; 0x4960 <main+0xc8c>
    4964:	8c 01       	movw	r16, r24
    4966:	ce 01       	movw	r24, r28
    4968:	85 59       	subi	r24, 0x95	; 149
    496a:	9f 4f       	sbci	r25, 0xFF	; 255
    496c:	fc 01       	movw	r30, r24
    496e:	11 83       	std	Z+1, r17	; 0x01
    4970:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4972:	ce 01       	movw	r24, r28
    4974:	87 59       	subi	r24, 0x97	; 151
    4976:	9f 4f       	sbci	r25, 0xFF	; 255
    4978:	9e 01       	movw	r18, r28
    497a:	27 59       	subi	r18, 0x97	; 151
    497c:	3f 4f       	sbci	r19, 0xFF	; 255
    497e:	f9 01       	movw	r30, r18
    4980:	20 81       	ld	r18, Z
    4982:	31 81       	ldd	r19, Z+1	; 0x01
    4984:	21 50       	subi	r18, 0x01	; 1
    4986:	30 40       	sbci	r19, 0x00	; 0
    4988:	fc 01       	movw	r30, r24
    498a:	31 83       	std	Z+1, r19	; 0x01
    498c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    498e:	ce 01       	movw	r24, r28
    4990:	87 59       	subi	r24, 0x97	; 151
    4992:	9f 4f       	sbci	r25, 0xFF	; 255
    4994:	fc 01       	movw	r30, r24
    4996:	80 81       	ld	r24, Z
    4998:	91 81       	ldd	r25, Z+1	; 0x01
    499a:	00 97       	sbiw	r24, 0x00	; 0
    499c:	89 f6       	brne	.-94     	; 0x4940 <main+0xc6c>
    499e:	2f c0       	rjmp	.+94     	; 0x49fe <main+0xd2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49a0:	8e 01       	movw	r16, r28
    49a2:	07 59       	subi	r16, 0x97	; 151
    49a4:	1f 4f       	sbci	r17, 0xFF	; 255
    49a6:	ce 01       	movw	r24, r28
    49a8:	8b 59       	subi	r24, 0x9B	; 155
    49aa:	9f 4f       	sbci	r25, 0xFF	; 255
    49ac:	fc 01       	movw	r30, r24
    49ae:	60 81       	ld	r22, Z
    49b0:	71 81       	ldd	r23, Z+1	; 0x01
    49b2:	82 81       	ldd	r24, Z+2	; 0x02
    49b4:	93 81       	ldd	r25, Z+3	; 0x03
    49b6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    49ba:	dc 01       	movw	r26, r24
    49bc:	cb 01       	movw	r24, r22
    49be:	f8 01       	movw	r30, r16
    49c0:	91 83       	std	Z+1, r25	; 0x01
    49c2:	80 83       	st	Z, r24
    49c4:	ce 01       	movw	r24, r28
    49c6:	83 59       	subi	r24, 0x93	; 147
    49c8:	9f 4f       	sbci	r25, 0xFF	; 255
    49ca:	9e 01       	movw	r18, r28
    49cc:	27 59       	subi	r18, 0x97	; 151
    49ce:	3f 4f       	sbci	r19, 0xFF	; 255
    49d0:	f9 01       	movw	r30, r18
    49d2:	20 81       	ld	r18, Z
    49d4:	31 81       	ldd	r19, Z+1	; 0x01
    49d6:	fc 01       	movw	r30, r24
    49d8:	31 83       	std	Z+1, r19	; 0x01
    49da:	20 83       	st	Z, r18
    49dc:	ce 01       	movw	r24, r28
    49de:	83 59       	subi	r24, 0x93	; 147
    49e0:	9f 4f       	sbci	r25, 0xFF	; 255
    49e2:	fc 01       	movw	r30, r24
    49e4:	80 81       	ld	r24, Z
    49e6:	91 81       	ldd	r25, Z+1	; 0x01
    49e8:	8c 01       	movw	r16, r24
    49ea:	c8 01       	movw	r24, r16
    49ec:	01 97       	sbiw	r24, 0x01	; 1
    49ee:	f1 f7       	brne	.-4      	; 0x49ec <main+0xd18>
    49f0:	8c 01       	movw	r16, r24
    49f2:	ce 01       	movw	r24, r28
    49f4:	83 59       	subi	r24, 0x93	; 147
    49f6:	9f 4f       	sbci	r25, 0xFF	; 255
    49f8:	fc 01       	movw	r30, r24
    49fa:	11 83       	std	Z+1, r17	; 0x01
    49fc:	00 83       	st	Z, r16
					_delay_ms(100);
					linefollwer();
    49fe:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    4a02:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
				}
				else
				{
					if(compass==7)
    4a06:	8b 81       	ldd	r24, Y+3	; 0x03
    4a08:	9c 81       	ldd	r25, Y+4	; 0x04
    4a0a:	87 30       	cpi	r24, 0x07	; 7
    4a0c:	91 05       	cpc	r25, r1
    4a0e:	09 f0       	breq	.+2      	; 0x4a12 <main+0xd3e>
    4a10:	b9 c1       	rjmp	.+882    	; 0x4d84 <main+0x10b0>
					{
						coor[1]=coor[1]+1;
    4a12:	80 91 a8 04 	lds	r24, 0x04A8
    4a16:	90 91 a9 04 	lds	r25, 0x04A9
    4a1a:	01 96       	adiw	r24, 0x01	; 1
    4a1c:	90 93 a9 04 	sts	0x04A9, r25
    4a20:	80 93 a8 04 	sts	0x04A8, r24
						compass=4;
    4a24:	84 e0       	ldi	r24, 0x04	; 4
    4a26:	90 e0       	ldi	r25, 0x00	; 0
    4a28:	9c 83       	std	Y+4, r25	; 0x04
    4a2a:	8b 83       	std	Y+3, r24	; 0x03
    4a2c:	9e 01       	movw	r18, r28
    4a2e:	21 59       	subi	r18, 0x91	; 145
    4a30:	3f 4f       	sbci	r19, 0xFF	; 255
    4a32:	80 e0       	ldi	r24, 0x00	; 0
    4a34:	90 e0       	ldi	r25, 0x00	; 0
    4a36:	aa ef       	ldi	r26, 0xFA	; 250
    4a38:	b3 e4       	ldi	r27, 0x43	; 67
    4a3a:	f9 01       	movw	r30, r18
    4a3c:	80 83       	st	Z, r24
    4a3e:	91 83       	std	Z+1, r25	; 0x01
    4a40:	a2 83       	std	Z+2, r26	; 0x02
    4a42:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4a44:	8e 01       	movw	r16, r28
    4a46:	0d 58       	subi	r16, 0x8D	; 141
    4a48:	1f 4f       	sbci	r17, 0xFF	; 255
    4a4a:	ce 01       	movw	r24, r28
    4a4c:	81 59       	subi	r24, 0x91	; 145
    4a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    4a50:	fc 01       	movw	r30, r24
    4a52:	60 81       	ld	r22, Z
    4a54:	71 81       	ldd	r23, Z+1	; 0x01
    4a56:	82 81       	ldd	r24, Z+2	; 0x02
    4a58:	93 81       	ldd	r25, Z+3	; 0x03
    4a5a:	26 e6       	ldi	r18, 0x66	; 102
    4a5c:	36 e6       	ldi	r19, 0x66	; 102
    4a5e:	46 e6       	ldi	r20, 0x66	; 102
    4a60:	55 e4       	ldi	r21, 0x45	; 69
    4a62:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4a66:	dc 01       	movw	r26, r24
    4a68:	cb 01       	movw	r24, r22
    4a6a:	f8 01       	movw	r30, r16
    4a6c:	80 83       	st	Z, r24
    4a6e:	91 83       	std	Z+1, r25	; 0x01
    4a70:	a2 83       	std	Z+2, r26	; 0x02
    4a72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a74:	ce 01       	movw	r24, r28
    4a76:	8d 58       	subi	r24, 0x8D	; 141
    4a78:	9f 4f       	sbci	r25, 0xFF	; 255
    4a7a:	11 e0       	ldi	r17, 0x01	; 1
    4a7c:	fc 01       	movw	r30, r24
    4a7e:	60 81       	ld	r22, Z
    4a80:	71 81       	ldd	r23, Z+1	; 0x01
    4a82:	82 81       	ldd	r24, Z+2	; 0x02
    4a84:	93 81       	ldd	r25, Z+3	; 0x03
    4a86:	20 e0       	ldi	r18, 0x00	; 0
    4a88:	30 e0       	ldi	r19, 0x00	; 0
    4a8a:	40 e8       	ldi	r20, 0x80	; 128
    4a8c:	5f e3       	ldi	r21, 0x3F	; 63
    4a8e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4a92:	88 23       	and	r24, r24
    4a94:	0c f0       	brlt	.+2      	; 0x4a98 <main+0xdc4>
    4a96:	10 e0       	ldi	r17, 0x00	; 0
    4a98:	11 23       	and	r17, r17
    4a9a:	49 f0       	breq	.+18     	; 0x4aae <main+0xdda>
		__ticks = 1;
    4a9c:	ce 01       	movw	r24, r28
    4a9e:	89 58       	subi	r24, 0x89	; 137
    4aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    4aa2:	21 e0       	ldi	r18, 0x01	; 1
    4aa4:	30 e0       	ldi	r19, 0x00	; 0
    4aa6:	fc 01       	movw	r30, r24
    4aa8:	31 83       	std	Z+1, r19	; 0x01
    4aaa:	20 83       	st	Z, r18
    4aac:	74 c0       	rjmp	.+232    	; 0x4b96 <main+0xec2>
	else if (__tmp > 65535)
    4aae:	ce 01       	movw	r24, r28
    4ab0:	8d 58       	subi	r24, 0x8D	; 141
    4ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    4ab4:	11 e0       	ldi	r17, 0x01	; 1
    4ab6:	fc 01       	movw	r30, r24
    4ab8:	60 81       	ld	r22, Z
    4aba:	71 81       	ldd	r23, Z+1	; 0x01
    4abc:	82 81       	ldd	r24, Z+2	; 0x02
    4abe:	93 81       	ldd	r25, Z+3	; 0x03
    4ac0:	20 e0       	ldi	r18, 0x00	; 0
    4ac2:	3f ef       	ldi	r19, 0xFF	; 255
    4ac4:	4f e7       	ldi	r20, 0x7F	; 127
    4ac6:	57 e4       	ldi	r21, 0x47	; 71
    4ac8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    4acc:	18 16       	cp	r1, r24
    4ace:	0c f0       	brlt	.+2      	; 0x4ad2 <main+0xdfe>
    4ad0:	10 e0       	ldi	r17, 0x00	; 0
    4ad2:	11 23       	and	r17, r17
    4ad4:	09 f4       	brne	.+2      	; 0x4ad8 <main+0xe04>
    4ad6:	4d c0       	rjmp	.+154    	; 0x4b72 <main+0xe9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ad8:	ce 01       	movw	r24, r28
    4ada:	81 59       	subi	r24, 0x91	; 145
    4adc:	9f 4f       	sbci	r25, 0xFF	; 255
    4ade:	fc 01       	movw	r30, r24
    4ae0:	60 81       	ld	r22, Z
    4ae2:	71 81       	ldd	r23, Z+1	; 0x01
    4ae4:	82 81       	ldd	r24, Z+2	; 0x02
    4ae6:	93 81       	ldd	r25, Z+3	; 0x03
    4ae8:	20 e0       	ldi	r18, 0x00	; 0
    4aea:	30 e0       	ldi	r19, 0x00	; 0
    4aec:	40 e2       	ldi	r20, 0x20	; 32
    4aee:	51 e4       	ldi	r21, 0x41	; 65
    4af0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4af4:	dc 01       	movw	r26, r24
    4af6:	cb 01       	movw	r24, r22
    4af8:	8e 01       	movw	r16, r28
    4afa:	09 58       	subi	r16, 0x89	; 137
    4afc:	1f 4f       	sbci	r17, 0xFF	; 255
    4afe:	bc 01       	movw	r22, r24
    4b00:	cd 01       	movw	r24, r26
    4b02:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4b06:	dc 01       	movw	r26, r24
    4b08:	cb 01       	movw	r24, r22
    4b0a:	f8 01       	movw	r30, r16
    4b0c:	91 83       	std	Z+1, r25	; 0x01
    4b0e:	80 83       	st	Z, r24
    4b10:	27 c0       	rjmp	.+78     	; 0x4b60 <main+0xe8c>
    4b12:	ce 01       	movw	r24, r28
    4b14:	87 58       	subi	r24, 0x87	; 135
    4b16:	9f 4f       	sbci	r25, 0xFF	; 255
    4b18:	20 e7       	ldi	r18, 0x70	; 112
    4b1a:	31 e0       	ldi	r19, 0x01	; 1
    4b1c:	fc 01       	movw	r30, r24
    4b1e:	31 83       	std	Z+1, r19	; 0x01
    4b20:	20 83       	st	Z, r18
    4b22:	ce 01       	movw	r24, r28
    4b24:	87 58       	subi	r24, 0x87	; 135
    4b26:	9f 4f       	sbci	r25, 0xFF	; 255
    4b28:	fc 01       	movw	r30, r24
    4b2a:	80 81       	ld	r24, Z
    4b2c:	91 81       	ldd	r25, Z+1	; 0x01
    4b2e:	8c 01       	movw	r16, r24
    4b30:	c8 01       	movw	r24, r16
    4b32:	01 97       	sbiw	r24, 0x01	; 1
    4b34:	f1 f7       	brne	.-4      	; 0x4b32 <main+0xe5e>
    4b36:	8c 01       	movw	r16, r24
    4b38:	ce 01       	movw	r24, r28
    4b3a:	87 58       	subi	r24, 0x87	; 135
    4b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    4b3e:	fc 01       	movw	r30, r24
    4b40:	11 83       	std	Z+1, r17	; 0x01
    4b42:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b44:	ce 01       	movw	r24, r28
    4b46:	89 58       	subi	r24, 0x89	; 137
    4b48:	9f 4f       	sbci	r25, 0xFF	; 255
    4b4a:	9e 01       	movw	r18, r28
    4b4c:	29 58       	subi	r18, 0x89	; 137
    4b4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b50:	f9 01       	movw	r30, r18
    4b52:	20 81       	ld	r18, Z
    4b54:	31 81       	ldd	r19, Z+1	; 0x01
    4b56:	21 50       	subi	r18, 0x01	; 1
    4b58:	30 40       	sbci	r19, 0x00	; 0
    4b5a:	fc 01       	movw	r30, r24
    4b5c:	31 83       	std	Z+1, r19	; 0x01
    4b5e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b60:	ce 01       	movw	r24, r28
    4b62:	89 58       	subi	r24, 0x89	; 137
    4b64:	9f 4f       	sbci	r25, 0xFF	; 255
    4b66:	fc 01       	movw	r30, r24
    4b68:	80 81       	ld	r24, Z
    4b6a:	91 81       	ldd	r25, Z+1	; 0x01
    4b6c:	00 97       	sbiw	r24, 0x00	; 0
    4b6e:	89 f6       	brne	.-94     	; 0x4b12 <main+0xe3e>
    4b70:	2f c0       	rjmp	.+94     	; 0x4bd0 <main+0xefc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b72:	8e 01       	movw	r16, r28
    4b74:	09 58       	subi	r16, 0x89	; 137
    4b76:	1f 4f       	sbci	r17, 0xFF	; 255
    4b78:	ce 01       	movw	r24, r28
    4b7a:	8d 58       	subi	r24, 0x8D	; 141
    4b7c:	9f 4f       	sbci	r25, 0xFF	; 255
    4b7e:	fc 01       	movw	r30, r24
    4b80:	60 81       	ld	r22, Z
    4b82:	71 81       	ldd	r23, Z+1	; 0x01
    4b84:	82 81       	ldd	r24, Z+2	; 0x02
    4b86:	93 81       	ldd	r25, Z+3	; 0x03
    4b88:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4b8c:	dc 01       	movw	r26, r24
    4b8e:	cb 01       	movw	r24, r22
    4b90:	f8 01       	movw	r30, r16
    4b92:	91 83       	std	Z+1, r25	; 0x01
    4b94:	80 83       	st	Z, r24
    4b96:	ce 01       	movw	r24, r28
    4b98:	85 58       	subi	r24, 0x85	; 133
    4b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    4b9c:	9e 01       	movw	r18, r28
    4b9e:	29 58       	subi	r18, 0x89	; 137
    4ba0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ba2:	f9 01       	movw	r30, r18
    4ba4:	20 81       	ld	r18, Z
    4ba6:	31 81       	ldd	r19, Z+1	; 0x01
    4ba8:	fc 01       	movw	r30, r24
    4baa:	31 83       	std	Z+1, r19	; 0x01
    4bac:	20 83       	st	Z, r18
    4bae:	ce 01       	movw	r24, r28
    4bb0:	85 58       	subi	r24, 0x85	; 133
    4bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    4bb4:	fc 01       	movw	r30, r24
    4bb6:	80 81       	ld	r24, Z
    4bb8:	91 81       	ldd	r25, Z+1	; 0x01
    4bba:	8c 01       	movw	r16, r24
    4bbc:	c8 01       	movw	r24, r16
    4bbe:	01 97       	sbiw	r24, 0x01	; 1
    4bc0:	f1 f7       	brne	.-4      	; 0x4bbe <main+0xeea>
    4bc2:	8c 01       	movw	r16, r24
    4bc4:	ce 01       	movw	r24, r28
    4bc6:	85 58       	subi	r24, 0x85	; 133
    4bc8:	9f 4f       	sbci	r25, 0xFF	; 255
    4bca:	fc 01       	movw	r30, r24
    4bcc:	11 83       	std	Z+1, r17	; 0x01
    4bce:	00 83       	st	Z, r16
						_delay_ms(500);
						right_degrees(85);
    4bd0:	85 e5       	ldi	r24, 0x55	; 85
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    4bd8:	9e 01       	movw	r18, r28
    4bda:	23 58       	subi	r18, 0x83	; 131
    4bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    4bde:	80 e0       	ldi	r24, 0x00	; 0
    4be0:	90 e0       	ldi	r25, 0x00	; 0
    4be2:	a8 ec       	ldi	r26, 0xC8	; 200
    4be4:	b2 e4       	ldi	r27, 0x42	; 66
    4be6:	f9 01       	movw	r30, r18
    4be8:	80 83       	st	Z, r24
    4bea:	91 83       	std	Z+1, r25	; 0x01
    4bec:	a2 83       	std	Z+2, r26	; 0x02
    4bee:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4bf0:	8e 01       	movw	r16, r28
    4bf2:	0f 57       	subi	r16, 0x7F	; 127
    4bf4:	1f 4f       	sbci	r17, 0xFF	; 255
    4bf6:	ce 01       	movw	r24, r28
    4bf8:	83 58       	subi	r24, 0x83	; 131
    4bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    4bfc:	fc 01       	movw	r30, r24
    4bfe:	60 81       	ld	r22, Z
    4c00:	71 81       	ldd	r23, Z+1	; 0x01
    4c02:	82 81       	ldd	r24, Z+2	; 0x02
    4c04:	93 81       	ldd	r25, Z+3	; 0x03
    4c06:	26 e6       	ldi	r18, 0x66	; 102
    4c08:	36 e6       	ldi	r19, 0x66	; 102
    4c0a:	46 e6       	ldi	r20, 0x66	; 102
    4c0c:	55 e4       	ldi	r21, 0x45	; 69
    4c0e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4c12:	dc 01       	movw	r26, r24
    4c14:	cb 01       	movw	r24, r22
    4c16:	f8 01       	movw	r30, r16
    4c18:	80 83       	st	Z, r24
    4c1a:	91 83       	std	Z+1, r25	; 0x01
    4c1c:	a2 83       	std	Z+2, r26	; 0x02
    4c1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c20:	ce 01       	movw	r24, r28
    4c22:	8f 57       	subi	r24, 0x7F	; 127
    4c24:	9f 4f       	sbci	r25, 0xFF	; 255
    4c26:	11 e0       	ldi	r17, 0x01	; 1
    4c28:	fc 01       	movw	r30, r24
    4c2a:	60 81       	ld	r22, Z
    4c2c:	71 81       	ldd	r23, Z+1	; 0x01
    4c2e:	82 81       	ldd	r24, Z+2	; 0x02
    4c30:	93 81       	ldd	r25, Z+3	; 0x03
    4c32:	20 e0       	ldi	r18, 0x00	; 0
    4c34:	30 e0       	ldi	r19, 0x00	; 0
    4c36:	40 e8       	ldi	r20, 0x80	; 128
    4c38:	5f e3       	ldi	r21, 0x3F	; 63
    4c3a:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4c3e:	88 23       	and	r24, r24
    4c40:	0c f0       	brlt	.+2      	; 0x4c44 <main+0xf70>
    4c42:	10 e0       	ldi	r17, 0x00	; 0
    4c44:	11 23       	and	r17, r17
    4c46:	49 f0       	breq	.+18     	; 0x4c5a <main+0xf86>
		__ticks = 1;
    4c48:	ce 01       	movw	r24, r28
    4c4a:	8b 57       	subi	r24, 0x7B	; 123
    4c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    4c4e:	21 e0       	ldi	r18, 0x01	; 1
    4c50:	30 e0       	ldi	r19, 0x00	; 0
    4c52:	fc 01       	movw	r30, r24
    4c54:	31 83       	std	Z+1, r19	; 0x01
    4c56:	20 83       	st	Z, r18
    4c58:	74 c0       	rjmp	.+232    	; 0x4d42 <main+0x106e>
	else if (__tmp > 65535)
    4c5a:	ce 01       	movw	r24, r28
    4c5c:	8f 57       	subi	r24, 0x7F	; 127
    4c5e:	9f 4f       	sbci	r25, 0xFF	; 255
    4c60:	11 e0       	ldi	r17, 0x01	; 1
    4c62:	fc 01       	movw	r30, r24
    4c64:	60 81       	ld	r22, Z
    4c66:	71 81       	ldd	r23, Z+1	; 0x01
    4c68:	82 81       	ldd	r24, Z+2	; 0x02
    4c6a:	93 81       	ldd	r25, Z+3	; 0x03
    4c6c:	20 e0       	ldi	r18, 0x00	; 0
    4c6e:	3f ef       	ldi	r19, 0xFF	; 255
    4c70:	4f e7       	ldi	r20, 0x7F	; 127
    4c72:	57 e4       	ldi	r21, 0x47	; 71
    4c74:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    4c78:	18 16       	cp	r1, r24
    4c7a:	0c f0       	brlt	.+2      	; 0x4c7e <main+0xfaa>
    4c7c:	10 e0       	ldi	r17, 0x00	; 0
    4c7e:	11 23       	and	r17, r17
    4c80:	09 f4       	brne	.+2      	; 0x4c84 <main+0xfb0>
    4c82:	4d c0       	rjmp	.+154    	; 0x4d1e <main+0x104a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c84:	ce 01       	movw	r24, r28
    4c86:	83 58       	subi	r24, 0x83	; 131
    4c88:	9f 4f       	sbci	r25, 0xFF	; 255
    4c8a:	fc 01       	movw	r30, r24
    4c8c:	60 81       	ld	r22, Z
    4c8e:	71 81       	ldd	r23, Z+1	; 0x01
    4c90:	82 81       	ldd	r24, Z+2	; 0x02
    4c92:	93 81       	ldd	r25, Z+3	; 0x03
    4c94:	20 e0       	ldi	r18, 0x00	; 0
    4c96:	30 e0       	ldi	r19, 0x00	; 0
    4c98:	40 e2       	ldi	r20, 0x20	; 32
    4c9a:	51 e4       	ldi	r21, 0x41	; 65
    4c9c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4ca0:	dc 01       	movw	r26, r24
    4ca2:	cb 01       	movw	r24, r22
    4ca4:	8e 01       	movw	r16, r28
    4ca6:	0b 57       	subi	r16, 0x7B	; 123
    4ca8:	1f 4f       	sbci	r17, 0xFF	; 255
    4caa:	bc 01       	movw	r22, r24
    4cac:	cd 01       	movw	r24, r26
    4cae:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4cb2:	dc 01       	movw	r26, r24
    4cb4:	cb 01       	movw	r24, r22
    4cb6:	f8 01       	movw	r30, r16
    4cb8:	91 83       	std	Z+1, r25	; 0x01
    4cba:	80 83       	st	Z, r24
    4cbc:	27 c0       	rjmp	.+78     	; 0x4d0c <main+0x1038>
    4cbe:	ce 01       	movw	r24, r28
    4cc0:	89 57       	subi	r24, 0x79	; 121
    4cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    4cc4:	20 e7       	ldi	r18, 0x70	; 112
    4cc6:	31 e0       	ldi	r19, 0x01	; 1
    4cc8:	fc 01       	movw	r30, r24
    4cca:	31 83       	std	Z+1, r19	; 0x01
    4ccc:	20 83       	st	Z, r18
    4cce:	ce 01       	movw	r24, r28
    4cd0:	89 57       	subi	r24, 0x79	; 121
    4cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    4cd4:	fc 01       	movw	r30, r24
    4cd6:	80 81       	ld	r24, Z
    4cd8:	91 81       	ldd	r25, Z+1	; 0x01
    4cda:	8c 01       	movw	r16, r24
    4cdc:	c8 01       	movw	r24, r16
    4cde:	01 97       	sbiw	r24, 0x01	; 1
    4ce0:	f1 f7       	brne	.-4      	; 0x4cde <main+0x100a>
    4ce2:	8c 01       	movw	r16, r24
    4ce4:	ce 01       	movw	r24, r28
    4ce6:	89 57       	subi	r24, 0x79	; 121
    4ce8:	9f 4f       	sbci	r25, 0xFF	; 255
    4cea:	fc 01       	movw	r30, r24
    4cec:	11 83       	std	Z+1, r17	; 0x01
    4cee:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cf0:	ce 01       	movw	r24, r28
    4cf2:	8b 57       	subi	r24, 0x7B	; 123
    4cf4:	9f 4f       	sbci	r25, 0xFF	; 255
    4cf6:	9e 01       	movw	r18, r28
    4cf8:	2b 57       	subi	r18, 0x7B	; 123
    4cfa:	3f 4f       	sbci	r19, 0xFF	; 255
    4cfc:	f9 01       	movw	r30, r18
    4cfe:	20 81       	ld	r18, Z
    4d00:	31 81       	ldd	r19, Z+1	; 0x01
    4d02:	21 50       	subi	r18, 0x01	; 1
    4d04:	30 40       	sbci	r19, 0x00	; 0
    4d06:	fc 01       	movw	r30, r24
    4d08:	31 83       	std	Z+1, r19	; 0x01
    4d0a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d0c:	ce 01       	movw	r24, r28
    4d0e:	8b 57       	subi	r24, 0x7B	; 123
    4d10:	9f 4f       	sbci	r25, 0xFF	; 255
    4d12:	fc 01       	movw	r30, r24
    4d14:	80 81       	ld	r24, Z
    4d16:	91 81       	ldd	r25, Z+1	; 0x01
    4d18:	00 97       	sbiw	r24, 0x00	; 0
    4d1a:	89 f6       	brne	.-94     	; 0x4cbe <main+0xfea>
    4d1c:	2f c0       	rjmp	.+94     	; 0x4d7c <main+0x10a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d1e:	8e 01       	movw	r16, r28
    4d20:	0b 57       	subi	r16, 0x7B	; 123
    4d22:	1f 4f       	sbci	r17, 0xFF	; 255
    4d24:	ce 01       	movw	r24, r28
    4d26:	8f 57       	subi	r24, 0x7F	; 127
    4d28:	9f 4f       	sbci	r25, 0xFF	; 255
    4d2a:	fc 01       	movw	r30, r24
    4d2c:	60 81       	ld	r22, Z
    4d2e:	71 81       	ldd	r23, Z+1	; 0x01
    4d30:	82 81       	ldd	r24, Z+2	; 0x02
    4d32:	93 81       	ldd	r25, Z+3	; 0x03
    4d34:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4d38:	dc 01       	movw	r26, r24
    4d3a:	cb 01       	movw	r24, r22
    4d3c:	f8 01       	movw	r30, r16
    4d3e:	91 83       	std	Z+1, r25	; 0x01
    4d40:	80 83       	st	Z, r24
    4d42:	ce 01       	movw	r24, r28
    4d44:	87 57       	subi	r24, 0x77	; 119
    4d46:	9f 4f       	sbci	r25, 0xFF	; 255
    4d48:	9e 01       	movw	r18, r28
    4d4a:	2b 57       	subi	r18, 0x7B	; 123
    4d4c:	3f 4f       	sbci	r19, 0xFF	; 255
    4d4e:	f9 01       	movw	r30, r18
    4d50:	20 81       	ld	r18, Z
    4d52:	31 81       	ldd	r19, Z+1	; 0x01
    4d54:	fc 01       	movw	r30, r24
    4d56:	31 83       	std	Z+1, r19	; 0x01
    4d58:	20 83       	st	Z, r18
    4d5a:	ce 01       	movw	r24, r28
    4d5c:	87 57       	subi	r24, 0x77	; 119
    4d5e:	9f 4f       	sbci	r25, 0xFF	; 255
    4d60:	fc 01       	movw	r30, r24
    4d62:	80 81       	ld	r24, Z
    4d64:	91 81       	ldd	r25, Z+1	; 0x01
    4d66:	8c 01       	movw	r16, r24
    4d68:	c8 01       	movw	r24, r16
    4d6a:	01 97       	sbiw	r24, 0x01	; 1
    4d6c:	f1 f7       	brne	.-4      	; 0x4d6a <main+0x1096>
    4d6e:	8c 01       	movw	r16, r24
    4d70:	ce 01       	movw	r24, r28
    4d72:	87 57       	subi	r24, 0x77	; 119
    4d74:	9f 4f       	sbci	r25, 0xFF	; 255
    4d76:	fc 01       	movw	r30, r24
    4d78:	11 83       	std	Z+1, r17	; 0x01
    4d7a:	00 83       	st	Z, r16
						_delay_ms(100);
						linefollwer();
    4d7c:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    4d80:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
					}
					else
					{
						if(compass==5)
    4d84:	8b 81       	ldd	r24, Y+3	; 0x03
    4d86:	9c 81       	ldd	r25, Y+4	; 0x04
    4d88:	85 30       	cpi	r24, 0x05	; 5
    4d8a:	91 05       	cpc	r25, r1
    4d8c:	11 f0       	breq	.+4      	; 0x4d92 <main+0x10be>
    4d8e:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
						{
							coor[1]=coor[1]+1;
    4d92:	80 91 a8 04 	lds	r24, 0x04A8
    4d96:	90 91 a9 04 	lds	r25, 0x04A9
    4d9a:	01 96       	adiw	r24, 0x01	; 1
    4d9c:	90 93 a9 04 	sts	0x04A9, r25
    4da0:	80 93 a8 04 	sts	0x04A8, r24
							compass=4;
    4da4:	84 e0       	ldi	r24, 0x04	; 4
    4da6:	90 e0       	ldi	r25, 0x00	; 0
    4da8:	9c 83       	std	Y+4, r25	; 0x04
    4daa:	8b 83       	std	Y+3, r24	; 0x03
    4dac:	9e 01       	movw	r18, r28
    4dae:	25 57       	subi	r18, 0x75	; 117
    4db0:	3f 4f       	sbci	r19, 0xFF	; 255
    4db2:	80 e0       	ldi	r24, 0x00	; 0
    4db4:	90 e0       	ldi	r25, 0x00	; 0
    4db6:	aa ef       	ldi	r26, 0xFA	; 250
    4db8:	b3 e4       	ldi	r27, 0x43	; 67
    4dba:	f9 01       	movw	r30, r18
    4dbc:	80 83       	st	Z, r24
    4dbe:	91 83       	std	Z+1, r25	; 0x01
    4dc0:	a2 83       	std	Z+2, r26	; 0x02
    4dc2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4dc4:	8e 01       	movw	r16, r28
    4dc6:	01 57       	subi	r16, 0x71	; 113
    4dc8:	1f 4f       	sbci	r17, 0xFF	; 255
    4dca:	ce 01       	movw	r24, r28
    4dcc:	85 57       	subi	r24, 0x75	; 117
    4dce:	9f 4f       	sbci	r25, 0xFF	; 255
    4dd0:	fc 01       	movw	r30, r24
    4dd2:	60 81       	ld	r22, Z
    4dd4:	71 81       	ldd	r23, Z+1	; 0x01
    4dd6:	82 81       	ldd	r24, Z+2	; 0x02
    4dd8:	93 81       	ldd	r25, Z+3	; 0x03
    4dda:	26 e6       	ldi	r18, 0x66	; 102
    4ddc:	36 e6       	ldi	r19, 0x66	; 102
    4dde:	46 e6       	ldi	r20, 0x66	; 102
    4de0:	55 e4       	ldi	r21, 0x45	; 69
    4de2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4de6:	dc 01       	movw	r26, r24
    4de8:	cb 01       	movw	r24, r22
    4dea:	f8 01       	movw	r30, r16
    4dec:	80 83       	st	Z, r24
    4dee:	91 83       	std	Z+1, r25	; 0x01
    4df0:	a2 83       	std	Z+2, r26	; 0x02
    4df2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4df4:	ce 01       	movw	r24, r28
    4df6:	81 57       	subi	r24, 0x71	; 113
    4df8:	9f 4f       	sbci	r25, 0xFF	; 255
    4dfa:	11 e0       	ldi	r17, 0x01	; 1
    4dfc:	fc 01       	movw	r30, r24
    4dfe:	60 81       	ld	r22, Z
    4e00:	71 81       	ldd	r23, Z+1	; 0x01
    4e02:	82 81       	ldd	r24, Z+2	; 0x02
    4e04:	93 81       	ldd	r25, Z+3	; 0x03
    4e06:	20 e0       	ldi	r18, 0x00	; 0
    4e08:	30 e0       	ldi	r19, 0x00	; 0
    4e0a:	40 e8       	ldi	r20, 0x80	; 128
    4e0c:	5f e3       	ldi	r21, 0x3F	; 63
    4e0e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4e12:	88 23       	and	r24, r24
    4e14:	0c f0       	brlt	.+2      	; 0x4e18 <main+0x1144>
    4e16:	10 e0       	ldi	r17, 0x00	; 0
    4e18:	11 23       	and	r17, r17
    4e1a:	49 f0       	breq	.+18     	; 0x4e2e <main+0x115a>
		__ticks = 1;
    4e1c:	ce 01       	movw	r24, r28
    4e1e:	8d 56       	subi	r24, 0x6D	; 109
    4e20:	9f 4f       	sbci	r25, 0xFF	; 255
    4e22:	21 e0       	ldi	r18, 0x01	; 1
    4e24:	30 e0       	ldi	r19, 0x00	; 0
    4e26:	fc 01       	movw	r30, r24
    4e28:	31 83       	std	Z+1, r19	; 0x01
    4e2a:	20 83       	st	Z, r18
    4e2c:	74 c0       	rjmp	.+232    	; 0x4f16 <main+0x1242>
	else if (__tmp > 65535)
    4e2e:	ce 01       	movw	r24, r28
    4e30:	81 57       	subi	r24, 0x71	; 113
    4e32:	9f 4f       	sbci	r25, 0xFF	; 255
    4e34:	11 e0       	ldi	r17, 0x01	; 1
    4e36:	fc 01       	movw	r30, r24
    4e38:	60 81       	ld	r22, Z
    4e3a:	71 81       	ldd	r23, Z+1	; 0x01
    4e3c:	82 81       	ldd	r24, Z+2	; 0x02
    4e3e:	93 81       	ldd	r25, Z+3	; 0x03
    4e40:	20 e0       	ldi	r18, 0x00	; 0
    4e42:	3f ef       	ldi	r19, 0xFF	; 255
    4e44:	4f e7       	ldi	r20, 0x7F	; 127
    4e46:	57 e4       	ldi	r21, 0x47	; 71
    4e48:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    4e4c:	18 16       	cp	r1, r24
    4e4e:	0c f0       	brlt	.+2      	; 0x4e52 <main+0x117e>
    4e50:	10 e0       	ldi	r17, 0x00	; 0
    4e52:	11 23       	and	r17, r17
    4e54:	09 f4       	brne	.+2      	; 0x4e58 <main+0x1184>
    4e56:	4d c0       	rjmp	.+154    	; 0x4ef2 <main+0x121e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e58:	ce 01       	movw	r24, r28
    4e5a:	85 57       	subi	r24, 0x75	; 117
    4e5c:	9f 4f       	sbci	r25, 0xFF	; 255
    4e5e:	fc 01       	movw	r30, r24
    4e60:	60 81       	ld	r22, Z
    4e62:	71 81       	ldd	r23, Z+1	; 0x01
    4e64:	82 81       	ldd	r24, Z+2	; 0x02
    4e66:	93 81       	ldd	r25, Z+3	; 0x03
    4e68:	20 e0       	ldi	r18, 0x00	; 0
    4e6a:	30 e0       	ldi	r19, 0x00	; 0
    4e6c:	40 e2       	ldi	r20, 0x20	; 32
    4e6e:	51 e4       	ldi	r21, 0x41	; 65
    4e70:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4e74:	dc 01       	movw	r26, r24
    4e76:	cb 01       	movw	r24, r22
    4e78:	8e 01       	movw	r16, r28
    4e7a:	0d 56       	subi	r16, 0x6D	; 109
    4e7c:	1f 4f       	sbci	r17, 0xFF	; 255
    4e7e:	bc 01       	movw	r22, r24
    4e80:	cd 01       	movw	r24, r26
    4e82:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4e86:	dc 01       	movw	r26, r24
    4e88:	cb 01       	movw	r24, r22
    4e8a:	f8 01       	movw	r30, r16
    4e8c:	91 83       	std	Z+1, r25	; 0x01
    4e8e:	80 83       	st	Z, r24
    4e90:	27 c0       	rjmp	.+78     	; 0x4ee0 <main+0x120c>
    4e92:	ce 01       	movw	r24, r28
    4e94:	8b 56       	subi	r24, 0x6B	; 107
    4e96:	9f 4f       	sbci	r25, 0xFF	; 255
    4e98:	20 e7       	ldi	r18, 0x70	; 112
    4e9a:	31 e0       	ldi	r19, 0x01	; 1
    4e9c:	fc 01       	movw	r30, r24
    4e9e:	31 83       	std	Z+1, r19	; 0x01
    4ea0:	20 83       	st	Z, r18
    4ea2:	ce 01       	movw	r24, r28
    4ea4:	8b 56       	subi	r24, 0x6B	; 107
    4ea6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ea8:	fc 01       	movw	r30, r24
    4eaa:	80 81       	ld	r24, Z
    4eac:	91 81       	ldd	r25, Z+1	; 0x01
    4eae:	8c 01       	movw	r16, r24
    4eb0:	c8 01       	movw	r24, r16
    4eb2:	01 97       	sbiw	r24, 0x01	; 1
    4eb4:	f1 f7       	brne	.-4      	; 0x4eb2 <main+0x11de>
    4eb6:	8c 01       	movw	r16, r24
    4eb8:	ce 01       	movw	r24, r28
    4eba:	8b 56       	subi	r24, 0x6B	; 107
    4ebc:	9f 4f       	sbci	r25, 0xFF	; 255
    4ebe:	fc 01       	movw	r30, r24
    4ec0:	11 83       	std	Z+1, r17	; 0x01
    4ec2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ec4:	ce 01       	movw	r24, r28
    4ec6:	8d 56       	subi	r24, 0x6D	; 109
    4ec8:	9f 4f       	sbci	r25, 0xFF	; 255
    4eca:	9e 01       	movw	r18, r28
    4ecc:	2d 56       	subi	r18, 0x6D	; 109
    4ece:	3f 4f       	sbci	r19, 0xFF	; 255
    4ed0:	f9 01       	movw	r30, r18
    4ed2:	20 81       	ld	r18, Z
    4ed4:	31 81       	ldd	r19, Z+1	; 0x01
    4ed6:	21 50       	subi	r18, 0x01	; 1
    4ed8:	30 40       	sbci	r19, 0x00	; 0
    4eda:	fc 01       	movw	r30, r24
    4edc:	31 83       	std	Z+1, r19	; 0x01
    4ede:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ee0:	ce 01       	movw	r24, r28
    4ee2:	8d 56       	subi	r24, 0x6D	; 109
    4ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    4ee6:	fc 01       	movw	r30, r24
    4ee8:	80 81       	ld	r24, Z
    4eea:	91 81       	ldd	r25, Z+1	; 0x01
    4eec:	00 97       	sbiw	r24, 0x00	; 0
    4eee:	89 f6       	brne	.-94     	; 0x4e92 <main+0x11be>
    4ef0:	2f c0       	rjmp	.+94     	; 0x4f50 <main+0x127c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ef2:	8e 01       	movw	r16, r28
    4ef4:	0d 56       	subi	r16, 0x6D	; 109
    4ef6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ef8:	ce 01       	movw	r24, r28
    4efa:	81 57       	subi	r24, 0x71	; 113
    4efc:	9f 4f       	sbci	r25, 0xFF	; 255
    4efe:	fc 01       	movw	r30, r24
    4f00:	60 81       	ld	r22, Z
    4f02:	71 81       	ldd	r23, Z+1	; 0x01
    4f04:	82 81       	ldd	r24, Z+2	; 0x02
    4f06:	93 81       	ldd	r25, Z+3	; 0x03
    4f08:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    4f0c:	dc 01       	movw	r26, r24
    4f0e:	cb 01       	movw	r24, r22
    4f10:	f8 01       	movw	r30, r16
    4f12:	91 83       	std	Z+1, r25	; 0x01
    4f14:	80 83       	st	Z, r24
    4f16:	ce 01       	movw	r24, r28
    4f18:	89 56       	subi	r24, 0x69	; 105
    4f1a:	9f 4f       	sbci	r25, 0xFF	; 255
    4f1c:	9e 01       	movw	r18, r28
    4f1e:	2d 56       	subi	r18, 0x6D	; 109
    4f20:	3f 4f       	sbci	r19, 0xFF	; 255
    4f22:	f9 01       	movw	r30, r18
    4f24:	20 81       	ld	r18, Z
    4f26:	31 81       	ldd	r19, Z+1	; 0x01
    4f28:	fc 01       	movw	r30, r24
    4f2a:	31 83       	std	Z+1, r19	; 0x01
    4f2c:	20 83       	st	Z, r18
    4f2e:	ce 01       	movw	r24, r28
    4f30:	89 56       	subi	r24, 0x69	; 105
    4f32:	9f 4f       	sbci	r25, 0xFF	; 255
    4f34:	fc 01       	movw	r30, r24
    4f36:	80 81       	ld	r24, Z
    4f38:	91 81       	ldd	r25, Z+1	; 0x01
    4f3a:	8c 01       	movw	r16, r24
    4f3c:	c8 01       	movw	r24, r16
    4f3e:	01 97       	sbiw	r24, 0x01	; 1
    4f40:	f1 f7       	brne	.-4      	; 0x4f3e <main+0x126a>
    4f42:	8c 01       	movw	r16, r24
    4f44:	ce 01       	movw	r24, r28
    4f46:	89 56       	subi	r24, 0x69	; 105
    4f48:	9f 4f       	sbci	r25, 0xFF	; 255
    4f4a:	fc 01       	movw	r30, r24
    4f4c:	11 83       	std	Z+1, r17	; 0x01
    4f4e:	00 83       	st	Z, r16
							_delay_ms(500);
							right_degrees(185);
    4f50:	89 eb       	ldi	r24, 0xB9	; 185
    4f52:	90 e0       	ldi	r25, 0x00	; 0
    4f54:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    4f58:	9e 01       	movw	r18, r28
    4f5a:	27 56       	subi	r18, 0x67	; 103
    4f5c:	3f 4f       	sbci	r19, 0xFF	; 255
    4f5e:	80 e0       	ldi	r24, 0x00	; 0
    4f60:	90 e0       	ldi	r25, 0x00	; 0
    4f62:	a8 ec       	ldi	r26, 0xC8	; 200
    4f64:	b2 e4       	ldi	r27, 0x42	; 66
    4f66:	f9 01       	movw	r30, r18
    4f68:	80 83       	st	Z, r24
    4f6a:	91 83       	std	Z+1, r25	; 0x01
    4f6c:	a2 83       	std	Z+2, r26	; 0x02
    4f6e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4f70:	8e 01       	movw	r16, r28
    4f72:	03 56       	subi	r16, 0x63	; 99
    4f74:	1f 4f       	sbci	r17, 0xFF	; 255
    4f76:	ce 01       	movw	r24, r28
    4f78:	87 56       	subi	r24, 0x67	; 103
    4f7a:	9f 4f       	sbci	r25, 0xFF	; 255
    4f7c:	fc 01       	movw	r30, r24
    4f7e:	60 81       	ld	r22, Z
    4f80:	71 81       	ldd	r23, Z+1	; 0x01
    4f82:	82 81       	ldd	r24, Z+2	; 0x02
    4f84:	93 81       	ldd	r25, Z+3	; 0x03
    4f86:	26 e6       	ldi	r18, 0x66	; 102
    4f88:	36 e6       	ldi	r19, 0x66	; 102
    4f8a:	46 e6       	ldi	r20, 0x66	; 102
    4f8c:	55 e4       	ldi	r21, 0x45	; 69
    4f8e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    4f92:	dc 01       	movw	r26, r24
    4f94:	cb 01       	movw	r24, r22
    4f96:	f8 01       	movw	r30, r16
    4f98:	80 83       	st	Z, r24
    4f9a:	91 83       	std	Z+1, r25	; 0x01
    4f9c:	a2 83       	std	Z+2, r26	; 0x02
    4f9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4fa0:	ce 01       	movw	r24, r28
    4fa2:	83 56       	subi	r24, 0x63	; 99
    4fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    4fa6:	11 e0       	ldi	r17, 0x01	; 1
    4fa8:	fc 01       	movw	r30, r24
    4faa:	60 81       	ld	r22, Z
    4fac:	71 81       	ldd	r23, Z+1	; 0x01
    4fae:	82 81       	ldd	r24, Z+2	; 0x02
    4fb0:	93 81       	ldd	r25, Z+3	; 0x03
    4fb2:	20 e0       	ldi	r18, 0x00	; 0
    4fb4:	30 e0       	ldi	r19, 0x00	; 0
    4fb6:	40 e8       	ldi	r20, 0x80	; 128
    4fb8:	5f e3       	ldi	r21, 0x3F	; 63
    4fba:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    4fbe:	88 23       	and	r24, r24
    4fc0:	0c f0       	brlt	.+2      	; 0x4fc4 <main+0x12f0>
    4fc2:	10 e0       	ldi	r17, 0x00	; 0
    4fc4:	11 23       	and	r17, r17
    4fc6:	49 f0       	breq	.+18     	; 0x4fda <main+0x1306>
		__ticks = 1;
    4fc8:	ce 01       	movw	r24, r28
    4fca:	8f 55       	subi	r24, 0x5F	; 95
    4fcc:	9f 4f       	sbci	r25, 0xFF	; 255
    4fce:	21 e0       	ldi	r18, 0x01	; 1
    4fd0:	30 e0       	ldi	r19, 0x00	; 0
    4fd2:	fc 01       	movw	r30, r24
    4fd4:	31 83       	std	Z+1, r19	; 0x01
    4fd6:	20 83       	st	Z, r18
    4fd8:	74 c0       	rjmp	.+232    	; 0x50c2 <main+0x13ee>
	else if (__tmp > 65535)
    4fda:	ce 01       	movw	r24, r28
    4fdc:	83 56       	subi	r24, 0x63	; 99
    4fde:	9f 4f       	sbci	r25, 0xFF	; 255
    4fe0:	11 e0       	ldi	r17, 0x01	; 1
    4fe2:	fc 01       	movw	r30, r24
    4fe4:	60 81       	ld	r22, Z
    4fe6:	71 81       	ldd	r23, Z+1	; 0x01
    4fe8:	82 81       	ldd	r24, Z+2	; 0x02
    4fea:	93 81       	ldd	r25, Z+3	; 0x03
    4fec:	20 e0       	ldi	r18, 0x00	; 0
    4fee:	3f ef       	ldi	r19, 0xFF	; 255
    4ff0:	4f e7       	ldi	r20, 0x7F	; 127
    4ff2:	57 e4       	ldi	r21, 0x47	; 71
    4ff4:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    4ff8:	18 16       	cp	r1, r24
    4ffa:	0c f0       	brlt	.+2      	; 0x4ffe <main+0x132a>
    4ffc:	10 e0       	ldi	r17, 0x00	; 0
    4ffe:	11 23       	and	r17, r17
    5000:	09 f4       	brne	.+2      	; 0x5004 <main+0x1330>
    5002:	4d c0       	rjmp	.+154    	; 0x509e <main+0x13ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5004:	ce 01       	movw	r24, r28
    5006:	87 56       	subi	r24, 0x67	; 103
    5008:	9f 4f       	sbci	r25, 0xFF	; 255
    500a:	fc 01       	movw	r30, r24
    500c:	60 81       	ld	r22, Z
    500e:	71 81       	ldd	r23, Z+1	; 0x01
    5010:	82 81       	ldd	r24, Z+2	; 0x02
    5012:	93 81       	ldd	r25, Z+3	; 0x03
    5014:	20 e0       	ldi	r18, 0x00	; 0
    5016:	30 e0       	ldi	r19, 0x00	; 0
    5018:	40 e2       	ldi	r20, 0x20	; 32
    501a:	51 e4       	ldi	r21, 0x41	; 65
    501c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5020:	dc 01       	movw	r26, r24
    5022:	cb 01       	movw	r24, r22
    5024:	8e 01       	movw	r16, r28
    5026:	0f 55       	subi	r16, 0x5F	; 95
    5028:	1f 4f       	sbci	r17, 0xFF	; 255
    502a:	bc 01       	movw	r22, r24
    502c:	cd 01       	movw	r24, r26
    502e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5032:	dc 01       	movw	r26, r24
    5034:	cb 01       	movw	r24, r22
    5036:	f8 01       	movw	r30, r16
    5038:	91 83       	std	Z+1, r25	; 0x01
    503a:	80 83       	st	Z, r24
    503c:	27 c0       	rjmp	.+78     	; 0x508c <main+0x13b8>
    503e:	ce 01       	movw	r24, r28
    5040:	8d 55       	subi	r24, 0x5D	; 93
    5042:	9f 4f       	sbci	r25, 0xFF	; 255
    5044:	20 e7       	ldi	r18, 0x70	; 112
    5046:	31 e0       	ldi	r19, 0x01	; 1
    5048:	fc 01       	movw	r30, r24
    504a:	31 83       	std	Z+1, r19	; 0x01
    504c:	20 83       	st	Z, r18
    504e:	ce 01       	movw	r24, r28
    5050:	8d 55       	subi	r24, 0x5D	; 93
    5052:	9f 4f       	sbci	r25, 0xFF	; 255
    5054:	fc 01       	movw	r30, r24
    5056:	80 81       	ld	r24, Z
    5058:	91 81       	ldd	r25, Z+1	; 0x01
    505a:	8c 01       	movw	r16, r24
    505c:	c8 01       	movw	r24, r16
    505e:	01 97       	sbiw	r24, 0x01	; 1
    5060:	f1 f7       	brne	.-4      	; 0x505e <main+0x138a>
    5062:	8c 01       	movw	r16, r24
    5064:	ce 01       	movw	r24, r28
    5066:	8d 55       	subi	r24, 0x5D	; 93
    5068:	9f 4f       	sbci	r25, 0xFF	; 255
    506a:	fc 01       	movw	r30, r24
    506c:	11 83       	std	Z+1, r17	; 0x01
    506e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5070:	ce 01       	movw	r24, r28
    5072:	8f 55       	subi	r24, 0x5F	; 95
    5074:	9f 4f       	sbci	r25, 0xFF	; 255
    5076:	9e 01       	movw	r18, r28
    5078:	2f 55       	subi	r18, 0x5F	; 95
    507a:	3f 4f       	sbci	r19, 0xFF	; 255
    507c:	f9 01       	movw	r30, r18
    507e:	20 81       	ld	r18, Z
    5080:	31 81       	ldd	r19, Z+1	; 0x01
    5082:	21 50       	subi	r18, 0x01	; 1
    5084:	30 40       	sbci	r19, 0x00	; 0
    5086:	fc 01       	movw	r30, r24
    5088:	31 83       	std	Z+1, r19	; 0x01
    508a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    508c:	ce 01       	movw	r24, r28
    508e:	8f 55       	subi	r24, 0x5F	; 95
    5090:	9f 4f       	sbci	r25, 0xFF	; 255
    5092:	fc 01       	movw	r30, r24
    5094:	80 81       	ld	r24, Z
    5096:	91 81       	ldd	r25, Z+1	; 0x01
    5098:	00 97       	sbiw	r24, 0x00	; 0
    509a:	89 f6       	brne	.-94     	; 0x503e <main+0x136a>
    509c:	2f c0       	rjmp	.+94     	; 0x50fc <main+0x1428>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    509e:	8e 01       	movw	r16, r28
    50a0:	0f 55       	subi	r16, 0x5F	; 95
    50a2:	1f 4f       	sbci	r17, 0xFF	; 255
    50a4:	ce 01       	movw	r24, r28
    50a6:	83 56       	subi	r24, 0x63	; 99
    50a8:	9f 4f       	sbci	r25, 0xFF	; 255
    50aa:	fc 01       	movw	r30, r24
    50ac:	60 81       	ld	r22, Z
    50ae:	71 81       	ldd	r23, Z+1	; 0x01
    50b0:	82 81       	ldd	r24, Z+2	; 0x02
    50b2:	93 81       	ldd	r25, Z+3	; 0x03
    50b4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    50b8:	dc 01       	movw	r26, r24
    50ba:	cb 01       	movw	r24, r22
    50bc:	f8 01       	movw	r30, r16
    50be:	91 83       	std	Z+1, r25	; 0x01
    50c0:	80 83       	st	Z, r24
    50c2:	ce 01       	movw	r24, r28
    50c4:	8b 55       	subi	r24, 0x5B	; 91
    50c6:	9f 4f       	sbci	r25, 0xFF	; 255
    50c8:	9e 01       	movw	r18, r28
    50ca:	2f 55       	subi	r18, 0x5F	; 95
    50cc:	3f 4f       	sbci	r19, 0xFF	; 255
    50ce:	f9 01       	movw	r30, r18
    50d0:	20 81       	ld	r18, Z
    50d2:	31 81       	ldd	r19, Z+1	; 0x01
    50d4:	fc 01       	movw	r30, r24
    50d6:	31 83       	std	Z+1, r19	; 0x01
    50d8:	20 83       	st	Z, r18
    50da:	ce 01       	movw	r24, r28
    50dc:	8b 55       	subi	r24, 0x5B	; 91
    50de:	9f 4f       	sbci	r25, 0xFF	; 255
    50e0:	fc 01       	movw	r30, r24
    50e2:	80 81       	ld	r24, Z
    50e4:	91 81       	ldd	r25, Z+1	; 0x01
    50e6:	8c 01       	movw	r16, r24
    50e8:	c8 01       	movw	r24, r16
    50ea:	01 97       	sbiw	r24, 0x01	; 1
    50ec:	f1 f7       	brne	.-4      	; 0x50ea <main+0x1416>
    50ee:	8c 01       	movw	r16, r24
    50f0:	ce 01       	movw	r24, r28
    50f2:	8b 55       	subi	r24, 0x5B	; 91
    50f4:	9f 4f       	sbci	r25, 0xFF	; 255
    50f6:	fc 01       	movw	r30, r24
    50f8:	11 83       	std	Z+1, r17	; 0x01
    50fa:	00 83       	st	Z, r16
							_delay_ms(100);
							linefollwer();
    50fc:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    5100:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
			}					
			
		}
		else
		{
			if(final[0]>coor[0])
    5104:	ce 01       	movw	r24, r28
    5106:	8d 52       	subi	r24, 0x2D	; 45
    5108:	99 4f       	sbci	r25, 0xF9	; 249
    510a:	fc 01       	movw	r30, r24
    510c:	20 81       	ld	r18, Z
    510e:	31 81       	ldd	r19, Z+1	; 0x01
    5110:	80 91 a6 04 	lds	r24, 0x04A6
    5114:	90 91 a7 04 	lds	r25, 0x04A7
    5118:	82 17       	cp	r24, r18
    511a:	93 07       	cpc	r25, r19
    511c:	0c f0       	brlt	.+2      	; 0x5120 <main+0x144c>
    511e:	27 c6       	rjmp	.+3150   	; 0x5d6e <main+0x209a>
			{
				if(compass==4)
    5120:	8b 81       	ldd	r24, Y+3	; 0x03
    5122:	9c 81       	ldd	r25, Y+4	; 0x04
    5124:	84 30       	cpi	r24, 0x04	; 4
    5126:	91 05       	cpc	r25, r1
    5128:	09 f0       	breq	.+2      	; 0x512c <main+0x1458>
    512a:	b9 c1       	rjmp	.+882    	; 0x549e <main+0x17ca>
				{
					coor[0]=coor[0]+1;
    512c:	80 91 a6 04 	lds	r24, 0x04A6
    5130:	90 91 a7 04 	lds	r25, 0x04A7
    5134:	01 96       	adiw	r24, 0x01	; 1
    5136:	90 93 a7 04 	sts	0x04A7, r25
    513a:	80 93 a6 04 	sts	0x04A6, r24
					compass=6;
    513e:	86 e0       	ldi	r24, 0x06	; 6
    5140:	90 e0       	ldi	r25, 0x00	; 0
    5142:	9c 83       	std	Y+4, r25	; 0x04
    5144:	8b 83       	std	Y+3, r24	; 0x03
    5146:	9e 01       	movw	r18, r28
    5148:	29 55       	subi	r18, 0x59	; 89
    514a:	3f 4f       	sbci	r19, 0xFF	; 255
    514c:	80 e0       	ldi	r24, 0x00	; 0
    514e:	90 e0       	ldi	r25, 0x00	; 0
    5150:	aa ef       	ldi	r26, 0xFA	; 250
    5152:	b3 e4       	ldi	r27, 0x43	; 67
    5154:	f9 01       	movw	r30, r18
    5156:	80 83       	st	Z, r24
    5158:	91 83       	std	Z+1, r25	; 0x01
    515a:	a2 83       	std	Z+2, r26	; 0x02
    515c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    515e:	8e 01       	movw	r16, r28
    5160:	05 55       	subi	r16, 0x55	; 85
    5162:	1f 4f       	sbci	r17, 0xFF	; 255
    5164:	ce 01       	movw	r24, r28
    5166:	89 55       	subi	r24, 0x59	; 89
    5168:	9f 4f       	sbci	r25, 0xFF	; 255
    516a:	fc 01       	movw	r30, r24
    516c:	60 81       	ld	r22, Z
    516e:	71 81       	ldd	r23, Z+1	; 0x01
    5170:	82 81       	ldd	r24, Z+2	; 0x02
    5172:	93 81       	ldd	r25, Z+3	; 0x03
    5174:	26 e6       	ldi	r18, 0x66	; 102
    5176:	36 e6       	ldi	r19, 0x66	; 102
    5178:	46 e6       	ldi	r20, 0x66	; 102
    517a:	55 e4       	ldi	r21, 0x45	; 69
    517c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5180:	dc 01       	movw	r26, r24
    5182:	cb 01       	movw	r24, r22
    5184:	f8 01       	movw	r30, r16
    5186:	80 83       	st	Z, r24
    5188:	91 83       	std	Z+1, r25	; 0x01
    518a:	a2 83       	std	Z+2, r26	; 0x02
    518c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    518e:	ce 01       	movw	r24, r28
    5190:	85 55       	subi	r24, 0x55	; 85
    5192:	9f 4f       	sbci	r25, 0xFF	; 255
    5194:	11 e0       	ldi	r17, 0x01	; 1
    5196:	fc 01       	movw	r30, r24
    5198:	60 81       	ld	r22, Z
    519a:	71 81       	ldd	r23, Z+1	; 0x01
    519c:	82 81       	ldd	r24, Z+2	; 0x02
    519e:	93 81       	ldd	r25, Z+3	; 0x03
    51a0:	20 e0       	ldi	r18, 0x00	; 0
    51a2:	30 e0       	ldi	r19, 0x00	; 0
    51a4:	40 e8       	ldi	r20, 0x80	; 128
    51a6:	5f e3       	ldi	r21, 0x3F	; 63
    51a8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    51ac:	88 23       	and	r24, r24
    51ae:	0c f0       	brlt	.+2      	; 0x51b2 <main+0x14de>
    51b0:	10 e0       	ldi	r17, 0x00	; 0
    51b2:	11 23       	and	r17, r17
    51b4:	49 f0       	breq	.+18     	; 0x51c8 <main+0x14f4>
		__ticks = 1;
    51b6:	ce 01       	movw	r24, r28
    51b8:	81 55       	subi	r24, 0x51	; 81
    51ba:	9f 4f       	sbci	r25, 0xFF	; 255
    51bc:	21 e0       	ldi	r18, 0x01	; 1
    51be:	30 e0       	ldi	r19, 0x00	; 0
    51c0:	fc 01       	movw	r30, r24
    51c2:	31 83       	std	Z+1, r19	; 0x01
    51c4:	20 83       	st	Z, r18
    51c6:	74 c0       	rjmp	.+232    	; 0x52b0 <main+0x15dc>
	else if (__tmp > 65535)
    51c8:	ce 01       	movw	r24, r28
    51ca:	85 55       	subi	r24, 0x55	; 85
    51cc:	9f 4f       	sbci	r25, 0xFF	; 255
    51ce:	11 e0       	ldi	r17, 0x01	; 1
    51d0:	fc 01       	movw	r30, r24
    51d2:	60 81       	ld	r22, Z
    51d4:	71 81       	ldd	r23, Z+1	; 0x01
    51d6:	82 81       	ldd	r24, Z+2	; 0x02
    51d8:	93 81       	ldd	r25, Z+3	; 0x03
    51da:	20 e0       	ldi	r18, 0x00	; 0
    51dc:	3f ef       	ldi	r19, 0xFF	; 255
    51de:	4f e7       	ldi	r20, 0x7F	; 127
    51e0:	57 e4       	ldi	r21, 0x47	; 71
    51e2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    51e6:	18 16       	cp	r1, r24
    51e8:	0c f0       	brlt	.+2      	; 0x51ec <main+0x1518>
    51ea:	10 e0       	ldi	r17, 0x00	; 0
    51ec:	11 23       	and	r17, r17
    51ee:	09 f4       	brne	.+2      	; 0x51f2 <main+0x151e>
    51f0:	4d c0       	rjmp	.+154    	; 0x528c <main+0x15b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51f2:	ce 01       	movw	r24, r28
    51f4:	89 55       	subi	r24, 0x59	; 89
    51f6:	9f 4f       	sbci	r25, 0xFF	; 255
    51f8:	fc 01       	movw	r30, r24
    51fa:	60 81       	ld	r22, Z
    51fc:	71 81       	ldd	r23, Z+1	; 0x01
    51fe:	82 81       	ldd	r24, Z+2	; 0x02
    5200:	93 81       	ldd	r25, Z+3	; 0x03
    5202:	20 e0       	ldi	r18, 0x00	; 0
    5204:	30 e0       	ldi	r19, 0x00	; 0
    5206:	40 e2       	ldi	r20, 0x20	; 32
    5208:	51 e4       	ldi	r21, 0x41	; 65
    520a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    520e:	dc 01       	movw	r26, r24
    5210:	cb 01       	movw	r24, r22
    5212:	8e 01       	movw	r16, r28
    5214:	01 55       	subi	r16, 0x51	; 81
    5216:	1f 4f       	sbci	r17, 0xFF	; 255
    5218:	bc 01       	movw	r22, r24
    521a:	cd 01       	movw	r24, r26
    521c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5220:	dc 01       	movw	r26, r24
    5222:	cb 01       	movw	r24, r22
    5224:	f8 01       	movw	r30, r16
    5226:	91 83       	std	Z+1, r25	; 0x01
    5228:	80 83       	st	Z, r24
    522a:	27 c0       	rjmp	.+78     	; 0x527a <main+0x15a6>
    522c:	ce 01       	movw	r24, r28
    522e:	8f 54       	subi	r24, 0x4F	; 79
    5230:	9f 4f       	sbci	r25, 0xFF	; 255
    5232:	20 e7       	ldi	r18, 0x70	; 112
    5234:	31 e0       	ldi	r19, 0x01	; 1
    5236:	fc 01       	movw	r30, r24
    5238:	31 83       	std	Z+1, r19	; 0x01
    523a:	20 83       	st	Z, r18
    523c:	ce 01       	movw	r24, r28
    523e:	8f 54       	subi	r24, 0x4F	; 79
    5240:	9f 4f       	sbci	r25, 0xFF	; 255
    5242:	fc 01       	movw	r30, r24
    5244:	80 81       	ld	r24, Z
    5246:	91 81       	ldd	r25, Z+1	; 0x01
    5248:	8c 01       	movw	r16, r24
    524a:	c8 01       	movw	r24, r16
    524c:	01 97       	sbiw	r24, 0x01	; 1
    524e:	f1 f7       	brne	.-4      	; 0x524c <main+0x1578>
    5250:	8c 01       	movw	r16, r24
    5252:	ce 01       	movw	r24, r28
    5254:	8f 54       	subi	r24, 0x4F	; 79
    5256:	9f 4f       	sbci	r25, 0xFF	; 255
    5258:	fc 01       	movw	r30, r24
    525a:	11 83       	std	Z+1, r17	; 0x01
    525c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    525e:	ce 01       	movw	r24, r28
    5260:	81 55       	subi	r24, 0x51	; 81
    5262:	9f 4f       	sbci	r25, 0xFF	; 255
    5264:	9e 01       	movw	r18, r28
    5266:	21 55       	subi	r18, 0x51	; 81
    5268:	3f 4f       	sbci	r19, 0xFF	; 255
    526a:	f9 01       	movw	r30, r18
    526c:	20 81       	ld	r18, Z
    526e:	31 81       	ldd	r19, Z+1	; 0x01
    5270:	21 50       	subi	r18, 0x01	; 1
    5272:	30 40       	sbci	r19, 0x00	; 0
    5274:	fc 01       	movw	r30, r24
    5276:	31 83       	std	Z+1, r19	; 0x01
    5278:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    527a:	ce 01       	movw	r24, r28
    527c:	81 55       	subi	r24, 0x51	; 81
    527e:	9f 4f       	sbci	r25, 0xFF	; 255
    5280:	fc 01       	movw	r30, r24
    5282:	80 81       	ld	r24, Z
    5284:	91 81       	ldd	r25, Z+1	; 0x01
    5286:	00 97       	sbiw	r24, 0x00	; 0
    5288:	89 f6       	brne	.-94     	; 0x522c <main+0x1558>
    528a:	2f c0       	rjmp	.+94     	; 0x52ea <main+0x1616>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    528c:	8e 01       	movw	r16, r28
    528e:	01 55       	subi	r16, 0x51	; 81
    5290:	1f 4f       	sbci	r17, 0xFF	; 255
    5292:	ce 01       	movw	r24, r28
    5294:	85 55       	subi	r24, 0x55	; 85
    5296:	9f 4f       	sbci	r25, 0xFF	; 255
    5298:	fc 01       	movw	r30, r24
    529a:	60 81       	ld	r22, Z
    529c:	71 81       	ldd	r23, Z+1	; 0x01
    529e:	82 81       	ldd	r24, Z+2	; 0x02
    52a0:	93 81       	ldd	r25, Z+3	; 0x03
    52a2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    52a6:	dc 01       	movw	r26, r24
    52a8:	cb 01       	movw	r24, r22
    52aa:	f8 01       	movw	r30, r16
    52ac:	91 83       	std	Z+1, r25	; 0x01
    52ae:	80 83       	st	Z, r24
    52b0:	ce 01       	movw	r24, r28
    52b2:	8d 54       	subi	r24, 0x4D	; 77
    52b4:	9f 4f       	sbci	r25, 0xFF	; 255
    52b6:	9e 01       	movw	r18, r28
    52b8:	21 55       	subi	r18, 0x51	; 81
    52ba:	3f 4f       	sbci	r19, 0xFF	; 255
    52bc:	f9 01       	movw	r30, r18
    52be:	20 81       	ld	r18, Z
    52c0:	31 81       	ldd	r19, Z+1	; 0x01
    52c2:	fc 01       	movw	r30, r24
    52c4:	31 83       	std	Z+1, r19	; 0x01
    52c6:	20 83       	st	Z, r18
    52c8:	ce 01       	movw	r24, r28
    52ca:	8d 54       	subi	r24, 0x4D	; 77
    52cc:	9f 4f       	sbci	r25, 0xFF	; 255
    52ce:	fc 01       	movw	r30, r24
    52d0:	80 81       	ld	r24, Z
    52d2:	91 81       	ldd	r25, Z+1	; 0x01
    52d4:	8c 01       	movw	r16, r24
    52d6:	c8 01       	movw	r24, r16
    52d8:	01 97       	sbiw	r24, 0x01	; 1
    52da:	f1 f7       	brne	.-4      	; 0x52d8 <main+0x1604>
    52dc:	8c 01       	movw	r16, r24
    52de:	ce 01       	movw	r24, r28
    52e0:	8d 54       	subi	r24, 0x4D	; 77
    52e2:	9f 4f       	sbci	r25, 0xFF	; 255
    52e4:	fc 01       	movw	r30, r24
    52e6:	11 83       	std	Z+1, r17	; 0x01
    52e8:	00 83       	st	Z, r16
					_delay_ms(500);
					right_degrees(85);
    52ea:	85 e5       	ldi	r24, 0x55	; 85
    52ec:	90 e0       	ldi	r25, 0x00	; 0
    52ee:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    52f2:	9e 01       	movw	r18, r28
    52f4:	2b 54       	subi	r18, 0x4B	; 75
    52f6:	3f 4f       	sbci	r19, 0xFF	; 255
    52f8:	80 e0       	ldi	r24, 0x00	; 0
    52fa:	90 e0       	ldi	r25, 0x00	; 0
    52fc:	a8 ec       	ldi	r26, 0xC8	; 200
    52fe:	b2 e4       	ldi	r27, 0x42	; 66
    5300:	f9 01       	movw	r30, r18
    5302:	80 83       	st	Z, r24
    5304:	91 83       	std	Z+1, r25	; 0x01
    5306:	a2 83       	std	Z+2, r26	; 0x02
    5308:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    530a:	8e 01       	movw	r16, r28
    530c:	07 54       	subi	r16, 0x47	; 71
    530e:	1f 4f       	sbci	r17, 0xFF	; 255
    5310:	ce 01       	movw	r24, r28
    5312:	8b 54       	subi	r24, 0x4B	; 75
    5314:	9f 4f       	sbci	r25, 0xFF	; 255
    5316:	fc 01       	movw	r30, r24
    5318:	60 81       	ld	r22, Z
    531a:	71 81       	ldd	r23, Z+1	; 0x01
    531c:	82 81       	ldd	r24, Z+2	; 0x02
    531e:	93 81       	ldd	r25, Z+3	; 0x03
    5320:	26 e6       	ldi	r18, 0x66	; 102
    5322:	36 e6       	ldi	r19, 0x66	; 102
    5324:	46 e6       	ldi	r20, 0x66	; 102
    5326:	55 e4       	ldi	r21, 0x45	; 69
    5328:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    532c:	dc 01       	movw	r26, r24
    532e:	cb 01       	movw	r24, r22
    5330:	f8 01       	movw	r30, r16
    5332:	80 83       	st	Z, r24
    5334:	91 83       	std	Z+1, r25	; 0x01
    5336:	a2 83       	std	Z+2, r26	; 0x02
    5338:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    533a:	ce 01       	movw	r24, r28
    533c:	87 54       	subi	r24, 0x47	; 71
    533e:	9f 4f       	sbci	r25, 0xFF	; 255
    5340:	11 e0       	ldi	r17, 0x01	; 1
    5342:	fc 01       	movw	r30, r24
    5344:	60 81       	ld	r22, Z
    5346:	71 81       	ldd	r23, Z+1	; 0x01
    5348:	82 81       	ldd	r24, Z+2	; 0x02
    534a:	93 81       	ldd	r25, Z+3	; 0x03
    534c:	20 e0       	ldi	r18, 0x00	; 0
    534e:	30 e0       	ldi	r19, 0x00	; 0
    5350:	40 e8       	ldi	r20, 0x80	; 128
    5352:	5f e3       	ldi	r21, 0x3F	; 63
    5354:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    5358:	88 23       	and	r24, r24
    535a:	0c f0       	brlt	.+2      	; 0x535e <main+0x168a>
    535c:	10 e0       	ldi	r17, 0x00	; 0
    535e:	11 23       	and	r17, r17
    5360:	49 f0       	breq	.+18     	; 0x5374 <main+0x16a0>
		__ticks = 1;
    5362:	ce 01       	movw	r24, r28
    5364:	83 54       	subi	r24, 0x43	; 67
    5366:	9f 4f       	sbci	r25, 0xFF	; 255
    5368:	21 e0       	ldi	r18, 0x01	; 1
    536a:	30 e0       	ldi	r19, 0x00	; 0
    536c:	fc 01       	movw	r30, r24
    536e:	31 83       	std	Z+1, r19	; 0x01
    5370:	20 83       	st	Z, r18
    5372:	74 c0       	rjmp	.+232    	; 0x545c <main+0x1788>
	else if (__tmp > 65535)
    5374:	ce 01       	movw	r24, r28
    5376:	87 54       	subi	r24, 0x47	; 71
    5378:	9f 4f       	sbci	r25, 0xFF	; 255
    537a:	11 e0       	ldi	r17, 0x01	; 1
    537c:	fc 01       	movw	r30, r24
    537e:	60 81       	ld	r22, Z
    5380:	71 81       	ldd	r23, Z+1	; 0x01
    5382:	82 81       	ldd	r24, Z+2	; 0x02
    5384:	93 81       	ldd	r25, Z+3	; 0x03
    5386:	20 e0       	ldi	r18, 0x00	; 0
    5388:	3f ef       	ldi	r19, 0xFF	; 255
    538a:	4f e7       	ldi	r20, 0x7F	; 127
    538c:	57 e4       	ldi	r21, 0x47	; 71
    538e:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5392:	18 16       	cp	r1, r24
    5394:	0c f0       	brlt	.+2      	; 0x5398 <main+0x16c4>
    5396:	10 e0       	ldi	r17, 0x00	; 0
    5398:	11 23       	and	r17, r17
    539a:	09 f4       	brne	.+2      	; 0x539e <main+0x16ca>
    539c:	4d c0       	rjmp	.+154    	; 0x5438 <main+0x1764>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    539e:	ce 01       	movw	r24, r28
    53a0:	8b 54       	subi	r24, 0x4B	; 75
    53a2:	9f 4f       	sbci	r25, 0xFF	; 255
    53a4:	fc 01       	movw	r30, r24
    53a6:	60 81       	ld	r22, Z
    53a8:	71 81       	ldd	r23, Z+1	; 0x01
    53aa:	82 81       	ldd	r24, Z+2	; 0x02
    53ac:	93 81       	ldd	r25, Z+3	; 0x03
    53ae:	20 e0       	ldi	r18, 0x00	; 0
    53b0:	30 e0       	ldi	r19, 0x00	; 0
    53b2:	40 e2       	ldi	r20, 0x20	; 32
    53b4:	51 e4       	ldi	r21, 0x41	; 65
    53b6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    53ba:	dc 01       	movw	r26, r24
    53bc:	cb 01       	movw	r24, r22
    53be:	8e 01       	movw	r16, r28
    53c0:	03 54       	subi	r16, 0x43	; 67
    53c2:	1f 4f       	sbci	r17, 0xFF	; 255
    53c4:	bc 01       	movw	r22, r24
    53c6:	cd 01       	movw	r24, r26
    53c8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    53cc:	dc 01       	movw	r26, r24
    53ce:	cb 01       	movw	r24, r22
    53d0:	f8 01       	movw	r30, r16
    53d2:	91 83       	std	Z+1, r25	; 0x01
    53d4:	80 83       	st	Z, r24
    53d6:	27 c0       	rjmp	.+78     	; 0x5426 <main+0x1752>
    53d8:	ce 01       	movw	r24, r28
    53da:	81 54       	subi	r24, 0x41	; 65
    53dc:	9f 4f       	sbci	r25, 0xFF	; 255
    53de:	20 e7       	ldi	r18, 0x70	; 112
    53e0:	31 e0       	ldi	r19, 0x01	; 1
    53e2:	fc 01       	movw	r30, r24
    53e4:	31 83       	std	Z+1, r19	; 0x01
    53e6:	20 83       	st	Z, r18
    53e8:	ce 01       	movw	r24, r28
    53ea:	81 54       	subi	r24, 0x41	; 65
    53ec:	9f 4f       	sbci	r25, 0xFF	; 255
    53ee:	fc 01       	movw	r30, r24
    53f0:	80 81       	ld	r24, Z
    53f2:	91 81       	ldd	r25, Z+1	; 0x01
    53f4:	8c 01       	movw	r16, r24
    53f6:	c8 01       	movw	r24, r16
    53f8:	01 97       	sbiw	r24, 0x01	; 1
    53fa:	f1 f7       	brne	.-4      	; 0x53f8 <main+0x1724>
    53fc:	8c 01       	movw	r16, r24
    53fe:	ce 01       	movw	r24, r28
    5400:	81 54       	subi	r24, 0x41	; 65
    5402:	9f 4f       	sbci	r25, 0xFF	; 255
    5404:	fc 01       	movw	r30, r24
    5406:	11 83       	std	Z+1, r17	; 0x01
    5408:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    540a:	ce 01       	movw	r24, r28
    540c:	83 54       	subi	r24, 0x43	; 67
    540e:	9f 4f       	sbci	r25, 0xFF	; 255
    5410:	9e 01       	movw	r18, r28
    5412:	23 54       	subi	r18, 0x43	; 67
    5414:	3f 4f       	sbci	r19, 0xFF	; 255
    5416:	f9 01       	movw	r30, r18
    5418:	20 81       	ld	r18, Z
    541a:	31 81       	ldd	r19, Z+1	; 0x01
    541c:	21 50       	subi	r18, 0x01	; 1
    541e:	30 40       	sbci	r19, 0x00	; 0
    5420:	fc 01       	movw	r30, r24
    5422:	31 83       	std	Z+1, r19	; 0x01
    5424:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5426:	ce 01       	movw	r24, r28
    5428:	83 54       	subi	r24, 0x43	; 67
    542a:	9f 4f       	sbci	r25, 0xFF	; 255
    542c:	fc 01       	movw	r30, r24
    542e:	80 81       	ld	r24, Z
    5430:	91 81       	ldd	r25, Z+1	; 0x01
    5432:	00 97       	sbiw	r24, 0x00	; 0
    5434:	89 f6       	brne	.-94     	; 0x53d8 <main+0x1704>
    5436:	2f c0       	rjmp	.+94     	; 0x5496 <main+0x17c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5438:	8e 01       	movw	r16, r28
    543a:	03 54       	subi	r16, 0x43	; 67
    543c:	1f 4f       	sbci	r17, 0xFF	; 255
    543e:	ce 01       	movw	r24, r28
    5440:	87 54       	subi	r24, 0x47	; 71
    5442:	9f 4f       	sbci	r25, 0xFF	; 255
    5444:	fc 01       	movw	r30, r24
    5446:	60 81       	ld	r22, Z
    5448:	71 81       	ldd	r23, Z+1	; 0x01
    544a:	82 81       	ldd	r24, Z+2	; 0x02
    544c:	93 81       	ldd	r25, Z+3	; 0x03
    544e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5452:	dc 01       	movw	r26, r24
    5454:	cb 01       	movw	r24, r22
    5456:	f8 01       	movw	r30, r16
    5458:	91 83       	std	Z+1, r25	; 0x01
    545a:	80 83       	st	Z, r24
    545c:	ce 01       	movw	r24, r28
    545e:	8f 53       	subi	r24, 0x3F	; 63
    5460:	9f 4f       	sbci	r25, 0xFF	; 255
    5462:	9e 01       	movw	r18, r28
    5464:	23 54       	subi	r18, 0x43	; 67
    5466:	3f 4f       	sbci	r19, 0xFF	; 255
    5468:	f9 01       	movw	r30, r18
    546a:	20 81       	ld	r18, Z
    546c:	31 81       	ldd	r19, Z+1	; 0x01
    546e:	fc 01       	movw	r30, r24
    5470:	31 83       	std	Z+1, r19	; 0x01
    5472:	20 83       	st	Z, r18
    5474:	ce 01       	movw	r24, r28
    5476:	8f 53       	subi	r24, 0x3F	; 63
    5478:	9f 4f       	sbci	r25, 0xFF	; 255
    547a:	fc 01       	movw	r30, r24
    547c:	80 81       	ld	r24, Z
    547e:	91 81       	ldd	r25, Z+1	; 0x01
    5480:	8c 01       	movw	r16, r24
    5482:	c8 01       	movw	r24, r16
    5484:	01 97       	sbiw	r24, 0x01	; 1
    5486:	f1 f7       	brne	.-4      	; 0x5484 <main+0x17b0>
    5488:	8c 01       	movw	r16, r24
    548a:	ce 01       	movw	r24, r28
    548c:	8f 53       	subi	r24, 0x3F	; 63
    548e:	9f 4f       	sbci	r25, 0xFF	; 255
    5490:	fc 01       	movw	r30, r24
    5492:	11 83       	std	Z+1, r17	; 0x01
    5494:	00 83       	st	Z, r16
					_delay_ms(100);
					linefollwer();
    5496:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    549a:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
				}
				else
				{
					if(compass==6)
    549e:	8b 81       	ldd	r24, Y+3	; 0x03
    54a0:	9c 81       	ldd	r25, Y+4	; 0x04
    54a2:	86 30       	cpi	r24, 0x06	; 6
    54a4:	91 05       	cpc	r25, r1
    54a6:	09 f0       	breq	.+2      	; 0x54aa <main+0x17d6>
    54a8:	e3 c0       	rjmp	.+454    	; 0x5670 <main+0x199c>
					{
						coor[0]=coor[0]+1;
    54aa:	80 91 a6 04 	lds	r24, 0x04A6
    54ae:	90 91 a7 04 	lds	r25, 0x04A7
    54b2:	01 96       	adiw	r24, 0x01	; 1
    54b4:	90 93 a7 04 	sts	0x04A7, r25
    54b8:	80 93 a6 04 	sts	0x04A6, r24
						compass=6;
    54bc:	86 e0       	ldi	r24, 0x06	; 6
    54be:	90 e0       	ldi	r25, 0x00	; 0
    54c0:	9c 83       	std	Y+4, r25	; 0x04
    54c2:	8b 83       	std	Y+3, r24	; 0x03
    54c4:	9e 01       	movw	r18, r28
    54c6:	2d 53       	subi	r18, 0x3D	; 61
    54c8:	3f 4f       	sbci	r19, 0xFF	; 255
    54ca:	80 e0       	ldi	r24, 0x00	; 0
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	a8 ec       	ldi	r26, 0xC8	; 200
    54d0:	b2 e4       	ldi	r27, 0x42	; 66
    54d2:	f9 01       	movw	r30, r18
    54d4:	80 83       	st	Z, r24
    54d6:	91 83       	std	Z+1, r25	; 0x01
    54d8:	a2 83       	std	Z+2, r26	; 0x02
    54da:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    54dc:	8e 01       	movw	r16, r28
    54de:	09 53       	subi	r16, 0x39	; 57
    54e0:	1f 4f       	sbci	r17, 0xFF	; 255
    54e2:	ce 01       	movw	r24, r28
    54e4:	8d 53       	subi	r24, 0x3D	; 61
    54e6:	9f 4f       	sbci	r25, 0xFF	; 255
    54e8:	fc 01       	movw	r30, r24
    54ea:	60 81       	ld	r22, Z
    54ec:	71 81       	ldd	r23, Z+1	; 0x01
    54ee:	82 81       	ldd	r24, Z+2	; 0x02
    54f0:	93 81       	ldd	r25, Z+3	; 0x03
    54f2:	26 e6       	ldi	r18, 0x66	; 102
    54f4:	36 e6       	ldi	r19, 0x66	; 102
    54f6:	46 e6       	ldi	r20, 0x66	; 102
    54f8:	55 e4       	ldi	r21, 0x45	; 69
    54fa:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    54fe:	dc 01       	movw	r26, r24
    5500:	cb 01       	movw	r24, r22
    5502:	f8 01       	movw	r30, r16
    5504:	80 83       	st	Z, r24
    5506:	91 83       	std	Z+1, r25	; 0x01
    5508:	a2 83       	std	Z+2, r26	; 0x02
    550a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    550c:	ce 01       	movw	r24, r28
    550e:	89 53       	subi	r24, 0x39	; 57
    5510:	9f 4f       	sbci	r25, 0xFF	; 255
    5512:	11 e0       	ldi	r17, 0x01	; 1
    5514:	fc 01       	movw	r30, r24
    5516:	60 81       	ld	r22, Z
    5518:	71 81       	ldd	r23, Z+1	; 0x01
    551a:	82 81       	ldd	r24, Z+2	; 0x02
    551c:	93 81       	ldd	r25, Z+3	; 0x03
    551e:	20 e0       	ldi	r18, 0x00	; 0
    5520:	30 e0       	ldi	r19, 0x00	; 0
    5522:	40 e8       	ldi	r20, 0x80	; 128
    5524:	5f e3       	ldi	r21, 0x3F	; 63
    5526:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    552a:	88 23       	and	r24, r24
    552c:	0c f0       	brlt	.+2      	; 0x5530 <main+0x185c>
    552e:	10 e0       	ldi	r17, 0x00	; 0
    5530:	11 23       	and	r17, r17
    5532:	49 f0       	breq	.+18     	; 0x5546 <main+0x1872>
		__ticks = 1;
    5534:	ce 01       	movw	r24, r28
    5536:	85 53       	subi	r24, 0x35	; 53
    5538:	9f 4f       	sbci	r25, 0xFF	; 255
    553a:	21 e0       	ldi	r18, 0x01	; 1
    553c:	30 e0       	ldi	r19, 0x00	; 0
    553e:	fc 01       	movw	r30, r24
    5540:	31 83       	std	Z+1, r19	; 0x01
    5542:	20 83       	st	Z, r18
    5544:	74 c0       	rjmp	.+232    	; 0x562e <main+0x195a>
	else if (__tmp > 65535)
    5546:	ce 01       	movw	r24, r28
    5548:	89 53       	subi	r24, 0x39	; 57
    554a:	9f 4f       	sbci	r25, 0xFF	; 255
    554c:	11 e0       	ldi	r17, 0x01	; 1
    554e:	fc 01       	movw	r30, r24
    5550:	60 81       	ld	r22, Z
    5552:	71 81       	ldd	r23, Z+1	; 0x01
    5554:	82 81       	ldd	r24, Z+2	; 0x02
    5556:	93 81       	ldd	r25, Z+3	; 0x03
    5558:	20 e0       	ldi	r18, 0x00	; 0
    555a:	3f ef       	ldi	r19, 0xFF	; 255
    555c:	4f e7       	ldi	r20, 0x7F	; 127
    555e:	57 e4       	ldi	r21, 0x47	; 71
    5560:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5564:	18 16       	cp	r1, r24
    5566:	0c f0       	brlt	.+2      	; 0x556a <main+0x1896>
    5568:	10 e0       	ldi	r17, 0x00	; 0
    556a:	11 23       	and	r17, r17
    556c:	09 f4       	brne	.+2      	; 0x5570 <main+0x189c>
    556e:	4d c0       	rjmp	.+154    	; 0x560a <main+0x1936>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5570:	ce 01       	movw	r24, r28
    5572:	8d 53       	subi	r24, 0x3D	; 61
    5574:	9f 4f       	sbci	r25, 0xFF	; 255
    5576:	fc 01       	movw	r30, r24
    5578:	60 81       	ld	r22, Z
    557a:	71 81       	ldd	r23, Z+1	; 0x01
    557c:	82 81       	ldd	r24, Z+2	; 0x02
    557e:	93 81       	ldd	r25, Z+3	; 0x03
    5580:	20 e0       	ldi	r18, 0x00	; 0
    5582:	30 e0       	ldi	r19, 0x00	; 0
    5584:	40 e2       	ldi	r20, 0x20	; 32
    5586:	51 e4       	ldi	r21, 0x41	; 65
    5588:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    558c:	dc 01       	movw	r26, r24
    558e:	cb 01       	movw	r24, r22
    5590:	8e 01       	movw	r16, r28
    5592:	05 53       	subi	r16, 0x35	; 53
    5594:	1f 4f       	sbci	r17, 0xFF	; 255
    5596:	bc 01       	movw	r22, r24
    5598:	cd 01       	movw	r24, r26
    559a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    559e:	dc 01       	movw	r26, r24
    55a0:	cb 01       	movw	r24, r22
    55a2:	f8 01       	movw	r30, r16
    55a4:	91 83       	std	Z+1, r25	; 0x01
    55a6:	80 83       	st	Z, r24
    55a8:	27 c0       	rjmp	.+78     	; 0x55f8 <main+0x1924>
    55aa:	ce 01       	movw	r24, r28
    55ac:	83 53       	subi	r24, 0x33	; 51
    55ae:	9f 4f       	sbci	r25, 0xFF	; 255
    55b0:	20 e7       	ldi	r18, 0x70	; 112
    55b2:	31 e0       	ldi	r19, 0x01	; 1
    55b4:	fc 01       	movw	r30, r24
    55b6:	31 83       	std	Z+1, r19	; 0x01
    55b8:	20 83       	st	Z, r18
    55ba:	ce 01       	movw	r24, r28
    55bc:	83 53       	subi	r24, 0x33	; 51
    55be:	9f 4f       	sbci	r25, 0xFF	; 255
    55c0:	fc 01       	movw	r30, r24
    55c2:	80 81       	ld	r24, Z
    55c4:	91 81       	ldd	r25, Z+1	; 0x01
    55c6:	8c 01       	movw	r16, r24
    55c8:	c8 01       	movw	r24, r16
    55ca:	01 97       	sbiw	r24, 0x01	; 1
    55cc:	f1 f7       	brne	.-4      	; 0x55ca <main+0x18f6>
    55ce:	8c 01       	movw	r16, r24
    55d0:	ce 01       	movw	r24, r28
    55d2:	83 53       	subi	r24, 0x33	; 51
    55d4:	9f 4f       	sbci	r25, 0xFF	; 255
    55d6:	fc 01       	movw	r30, r24
    55d8:	11 83       	std	Z+1, r17	; 0x01
    55da:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55dc:	ce 01       	movw	r24, r28
    55de:	85 53       	subi	r24, 0x35	; 53
    55e0:	9f 4f       	sbci	r25, 0xFF	; 255
    55e2:	9e 01       	movw	r18, r28
    55e4:	25 53       	subi	r18, 0x35	; 53
    55e6:	3f 4f       	sbci	r19, 0xFF	; 255
    55e8:	f9 01       	movw	r30, r18
    55ea:	20 81       	ld	r18, Z
    55ec:	31 81       	ldd	r19, Z+1	; 0x01
    55ee:	21 50       	subi	r18, 0x01	; 1
    55f0:	30 40       	sbci	r19, 0x00	; 0
    55f2:	fc 01       	movw	r30, r24
    55f4:	31 83       	std	Z+1, r19	; 0x01
    55f6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55f8:	ce 01       	movw	r24, r28
    55fa:	85 53       	subi	r24, 0x35	; 53
    55fc:	9f 4f       	sbci	r25, 0xFF	; 255
    55fe:	fc 01       	movw	r30, r24
    5600:	80 81       	ld	r24, Z
    5602:	91 81       	ldd	r25, Z+1	; 0x01
    5604:	00 97       	sbiw	r24, 0x00	; 0
    5606:	89 f6       	brne	.-94     	; 0x55aa <main+0x18d6>
    5608:	2f c0       	rjmp	.+94     	; 0x5668 <main+0x1994>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    560a:	8e 01       	movw	r16, r28
    560c:	05 53       	subi	r16, 0x35	; 53
    560e:	1f 4f       	sbci	r17, 0xFF	; 255
    5610:	ce 01       	movw	r24, r28
    5612:	89 53       	subi	r24, 0x39	; 57
    5614:	9f 4f       	sbci	r25, 0xFF	; 255
    5616:	fc 01       	movw	r30, r24
    5618:	60 81       	ld	r22, Z
    561a:	71 81       	ldd	r23, Z+1	; 0x01
    561c:	82 81       	ldd	r24, Z+2	; 0x02
    561e:	93 81       	ldd	r25, Z+3	; 0x03
    5620:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5624:	dc 01       	movw	r26, r24
    5626:	cb 01       	movw	r24, r22
    5628:	f8 01       	movw	r30, r16
    562a:	91 83       	std	Z+1, r25	; 0x01
    562c:	80 83       	st	Z, r24
    562e:	ce 01       	movw	r24, r28
    5630:	81 53       	subi	r24, 0x31	; 49
    5632:	9f 4f       	sbci	r25, 0xFF	; 255
    5634:	9e 01       	movw	r18, r28
    5636:	25 53       	subi	r18, 0x35	; 53
    5638:	3f 4f       	sbci	r19, 0xFF	; 255
    563a:	f9 01       	movw	r30, r18
    563c:	20 81       	ld	r18, Z
    563e:	31 81       	ldd	r19, Z+1	; 0x01
    5640:	fc 01       	movw	r30, r24
    5642:	31 83       	std	Z+1, r19	; 0x01
    5644:	20 83       	st	Z, r18
    5646:	ce 01       	movw	r24, r28
    5648:	81 53       	subi	r24, 0x31	; 49
    564a:	9f 4f       	sbci	r25, 0xFF	; 255
    564c:	fc 01       	movw	r30, r24
    564e:	80 81       	ld	r24, Z
    5650:	91 81       	ldd	r25, Z+1	; 0x01
    5652:	8c 01       	movw	r16, r24
    5654:	c8 01       	movw	r24, r16
    5656:	01 97       	sbiw	r24, 0x01	; 1
    5658:	f1 f7       	brne	.-4      	; 0x5656 <main+0x1982>
    565a:	8c 01       	movw	r16, r24
    565c:	ce 01       	movw	r24, r28
    565e:	81 53       	subi	r24, 0x31	; 49
    5660:	9f 4f       	sbci	r25, 0xFF	; 255
    5662:	fc 01       	movw	r30, r24
    5664:	11 83       	std	Z+1, r17	; 0x01
    5666:	00 83       	st	Z, r16
						_delay_ms(100);
						linefollwer();
    5668:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    566c:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
					}
					else
					{
						if(compass==5)
    5670:	8b 81       	ldd	r24, Y+3	; 0x03
    5672:	9c 81       	ldd	r25, Y+4	; 0x04
    5674:	85 30       	cpi	r24, 0x05	; 5
    5676:	91 05       	cpc	r25, r1
    5678:	09 f0       	breq	.+2      	; 0x567c <main+0x19a8>
    567a:	b9 c1       	rjmp	.+882    	; 0x59ee <main+0x1d1a>
						{
							coor[0]=coor[0]+1;
    567c:	80 91 a6 04 	lds	r24, 0x04A6
    5680:	90 91 a7 04 	lds	r25, 0x04A7
    5684:	01 96       	adiw	r24, 0x01	; 1
    5686:	90 93 a7 04 	sts	0x04A7, r25
    568a:	80 93 a6 04 	sts	0x04A6, r24
							compass=6;
    568e:	86 e0       	ldi	r24, 0x06	; 6
    5690:	90 e0       	ldi	r25, 0x00	; 0
    5692:	9c 83       	std	Y+4, r25	; 0x04
    5694:	8b 83       	std	Y+3, r24	; 0x03
    5696:	9e 01       	movw	r18, r28
    5698:	2f 52       	subi	r18, 0x2F	; 47
    569a:	3f 4f       	sbci	r19, 0xFF	; 255
    569c:	80 e0       	ldi	r24, 0x00	; 0
    569e:	90 e0       	ldi	r25, 0x00	; 0
    56a0:	aa ef       	ldi	r26, 0xFA	; 250
    56a2:	b3 e4       	ldi	r27, 0x43	; 67
    56a4:	f9 01       	movw	r30, r18
    56a6:	80 83       	st	Z, r24
    56a8:	91 83       	std	Z+1, r25	; 0x01
    56aa:	a2 83       	std	Z+2, r26	; 0x02
    56ac:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    56ae:	8e 01       	movw	r16, r28
    56b0:	0b 52       	subi	r16, 0x2B	; 43
    56b2:	1f 4f       	sbci	r17, 0xFF	; 255
    56b4:	ce 01       	movw	r24, r28
    56b6:	8f 52       	subi	r24, 0x2F	; 47
    56b8:	9f 4f       	sbci	r25, 0xFF	; 255
    56ba:	fc 01       	movw	r30, r24
    56bc:	60 81       	ld	r22, Z
    56be:	71 81       	ldd	r23, Z+1	; 0x01
    56c0:	82 81       	ldd	r24, Z+2	; 0x02
    56c2:	93 81       	ldd	r25, Z+3	; 0x03
    56c4:	26 e6       	ldi	r18, 0x66	; 102
    56c6:	36 e6       	ldi	r19, 0x66	; 102
    56c8:	46 e6       	ldi	r20, 0x66	; 102
    56ca:	55 e4       	ldi	r21, 0x45	; 69
    56cc:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    56d0:	dc 01       	movw	r26, r24
    56d2:	cb 01       	movw	r24, r22
    56d4:	f8 01       	movw	r30, r16
    56d6:	80 83       	st	Z, r24
    56d8:	91 83       	std	Z+1, r25	; 0x01
    56da:	a2 83       	std	Z+2, r26	; 0x02
    56dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    56de:	ce 01       	movw	r24, r28
    56e0:	8b 52       	subi	r24, 0x2B	; 43
    56e2:	9f 4f       	sbci	r25, 0xFF	; 255
    56e4:	11 e0       	ldi	r17, 0x01	; 1
    56e6:	fc 01       	movw	r30, r24
    56e8:	60 81       	ld	r22, Z
    56ea:	71 81       	ldd	r23, Z+1	; 0x01
    56ec:	82 81       	ldd	r24, Z+2	; 0x02
    56ee:	93 81       	ldd	r25, Z+3	; 0x03
    56f0:	20 e0       	ldi	r18, 0x00	; 0
    56f2:	30 e0       	ldi	r19, 0x00	; 0
    56f4:	40 e8       	ldi	r20, 0x80	; 128
    56f6:	5f e3       	ldi	r21, 0x3F	; 63
    56f8:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    56fc:	88 23       	and	r24, r24
    56fe:	0c f0       	brlt	.+2      	; 0x5702 <main+0x1a2e>
    5700:	10 e0       	ldi	r17, 0x00	; 0
    5702:	11 23       	and	r17, r17
    5704:	49 f0       	breq	.+18     	; 0x5718 <main+0x1a44>
		__ticks = 1;
    5706:	ce 01       	movw	r24, r28
    5708:	87 52       	subi	r24, 0x27	; 39
    570a:	9f 4f       	sbci	r25, 0xFF	; 255
    570c:	21 e0       	ldi	r18, 0x01	; 1
    570e:	30 e0       	ldi	r19, 0x00	; 0
    5710:	fc 01       	movw	r30, r24
    5712:	31 83       	std	Z+1, r19	; 0x01
    5714:	20 83       	st	Z, r18
    5716:	74 c0       	rjmp	.+232    	; 0x5800 <main+0x1b2c>
	else if (__tmp > 65535)
    5718:	ce 01       	movw	r24, r28
    571a:	8b 52       	subi	r24, 0x2B	; 43
    571c:	9f 4f       	sbci	r25, 0xFF	; 255
    571e:	11 e0       	ldi	r17, 0x01	; 1
    5720:	fc 01       	movw	r30, r24
    5722:	60 81       	ld	r22, Z
    5724:	71 81       	ldd	r23, Z+1	; 0x01
    5726:	82 81       	ldd	r24, Z+2	; 0x02
    5728:	93 81       	ldd	r25, Z+3	; 0x03
    572a:	20 e0       	ldi	r18, 0x00	; 0
    572c:	3f ef       	ldi	r19, 0xFF	; 255
    572e:	4f e7       	ldi	r20, 0x7F	; 127
    5730:	57 e4       	ldi	r21, 0x47	; 71
    5732:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5736:	18 16       	cp	r1, r24
    5738:	0c f0       	brlt	.+2      	; 0x573c <main+0x1a68>
    573a:	10 e0       	ldi	r17, 0x00	; 0
    573c:	11 23       	and	r17, r17
    573e:	09 f4       	brne	.+2      	; 0x5742 <main+0x1a6e>
    5740:	4d c0       	rjmp	.+154    	; 0x57dc <main+0x1b08>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5742:	ce 01       	movw	r24, r28
    5744:	8f 52       	subi	r24, 0x2F	; 47
    5746:	9f 4f       	sbci	r25, 0xFF	; 255
    5748:	fc 01       	movw	r30, r24
    574a:	60 81       	ld	r22, Z
    574c:	71 81       	ldd	r23, Z+1	; 0x01
    574e:	82 81       	ldd	r24, Z+2	; 0x02
    5750:	93 81       	ldd	r25, Z+3	; 0x03
    5752:	20 e0       	ldi	r18, 0x00	; 0
    5754:	30 e0       	ldi	r19, 0x00	; 0
    5756:	40 e2       	ldi	r20, 0x20	; 32
    5758:	51 e4       	ldi	r21, 0x41	; 65
    575a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    575e:	dc 01       	movw	r26, r24
    5760:	cb 01       	movw	r24, r22
    5762:	8e 01       	movw	r16, r28
    5764:	07 52       	subi	r16, 0x27	; 39
    5766:	1f 4f       	sbci	r17, 0xFF	; 255
    5768:	bc 01       	movw	r22, r24
    576a:	cd 01       	movw	r24, r26
    576c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5770:	dc 01       	movw	r26, r24
    5772:	cb 01       	movw	r24, r22
    5774:	f8 01       	movw	r30, r16
    5776:	91 83       	std	Z+1, r25	; 0x01
    5778:	80 83       	st	Z, r24
    577a:	27 c0       	rjmp	.+78     	; 0x57ca <main+0x1af6>
    577c:	ce 01       	movw	r24, r28
    577e:	85 52       	subi	r24, 0x25	; 37
    5780:	9f 4f       	sbci	r25, 0xFF	; 255
    5782:	20 e7       	ldi	r18, 0x70	; 112
    5784:	31 e0       	ldi	r19, 0x01	; 1
    5786:	fc 01       	movw	r30, r24
    5788:	31 83       	std	Z+1, r19	; 0x01
    578a:	20 83       	st	Z, r18
    578c:	ce 01       	movw	r24, r28
    578e:	85 52       	subi	r24, 0x25	; 37
    5790:	9f 4f       	sbci	r25, 0xFF	; 255
    5792:	fc 01       	movw	r30, r24
    5794:	80 81       	ld	r24, Z
    5796:	91 81       	ldd	r25, Z+1	; 0x01
    5798:	8c 01       	movw	r16, r24
    579a:	c8 01       	movw	r24, r16
    579c:	01 97       	sbiw	r24, 0x01	; 1
    579e:	f1 f7       	brne	.-4      	; 0x579c <main+0x1ac8>
    57a0:	8c 01       	movw	r16, r24
    57a2:	ce 01       	movw	r24, r28
    57a4:	85 52       	subi	r24, 0x25	; 37
    57a6:	9f 4f       	sbci	r25, 0xFF	; 255
    57a8:	fc 01       	movw	r30, r24
    57aa:	11 83       	std	Z+1, r17	; 0x01
    57ac:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    57ae:	ce 01       	movw	r24, r28
    57b0:	87 52       	subi	r24, 0x27	; 39
    57b2:	9f 4f       	sbci	r25, 0xFF	; 255
    57b4:	9e 01       	movw	r18, r28
    57b6:	27 52       	subi	r18, 0x27	; 39
    57b8:	3f 4f       	sbci	r19, 0xFF	; 255
    57ba:	f9 01       	movw	r30, r18
    57bc:	20 81       	ld	r18, Z
    57be:	31 81       	ldd	r19, Z+1	; 0x01
    57c0:	21 50       	subi	r18, 0x01	; 1
    57c2:	30 40       	sbci	r19, 0x00	; 0
    57c4:	fc 01       	movw	r30, r24
    57c6:	31 83       	std	Z+1, r19	; 0x01
    57c8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    57ca:	ce 01       	movw	r24, r28
    57cc:	87 52       	subi	r24, 0x27	; 39
    57ce:	9f 4f       	sbci	r25, 0xFF	; 255
    57d0:	fc 01       	movw	r30, r24
    57d2:	80 81       	ld	r24, Z
    57d4:	91 81       	ldd	r25, Z+1	; 0x01
    57d6:	00 97       	sbiw	r24, 0x00	; 0
    57d8:	89 f6       	brne	.-94     	; 0x577c <main+0x1aa8>
    57da:	2f c0       	rjmp	.+94     	; 0x583a <main+0x1b66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    57dc:	8e 01       	movw	r16, r28
    57de:	07 52       	subi	r16, 0x27	; 39
    57e0:	1f 4f       	sbci	r17, 0xFF	; 255
    57e2:	ce 01       	movw	r24, r28
    57e4:	8b 52       	subi	r24, 0x2B	; 43
    57e6:	9f 4f       	sbci	r25, 0xFF	; 255
    57e8:	fc 01       	movw	r30, r24
    57ea:	60 81       	ld	r22, Z
    57ec:	71 81       	ldd	r23, Z+1	; 0x01
    57ee:	82 81       	ldd	r24, Z+2	; 0x02
    57f0:	93 81       	ldd	r25, Z+3	; 0x03
    57f2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    57f6:	dc 01       	movw	r26, r24
    57f8:	cb 01       	movw	r24, r22
    57fa:	f8 01       	movw	r30, r16
    57fc:	91 83       	std	Z+1, r25	; 0x01
    57fe:	80 83       	st	Z, r24
    5800:	ce 01       	movw	r24, r28
    5802:	83 52       	subi	r24, 0x23	; 35
    5804:	9f 4f       	sbci	r25, 0xFF	; 255
    5806:	9e 01       	movw	r18, r28
    5808:	27 52       	subi	r18, 0x27	; 39
    580a:	3f 4f       	sbci	r19, 0xFF	; 255
    580c:	f9 01       	movw	r30, r18
    580e:	20 81       	ld	r18, Z
    5810:	31 81       	ldd	r19, Z+1	; 0x01
    5812:	fc 01       	movw	r30, r24
    5814:	31 83       	std	Z+1, r19	; 0x01
    5816:	20 83       	st	Z, r18
    5818:	ce 01       	movw	r24, r28
    581a:	83 52       	subi	r24, 0x23	; 35
    581c:	9f 4f       	sbci	r25, 0xFF	; 255
    581e:	fc 01       	movw	r30, r24
    5820:	80 81       	ld	r24, Z
    5822:	91 81       	ldd	r25, Z+1	; 0x01
    5824:	8c 01       	movw	r16, r24
    5826:	c8 01       	movw	r24, r16
    5828:	01 97       	sbiw	r24, 0x01	; 1
    582a:	f1 f7       	brne	.-4      	; 0x5828 <main+0x1b54>
    582c:	8c 01       	movw	r16, r24
    582e:	ce 01       	movw	r24, r28
    5830:	83 52       	subi	r24, 0x23	; 35
    5832:	9f 4f       	sbci	r25, 0xFF	; 255
    5834:	fc 01       	movw	r30, r24
    5836:	11 83       	std	Z+1, r17	; 0x01
    5838:	00 83       	st	Z, r16
							_delay_ms(500);
							left_degrees(85);
    583a:	85 e5       	ldi	r24, 0x55	; 85
    583c:	90 e0       	ldi	r25, 0x00	; 0
    583e:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    5842:	9e 01       	movw	r18, r28
    5844:	21 52       	subi	r18, 0x21	; 33
    5846:	3f 4f       	sbci	r19, 0xFF	; 255
    5848:	80 e0       	ldi	r24, 0x00	; 0
    584a:	90 e0       	ldi	r25, 0x00	; 0
    584c:	a8 ec       	ldi	r26, 0xC8	; 200
    584e:	b2 e4       	ldi	r27, 0x42	; 66
    5850:	f9 01       	movw	r30, r18
    5852:	80 83       	st	Z, r24
    5854:	91 83       	std	Z+1, r25	; 0x01
    5856:	a2 83       	std	Z+2, r26	; 0x02
    5858:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    585a:	8e 01       	movw	r16, r28
    585c:	0d 51       	subi	r16, 0x1D	; 29
    585e:	1f 4f       	sbci	r17, 0xFF	; 255
    5860:	ce 01       	movw	r24, r28
    5862:	81 52       	subi	r24, 0x21	; 33
    5864:	9f 4f       	sbci	r25, 0xFF	; 255
    5866:	fc 01       	movw	r30, r24
    5868:	60 81       	ld	r22, Z
    586a:	71 81       	ldd	r23, Z+1	; 0x01
    586c:	82 81       	ldd	r24, Z+2	; 0x02
    586e:	93 81       	ldd	r25, Z+3	; 0x03
    5870:	26 e6       	ldi	r18, 0x66	; 102
    5872:	36 e6       	ldi	r19, 0x66	; 102
    5874:	46 e6       	ldi	r20, 0x66	; 102
    5876:	55 e4       	ldi	r21, 0x45	; 69
    5878:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    587c:	dc 01       	movw	r26, r24
    587e:	cb 01       	movw	r24, r22
    5880:	f8 01       	movw	r30, r16
    5882:	80 83       	st	Z, r24
    5884:	91 83       	std	Z+1, r25	; 0x01
    5886:	a2 83       	std	Z+2, r26	; 0x02
    5888:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    588a:	ce 01       	movw	r24, r28
    588c:	8d 51       	subi	r24, 0x1D	; 29
    588e:	9f 4f       	sbci	r25, 0xFF	; 255
    5890:	11 e0       	ldi	r17, 0x01	; 1
    5892:	fc 01       	movw	r30, r24
    5894:	60 81       	ld	r22, Z
    5896:	71 81       	ldd	r23, Z+1	; 0x01
    5898:	82 81       	ldd	r24, Z+2	; 0x02
    589a:	93 81       	ldd	r25, Z+3	; 0x03
    589c:	20 e0       	ldi	r18, 0x00	; 0
    589e:	30 e0       	ldi	r19, 0x00	; 0
    58a0:	40 e8       	ldi	r20, 0x80	; 128
    58a2:	5f e3       	ldi	r21, 0x3F	; 63
    58a4:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    58a8:	88 23       	and	r24, r24
    58aa:	0c f0       	brlt	.+2      	; 0x58ae <main+0x1bda>
    58ac:	10 e0       	ldi	r17, 0x00	; 0
    58ae:	11 23       	and	r17, r17
    58b0:	49 f0       	breq	.+18     	; 0x58c4 <main+0x1bf0>
		__ticks = 1;
    58b2:	ce 01       	movw	r24, r28
    58b4:	89 51       	subi	r24, 0x19	; 25
    58b6:	9f 4f       	sbci	r25, 0xFF	; 255
    58b8:	21 e0       	ldi	r18, 0x01	; 1
    58ba:	30 e0       	ldi	r19, 0x00	; 0
    58bc:	fc 01       	movw	r30, r24
    58be:	31 83       	std	Z+1, r19	; 0x01
    58c0:	20 83       	st	Z, r18
    58c2:	74 c0       	rjmp	.+232    	; 0x59ac <main+0x1cd8>
	else if (__tmp > 65535)
    58c4:	ce 01       	movw	r24, r28
    58c6:	8d 51       	subi	r24, 0x1D	; 29
    58c8:	9f 4f       	sbci	r25, 0xFF	; 255
    58ca:	11 e0       	ldi	r17, 0x01	; 1
    58cc:	fc 01       	movw	r30, r24
    58ce:	60 81       	ld	r22, Z
    58d0:	71 81       	ldd	r23, Z+1	; 0x01
    58d2:	82 81       	ldd	r24, Z+2	; 0x02
    58d4:	93 81       	ldd	r25, Z+3	; 0x03
    58d6:	20 e0       	ldi	r18, 0x00	; 0
    58d8:	3f ef       	ldi	r19, 0xFF	; 255
    58da:	4f e7       	ldi	r20, 0x7F	; 127
    58dc:	57 e4       	ldi	r21, 0x47	; 71
    58de:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    58e2:	18 16       	cp	r1, r24
    58e4:	0c f0       	brlt	.+2      	; 0x58e8 <main+0x1c14>
    58e6:	10 e0       	ldi	r17, 0x00	; 0
    58e8:	11 23       	and	r17, r17
    58ea:	09 f4       	brne	.+2      	; 0x58ee <main+0x1c1a>
    58ec:	4d c0       	rjmp	.+154    	; 0x5988 <main+0x1cb4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    58ee:	ce 01       	movw	r24, r28
    58f0:	81 52       	subi	r24, 0x21	; 33
    58f2:	9f 4f       	sbci	r25, 0xFF	; 255
    58f4:	fc 01       	movw	r30, r24
    58f6:	60 81       	ld	r22, Z
    58f8:	71 81       	ldd	r23, Z+1	; 0x01
    58fa:	82 81       	ldd	r24, Z+2	; 0x02
    58fc:	93 81       	ldd	r25, Z+3	; 0x03
    58fe:	20 e0       	ldi	r18, 0x00	; 0
    5900:	30 e0       	ldi	r19, 0x00	; 0
    5902:	40 e2       	ldi	r20, 0x20	; 32
    5904:	51 e4       	ldi	r21, 0x41	; 65
    5906:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    590a:	dc 01       	movw	r26, r24
    590c:	cb 01       	movw	r24, r22
    590e:	8e 01       	movw	r16, r28
    5910:	09 51       	subi	r16, 0x19	; 25
    5912:	1f 4f       	sbci	r17, 0xFF	; 255
    5914:	bc 01       	movw	r22, r24
    5916:	cd 01       	movw	r24, r26
    5918:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    591c:	dc 01       	movw	r26, r24
    591e:	cb 01       	movw	r24, r22
    5920:	f8 01       	movw	r30, r16
    5922:	91 83       	std	Z+1, r25	; 0x01
    5924:	80 83       	st	Z, r24
    5926:	27 c0       	rjmp	.+78     	; 0x5976 <main+0x1ca2>
    5928:	ce 01       	movw	r24, r28
    592a:	87 51       	subi	r24, 0x17	; 23
    592c:	9f 4f       	sbci	r25, 0xFF	; 255
    592e:	20 e7       	ldi	r18, 0x70	; 112
    5930:	31 e0       	ldi	r19, 0x01	; 1
    5932:	fc 01       	movw	r30, r24
    5934:	31 83       	std	Z+1, r19	; 0x01
    5936:	20 83       	st	Z, r18
    5938:	ce 01       	movw	r24, r28
    593a:	87 51       	subi	r24, 0x17	; 23
    593c:	9f 4f       	sbci	r25, 0xFF	; 255
    593e:	fc 01       	movw	r30, r24
    5940:	80 81       	ld	r24, Z
    5942:	91 81       	ldd	r25, Z+1	; 0x01
    5944:	8c 01       	movw	r16, r24
    5946:	c8 01       	movw	r24, r16
    5948:	01 97       	sbiw	r24, 0x01	; 1
    594a:	f1 f7       	brne	.-4      	; 0x5948 <main+0x1c74>
    594c:	8c 01       	movw	r16, r24
    594e:	ce 01       	movw	r24, r28
    5950:	87 51       	subi	r24, 0x17	; 23
    5952:	9f 4f       	sbci	r25, 0xFF	; 255
    5954:	fc 01       	movw	r30, r24
    5956:	11 83       	std	Z+1, r17	; 0x01
    5958:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    595a:	ce 01       	movw	r24, r28
    595c:	89 51       	subi	r24, 0x19	; 25
    595e:	9f 4f       	sbci	r25, 0xFF	; 255
    5960:	9e 01       	movw	r18, r28
    5962:	29 51       	subi	r18, 0x19	; 25
    5964:	3f 4f       	sbci	r19, 0xFF	; 255
    5966:	f9 01       	movw	r30, r18
    5968:	20 81       	ld	r18, Z
    596a:	31 81       	ldd	r19, Z+1	; 0x01
    596c:	21 50       	subi	r18, 0x01	; 1
    596e:	30 40       	sbci	r19, 0x00	; 0
    5970:	fc 01       	movw	r30, r24
    5972:	31 83       	std	Z+1, r19	; 0x01
    5974:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5976:	ce 01       	movw	r24, r28
    5978:	89 51       	subi	r24, 0x19	; 25
    597a:	9f 4f       	sbci	r25, 0xFF	; 255
    597c:	fc 01       	movw	r30, r24
    597e:	80 81       	ld	r24, Z
    5980:	91 81       	ldd	r25, Z+1	; 0x01
    5982:	00 97       	sbiw	r24, 0x00	; 0
    5984:	89 f6       	brne	.-94     	; 0x5928 <main+0x1c54>
    5986:	2f c0       	rjmp	.+94     	; 0x59e6 <main+0x1d12>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5988:	8e 01       	movw	r16, r28
    598a:	09 51       	subi	r16, 0x19	; 25
    598c:	1f 4f       	sbci	r17, 0xFF	; 255
    598e:	ce 01       	movw	r24, r28
    5990:	8d 51       	subi	r24, 0x1D	; 29
    5992:	9f 4f       	sbci	r25, 0xFF	; 255
    5994:	fc 01       	movw	r30, r24
    5996:	60 81       	ld	r22, Z
    5998:	71 81       	ldd	r23, Z+1	; 0x01
    599a:	82 81       	ldd	r24, Z+2	; 0x02
    599c:	93 81       	ldd	r25, Z+3	; 0x03
    599e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    59a2:	dc 01       	movw	r26, r24
    59a4:	cb 01       	movw	r24, r22
    59a6:	f8 01       	movw	r30, r16
    59a8:	91 83       	std	Z+1, r25	; 0x01
    59aa:	80 83       	st	Z, r24
    59ac:	ce 01       	movw	r24, r28
    59ae:	85 51       	subi	r24, 0x15	; 21
    59b0:	9f 4f       	sbci	r25, 0xFF	; 255
    59b2:	9e 01       	movw	r18, r28
    59b4:	29 51       	subi	r18, 0x19	; 25
    59b6:	3f 4f       	sbci	r19, 0xFF	; 255
    59b8:	f9 01       	movw	r30, r18
    59ba:	20 81       	ld	r18, Z
    59bc:	31 81       	ldd	r19, Z+1	; 0x01
    59be:	fc 01       	movw	r30, r24
    59c0:	31 83       	std	Z+1, r19	; 0x01
    59c2:	20 83       	st	Z, r18
    59c4:	ce 01       	movw	r24, r28
    59c6:	85 51       	subi	r24, 0x15	; 21
    59c8:	9f 4f       	sbci	r25, 0xFF	; 255
    59ca:	fc 01       	movw	r30, r24
    59cc:	80 81       	ld	r24, Z
    59ce:	91 81       	ldd	r25, Z+1	; 0x01
    59d0:	8c 01       	movw	r16, r24
    59d2:	c8 01       	movw	r24, r16
    59d4:	01 97       	sbiw	r24, 0x01	; 1
    59d6:	f1 f7       	brne	.-4      	; 0x59d4 <main+0x1d00>
    59d8:	8c 01       	movw	r16, r24
    59da:	ce 01       	movw	r24, r28
    59dc:	85 51       	subi	r24, 0x15	; 21
    59de:	9f 4f       	sbci	r25, 0xFF	; 255
    59e0:	fc 01       	movw	r30, r24
    59e2:	11 83       	std	Z+1, r17	; 0x01
    59e4:	00 83       	st	Z, r16
							_delay_ms(100);
							linefollwer();
    59e6:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    59ea:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
						}
						else
						{
							if(compass==7)
    59ee:	8b 81       	ldd	r24, Y+3	; 0x03
    59f0:	9c 81       	ldd	r25, Y+4	; 0x04
    59f2:	87 30       	cpi	r24, 0x07	; 7
    59f4:	91 05       	cpc	r25, r1
    59f6:	11 f0       	breq	.+4      	; 0x59fc <main+0x1d28>
    59f8:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
							{
								coor[0]=coor[0]+1;
    59fc:	80 91 a6 04 	lds	r24, 0x04A6
    5a00:	90 91 a7 04 	lds	r25, 0x04A7
    5a04:	01 96       	adiw	r24, 0x01	; 1
    5a06:	90 93 a7 04 	sts	0x04A7, r25
    5a0a:	80 93 a6 04 	sts	0x04A6, r24
								compass=6;
    5a0e:	86 e0       	ldi	r24, 0x06	; 6
    5a10:	90 e0       	ldi	r25, 0x00	; 0
    5a12:	9c 83       	std	Y+4, r25	; 0x04
    5a14:	8b 83       	std	Y+3, r24	; 0x03
    5a16:	9e 01       	movw	r18, r28
    5a18:	23 51       	subi	r18, 0x13	; 19
    5a1a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a1c:	80 e0       	ldi	r24, 0x00	; 0
    5a1e:	90 e0       	ldi	r25, 0x00	; 0
    5a20:	aa ef       	ldi	r26, 0xFA	; 250
    5a22:	b3 e4       	ldi	r27, 0x43	; 67
    5a24:	f9 01       	movw	r30, r18
    5a26:	80 83       	st	Z, r24
    5a28:	91 83       	std	Z+1, r25	; 0x01
    5a2a:	a2 83       	std	Z+2, r26	; 0x02
    5a2c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    5a2e:	8e 01       	movw	r16, r28
    5a30:	0f 50       	subi	r16, 0x0F	; 15
    5a32:	1f 4f       	sbci	r17, 0xFF	; 255
    5a34:	ce 01       	movw	r24, r28
    5a36:	83 51       	subi	r24, 0x13	; 19
    5a38:	9f 4f       	sbci	r25, 0xFF	; 255
    5a3a:	fc 01       	movw	r30, r24
    5a3c:	60 81       	ld	r22, Z
    5a3e:	71 81       	ldd	r23, Z+1	; 0x01
    5a40:	82 81       	ldd	r24, Z+2	; 0x02
    5a42:	93 81       	ldd	r25, Z+3	; 0x03
    5a44:	26 e6       	ldi	r18, 0x66	; 102
    5a46:	36 e6       	ldi	r19, 0x66	; 102
    5a48:	46 e6       	ldi	r20, 0x66	; 102
    5a4a:	55 e4       	ldi	r21, 0x45	; 69
    5a4c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5a50:	dc 01       	movw	r26, r24
    5a52:	cb 01       	movw	r24, r22
    5a54:	f8 01       	movw	r30, r16
    5a56:	80 83       	st	Z, r24
    5a58:	91 83       	std	Z+1, r25	; 0x01
    5a5a:	a2 83       	std	Z+2, r26	; 0x02
    5a5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5a5e:	ce 01       	movw	r24, r28
    5a60:	8f 50       	subi	r24, 0x0F	; 15
    5a62:	9f 4f       	sbci	r25, 0xFF	; 255
    5a64:	11 e0       	ldi	r17, 0x01	; 1
    5a66:	fc 01       	movw	r30, r24
    5a68:	60 81       	ld	r22, Z
    5a6a:	71 81       	ldd	r23, Z+1	; 0x01
    5a6c:	82 81       	ldd	r24, Z+2	; 0x02
    5a6e:	93 81       	ldd	r25, Z+3	; 0x03
    5a70:	20 e0       	ldi	r18, 0x00	; 0
    5a72:	30 e0       	ldi	r19, 0x00	; 0
    5a74:	40 e8       	ldi	r20, 0x80	; 128
    5a76:	5f e3       	ldi	r21, 0x3F	; 63
    5a78:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    5a7c:	88 23       	and	r24, r24
    5a7e:	0c f0       	brlt	.+2      	; 0x5a82 <main+0x1dae>
    5a80:	10 e0       	ldi	r17, 0x00	; 0
    5a82:	11 23       	and	r17, r17
    5a84:	49 f0       	breq	.+18     	; 0x5a98 <main+0x1dc4>
		__ticks = 1;
    5a86:	ce 01       	movw	r24, r28
    5a88:	8b 50       	subi	r24, 0x0B	; 11
    5a8a:	9f 4f       	sbci	r25, 0xFF	; 255
    5a8c:	21 e0       	ldi	r18, 0x01	; 1
    5a8e:	30 e0       	ldi	r19, 0x00	; 0
    5a90:	fc 01       	movw	r30, r24
    5a92:	31 83       	std	Z+1, r19	; 0x01
    5a94:	20 83       	st	Z, r18
    5a96:	74 c0       	rjmp	.+232    	; 0x5b80 <main+0x1eac>
	else if (__tmp > 65535)
    5a98:	ce 01       	movw	r24, r28
    5a9a:	8f 50       	subi	r24, 0x0F	; 15
    5a9c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a9e:	11 e0       	ldi	r17, 0x01	; 1
    5aa0:	fc 01       	movw	r30, r24
    5aa2:	60 81       	ld	r22, Z
    5aa4:	71 81       	ldd	r23, Z+1	; 0x01
    5aa6:	82 81       	ldd	r24, Z+2	; 0x02
    5aa8:	93 81       	ldd	r25, Z+3	; 0x03
    5aaa:	20 e0       	ldi	r18, 0x00	; 0
    5aac:	3f ef       	ldi	r19, 0xFF	; 255
    5aae:	4f e7       	ldi	r20, 0x7F	; 127
    5ab0:	57 e4       	ldi	r21, 0x47	; 71
    5ab2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5ab6:	18 16       	cp	r1, r24
    5ab8:	0c f0       	brlt	.+2      	; 0x5abc <main+0x1de8>
    5aba:	10 e0       	ldi	r17, 0x00	; 0
    5abc:	11 23       	and	r17, r17
    5abe:	09 f4       	brne	.+2      	; 0x5ac2 <main+0x1dee>
    5ac0:	4d c0       	rjmp	.+154    	; 0x5b5c <main+0x1e88>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5ac2:	ce 01       	movw	r24, r28
    5ac4:	83 51       	subi	r24, 0x13	; 19
    5ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ac8:	fc 01       	movw	r30, r24
    5aca:	60 81       	ld	r22, Z
    5acc:	71 81       	ldd	r23, Z+1	; 0x01
    5ace:	82 81       	ldd	r24, Z+2	; 0x02
    5ad0:	93 81       	ldd	r25, Z+3	; 0x03
    5ad2:	20 e0       	ldi	r18, 0x00	; 0
    5ad4:	30 e0       	ldi	r19, 0x00	; 0
    5ad6:	40 e2       	ldi	r20, 0x20	; 32
    5ad8:	51 e4       	ldi	r21, 0x41	; 65
    5ada:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5ade:	dc 01       	movw	r26, r24
    5ae0:	cb 01       	movw	r24, r22
    5ae2:	8e 01       	movw	r16, r28
    5ae4:	0b 50       	subi	r16, 0x0B	; 11
    5ae6:	1f 4f       	sbci	r17, 0xFF	; 255
    5ae8:	bc 01       	movw	r22, r24
    5aea:	cd 01       	movw	r24, r26
    5aec:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5af0:	dc 01       	movw	r26, r24
    5af2:	cb 01       	movw	r24, r22
    5af4:	f8 01       	movw	r30, r16
    5af6:	91 83       	std	Z+1, r25	; 0x01
    5af8:	80 83       	st	Z, r24
    5afa:	27 c0       	rjmp	.+78     	; 0x5b4a <main+0x1e76>
    5afc:	ce 01       	movw	r24, r28
    5afe:	89 50       	subi	r24, 0x09	; 9
    5b00:	9f 4f       	sbci	r25, 0xFF	; 255
    5b02:	20 e7       	ldi	r18, 0x70	; 112
    5b04:	31 e0       	ldi	r19, 0x01	; 1
    5b06:	fc 01       	movw	r30, r24
    5b08:	31 83       	std	Z+1, r19	; 0x01
    5b0a:	20 83       	st	Z, r18
    5b0c:	ce 01       	movw	r24, r28
    5b0e:	89 50       	subi	r24, 0x09	; 9
    5b10:	9f 4f       	sbci	r25, 0xFF	; 255
    5b12:	fc 01       	movw	r30, r24
    5b14:	80 81       	ld	r24, Z
    5b16:	91 81       	ldd	r25, Z+1	; 0x01
    5b18:	8c 01       	movw	r16, r24
    5b1a:	c8 01       	movw	r24, r16
    5b1c:	01 97       	sbiw	r24, 0x01	; 1
    5b1e:	f1 f7       	brne	.-4      	; 0x5b1c <main+0x1e48>
    5b20:	8c 01       	movw	r16, r24
    5b22:	ce 01       	movw	r24, r28
    5b24:	89 50       	subi	r24, 0x09	; 9
    5b26:	9f 4f       	sbci	r25, 0xFF	; 255
    5b28:	fc 01       	movw	r30, r24
    5b2a:	11 83       	std	Z+1, r17	; 0x01
    5b2c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b2e:	ce 01       	movw	r24, r28
    5b30:	8b 50       	subi	r24, 0x0B	; 11
    5b32:	9f 4f       	sbci	r25, 0xFF	; 255
    5b34:	9e 01       	movw	r18, r28
    5b36:	2b 50       	subi	r18, 0x0B	; 11
    5b38:	3f 4f       	sbci	r19, 0xFF	; 255
    5b3a:	f9 01       	movw	r30, r18
    5b3c:	20 81       	ld	r18, Z
    5b3e:	31 81       	ldd	r19, Z+1	; 0x01
    5b40:	21 50       	subi	r18, 0x01	; 1
    5b42:	30 40       	sbci	r19, 0x00	; 0
    5b44:	fc 01       	movw	r30, r24
    5b46:	31 83       	std	Z+1, r19	; 0x01
    5b48:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5b4a:	ce 01       	movw	r24, r28
    5b4c:	8b 50       	subi	r24, 0x0B	; 11
    5b4e:	9f 4f       	sbci	r25, 0xFF	; 255
    5b50:	fc 01       	movw	r30, r24
    5b52:	80 81       	ld	r24, Z
    5b54:	91 81       	ldd	r25, Z+1	; 0x01
    5b56:	00 97       	sbiw	r24, 0x00	; 0
    5b58:	89 f6       	brne	.-94     	; 0x5afc <main+0x1e28>
    5b5a:	2f c0       	rjmp	.+94     	; 0x5bba <main+0x1ee6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5b5c:	8e 01       	movw	r16, r28
    5b5e:	0b 50       	subi	r16, 0x0B	; 11
    5b60:	1f 4f       	sbci	r17, 0xFF	; 255
    5b62:	ce 01       	movw	r24, r28
    5b64:	8f 50       	subi	r24, 0x0F	; 15
    5b66:	9f 4f       	sbci	r25, 0xFF	; 255
    5b68:	fc 01       	movw	r30, r24
    5b6a:	60 81       	ld	r22, Z
    5b6c:	71 81       	ldd	r23, Z+1	; 0x01
    5b6e:	82 81       	ldd	r24, Z+2	; 0x02
    5b70:	93 81       	ldd	r25, Z+3	; 0x03
    5b72:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5b76:	dc 01       	movw	r26, r24
    5b78:	cb 01       	movw	r24, r22
    5b7a:	f8 01       	movw	r30, r16
    5b7c:	91 83       	std	Z+1, r25	; 0x01
    5b7e:	80 83       	st	Z, r24
    5b80:	ce 01       	movw	r24, r28
    5b82:	87 50       	subi	r24, 0x07	; 7
    5b84:	9f 4f       	sbci	r25, 0xFF	; 255
    5b86:	9e 01       	movw	r18, r28
    5b88:	2b 50       	subi	r18, 0x0B	; 11
    5b8a:	3f 4f       	sbci	r19, 0xFF	; 255
    5b8c:	f9 01       	movw	r30, r18
    5b8e:	20 81       	ld	r18, Z
    5b90:	31 81       	ldd	r19, Z+1	; 0x01
    5b92:	fc 01       	movw	r30, r24
    5b94:	31 83       	std	Z+1, r19	; 0x01
    5b96:	20 83       	st	Z, r18
    5b98:	ce 01       	movw	r24, r28
    5b9a:	87 50       	subi	r24, 0x07	; 7
    5b9c:	9f 4f       	sbci	r25, 0xFF	; 255
    5b9e:	fc 01       	movw	r30, r24
    5ba0:	80 81       	ld	r24, Z
    5ba2:	91 81       	ldd	r25, Z+1	; 0x01
    5ba4:	8c 01       	movw	r16, r24
    5ba6:	c8 01       	movw	r24, r16
    5ba8:	01 97       	sbiw	r24, 0x01	; 1
    5baa:	f1 f7       	brne	.-4      	; 0x5ba8 <main+0x1ed4>
    5bac:	8c 01       	movw	r16, r24
    5bae:	ce 01       	movw	r24, r28
    5bb0:	87 50       	subi	r24, 0x07	; 7
    5bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    5bb4:	fc 01       	movw	r30, r24
    5bb6:	11 83       	std	Z+1, r17	; 0x01
    5bb8:	00 83       	st	Z, r16
								_delay_ms(500);
								right_degrees(185);
    5bba:	89 eb       	ldi	r24, 0xB9	; 185
    5bbc:	90 e0       	ldi	r25, 0x00	; 0
    5bbe:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    5bc2:	9e 01       	movw	r18, r28
    5bc4:	25 50       	subi	r18, 0x05	; 5
    5bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    5bc8:	80 e0       	ldi	r24, 0x00	; 0
    5bca:	90 e0       	ldi	r25, 0x00	; 0
    5bcc:	a8 ec       	ldi	r26, 0xC8	; 200
    5bce:	b2 e4       	ldi	r27, 0x42	; 66
    5bd0:	f9 01       	movw	r30, r18
    5bd2:	80 83       	st	Z, r24
    5bd4:	91 83       	std	Z+1, r25	; 0x01
    5bd6:	a2 83       	std	Z+2, r26	; 0x02
    5bd8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    5bda:	8e 01       	movw	r16, r28
    5bdc:	01 50       	subi	r16, 0x01	; 1
    5bde:	1f 4f       	sbci	r17, 0xFF	; 255
    5be0:	ce 01       	movw	r24, r28
    5be2:	85 50       	subi	r24, 0x05	; 5
    5be4:	9f 4f       	sbci	r25, 0xFF	; 255
    5be6:	fc 01       	movw	r30, r24
    5be8:	60 81       	ld	r22, Z
    5bea:	71 81       	ldd	r23, Z+1	; 0x01
    5bec:	82 81       	ldd	r24, Z+2	; 0x02
    5bee:	93 81       	ldd	r25, Z+3	; 0x03
    5bf0:	26 e6       	ldi	r18, 0x66	; 102
    5bf2:	36 e6       	ldi	r19, 0x66	; 102
    5bf4:	46 e6       	ldi	r20, 0x66	; 102
    5bf6:	55 e4       	ldi	r21, 0x45	; 69
    5bf8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5bfc:	dc 01       	movw	r26, r24
    5bfe:	cb 01       	movw	r24, r22
    5c00:	f8 01       	movw	r30, r16
    5c02:	80 83       	st	Z, r24
    5c04:	91 83       	std	Z+1, r25	; 0x01
    5c06:	a2 83       	std	Z+2, r26	; 0x02
    5c08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5c0a:	ce 01       	movw	r24, r28
    5c0c:	81 50       	subi	r24, 0x01	; 1
    5c0e:	9f 4f       	sbci	r25, 0xFF	; 255
    5c10:	11 e0       	ldi	r17, 0x01	; 1
    5c12:	fc 01       	movw	r30, r24
    5c14:	60 81       	ld	r22, Z
    5c16:	71 81       	ldd	r23, Z+1	; 0x01
    5c18:	82 81       	ldd	r24, Z+2	; 0x02
    5c1a:	93 81       	ldd	r25, Z+3	; 0x03
    5c1c:	20 e0       	ldi	r18, 0x00	; 0
    5c1e:	30 e0       	ldi	r19, 0x00	; 0
    5c20:	40 e8       	ldi	r20, 0x80	; 128
    5c22:	5f e3       	ldi	r21, 0x3F	; 63
    5c24:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    5c28:	88 23       	and	r24, r24
    5c2a:	0c f0       	brlt	.+2      	; 0x5c2e <main+0x1f5a>
    5c2c:	10 e0       	ldi	r17, 0x00	; 0
    5c2e:	11 23       	and	r17, r17
    5c30:	49 f0       	breq	.+18     	; 0x5c44 <main+0x1f70>
		__ticks = 1;
    5c32:	ce 01       	movw	r24, r28
    5c34:	8d 5f       	subi	r24, 0xFD	; 253
    5c36:	9e 4f       	sbci	r25, 0xFE	; 254
    5c38:	21 e0       	ldi	r18, 0x01	; 1
    5c3a:	30 e0       	ldi	r19, 0x00	; 0
    5c3c:	fc 01       	movw	r30, r24
    5c3e:	31 83       	std	Z+1, r19	; 0x01
    5c40:	20 83       	st	Z, r18
    5c42:	74 c0       	rjmp	.+232    	; 0x5d2c <main+0x2058>
	else if (__tmp > 65535)
    5c44:	ce 01       	movw	r24, r28
    5c46:	81 50       	subi	r24, 0x01	; 1
    5c48:	9f 4f       	sbci	r25, 0xFF	; 255
    5c4a:	11 e0       	ldi	r17, 0x01	; 1
    5c4c:	fc 01       	movw	r30, r24
    5c4e:	60 81       	ld	r22, Z
    5c50:	71 81       	ldd	r23, Z+1	; 0x01
    5c52:	82 81       	ldd	r24, Z+2	; 0x02
    5c54:	93 81       	ldd	r25, Z+3	; 0x03
    5c56:	20 e0       	ldi	r18, 0x00	; 0
    5c58:	3f ef       	ldi	r19, 0xFF	; 255
    5c5a:	4f e7       	ldi	r20, 0x7F	; 127
    5c5c:	57 e4       	ldi	r21, 0x47	; 71
    5c5e:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5c62:	18 16       	cp	r1, r24
    5c64:	0c f0       	brlt	.+2      	; 0x5c68 <main+0x1f94>
    5c66:	10 e0       	ldi	r17, 0x00	; 0
    5c68:	11 23       	and	r17, r17
    5c6a:	09 f4       	brne	.+2      	; 0x5c6e <main+0x1f9a>
    5c6c:	4d c0       	rjmp	.+154    	; 0x5d08 <main+0x2034>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c6e:	ce 01       	movw	r24, r28
    5c70:	85 50       	subi	r24, 0x05	; 5
    5c72:	9f 4f       	sbci	r25, 0xFF	; 255
    5c74:	fc 01       	movw	r30, r24
    5c76:	60 81       	ld	r22, Z
    5c78:	71 81       	ldd	r23, Z+1	; 0x01
    5c7a:	82 81       	ldd	r24, Z+2	; 0x02
    5c7c:	93 81       	ldd	r25, Z+3	; 0x03
    5c7e:	20 e0       	ldi	r18, 0x00	; 0
    5c80:	30 e0       	ldi	r19, 0x00	; 0
    5c82:	40 e2       	ldi	r20, 0x20	; 32
    5c84:	51 e4       	ldi	r21, 0x41	; 65
    5c86:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5c8a:	dc 01       	movw	r26, r24
    5c8c:	cb 01       	movw	r24, r22
    5c8e:	8e 01       	movw	r16, r28
    5c90:	0d 5f       	subi	r16, 0xFD	; 253
    5c92:	1e 4f       	sbci	r17, 0xFE	; 254
    5c94:	bc 01       	movw	r22, r24
    5c96:	cd 01       	movw	r24, r26
    5c98:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5c9c:	dc 01       	movw	r26, r24
    5c9e:	cb 01       	movw	r24, r22
    5ca0:	f8 01       	movw	r30, r16
    5ca2:	91 83       	std	Z+1, r25	; 0x01
    5ca4:	80 83       	st	Z, r24
    5ca6:	27 c0       	rjmp	.+78     	; 0x5cf6 <main+0x2022>
    5ca8:	ce 01       	movw	r24, r28
    5caa:	8b 5f       	subi	r24, 0xFB	; 251
    5cac:	9e 4f       	sbci	r25, 0xFE	; 254
    5cae:	20 e7       	ldi	r18, 0x70	; 112
    5cb0:	31 e0       	ldi	r19, 0x01	; 1
    5cb2:	fc 01       	movw	r30, r24
    5cb4:	31 83       	std	Z+1, r19	; 0x01
    5cb6:	20 83       	st	Z, r18
    5cb8:	ce 01       	movw	r24, r28
    5cba:	8b 5f       	subi	r24, 0xFB	; 251
    5cbc:	9e 4f       	sbci	r25, 0xFE	; 254
    5cbe:	fc 01       	movw	r30, r24
    5cc0:	80 81       	ld	r24, Z
    5cc2:	91 81       	ldd	r25, Z+1	; 0x01
    5cc4:	8c 01       	movw	r16, r24
    5cc6:	c8 01       	movw	r24, r16
    5cc8:	01 97       	sbiw	r24, 0x01	; 1
    5cca:	f1 f7       	brne	.-4      	; 0x5cc8 <main+0x1ff4>
    5ccc:	8c 01       	movw	r16, r24
    5cce:	ce 01       	movw	r24, r28
    5cd0:	8b 5f       	subi	r24, 0xFB	; 251
    5cd2:	9e 4f       	sbci	r25, 0xFE	; 254
    5cd4:	fc 01       	movw	r30, r24
    5cd6:	11 83       	std	Z+1, r17	; 0x01
    5cd8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cda:	ce 01       	movw	r24, r28
    5cdc:	8d 5f       	subi	r24, 0xFD	; 253
    5cde:	9e 4f       	sbci	r25, 0xFE	; 254
    5ce0:	9e 01       	movw	r18, r28
    5ce2:	2d 5f       	subi	r18, 0xFD	; 253
    5ce4:	3e 4f       	sbci	r19, 0xFE	; 254
    5ce6:	f9 01       	movw	r30, r18
    5ce8:	20 81       	ld	r18, Z
    5cea:	31 81       	ldd	r19, Z+1	; 0x01
    5cec:	21 50       	subi	r18, 0x01	; 1
    5cee:	30 40       	sbci	r19, 0x00	; 0
    5cf0:	fc 01       	movw	r30, r24
    5cf2:	31 83       	std	Z+1, r19	; 0x01
    5cf4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cf6:	ce 01       	movw	r24, r28
    5cf8:	8d 5f       	subi	r24, 0xFD	; 253
    5cfa:	9e 4f       	sbci	r25, 0xFE	; 254
    5cfc:	fc 01       	movw	r30, r24
    5cfe:	80 81       	ld	r24, Z
    5d00:	91 81       	ldd	r25, Z+1	; 0x01
    5d02:	00 97       	sbiw	r24, 0x00	; 0
    5d04:	89 f6       	brne	.-94     	; 0x5ca8 <main+0x1fd4>
    5d06:	2f c0       	rjmp	.+94     	; 0x5d66 <main+0x2092>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d08:	8e 01       	movw	r16, r28
    5d0a:	0d 5f       	subi	r16, 0xFD	; 253
    5d0c:	1e 4f       	sbci	r17, 0xFE	; 254
    5d0e:	ce 01       	movw	r24, r28
    5d10:	81 50       	subi	r24, 0x01	; 1
    5d12:	9f 4f       	sbci	r25, 0xFF	; 255
    5d14:	fc 01       	movw	r30, r24
    5d16:	60 81       	ld	r22, Z
    5d18:	71 81       	ldd	r23, Z+1	; 0x01
    5d1a:	82 81       	ldd	r24, Z+2	; 0x02
    5d1c:	93 81       	ldd	r25, Z+3	; 0x03
    5d1e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5d22:	dc 01       	movw	r26, r24
    5d24:	cb 01       	movw	r24, r22
    5d26:	f8 01       	movw	r30, r16
    5d28:	91 83       	std	Z+1, r25	; 0x01
    5d2a:	80 83       	st	Z, r24
    5d2c:	ce 01       	movw	r24, r28
    5d2e:	89 5f       	subi	r24, 0xF9	; 249
    5d30:	9e 4f       	sbci	r25, 0xFE	; 254
    5d32:	9e 01       	movw	r18, r28
    5d34:	2d 5f       	subi	r18, 0xFD	; 253
    5d36:	3e 4f       	sbci	r19, 0xFE	; 254
    5d38:	f9 01       	movw	r30, r18
    5d3a:	20 81       	ld	r18, Z
    5d3c:	31 81       	ldd	r19, Z+1	; 0x01
    5d3e:	fc 01       	movw	r30, r24
    5d40:	31 83       	std	Z+1, r19	; 0x01
    5d42:	20 83       	st	Z, r18
    5d44:	ce 01       	movw	r24, r28
    5d46:	89 5f       	subi	r24, 0xF9	; 249
    5d48:	9e 4f       	sbci	r25, 0xFE	; 254
    5d4a:	fc 01       	movw	r30, r24
    5d4c:	80 81       	ld	r24, Z
    5d4e:	91 81       	ldd	r25, Z+1	; 0x01
    5d50:	8c 01       	movw	r16, r24
    5d52:	c8 01       	movw	r24, r16
    5d54:	01 97       	sbiw	r24, 0x01	; 1
    5d56:	f1 f7       	brne	.-4      	; 0x5d54 <main+0x2080>
    5d58:	8c 01       	movw	r16, r24
    5d5a:	ce 01       	movw	r24, r28
    5d5c:	89 5f       	subi	r24, 0xF9	; 249
    5d5e:	9e 4f       	sbci	r25, 0xFE	; 254
    5d60:	fc 01       	movw	r30, r24
    5d62:	11 83       	std	Z+1, r17	; 0x01
    5d64:	00 83       	st	Z, r16
								_delay_ms(100);
								linefollwer();
    5d66:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    5d6a:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
					
				}
			}
			else
			{
				if(final[0]<coor[0])
    5d6e:	ce 01       	movw	r24, r28
    5d70:	8d 52       	subi	r24, 0x2D	; 45
    5d72:	99 4f       	sbci	r25, 0xF9	; 249
    5d74:	fc 01       	movw	r30, r24
    5d76:	20 81       	ld	r18, Z
    5d78:	31 81       	ldd	r19, Z+1	; 0x01
    5d7a:	80 91 a6 04 	lds	r24, 0x04A6
    5d7e:	90 91 a7 04 	lds	r25, 0x04A7
    5d82:	28 17       	cp	r18, r24
    5d84:	39 07       	cpc	r19, r25
    5d86:	0c f0       	brlt	.+2      	; 0x5d8a <main+0x20b6>
    5d88:	26 c6       	rjmp	.+3148   	; 0x69d6 <main+0x2d02>
				{
					if(compass==4)
    5d8a:	8b 81       	ldd	r24, Y+3	; 0x03
    5d8c:	9c 81       	ldd	r25, Y+4	; 0x04
    5d8e:	84 30       	cpi	r24, 0x04	; 4
    5d90:	91 05       	cpc	r25, r1
    5d92:	09 f0       	breq	.+2      	; 0x5d96 <main+0x20c2>
    5d94:	b9 c1       	rjmp	.+882    	; 0x6108 <main+0x2434>
					{
						coor[0]=coor[0]-1;
    5d96:	80 91 a6 04 	lds	r24, 0x04A6
    5d9a:	90 91 a7 04 	lds	r25, 0x04A7
    5d9e:	01 97       	sbiw	r24, 0x01	; 1
    5da0:	90 93 a7 04 	sts	0x04A7, r25
    5da4:	80 93 a6 04 	sts	0x04A6, r24
						compass=7;
    5da8:	87 e0       	ldi	r24, 0x07	; 7
    5daa:	90 e0       	ldi	r25, 0x00	; 0
    5dac:	9c 83       	std	Y+4, r25	; 0x04
    5dae:	8b 83       	std	Y+3, r24	; 0x03
    5db0:	9e 01       	movw	r18, r28
    5db2:	27 5f       	subi	r18, 0xF7	; 247
    5db4:	3e 4f       	sbci	r19, 0xFE	; 254
    5db6:	80 e0       	ldi	r24, 0x00	; 0
    5db8:	90 e0       	ldi	r25, 0x00	; 0
    5dba:	aa ef       	ldi	r26, 0xFA	; 250
    5dbc:	b3 e4       	ldi	r27, 0x43	; 67
    5dbe:	f9 01       	movw	r30, r18
    5dc0:	80 83       	st	Z, r24
    5dc2:	91 83       	std	Z+1, r25	; 0x01
    5dc4:	a2 83       	std	Z+2, r26	; 0x02
    5dc6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    5dc8:	8e 01       	movw	r16, r28
    5dca:	03 5f       	subi	r16, 0xF3	; 243
    5dcc:	1e 4f       	sbci	r17, 0xFE	; 254
    5dce:	ce 01       	movw	r24, r28
    5dd0:	87 5f       	subi	r24, 0xF7	; 247
    5dd2:	9e 4f       	sbci	r25, 0xFE	; 254
    5dd4:	fc 01       	movw	r30, r24
    5dd6:	60 81       	ld	r22, Z
    5dd8:	71 81       	ldd	r23, Z+1	; 0x01
    5dda:	82 81       	ldd	r24, Z+2	; 0x02
    5ddc:	93 81       	ldd	r25, Z+3	; 0x03
    5dde:	26 e6       	ldi	r18, 0x66	; 102
    5de0:	36 e6       	ldi	r19, 0x66	; 102
    5de2:	46 e6       	ldi	r20, 0x66	; 102
    5de4:	55 e4       	ldi	r21, 0x45	; 69
    5de6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5dea:	dc 01       	movw	r26, r24
    5dec:	cb 01       	movw	r24, r22
    5dee:	f8 01       	movw	r30, r16
    5df0:	80 83       	st	Z, r24
    5df2:	91 83       	std	Z+1, r25	; 0x01
    5df4:	a2 83       	std	Z+2, r26	; 0x02
    5df6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5df8:	ce 01       	movw	r24, r28
    5dfa:	83 5f       	subi	r24, 0xF3	; 243
    5dfc:	9e 4f       	sbci	r25, 0xFE	; 254
    5dfe:	11 e0       	ldi	r17, 0x01	; 1
    5e00:	fc 01       	movw	r30, r24
    5e02:	60 81       	ld	r22, Z
    5e04:	71 81       	ldd	r23, Z+1	; 0x01
    5e06:	82 81       	ldd	r24, Z+2	; 0x02
    5e08:	93 81       	ldd	r25, Z+3	; 0x03
    5e0a:	20 e0       	ldi	r18, 0x00	; 0
    5e0c:	30 e0       	ldi	r19, 0x00	; 0
    5e0e:	40 e8       	ldi	r20, 0x80	; 128
    5e10:	5f e3       	ldi	r21, 0x3F	; 63
    5e12:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    5e16:	88 23       	and	r24, r24
    5e18:	0c f0       	brlt	.+2      	; 0x5e1c <main+0x2148>
    5e1a:	10 e0       	ldi	r17, 0x00	; 0
    5e1c:	11 23       	and	r17, r17
    5e1e:	49 f0       	breq	.+18     	; 0x5e32 <main+0x215e>
		__ticks = 1;
    5e20:	ce 01       	movw	r24, r28
    5e22:	8f 5e       	subi	r24, 0xEF	; 239
    5e24:	9e 4f       	sbci	r25, 0xFE	; 254
    5e26:	21 e0       	ldi	r18, 0x01	; 1
    5e28:	30 e0       	ldi	r19, 0x00	; 0
    5e2a:	fc 01       	movw	r30, r24
    5e2c:	31 83       	std	Z+1, r19	; 0x01
    5e2e:	20 83       	st	Z, r18
    5e30:	74 c0       	rjmp	.+232    	; 0x5f1a <main+0x2246>
	else if (__tmp > 65535)
    5e32:	ce 01       	movw	r24, r28
    5e34:	83 5f       	subi	r24, 0xF3	; 243
    5e36:	9e 4f       	sbci	r25, 0xFE	; 254
    5e38:	11 e0       	ldi	r17, 0x01	; 1
    5e3a:	fc 01       	movw	r30, r24
    5e3c:	60 81       	ld	r22, Z
    5e3e:	71 81       	ldd	r23, Z+1	; 0x01
    5e40:	82 81       	ldd	r24, Z+2	; 0x02
    5e42:	93 81       	ldd	r25, Z+3	; 0x03
    5e44:	20 e0       	ldi	r18, 0x00	; 0
    5e46:	3f ef       	ldi	r19, 0xFF	; 255
    5e48:	4f e7       	ldi	r20, 0x7F	; 127
    5e4a:	57 e4       	ldi	r21, 0x47	; 71
    5e4c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5e50:	18 16       	cp	r1, r24
    5e52:	0c f0       	brlt	.+2      	; 0x5e56 <main+0x2182>
    5e54:	10 e0       	ldi	r17, 0x00	; 0
    5e56:	11 23       	and	r17, r17
    5e58:	09 f4       	brne	.+2      	; 0x5e5c <main+0x2188>
    5e5a:	4d c0       	rjmp	.+154    	; 0x5ef6 <main+0x2222>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e5c:	ce 01       	movw	r24, r28
    5e5e:	87 5f       	subi	r24, 0xF7	; 247
    5e60:	9e 4f       	sbci	r25, 0xFE	; 254
    5e62:	fc 01       	movw	r30, r24
    5e64:	60 81       	ld	r22, Z
    5e66:	71 81       	ldd	r23, Z+1	; 0x01
    5e68:	82 81       	ldd	r24, Z+2	; 0x02
    5e6a:	93 81       	ldd	r25, Z+3	; 0x03
    5e6c:	20 e0       	ldi	r18, 0x00	; 0
    5e6e:	30 e0       	ldi	r19, 0x00	; 0
    5e70:	40 e2       	ldi	r20, 0x20	; 32
    5e72:	51 e4       	ldi	r21, 0x41	; 65
    5e74:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5e78:	dc 01       	movw	r26, r24
    5e7a:	cb 01       	movw	r24, r22
    5e7c:	8e 01       	movw	r16, r28
    5e7e:	0f 5e       	subi	r16, 0xEF	; 239
    5e80:	1e 4f       	sbci	r17, 0xFE	; 254
    5e82:	bc 01       	movw	r22, r24
    5e84:	cd 01       	movw	r24, r26
    5e86:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5e8a:	dc 01       	movw	r26, r24
    5e8c:	cb 01       	movw	r24, r22
    5e8e:	f8 01       	movw	r30, r16
    5e90:	91 83       	std	Z+1, r25	; 0x01
    5e92:	80 83       	st	Z, r24
    5e94:	27 c0       	rjmp	.+78     	; 0x5ee4 <main+0x2210>
    5e96:	ce 01       	movw	r24, r28
    5e98:	8d 5e       	subi	r24, 0xED	; 237
    5e9a:	9e 4f       	sbci	r25, 0xFE	; 254
    5e9c:	20 e7       	ldi	r18, 0x70	; 112
    5e9e:	31 e0       	ldi	r19, 0x01	; 1
    5ea0:	fc 01       	movw	r30, r24
    5ea2:	31 83       	std	Z+1, r19	; 0x01
    5ea4:	20 83       	st	Z, r18
    5ea6:	ce 01       	movw	r24, r28
    5ea8:	8d 5e       	subi	r24, 0xED	; 237
    5eaa:	9e 4f       	sbci	r25, 0xFE	; 254
    5eac:	fc 01       	movw	r30, r24
    5eae:	80 81       	ld	r24, Z
    5eb0:	91 81       	ldd	r25, Z+1	; 0x01
    5eb2:	8c 01       	movw	r16, r24
    5eb4:	c8 01       	movw	r24, r16
    5eb6:	01 97       	sbiw	r24, 0x01	; 1
    5eb8:	f1 f7       	brne	.-4      	; 0x5eb6 <main+0x21e2>
    5eba:	8c 01       	movw	r16, r24
    5ebc:	ce 01       	movw	r24, r28
    5ebe:	8d 5e       	subi	r24, 0xED	; 237
    5ec0:	9e 4f       	sbci	r25, 0xFE	; 254
    5ec2:	fc 01       	movw	r30, r24
    5ec4:	11 83       	std	Z+1, r17	; 0x01
    5ec6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ec8:	ce 01       	movw	r24, r28
    5eca:	8f 5e       	subi	r24, 0xEF	; 239
    5ecc:	9e 4f       	sbci	r25, 0xFE	; 254
    5ece:	9e 01       	movw	r18, r28
    5ed0:	2f 5e       	subi	r18, 0xEF	; 239
    5ed2:	3e 4f       	sbci	r19, 0xFE	; 254
    5ed4:	f9 01       	movw	r30, r18
    5ed6:	20 81       	ld	r18, Z
    5ed8:	31 81       	ldd	r19, Z+1	; 0x01
    5eda:	21 50       	subi	r18, 0x01	; 1
    5edc:	30 40       	sbci	r19, 0x00	; 0
    5ede:	fc 01       	movw	r30, r24
    5ee0:	31 83       	std	Z+1, r19	; 0x01
    5ee2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	8f 5e       	subi	r24, 0xEF	; 239
    5ee8:	9e 4f       	sbci	r25, 0xFE	; 254
    5eea:	fc 01       	movw	r30, r24
    5eec:	80 81       	ld	r24, Z
    5eee:	91 81       	ldd	r25, Z+1	; 0x01
    5ef0:	00 97       	sbiw	r24, 0x00	; 0
    5ef2:	89 f6       	brne	.-94     	; 0x5e96 <main+0x21c2>
    5ef4:	2f c0       	rjmp	.+94     	; 0x5f54 <main+0x2280>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ef6:	8e 01       	movw	r16, r28
    5ef8:	0f 5e       	subi	r16, 0xEF	; 239
    5efa:	1e 4f       	sbci	r17, 0xFE	; 254
    5efc:	ce 01       	movw	r24, r28
    5efe:	83 5f       	subi	r24, 0xF3	; 243
    5f00:	9e 4f       	sbci	r25, 0xFE	; 254
    5f02:	fc 01       	movw	r30, r24
    5f04:	60 81       	ld	r22, Z
    5f06:	71 81       	ldd	r23, Z+1	; 0x01
    5f08:	82 81       	ldd	r24, Z+2	; 0x02
    5f0a:	93 81       	ldd	r25, Z+3	; 0x03
    5f0c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    5f10:	dc 01       	movw	r26, r24
    5f12:	cb 01       	movw	r24, r22
    5f14:	f8 01       	movw	r30, r16
    5f16:	91 83       	std	Z+1, r25	; 0x01
    5f18:	80 83       	st	Z, r24
    5f1a:	ce 01       	movw	r24, r28
    5f1c:	8b 5e       	subi	r24, 0xEB	; 235
    5f1e:	9e 4f       	sbci	r25, 0xFE	; 254
    5f20:	9e 01       	movw	r18, r28
    5f22:	2f 5e       	subi	r18, 0xEF	; 239
    5f24:	3e 4f       	sbci	r19, 0xFE	; 254
    5f26:	f9 01       	movw	r30, r18
    5f28:	20 81       	ld	r18, Z
    5f2a:	31 81       	ldd	r19, Z+1	; 0x01
    5f2c:	fc 01       	movw	r30, r24
    5f2e:	31 83       	std	Z+1, r19	; 0x01
    5f30:	20 83       	st	Z, r18
    5f32:	ce 01       	movw	r24, r28
    5f34:	8b 5e       	subi	r24, 0xEB	; 235
    5f36:	9e 4f       	sbci	r25, 0xFE	; 254
    5f38:	fc 01       	movw	r30, r24
    5f3a:	80 81       	ld	r24, Z
    5f3c:	91 81       	ldd	r25, Z+1	; 0x01
    5f3e:	8c 01       	movw	r16, r24
    5f40:	c8 01       	movw	r24, r16
    5f42:	01 97       	sbiw	r24, 0x01	; 1
    5f44:	f1 f7       	brne	.-4      	; 0x5f42 <main+0x226e>
    5f46:	8c 01       	movw	r16, r24
    5f48:	ce 01       	movw	r24, r28
    5f4a:	8b 5e       	subi	r24, 0xEB	; 235
    5f4c:	9e 4f       	sbci	r25, 0xFE	; 254
    5f4e:	fc 01       	movw	r30, r24
    5f50:	11 83       	std	Z+1, r17	; 0x01
    5f52:	00 83       	st	Z, r16
						_delay_ms(500);
						left_degrees(85);
    5f54:	85 e5       	ldi	r24, 0x55	; 85
    5f56:	90 e0       	ldi	r25, 0x00	; 0
    5f58:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    5f5c:	9e 01       	movw	r18, r28
    5f5e:	29 5e       	subi	r18, 0xE9	; 233
    5f60:	3e 4f       	sbci	r19, 0xFE	; 254
    5f62:	80 e0       	ldi	r24, 0x00	; 0
    5f64:	90 e0       	ldi	r25, 0x00	; 0
    5f66:	a8 ec       	ldi	r26, 0xC8	; 200
    5f68:	b2 e4       	ldi	r27, 0x42	; 66
    5f6a:	f9 01       	movw	r30, r18
    5f6c:	80 83       	st	Z, r24
    5f6e:	91 83       	std	Z+1, r25	; 0x01
    5f70:	a2 83       	std	Z+2, r26	; 0x02
    5f72:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    5f74:	8e 01       	movw	r16, r28
    5f76:	05 5e       	subi	r16, 0xE5	; 229
    5f78:	1e 4f       	sbci	r17, 0xFE	; 254
    5f7a:	ce 01       	movw	r24, r28
    5f7c:	89 5e       	subi	r24, 0xE9	; 233
    5f7e:	9e 4f       	sbci	r25, 0xFE	; 254
    5f80:	fc 01       	movw	r30, r24
    5f82:	60 81       	ld	r22, Z
    5f84:	71 81       	ldd	r23, Z+1	; 0x01
    5f86:	82 81       	ldd	r24, Z+2	; 0x02
    5f88:	93 81       	ldd	r25, Z+3	; 0x03
    5f8a:	26 e6       	ldi	r18, 0x66	; 102
    5f8c:	36 e6       	ldi	r19, 0x66	; 102
    5f8e:	46 e6       	ldi	r20, 0x66	; 102
    5f90:	55 e4       	ldi	r21, 0x45	; 69
    5f92:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    5f96:	dc 01       	movw	r26, r24
    5f98:	cb 01       	movw	r24, r22
    5f9a:	f8 01       	movw	r30, r16
    5f9c:	80 83       	st	Z, r24
    5f9e:	91 83       	std	Z+1, r25	; 0x01
    5fa0:	a2 83       	std	Z+2, r26	; 0x02
    5fa2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5fa4:	ce 01       	movw	r24, r28
    5fa6:	85 5e       	subi	r24, 0xE5	; 229
    5fa8:	9e 4f       	sbci	r25, 0xFE	; 254
    5faa:	11 e0       	ldi	r17, 0x01	; 1
    5fac:	fc 01       	movw	r30, r24
    5fae:	60 81       	ld	r22, Z
    5fb0:	71 81       	ldd	r23, Z+1	; 0x01
    5fb2:	82 81       	ldd	r24, Z+2	; 0x02
    5fb4:	93 81       	ldd	r25, Z+3	; 0x03
    5fb6:	20 e0       	ldi	r18, 0x00	; 0
    5fb8:	30 e0       	ldi	r19, 0x00	; 0
    5fba:	40 e8       	ldi	r20, 0x80	; 128
    5fbc:	5f e3       	ldi	r21, 0x3F	; 63
    5fbe:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    5fc2:	88 23       	and	r24, r24
    5fc4:	0c f0       	brlt	.+2      	; 0x5fc8 <main+0x22f4>
    5fc6:	10 e0       	ldi	r17, 0x00	; 0
    5fc8:	11 23       	and	r17, r17
    5fca:	49 f0       	breq	.+18     	; 0x5fde <main+0x230a>
		__ticks = 1;
    5fcc:	ce 01       	movw	r24, r28
    5fce:	81 5e       	subi	r24, 0xE1	; 225
    5fd0:	9e 4f       	sbci	r25, 0xFE	; 254
    5fd2:	21 e0       	ldi	r18, 0x01	; 1
    5fd4:	30 e0       	ldi	r19, 0x00	; 0
    5fd6:	fc 01       	movw	r30, r24
    5fd8:	31 83       	std	Z+1, r19	; 0x01
    5fda:	20 83       	st	Z, r18
    5fdc:	74 c0       	rjmp	.+232    	; 0x60c6 <main+0x23f2>
	else if (__tmp > 65535)
    5fde:	ce 01       	movw	r24, r28
    5fe0:	85 5e       	subi	r24, 0xE5	; 229
    5fe2:	9e 4f       	sbci	r25, 0xFE	; 254
    5fe4:	11 e0       	ldi	r17, 0x01	; 1
    5fe6:	fc 01       	movw	r30, r24
    5fe8:	60 81       	ld	r22, Z
    5fea:	71 81       	ldd	r23, Z+1	; 0x01
    5fec:	82 81       	ldd	r24, Z+2	; 0x02
    5fee:	93 81       	ldd	r25, Z+3	; 0x03
    5ff0:	20 e0       	ldi	r18, 0x00	; 0
    5ff2:	3f ef       	ldi	r19, 0xFF	; 255
    5ff4:	4f e7       	ldi	r20, 0x7F	; 127
    5ff6:	57 e4       	ldi	r21, 0x47	; 71
    5ff8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    5ffc:	18 16       	cp	r1, r24
    5ffe:	0c f0       	brlt	.+2      	; 0x6002 <main+0x232e>
    6000:	10 e0       	ldi	r17, 0x00	; 0
    6002:	11 23       	and	r17, r17
    6004:	09 f4       	brne	.+2      	; 0x6008 <main+0x2334>
    6006:	4d c0       	rjmp	.+154    	; 0x60a2 <main+0x23ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6008:	ce 01       	movw	r24, r28
    600a:	89 5e       	subi	r24, 0xE9	; 233
    600c:	9e 4f       	sbci	r25, 0xFE	; 254
    600e:	fc 01       	movw	r30, r24
    6010:	60 81       	ld	r22, Z
    6012:	71 81       	ldd	r23, Z+1	; 0x01
    6014:	82 81       	ldd	r24, Z+2	; 0x02
    6016:	93 81       	ldd	r25, Z+3	; 0x03
    6018:	20 e0       	ldi	r18, 0x00	; 0
    601a:	30 e0       	ldi	r19, 0x00	; 0
    601c:	40 e2       	ldi	r20, 0x20	; 32
    601e:	51 e4       	ldi	r21, 0x41	; 65
    6020:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6024:	dc 01       	movw	r26, r24
    6026:	cb 01       	movw	r24, r22
    6028:	8e 01       	movw	r16, r28
    602a:	01 5e       	subi	r16, 0xE1	; 225
    602c:	1e 4f       	sbci	r17, 0xFE	; 254
    602e:	bc 01       	movw	r22, r24
    6030:	cd 01       	movw	r24, r26
    6032:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6036:	dc 01       	movw	r26, r24
    6038:	cb 01       	movw	r24, r22
    603a:	f8 01       	movw	r30, r16
    603c:	91 83       	std	Z+1, r25	; 0x01
    603e:	80 83       	st	Z, r24
    6040:	27 c0       	rjmp	.+78     	; 0x6090 <main+0x23bc>
    6042:	ce 01       	movw	r24, r28
    6044:	8f 5d       	subi	r24, 0xDF	; 223
    6046:	9e 4f       	sbci	r25, 0xFE	; 254
    6048:	20 e7       	ldi	r18, 0x70	; 112
    604a:	31 e0       	ldi	r19, 0x01	; 1
    604c:	fc 01       	movw	r30, r24
    604e:	31 83       	std	Z+1, r19	; 0x01
    6050:	20 83       	st	Z, r18
    6052:	ce 01       	movw	r24, r28
    6054:	8f 5d       	subi	r24, 0xDF	; 223
    6056:	9e 4f       	sbci	r25, 0xFE	; 254
    6058:	fc 01       	movw	r30, r24
    605a:	80 81       	ld	r24, Z
    605c:	91 81       	ldd	r25, Z+1	; 0x01
    605e:	8c 01       	movw	r16, r24
    6060:	c8 01       	movw	r24, r16
    6062:	01 97       	sbiw	r24, 0x01	; 1
    6064:	f1 f7       	brne	.-4      	; 0x6062 <main+0x238e>
    6066:	8c 01       	movw	r16, r24
    6068:	ce 01       	movw	r24, r28
    606a:	8f 5d       	subi	r24, 0xDF	; 223
    606c:	9e 4f       	sbci	r25, 0xFE	; 254
    606e:	fc 01       	movw	r30, r24
    6070:	11 83       	std	Z+1, r17	; 0x01
    6072:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6074:	ce 01       	movw	r24, r28
    6076:	81 5e       	subi	r24, 0xE1	; 225
    6078:	9e 4f       	sbci	r25, 0xFE	; 254
    607a:	9e 01       	movw	r18, r28
    607c:	21 5e       	subi	r18, 0xE1	; 225
    607e:	3e 4f       	sbci	r19, 0xFE	; 254
    6080:	f9 01       	movw	r30, r18
    6082:	20 81       	ld	r18, Z
    6084:	31 81       	ldd	r19, Z+1	; 0x01
    6086:	21 50       	subi	r18, 0x01	; 1
    6088:	30 40       	sbci	r19, 0x00	; 0
    608a:	fc 01       	movw	r30, r24
    608c:	31 83       	std	Z+1, r19	; 0x01
    608e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6090:	ce 01       	movw	r24, r28
    6092:	81 5e       	subi	r24, 0xE1	; 225
    6094:	9e 4f       	sbci	r25, 0xFE	; 254
    6096:	fc 01       	movw	r30, r24
    6098:	80 81       	ld	r24, Z
    609a:	91 81       	ldd	r25, Z+1	; 0x01
    609c:	00 97       	sbiw	r24, 0x00	; 0
    609e:	89 f6       	brne	.-94     	; 0x6042 <main+0x236e>
    60a0:	2f c0       	rjmp	.+94     	; 0x6100 <main+0x242c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    60a2:	8e 01       	movw	r16, r28
    60a4:	01 5e       	subi	r16, 0xE1	; 225
    60a6:	1e 4f       	sbci	r17, 0xFE	; 254
    60a8:	ce 01       	movw	r24, r28
    60aa:	85 5e       	subi	r24, 0xE5	; 229
    60ac:	9e 4f       	sbci	r25, 0xFE	; 254
    60ae:	fc 01       	movw	r30, r24
    60b0:	60 81       	ld	r22, Z
    60b2:	71 81       	ldd	r23, Z+1	; 0x01
    60b4:	82 81       	ldd	r24, Z+2	; 0x02
    60b6:	93 81       	ldd	r25, Z+3	; 0x03
    60b8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    60bc:	dc 01       	movw	r26, r24
    60be:	cb 01       	movw	r24, r22
    60c0:	f8 01       	movw	r30, r16
    60c2:	91 83       	std	Z+1, r25	; 0x01
    60c4:	80 83       	st	Z, r24
    60c6:	ce 01       	movw	r24, r28
    60c8:	8d 5d       	subi	r24, 0xDD	; 221
    60ca:	9e 4f       	sbci	r25, 0xFE	; 254
    60cc:	9e 01       	movw	r18, r28
    60ce:	21 5e       	subi	r18, 0xE1	; 225
    60d0:	3e 4f       	sbci	r19, 0xFE	; 254
    60d2:	f9 01       	movw	r30, r18
    60d4:	20 81       	ld	r18, Z
    60d6:	31 81       	ldd	r19, Z+1	; 0x01
    60d8:	fc 01       	movw	r30, r24
    60da:	31 83       	std	Z+1, r19	; 0x01
    60dc:	20 83       	st	Z, r18
    60de:	ce 01       	movw	r24, r28
    60e0:	8d 5d       	subi	r24, 0xDD	; 221
    60e2:	9e 4f       	sbci	r25, 0xFE	; 254
    60e4:	fc 01       	movw	r30, r24
    60e6:	80 81       	ld	r24, Z
    60e8:	91 81       	ldd	r25, Z+1	; 0x01
    60ea:	8c 01       	movw	r16, r24
    60ec:	c8 01       	movw	r24, r16
    60ee:	01 97       	sbiw	r24, 0x01	; 1
    60f0:	f1 f7       	brne	.-4      	; 0x60ee <main+0x241a>
    60f2:	8c 01       	movw	r16, r24
    60f4:	ce 01       	movw	r24, r28
    60f6:	8d 5d       	subi	r24, 0xDD	; 221
    60f8:	9e 4f       	sbci	r25, 0xFE	; 254
    60fa:	fc 01       	movw	r30, r24
    60fc:	11 83       	std	Z+1, r17	; 0x01
    60fe:	00 83       	st	Z, r16
						_delay_ms(100);
						linefollwer();
    6100:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    6104:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
					}
					else
					{
						if(compass==7)
    6108:	8b 81       	ldd	r24, Y+3	; 0x03
    610a:	9c 81       	ldd	r25, Y+4	; 0x04
    610c:	87 30       	cpi	r24, 0x07	; 7
    610e:	91 05       	cpc	r25, r1
    6110:	09 f0       	breq	.+2      	; 0x6114 <main+0x2440>
    6112:	e3 c0       	rjmp	.+454    	; 0x62da <main+0x2606>
						{
							coor[0]=coor[0]-1;
    6114:	80 91 a6 04 	lds	r24, 0x04A6
    6118:	90 91 a7 04 	lds	r25, 0x04A7
    611c:	01 97       	sbiw	r24, 0x01	; 1
    611e:	90 93 a7 04 	sts	0x04A7, r25
    6122:	80 93 a6 04 	sts	0x04A6, r24
							compass=7;
    6126:	87 e0       	ldi	r24, 0x07	; 7
    6128:	90 e0       	ldi	r25, 0x00	; 0
    612a:	9c 83       	std	Y+4, r25	; 0x04
    612c:	8b 83       	std	Y+3, r24	; 0x03
    612e:	9e 01       	movw	r18, r28
    6130:	2b 5d       	subi	r18, 0xDB	; 219
    6132:	3e 4f       	sbci	r19, 0xFE	; 254
    6134:	80 e0       	ldi	r24, 0x00	; 0
    6136:	90 e0       	ldi	r25, 0x00	; 0
    6138:	a8 ec       	ldi	r26, 0xC8	; 200
    613a:	b2 e4       	ldi	r27, 0x42	; 66
    613c:	f9 01       	movw	r30, r18
    613e:	80 83       	st	Z, r24
    6140:	91 83       	std	Z+1, r25	; 0x01
    6142:	a2 83       	std	Z+2, r26	; 0x02
    6144:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6146:	8e 01       	movw	r16, r28
    6148:	07 5d       	subi	r16, 0xD7	; 215
    614a:	1e 4f       	sbci	r17, 0xFE	; 254
    614c:	ce 01       	movw	r24, r28
    614e:	8b 5d       	subi	r24, 0xDB	; 219
    6150:	9e 4f       	sbci	r25, 0xFE	; 254
    6152:	fc 01       	movw	r30, r24
    6154:	60 81       	ld	r22, Z
    6156:	71 81       	ldd	r23, Z+1	; 0x01
    6158:	82 81       	ldd	r24, Z+2	; 0x02
    615a:	93 81       	ldd	r25, Z+3	; 0x03
    615c:	26 e6       	ldi	r18, 0x66	; 102
    615e:	36 e6       	ldi	r19, 0x66	; 102
    6160:	46 e6       	ldi	r20, 0x66	; 102
    6162:	55 e4       	ldi	r21, 0x45	; 69
    6164:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6168:	dc 01       	movw	r26, r24
    616a:	cb 01       	movw	r24, r22
    616c:	f8 01       	movw	r30, r16
    616e:	80 83       	st	Z, r24
    6170:	91 83       	std	Z+1, r25	; 0x01
    6172:	a2 83       	std	Z+2, r26	; 0x02
    6174:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6176:	ce 01       	movw	r24, r28
    6178:	87 5d       	subi	r24, 0xD7	; 215
    617a:	9e 4f       	sbci	r25, 0xFE	; 254
    617c:	11 e0       	ldi	r17, 0x01	; 1
    617e:	fc 01       	movw	r30, r24
    6180:	60 81       	ld	r22, Z
    6182:	71 81       	ldd	r23, Z+1	; 0x01
    6184:	82 81       	ldd	r24, Z+2	; 0x02
    6186:	93 81       	ldd	r25, Z+3	; 0x03
    6188:	20 e0       	ldi	r18, 0x00	; 0
    618a:	30 e0       	ldi	r19, 0x00	; 0
    618c:	40 e8       	ldi	r20, 0x80	; 128
    618e:	5f e3       	ldi	r21, 0x3F	; 63
    6190:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6194:	88 23       	and	r24, r24
    6196:	0c f0       	brlt	.+2      	; 0x619a <main+0x24c6>
    6198:	10 e0       	ldi	r17, 0x00	; 0
    619a:	11 23       	and	r17, r17
    619c:	49 f0       	breq	.+18     	; 0x61b0 <main+0x24dc>
		__ticks = 1;
    619e:	ce 01       	movw	r24, r28
    61a0:	83 5d       	subi	r24, 0xD3	; 211
    61a2:	9e 4f       	sbci	r25, 0xFE	; 254
    61a4:	21 e0       	ldi	r18, 0x01	; 1
    61a6:	30 e0       	ldi	r19, 0x00	; 0
    61a8:	fc 01       	movw	r30, r24
    61aa:	31 83       	std	Z+1, r19	; 0x01
    61ac:	20 83       	st	Z, r18
    61ae:	74 c0       	rjmp	.+232    	; 0x6298 <main+0x25c4>
	else if (__tmp > 65535)
    61b0:	ce 01       	movw	r24, r28
    61b2:	87 5d       	subi	r24, 0xD7	; 215
    61b4:	9e 4f       	sbci	r25, 0xFE	; 254
    61b6:	11 e0       	ldi	r17, 0x01	; 1
    61b8:	fc 01       	movw	r30, r24
    61ba:	60 81       	ld	r22, Z
    61bc:	71 81       	ldd	r23, Z+1	; 0x01
    61be:	82 81       	ldd	r24, Z+2	; 0x02
    61c0:	93 81       	ldd	r25, Z+3	; 0x03
    61c2:	20 e0       	ldi	r18, 0x00	; 0
    61c4:	3f ef       	ldi	r19, 0xFF	; 255
    61c6:	4f e7       	ldi	r20, 0x7F	; 127
    61c8:	57 e4       	ldi	r21, 0x47	; 71
    61ca:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    61ce:	18 16       	cp	r1, r24
    61d0:	0c f0       	brlt	.+2      	; 0x61d4 <main+0x2500>
    61d2:	10 e0       	ldi	r17, 0x00	; 0
    61d4:	11 23       	and	r17, r17
    61d6:	09 f4       	brne	.+2      	; 0x61da <main+0x2506>
    61d8:	4d c0       	rjmp	.+154    	; 0x6274 <main+0x25a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    61da:	ce 01       	movw	r24, r28
    61dc:	8b 5d       	subi	r24, 0xDB	; 219
    61de:	9e 4f       	sbci	r25, 0xFE	; 254
    61e0:	fc 01       	movw	r30, r24
    61e2:	60 81       	ld	r22, Z
    61e4:	71 81       	ldd	r23, Z+1	; 0x01
    61e6:	82 81       	ldd	r24, Z+2	; 0x02
    61e8:	93 81       	ldd	r25, Z+3	; 0x03
    61ea:	20 e0       	ldi	r18, 0x00	; 0
    61ec:	30 e0       	ldi	r19, 0x00	; 0
    61ee:	40 e2       	ldi	r20, 0x20	; 32
    61f0:	51 e4       	ldi	r21, 0x41	; 65
    61f2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    61f6:	dc 01       	movw	r26, r24
    61f8:	cb 01       	movw	r24, r22
    61fa:	8e 01       	movw	r16, r28
    61fc:	03 5d       	subi	r16, 0xD3	; 211
    61fe:	1e 4f       	sbci	r17, 0xFE	; 254
    6200:	bc 01       	movw	r22, r24
    6202:	cd 01       	movw	r24, r26
    6204:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6208:	dc 01       	movw	r26, r24
    620a:	cb 01       	movw	r24, r22
    620c:	f8 01       	movw	r30, r16
    620e:	91 83       	std	Z+1, r25	; 0x01
    6210:	80 83       	st	Z, r24
    6212:	27 c0       	rjmp	.+78     	; 0x6262 <main+0x258e>
    6214:	ce 01       	movw	r24, r28
    6216:	81 5d       	subi	r24, 0xD1	; 209
    6218:	9e 4f       	sbci	r25, 0xFE	; 254
    621a:	20 e7       	ldi	r18, 0x70	; 112
    621c:	31 e0       	ldi	r19, 0x01	; 1
    621e:	fc 01       	movw	r30, r24
    6220:	31 83       	std	Z+1, r19	; 0x01
    6222:	20 83       	st	Z, r18
    6224:	ce 01       	movw	r24, r28
    6226:	81 5d       	subi	r24, 0xD1	; 209
    6228:	9e 4f       	sbci	r25, 0xFE	; 254
    622a:	fc 01       	movw	r30, r24
    622c:	80 81       	ld	r24, Z
    622e:	91 81       	ldd	r25, Z+1	; 0x01
    6230:	8c 01       	movw	r16, r24
    6232:	c8 01       	movw	r24, r16
    6234:	01 97       	sbiw	r24, 0x01	; 1
    6236:	f1 f7       	brne	.-4      	; 0x6234 <main+0x2560>
    6238:	8c 01       	movw	r16, r24
    623a:	ce 01       	movw	r24, r28
    623c:	81 5d       	subi	r24, 0xD1	; 209
    623e:	9e 4f       	sbci	r25, 0xFE	; 254
    6240:	fc 01       	movw	r30, r24
    6242:	11 83       	std	Z+1, r17	; 0x01
    6244:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6246:	ce 01       	movw	r24, r28
    6248:	83 5d       	subi	r24, 0xD3	; 211
    624a:	9e 4f       	sbci	r25, 0xFE	; 254
    624c:	9e 01       	movw	r18, r28
    624e:	23 5d       	subi	r18, 0xD3	; 211
    6250:	3e 4f       	sbci	r19, 0xFE	; 254
    6252:	f9 01       	movw	r30, r18
    6254:	20 81       	ld	r18, Z
    6256:	31 81       	ldd	r19, Z+1	; 0x01
    6258:	21 50       	subi	r18, 0x01	; 1
    625a:	30 40       	sbci	r19, 0x00	; 0
    625c:	fc 01       	movw	r30, r24
    625e:	31 83       	std	Z+1, r19	; 0x01
    6260:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6262:	ce 01       	movw	r24, r28
    6264:	83 5d       	subi	r24, 0xD3	; 211
    6266:	9e 4f       	sbci	r25, 0xFE	; 254
    6268:	fc 01       	movw	r30, r24
    626a:	80 81       	ld	r24, Z
    626c:	91 81       	ldd	r25, Z+1	; 0x01
    626e:	00 97       	sbiw	r24, 0x00	; 0
    6270:	89 f6       	brne	.-94     	; 0x6214 <main+0x2540>
    6272:	2f c0       	rjmp	.+94     	; 0x62d2 <main+0x25fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6274:	8e 01       	movw	r16, r28
    6276:	03 5d       	subi	r16, 0xD3	; 211
    6278:	1e 4f       	sbci	r17, 0xFE	; 254
    627a:	ce 01       	movw	r24, r28
    627c:	87 5d       	subi	r24, 0xD7	; 215
    627e:	9e 4f       	sbci	r25, 0xFE	; 254
    6280:	fc 01       	movw	r30, r24
    6282:	60 81       	ld	r22, Z
    6284:	71 81       	ldd	r23, Z+1	; 0x01
    6286:	82 81       	ldd	r24, Z+2	; 0x02
    6288:	93 81       	ldd	r25, Z+3	; 0x03
    628a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    628e:	dc 01       	movw	r26, r24
    6290:	cb 01       	movw	r24, r22
    6292:	f8 01       	movw	r30, r16
    6294:	91 83       	std	Z+1, r25	; 0x01
    6296:	80 83       	st	Z, r24
    6298:	ce 01       	movw	r24, r28
    629a:	8f 5c       	subi	r24, 0xCF	; 207
    629c:	9e 4f       	sbci	r25, 0xFE	; 254
    629e:	9e 01       	movw	r18, r28
    62a0:	23 5d       	subi	r18, 0xD3	; 211
    62a2:	3e 4f       	sbci	r19, 0xFE	; 254
    62a4:	f9 01       	movw	r30, r18
    62a6:	20 81       	ld	r18, Z
    62a8:	31 81       	ldd	r19, Z+1	; 0x01
    62aa:	fc 01       	movw	r30, r24
    62ac:	31 83       	std	Z+1, r19	; 0x01
    62ae:	20 83       	st	Z, r18
    62b0:	ce 01       	movw	r24, r28
    62b2:	8f 5c       	subi	r24, 0xCF	; 207
    62b4:	9e 4f       	sbci	r25, 0xFE	; 254
    62b6:	fc 01       	movw	r30, r24
    62b8:	80 81       	ld	r24, Z
    62ba:	91 81       	ldd	r25, Z+1	; 0x01
    62bc:	8c 01       	movw	r16, r24
    62be:	c8 01       	movw	r24, r16
    62c0:	01 97       	sbiw	r24, 0x01	; 1
    62c2:	f1 f7       	brne	.-4      	; 0x62c0 <main+0x25ec>
    62c4:	8c 01       	movw	r16, r24
    62c6:	ce 01       	movw	r24, r28
    62c8:	8f 5c       	subi	r24, 0xCF	; 207
    62ca:	9e 4f       	sbci	r25, 0xFE	; 254
    62cc:	fc 01       	movw	r30, r24
    62ce:	11 83       	std	Z+1, r17	; 0x01
    62d0:	00 83       	st	Z, r16
							_delay_ms(100);
							linefollwer();
    62d2:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    62d6:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
						}
						else
						{
							if(compass==5)
    62da:	8b 81       	ldd	r24, Y+3	; 0x03
    62dc:	9c 81       	ldd	r25, Y+4	; 0x04
    62de:	85 30       	cpi	r24, 0x05	; 5
    62e0:	91 05       	cpc	r25, r1
    62e2:	09 f0       	breq	.+2      	; 0x62e6 <main+0x2612>
    62e4:	b9 c1       	rjmp	.+882    	; 0x6658 <main+0x2984>
							{
								coor[0]=coor[0]-1;
    62e6:	80 91 a6 04 	lds	r24, 0x04A6
    62ea:	90 91 a7 04 	lds	r25, 0x04A7
    62ee:	01 97       	sbiw	r24, 0x01	; 1
    62f0:	90 93 a7 04 	sts	0x04A7, r25
    62f4:	80 93 a6 04 	sts	0x04A6, r24
								compass=7;
    62f8:	87 e0       	ldi	r24, 0x07	; 7
    62fa:	90 e0       	ldi	r25, 0x00	; 0
    62fc:	9c 83       	std	Y+4, r25	; 0x04
    62fe:	8b 83       	std	Y+3, r24	; 0x03
    6300:	9e 01       	movw	r18, r28
    6302:	2d 5c       	subi	r18, 0xCD	; 205
    6304:	3e 4f       	sbci	r19, 0xFE	; 254
    6306:	80 e0       	ldi	r24, 0x00	; 0
    6308:	90 e0       	ldi	r25, 0x00	; 0
    630a:	aa ef       	ldi	r26, 0xFA	; 250
    630c:	b3 e4       	ldi	r27, 0x43	; 67
    630e:	f9 01       	movw	r30, r18
    6310:	80 83       	st	Z, r24
    6312:	91 83       	std	Z+1, r25	; 0x01
    6314:	a2 83       	std	Z+2, r26	; 0x02
    6316:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6318:	8e 01       	movw	r16, r28
    631a:	09 5c       	subi	r16, 0xC9	; 201
    631c:	1e 4f       	sbci	r17, 0xFE	; 254
    631e:	ce 01       	movw	r24, r28
    6320:	8d 5c       	subi	r24, 0xCD	; 205
    6322:	9e 4f       	sbci	r25, 0xFE	; 254
    6324:	fc 01       	movw	r30, r24
    6326:	60 81       	ld	r22, Z
    6328:	71 81       	ldd	r23, Z+1	; 0x01
    632a:	82 81       	ldd	r24, Z+2	; 0x02
    632c:	93 81       	ldd	r25, Z+3	; 0x03
    632e:	26 e6       	ldi	r18, 0x66	; 102
    6330:	36 e6       	ldi	r19, 0x66	; 102
    6332:	46 e6       	ldi	r20, 0x66	; 102
    6334:	55 e4       	ldi	r21, 0x45	; 69
    6336:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    633a:	dc 01       	movw	r26, r24
    633c:	cb 01       	movw	r24, r22
    633e:	f8 01       	movw	r30, r16
    6340:	80 83       	st	Z, r24
    6342:	91 83       	std	Z+1, r25	; 0x01
    6344:	a2 83       	std	Z+2, r26	; 0x02
    6346:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6348:	ce 01       	movw	r24, r28
    634a:	89 5c       	subi	r24, 0xC9	; 201
    634c:	9e 4f       	sbci	r25, 0xFE	; 254
    634e:	11 e0       	ldi	r17, 0x01	; 1
    6350:	fc 01       	movw	r30, r24
    6352:	60 81       	ld	r22, Z
    6354:	71 81       	ldd	r23, Z+1	; 0x01
    6356:	82 81       	ldd	r24, Z+2	; 0x02
    6358:	93 81       	ldd	r25, Z+3	; 0x03
    635a:	20 e0       	ldi	r18, 0x00	; 0
    635c:	30 e0       	ldi	r19, 0x00	; 0
    635e:	40 e8       	ldi	r20, 0x80	; 128
    6360:	5f e3       	ldi	r21, 0x3F	; 63
    6362:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6366:	88 23       	and	r24, r24
    6368:	0c f0       	brlt	.+2      	; 0x636c <main+0x2698>
    636a:	10 e0       	ldi	r17, 0x00	; 0
    636c:	11 23       	and	r17, r17
    636e:	49 f0       	breq	.+18     	; 0x6382 <main+0x26ae>
		__ticks = 1;
    6370:	ce 01       	movw	r24, r28
    6372:	85 5c       	subi	r24, 0xC5	; 197
    6374:	9e 4f       	sbci	r25, 0xFE	; 254
    6376:	21 e0       	ldi	r18, 0x01	; 1
    6378:	30 e0       	ldi	r19, 0x00	; 0
    637a:	fc 01       	movw	r30, r24
    637c:	31 83       	std	Z+1, r19	; 0x01
    637e:	20 83       	st	Z, r18
    6380:	74 c0       	rjmp	.+232    	; 0x646a <main+0x2796>
	else if (__tmp > 65535)
    6382:	ce 01       	movw	r24, r28
    6384:	89 5c       	subi	r24, 0xC9	; 201
    6386:	9e 4f       	sbci	r25, 0xFE	; 254
    6388:	11 e0       	ldi	r17, 0x01	; 1
    638a:	fc 01       	movw	r30, r24
    638c:	60 81       	ld	r22, Z
    638e:	71 81       	ldd	r23, Z+1	; 0x01
    6390:	82 81       	ldd	r24, Z+2	; 0x02
    6392:	93 81       	ldd	r25, Z+3	; 0x03
    6394:	20 e0       	ldi	r18, 0x00	; 0
    6396:	3f ef       	ldi	r19, 0xFF	; 255
    6398:	4f e7       	ldi	r20, 0x7F	; 127
    639a:	57 e4       	ldi	r21, 0x47	; 71
    639c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    63a0:	18 16       	cp	r1, r24
    63a2:	0c f0       	brlt	.+2      	; 0x63a6 <main+0x26d2>
    63a4:	10 e0       	ldi	r17, 0x00	; 0
    63a6:	11 23       	and	r17, r17
    63a8:	09 f4       	brne	.+2      	; 0x63ac <main+0x26d8>
    63aa:	4d c0       	rjmp	.+154    	; 0x6446 <main+0x2772>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    63ac:	ce 01       	movw	r24, r28
    63ae:	8d 5c       	subi	r24, 0xCD	; 205
    63b0:	9e 4f       	sbci	r25, 0xFE	; 254
    63b2:	fc 01       	movw	r30, r24
    63b4:	60 81       	ld	r22, Z
    63b6:	71 81       	ldd	r23, Z+1	; 0x01
    63b8:	82 81       	ldd	r24, Z+2	; 0x02
    63ba:	93 81       	ldd	r25, Z+3	; 0x03
    63bc:	20 e0       	ldi	r18, 0x00	; 0
    63be:	30 e0       	ldi	r19, 0x00	; 0
    63c0:	40 e2       	ldi	r20, 0x20	; 32
    63c2:	51 e4       	ldi	r21, 0x41	; 65
    63c4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    63c8:	dc 01       	movw	r26, r24
    63ca:	cb 01       	movw	r24, r22
    63cc:	8e 01       	movw	r16, r28
    63ce:	05 5c       	subi	r16, 0xC5	; 197
    63d0:	1e 4f       	sbci	r17, 0xFE	; 254
    63d2:	bc 01       	movw	r22, r24
    63d4:	cd 01       	movw	r24, r26
    63d6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    63da:	dc 01       	movw	r26, r24
    63dc:	cb 01       	movw	r24, r22
    63de:	f8 01       	movw	r30, r16
    63e0:	91 83       	std	Z+1, r25	; 0x01
    63e2:	80 83       	st	Z, r24
    63e4:	27 c0       	rjmp	.+78     	; 0x6434 <main+0x2760>
    63e6:	ce 01       	movw	r24, r28
    63e8:	83 5c       	subi	r24, 0xC3	; 195
    63ea:	9e 4f       	sbci	r25, 0xFE	; 254
    63ec:	20 e7       	ldi	r18, 0x70	; 112
    63ee:	31 e0       	ldi	r19, 0x01	; 1
    63f0:	fc 01       	movw	r30, r24
    63f2:	31 83       	std	Z+1, r19	; 0x01
    63f4:	20 83       	st	Z, r18
    63f6:	ce 01       	movw	r24, r28
    63f8:	83 5c       	subi	r24, 0xC3	; 195
    63fa:	9e 4f       	sbci	r25, 0xFE	; 254
    63fc:	fc 01       	movw	r30, r24
    63fe:	80 81       	ld	r24, Z
    6400:	91 81       	ldd	r25, Z+1	; 0x01
    6402:	8c 01       	movw	r16, r24
    6404:	c8 01       	movw	r24, r16
    6406:	01 97       	sbiw	r24, 0x01	; 1
    6408:	f1 f7       	brne	.-4      	; 0x6406 <main+0x2732>
    640a:	8c 01       	movw	r16, r24
    640c:	ce 01       	movw	r24, r28
    640e:	83 5c       	subi	r24, 0xC3	; 195
    6410:	9e 4f       	sbci	r25, 0xFE	; 254
    6412:	fc 01       	movw	r30, r24
    6414:	11 83       	std	Z+1, r17	; 0x01
    6416:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6418:	ce 01       	movw	r24, r28
    641a:	85 5c       	subi	r24, 0xC5	; 197
    641c:	9e 4f       	sbci	r25, 0xFE	; 254
    641e:	9e 01       	movw	r18, r28
    6420:	25 5c       	subi	r18, 0xC5	; 197
    6422:	3e 4f       	sbci	r19, 0xFE	; 254
    6424:	f9 01       	movw	r30, r18
    6426:	20 81       	ld	r18, Z
    6428:	31 81       	ldd	r19, Z+1	; 0x01
    642a:	21 50       	subi	r18, 0x01	; 1
    642c:	30 40       	sbci	r19, 0x00	; 0
    642e:	fc 01       	movw	r30, r24
    6430:	31 83       	std	Z+1, r19	; 0x01
    6432:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6434:	ce 01       	movw	r24, r28
    6436:	85 5c       	subi	r24, 0xC5	; 197
    6438:	9e 4f       	sbci	r25, 0xFE	; 254
    643a:	fc 01       	movw	r30, r24
    643c:	80 81       	ld	r24, Z
    643e:	91 81       	ldd	r25, Z+1	; 0x01
    6440:	00 97       	sbiw	r24, 0x00	; 0
    6442:	89 f6       	brne	.-94     	; 0x63e6 <main+0x2712>
    6444:	2f c0       	rjmp	.+94     	; 0x64a4 <main+0x27d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6446:	8e 01       	movw	r16, r28
    6448:	05 5c       	subi	r16, 0xC5	; 197
    644a:	1e 4f       	sbci	r17, 0xFE	; 254
    644c:	ce 01       	movw	r24, r28
    644e:	89 5c       	subi	r24, 0xC9	; 201
    6450:	9e 4f       	sbci	r25, 0xFE	; 254
    6452:	fc 01       	movw	r30, r24
    6454:	60 81       	ld	r22, Z
    6456:	71 81       	ldd	r23, Z+1	; 0x01
    6458:	82 81       	ldd	r24, Z+2	; 0x02
    645a:	93 81       	ldd	r25, Z+3	; 0x03
    645c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6460:	dc 01       	movw	r26, r24
    6462:	cb 01       	movw	r24, r22
    6464:	f8 01       	movw	r30, r16
    6466:	91 83       	std	Z+1, r25	; 0x01
    6468:	80 83       	st	Z, r24
    646a:	ce 01       	movw	r24, r28
    646c:	81 5c       	subi	r24, 0xC1	; 193
    646e:	9e 4f       	sbci	r25, 0xFE	; 254
    6470:	9e 01       	movw	r18, r28
    6472:	25 5c       	subi	r18, 0xC5	; 197
    6474:	3e 4f       	sbci	r19, 0xFE	; 254
    6476:	f9 01       	movw	r30, r18
    6478:	20 81       	ld	r18, Z
    647a:	31 81       	ldd	r19, Z+1	; 0x01
    647c:	fc 01       	movw	r30, r24
    647e:	31 83       	std	Z+1, r19	; 0x01
    6480:	20 83       	st	Z, r18
    6482:	ce 01       	movw	r24, r28
    6484:	81 5c       	subi	r24, 0xC1	; 193
    6486:	9e 4f       	sbci	r25, 0xFE	; 254
    6488:	fc 01       	movw	r30, r24
    648a:	80 81       	ld	r24, Z
    648c:	91 81       	ldd	r25, Z+1	; 0x01
    648e:	8c 01       	movw	r16, r24
    6490:	c8 01       	movw	r24, r16
    6492:	01 97       	sbiw	r24, 0x01	; 1
    6494:	f1 f7       	brne	.-4      	; 0x6492 <main+0x27be>
    6496:	8c 01       	movw	r16, r24
    6498:	ce 01       	movw	r24, r28
    649a:	81 5c       	subi	r24, 0xC1	; 193
    649c:	9e 4f       	sbci	r25, 0xFE	; 254
    649e:	fc 01       	movw	r30, r24
    64a0:	11 83       	std	Z+1, r17	; 0x01
    64a2:	00 83       	st	Z, r16
								_delay_ms(500);
								right_degrees(85);
    64a4:	85 e5       	ldi	r24, 0x55	; 85
    64a6:	90 e0       	ldi	r25, 0x00	; 0
    64a8:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    64ac:	9e 01       	movw	r18, r28
    64ae:	2f 5b       	subi	r18, 0xBF	; 191
    64b0:	3e 4f       	sbci	r19, 0xFE	; 254
    64b2:	80 e0       	ldi	r24, 0x00	; 0
    64b4:	90 e0       	ldi	r25, 0x00	; 0
    64b6:	a8 ec       	ldi	r26, 0xC8	; 200
    64b8:	b2 e4       	ldi	r27, 0x42	; 66
    64ba:	f9 01       	movw	r30, r18
    64bc:	80 83       	st	Z, r24
    64be:	91 83       	std	Z+1, r25	; 0x01
    64c0:	a2 83       	std	Z+2, r26	; 0x02
    64c2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    64c4:	8e 01       	movw	r16, r28
    64c6:	0b 5b       	subi	r16, 0xBB	; 187
    64c8:	1e 4f       	sbci	r17, 0xFE	; 254
    64ca:	ce 01       	movw	r24, r28
    64cc:	8f 5b       	subi	r24, 0xBF	; 191
    64ce:	9e 4f       	sbci	r25, 0xFE	; 254
    64d0:	fc 01       	movw	r30, r24
    64d2:	60 81       	ld	r22, Z
    64d4:	71 81       	ldd	r23, Z+1	; 0x01
    64d6:	82 81       	ldd	r24, Z+2	; 0x02
    64d8:	93 81       	ldd	r25, Z+3	; 0x03
    64da:	26 e6       	ldi	r18, 0x66	; 102
    64dc:	36 e6       	ldi	r19, 0x66	; 102
    64de:	46 e6       	ldi	r20, 0x66	; 102
    64e0:	55 e4       	ldi	r21, 0x45	; 69
    64e2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    64e6:	dc 01       	movw	r26, r24
    64e8:	cb 01       	movw	r24, r22
    64ea:	f8 01       	movw	r30, r16
    64ec:	80 83       	st	Z, r24
    64ee:	91 83       	std	Z+1, r25	; 0x01
    64f0:	a2 83       	std	Z+2, r26	; 0x02
    64f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    64f4:	ce 01       	movw	r24, r28
    64f6:	8b 5b       	subi	r24, 0xBB	; 187
    64f8:	9e 4f       	sbci	r25, 0xFE	; 254
    64fa:	11 e0       	ldi	r17, 0x01	; 1
    64fc:	fc 01       	movw	r30, r24
    64fe:	60 81       	ld	r22, Z
    6500:	71 81       	ldd	r23, Z+1	; 0x01
    6502:	82 81       	ldd	r24, Z+2	; 0x02
    6504:	93 81       	ldd	r25, Z+3	; 0x03
    6506:	20 e0       	ldi	r18, 0x00	; 0
    6508:	30 e0       	ldi	r19, 0x00	; 0
    650a:	40 e8       	ldi	r20, 0x80	; 128
    650c:	5f e3       	ldi	r21, 0x3F	; 63
    650e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6512:	88 23       	and	r24, r24
    6514:	0c f0       	brlt	.+2      	; 0x6518 <main+0x2844>
    6516:	10 e0       	ldi	r17, 0x00	; 0
    6518:	11 23       	and	r17, r17
    651a:	49 f0       	breq	.+18     	; 0x652e <main+0x285a>
		__ticks = 1;
    651c:	ce 01       	movw	r24, r28
    651e:	87 5b       	subi	r24, 0xB7	; 183
    6520:	9e 4f       	sbci	r25, 0xFE	; 254
    6522:	21 e0       	ldi	r18, 0x01	; 1
    6524:	30 e0       	ldi	r19, 0x00	; 0
    6526:	fc 01       	movw	r30, r24
    6528:	31 83       	std	Z+1, r19	; 0x01
    652a:	20 83       	st	Z, r18
    652c:	74 c0       	rjmp	.+232    	; 0x6616 <main+0x2942>
	else if (__tmp > 65535)
    652e:	ce 01       	movw	r24, r28
    6530:	8b 5b       	subi	r24, 0xBB	; 187
    6532:	9e 4f       	sbci	r25, 0xFE	; 254
    6534:	11 e0       	ldi	r17, 0x01	; 1
    6536:	fc 01       	movw	r30, r24
    6538:	60 81       	ld	r22, Z
    653a:	71 81       	ldd	r23, Z+1	; 0x01
    653c:	82 81       	ldd	r24, Z+2	; 0x02
    653e:	93 81       	ldd	r25, Z+3	; 0x03
    6540:	20 e0       	ldi	r18, 0x00	; 0
    6542:	3f ef       	ldi	r19, 0xFF	; 255
    6544:	4f e7       	ldi	r20, 0x7F	; 127
    6546:	57 e4       	ldi	r21, 0x47	; 71
    6548:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    654c:	18 16       	cp	r1, r24
    654e:	0c f0       	brlt	.+2      	; 0x6552 <main+0x287e>
    6550:	10 e0       	ldi	r17, 0x00	; 0
    6552:	11 23       	and	r17, r17
    6554:	09 f4       	brne	.+2      	; 0x6558 <main+0x2884>
    6556:	4d c0       	rjmp	.+154    	; 0x65f2 <main+0x291e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6558:	ce 01       	movw	r24, r28
    655a:	8f 5b       	subi	r24, 0xBF	; 191
    655c:	9e 4f       	sbci	r25, 0xFE	; 254
    655e:	fc 01       	movw	r30, r24
    6560:	60 81       	ld	r22, Z
    6562:	71 81       	ldd	r23, Z+1	; 0x01
    6564:	82 81       	ldd	r24, Z+2	; 0x02
    6566:	93 81       	ldd	r25, Z+3	; 0x03
    6568:	20 e0       	ldi	r18, 0x00	; 0
    656a:	30 e0       	ldi	r19, 0x00	; 0
    656c:	40 e2       	ldi	r20, 0x20	; 32
    656e:	51 e4       	ldi	r21, 0x41	; 65
    6570:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6574:	dc 01       	movw	r26, r24
    6576:	cb 01       	movw	r24, r22
    6578:	8e 01       	movw	r16, r28
    657a:	07 5b       	subi	r16, 0xB7	; 183
    657c:	1e 4f       	sbci	r17, 0xFE	; 254
    657e:	bc 01       	movw	r22, r24
    6580:	cd 01       	movw	r24, r26
    6582:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6586:	dc 01       	movw	r26, r24
    6588:	cb 01       	movw	r24, r22
    658a:	f8 01       	movw	r30, r16
    658c:	91 83       	std	Z+1, r25	; 0x01
    658e:	80 83       	st	Z, r24
    6590:	27 c0       	rjmp	.+78     	; 0x65e0 <main+0x290c>
    6592:	ce 01       	movw	r24, r28
    6594:	85 5b       	subi	r24, 0xB5	; 181
    6596:	9e 4f       	sbci	r25, 0xFE	; 254
    6598:	20 e7       	ldi	r18, 0x70	; 112
    659a:	31 e0       	ldi	r19, 0x01	; 1
    659c:	fc 01       	movw	r30, r24
    659e:	31 83       	std	Z+1, r19	; 0x01
    65a0:	20 83       	st	Z, r18
    65a2:	ce 01       	movw	r24, r28
    65a4:	85 5b       	subi	r24, 0xB5	; 181
    65a6:	9e 4f       	sbci	r25, 0xFE	; 254
    65a8:	fc 01       	movw	r30, r24
    65aa:	80 81       	ld	r24, Z
    65ac:	91 81       	ldd	r25, Z+1	; 0x01
    65ae:	8c 01       	movw	r16, r24
    65b0:	c8 01       	movw	r24, r16
    65b2:	01 97       	sbiw	r24, 0x01	; 1
    65b4:	f1 f7       	brne	.-4      	; 0x65b2 <main+0x28de>
    65b6:	8c 01       	movw	r16, r24
    65b8:	ce 01       	movw	r24, r28
    65ba:	85 5b       	subi	r24, 0xB5	; 181
    65bc:	9e 4f       	sbci	r25, 0xFE	; 254
    65be:	fc 01       	movw	r30, r24
    65c0:	11 83       	std	Z+1, r17	; 0x01
    65c2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    65c4:	ce 01       	movw	r24, r28
    65c6:	87 5b       	subi	r24, 0xB7	; 183
    65c8:	9e 4f       	sbci	r25, 0xFE	; 254
    65ca:	9e 01       	movw	r18, r28
    65cc:	27 5b       	subi	r18, 0xB7	; 183
    65ce:	3e 4f       	sbci	r19, 0xFE	; 254
    65d0:	f9 01       	movw	r30, r18
    65d2:	20 81       	ld	r18, Z
    65d4:	31 81       	ldd	r19, Z+1	; 0x01
    65d6:	21 50       	subi	r18, 0x01	; 1
    65d8:	30 40       	sbci	r19, 0x00	; 0
    65da:	fc 01       	movw	r30, r24
    65dc:	31 83       	std	Z+1, r19	; 0x01
    65de:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    65e0:	ce 01       	movw	r24, r28
    65e2:	87 5b       	subi	r24, 0xB7	; 183
    65e4:	9e 4f       	sbci	r25, 0xFE	; 254
    65e6:	fc 01       	movw	r30, r24
    65e8:	80 81       	ld	r24, Z
    65ea:	91 81       	ldd	r25, Z+1	; 0x01
    65ec:	00 97       	sbiw	r24, 0x00	; 0
    65ee:	89 f6       	brne	.-94     	; 0x6592 <main+0x28be>
    65f0:	2f c0       	rjmp	.+94     	; 0x6650 <main+0x297c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    65f2:	8e 01       	movw	r16, r28
    65f4:	07 5b       	subi	r16, 0xB7	; 183
    65f6:	1e 4f       	sbci	r17, 0xFE	; 254
    65f8:	ce 01       	movw	r24, r28
    65fa:	8b 5b       	subi	r24, 0xBB	; 187
    65fc:	9e 4f       	sbci	r25, 0xFE	; 254
    65fe:	fc 01       	movw	r30, r24
    6600:	60 81       	ld	r22, Z
    6602:	71 81       	ldd	r23, Z+1	; 0x01
    6604:	82 81       	ldd	r24, Z+2	; 0x02
    6606:	93 81       	ldd	r25, Z+3	; 0x03
    6608:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    660c:	dc 01       	movw	r26, r24
    660e:	cb 01       	movw	r24, r22
    6610:	f8 01       	movw	r30, r16
    6612:	91 83       	std	Z+1, r25	; 0x01
    6614:	80 83       	st	Z, r24
    6616:	ce 01       	movw	r24, r28
    6618:	83 5b       	subi	r24, 0xB3	; 179
    661a:	9e 4f       	sbci	r25, 0xFE	; 254
    661c:	9e 01       	movw	r18, r28
    661e:	27 5b       	subi	r18, 0xB7	; 183
    6620:	3e 4f       	sbci	r19, 0xFE	; 254
    6622:	f9 01       	movw	r30, r18
    6624:	20 81       	ld	r18, Z
    6626:	31 81       	ldd	r19, Z+1	; 0x01
    6628:	fc 01       	movw	r30, r24
    662a:	31 83       	std	Z+1, r19	; 0x01
    662c:	20 83       	st	Z, r18
    662e:	ce 01       	movw	r24, r28
    6630:	83 5b       	subi	r24, 0xB3	; 179
    6632:	9e 4f       	sbci	r25, 0xFE	; 254
    6634:	fc 01       	movw	r30, r24
    6636:	80 81       	ld	r24, Z
    6638:	91 81       	ldd	r25, Z+1	; 0x01
    663a:	8c 01       	movw	r16, r24
    663c:	c8 01       	movw	r24, r16
    663e:	01 97       	sbiw	r24, 0x01	; 1
    6640:	f1 f7       	brne	.-4      	; 0x663e <main+0x296a>
    6642:	8c 01       	movw	r16, r24
    6644:	ce 01       	movw	r24, r28
    6646:	83 5b       	subi	r24, 0xB3	; 179
    6648:	9e 4f       	sbci	r25, 0xFE	; 254
    664a:	fc 01       	movw	r30, r24
    664c:	11 83       	std	Z+1, r17	; 0x01
    664e:	00 83       	st	Z, r16
								_delay_ms(100);
								linefollwer();
    6650:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    6654:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
							}
							else
							{
								if(compass==6)
    6658:	8b 81       	ldd	r24, Y+3	; 0x03
    665a:	9c 81       	ldd	r25, Y+4	; 0x04
    665c:	86 30       	cpi	r24, 0x06	; 6
    665e:	91 05       	cpc	r25, r1
    6660:	11 f0       	breq	.+4      	; 0x6666 <main+0x2992>
    6662:	0c 94 1a 3b 	jmp	0x7634	; 0x7634 <main+0x3960>
								{
									coor[0]=coor[0]-1;
    6666:	80 91 a6 04 	lds	r24, 0x04A6
    666a:	90 91 a7 04 	lds	r25, 0x04A7
    666e:	01 97       	sbiw	r24, 0x01	; 1
    6670:	90 93 a7 04 	sts	0x04A7, r25
    6674:	80 93 a6 04 	sts	0x04A6, r24
									compass=7;
    6678:	87 e0       	ldi	r24, 0x07	; 7
    667a:	90 e0       	ldi	r25, 0x00	; 0
    667c:	9c 83       	std	Y+4, r25	; 0x04
    667e:	8b 83       	std	Y+3, r24	; 0x03
    6680:	9e 01       	movw	r18, r28
    6682:	21 5b       	subi	r18, 0xB1	; 177
    6684:	3e 4f       	sbci	r19, 0xFE	; 254
    6686:	80 e0       	ldi	r24, 0x00	; 0
    6688:	90 e0       	ldi	r25, 0x00	; 0
    668a:	aa ef       	ldi	r26, 0xFA	; 250
    668c:	b3 e4       	ldi	r27, 0x43	; 67
    668e:	f9 01       	movw	r30, r18
    6690:	80 83       	st	Z, r24
    6692:	91 83       	std	Z+1, r25	; 0x01
    6694:	a2 83       	std	Z+2, r26	; 0x02
    6696:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6698:	8e 01       	movw	r16, r28
    669a:	0d 5a       	subi	r16, 0xAD	; 173
    669c:	1e 4f       	sbci	r17, 0xFE	; 254
    669e:	ce 01       	movw	r24, r28
    66a0:	81 5b       	subi	r24, 0xB1	; 177
    66a2:	9e 4f       	sbci	r25, 0xFE	; 254
    66a4:	fc 01       	movw	r30, r24
    66a6:	60 81       	ld	r22, Z
    66a8:	71 81       	ldd	r23, Z+1	; 0x01
    66aa:	82 81       	ldd	r24, Z+2	; 0x02
    66ac:	93 81       	ldd	r25, Z+3	; 0x03
    66ae:	26 e6       	ldi	r18, 0x66	; 102
    66b0:	36 e6       	ldi	r19, 0x66	; 102
    66b2:	46 e6       	ldi	r20, 0x66	; 102
    66b4:	55 e4       	ldi	r21, 0x45	; 69
    66b6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    66ba:	dc 01       	movw	r26, r24
    66bc:	cb 01       	movw	r24, r22
    66be:	f8 01       	movw	r30, r16
    66c0:	80 83       	st	Z, r24
    66c2:	91 83       	std	Z+1, r25	; 0x01
    66c4:	a2 83       	std	Z+2, r26	; 0x02
    66c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    66c8:	ce 01       	movw	r24, r28
    66ca:	8d 5a       	subi	r24, 0xAD	; 173
    66cc:	9e 4f       	sbci	r25, 0xFE	; 254
    66ce:	11 e0       	ldi	r17, 0x01	; 1
    66d0:	fc 01       	movw	r30, r24
    66d2:	60 81       	ld	r22, Z
    66d4:	71 81       	ldd	r23, Z+1	; 0x01
    66d6:	82 81       	ldd	r24, Z+2	; 0x02
    66d8:	93 81       	ldd	r25, Z+3	; 0x03
    66da:	20 e0       	ldi	r18, 0x00	; 0
    66dc:	30 e0       	ldi	r19, 0x00	; 0
    66de:	40 e8       	ldi	r20, 0x80	; 128
    66e0:	5f e3       	ldi	r21, 0x3F	; 63
    66e2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    66e6:	88 23       	and	r24, r24
    66e8:	0c f0       	brlt	.+2      	; 0x66ec <main+0x2a18>
    66ea:	10 e0       	ldi	r17, 0x00	; 0
    66ec:	11 23       	and	r17, r17
    66ee:	49 f0       	breq	.+18     	; 0x6702 <main+0x2a2e>
		__ticks = 1;
    66f0:	ce 01       	movw	r24, r28
    66f2:	89 5a       	subi	r24, 0xA9	; 169
    66f4:	9e 4f       	sbci	r25, 0xFE	; 254
    66f6:	21 e0       	ldi	r18, 0x01	; 1
    66f8:	30 e0       	ldi	r19, 0x00	; 0
    66fa:	fc 01       	movw	r30, r24
    66fc:	31 83       	std	Z+1, r19	; 0x01
    66fe:	20 83       	st	Z, r18
    6700:	74 c0       	rjmp	.+232    	; 0x67ea <main+0x2b16>
	else if (__tmp > 65535)
    6702:	ce 01       	movw	r24, r28
    6704:	8d 5a       	subi	r24, 0xAD	; 173
    6706:	9e 4f       	sbci	r25, 0xFE	; 254
    6708:	11 e0       	ldi	r17, 0x01	; 1
    670a:	fc 01       	movw	r30, r24
    670c:	60 81       	ld	r22, Z
    670e:	71 81       	ldd	r23, Z+1	; 0x01
    6710:	82 81       	ldd	r24, Z+2	; 0x02
    6712:	93 81       	ldd	r25, Z+3	; 0x03
    6714:	20 e0       	ldi	r18, 0x00	; 0
    6716:	3f ef       	ldi	r19, 0xFF	; 255
    6718:	4f e7       	ldi	r20, 0x7F	; 127
    671a:	57 e4       	ldi	r21, 0x47	; 71
    671c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    6720:	18 16       	cp	r1, r24
    6722:	0c f0       	brlt	.+2      	; 0x6726 <main+0x2a52>
    6724:	10 e0       	ldi	r17, 0x00	; 0
    6726:	11 23       	and	r17, r17
    6728:	09 f4       	brne	.+2      	; 0x672c <main+0x2a58>
    672a:	4d c0       	rjmp	.+154    	; 0x67c6 <main+0x2af2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    672c:	ce 01       	movw	r24, r28
    672e:	81 5b       	subi	r24, 0xB1	; 177
    6730:	9e 4f       	sbci	r25, 0xFE	; 254
    6732:	fc 01       	movw	r30, r24
    6734:	60 81       	ld	r22, Z
    6736:	71 81       	ldd	r23, Z+1	; 0x01
    6738:	82 81       	ldd	r24, Z+2	; 0x02
    673a:	93 81       	ldd	r25, Z+3	; 0x03
    673c:	20 e0       	ldi	r18, 0x00	; 0
    673e:	30 e0       	ldi	r19, 0x00	; 0
    6740:	40 e2       	ldi	r20, 0x20	; 32
    6742:	51 e4       	ldi	r21, 0x41	; 65
    6744:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6748:	dc 01       	movw	r26, r24
    674a:	cb 01       	movw	r24, r22
    674c:	8e 01       	movw	r16, r28
    674e:	09 5a       	subi	r16, 0xA9	; 169
    6750:	1e 4f       	sbci	r17, 0xFE	; 254
    6752:	bc 01       	movw	r22, r24
    6754:	cd 01       	movw	r24, r26
    6756:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    675a:	dc 01       	movw	r26, r24
    675c:	cb 01       	movw	r24, r22
    675e:	f8 01       	movw	r30, r16
    6760:	91 83       	std	Z+1, r25	; 0x01
    6762:	80 83       	st	Z, r24
    6764:	27 c0       	rjmp	.+78     	; 0x67b4 <main+0x2ae0>
    6766:	ce 01       	movw	r24, r28
    6768:	87 5a       	subi	r24, 0xA7	; 167
    676a:	9e 4f       	sbci	r25, 0xFE	; 254
    676c:	20 e7       	ldi	r18, 0x70	; 112
    676e:	31 e0       	ldi	r19, 0x01	; 1
    6770:	fc 01       	movw	r30, r24
    6772:	31 83       	std	Z+1, r19	; 0x01
    6774:	20 83       	st	Z, r18
    6776:	ce 01       	movw	r24, r28
    6778:	87 5a       	subi	r24, 0xA7	; 167
    677a:	9e 4f       	sbci	r25, 0xFE	; 254
    677c:	fc 01       	movw	r30, r24
    677e:	80 81       	ld	r24, Z
    6780:	91 81       	ldd	r25, Z+1	; 0x01
    6782:	8c 01       	movw	r16, r24
    6784:	c8 01       	movw	r24, r16
    6786:	01 97       	sbiw	r24, 0x01	; 1
    6788:	f1 f7       	brne	.-4      	; 0x6786 <main+0x2ab2>
    678a:	8c 01       	movw	r16, r24
    678c:	ce 01       	movw	r24, r28
    678e:	87 5a       	subi	r24, 0xA7	; 167
    6790:	9e 4f       	sbci	r25, 0xFE	; 254
    6792:	fc 01       	movw	r30, r24
    6794:	11 83       	std	Z+1, r17	; 0x01
    6796:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6798:	ce 01       	movw	r24, r28
    679a:	89 5a       	subi	r24, 0xA9	; 169
    679c:	9e 4f       	sbci	r25, 0xFE	; 254
    679e:	9e 01       	movw	r18, r28
    67a0:	29 5a       	subi	r18, 0xA9	; 169
    67a2:	3e 4f       	sbci	r19, 0xFE	; 254
    67a4:	f9 01       	movw	r30, r18
    67a6:	20 81       	ld	r18, Z
    67a8:	31 81       	ldd	r19, Z+1	; 0x01
    67aa:	21 50       	subi	r18, 0x01	; 1
    67ac:	30 40       	sbci	r19, 0x00	; 0
    67ae:	fc 01       	movw	r30, r24
    67b0:	31 83       	std	Z+1, r19	; 0x01
    67b2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67b4:	ce 01       	movw	r24, r28
    67b6:	89 5a       	subi	r24, 0xA9	; 169
    67b8:	9e 4f       	sbci	r25, 0xFE	; 254
    67ba:	fc 01       	movw	r30, r24
    67bc:	80 81       	ld	r24, Z
    67be:	91 81       	ldd	r25, Z+1	; 0x01
    67c0:	00 97       	sbiw	r24, 0x00	; 0
    67c2:	89 f6       	brne	.-94     	; 0x6766 <main+0x2a92>
    67c4:	2f c0       	rjmp	.+94     	; 0x6824 <main+0x2b50>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    67c6:	8e 01       	movw	r16, r28
    67c8:	09 5a       	subi	r16, 0xA9	; 169
    67ca:	1e 4f       	sbci	r17, 0xFE	; 254
    67cc:	ce 01       	movw	r24, r28
    67ce:	8d 5a       	subi	r24, 0xAD	; 173
    67d0:	9e 4f       	sbci	r25, 0xFE	; 254
    67d2:	fc 01       	movw	r30, r24
    67d4:	60 81       	ld	r22, Z
    67d6:	71 81       	ldd	r23, Z+1	; 0x01
    67d8:	82 81       	ldd	r24, Z+2	; 0x02
    67da:	93 81       	ldd	r25, Z+3	; 0x03
    67dc:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    67e0:	dc 01       	movw	r26, r24
    67e2:	cb 01       	movw	r24, r22
    67e4:	f8 01       	movw	r30, r16
    67e6:	91 83       	std	Z+1, r25	; 0x01
    67e8:	80 83       	st	Z, r24
    67ea:	ce 01       	movw	r24, r28
    67ec:	85 5a       	subi	r24, 0xA5	; 165
    67ee:	9e 4f       	sbci	r25, 0xFE	; 254
    67f0:	9e 01       	movw	r18, r28
    67f2:	29 5a       	subi	r18, 0xA9	; 169
    67f4:	3e 4f       	sbci	r19, 0xFE	; 254
    67f6:	f9 01       	movw	r30, r18
    67f8:	20 81       	ld	r18, Z
    67fa:	31 81       	ldd	r19, Z+1	; 0x01
    67fc:	fc 01       	movw	r30, r24
    67fe:	31 83       	std	Z+1, r19	; 0x01
    6800:	20 83       	st	Z, r18
    6802:	ce 01       	movw	r24, r28
    6804:	85 5a       	subi	r24, 0xA5	; 165
    6806:	9e 4f       	sbci	r25, 0xFE	; 254
    6808:	fc 01       	movw	r30, r24
    680a:	80 81       	ld	r24, Z
    680c:	91 81       	ldd	r25, Z+1	; 0x01
    680e:	8c 01       	movw	r16, r24
    6810:	c8 01       	movw	r24, r16
    6812:	01 97       	sbiw	r24, 0x01	; 1
    6814:	f1 f7       	brne	.-4      	; 0x6812 <main+0x2b3e>
    6816:	8c 01       	movw	r16, r24
    6818:	ce 01       	movw	r24, r28
    681a:	85 5a       	subi	r24, 0xA5	; 165
    681c:	9e 4f       	sbci	r25, 0xFE	; 254
    681e:	fc 01       	movw	r30, r24
    6820:	11 83       	std	Z+1, r17	; 0x01
    6822:	00 83       	st	Z, r16
									_delay_ms(500);
									right_degrees(185);
    6824:	89 eb       	ldi	r24, 0xB9	; 185
    6826:	90 e0       	ldi	r25, 0x00	; 0
    6828:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    682c:	9e 01       	movw	r18, r28
    682e:	23 5a       	subi	r18, 0xA3	; 163
    6830:	3e 4f       	sbci	r19, 0xFE	; 254
    6832:	80 e0       	ldi	r24, 0x00	; 0
    6834:	90 e0       	ldi	r25, 0x00	; 0
    6836:	a8 ec       	ldi	r26, 0xC8	; 200
    6838:	b2 e4       	ldi	r27, 0x42	; 66
    683a:	f9 01       	movw	r30, r18
    683c:	80 83       	st	Z, r24
    683e:	91 83       	std	Z+1, r25	; 0x01
    6840:	a2 83       	std	Z+2, r26	; 0x02
    6842:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6844:	8e 01       	movw	r16, r28
    6846:	0f 59       	subi	r16, 0x9F	; 159
    6848:	1e 4f       	sbci	r17, 0xFE	; 254
    684a:	ce 01       	movw	r24, r28
    684c:	83 5a       	subi	r24, 0xA3	; 163
    684e:	9e 4f       	sbci	r25, 0xFE	; 254
    6850:	fc 01       	movw	r30, r24
    6852:	60 81       	ld	r22, Z
    6854:	71 81       	ldd	r23, Z+1	; 0x01
    6856:	82 81       	ldd	r24, Z+2	; 0x02
    6858:	93 81       	ldd	r25, Z+3	; 0x03
    685a:	26 e6       	ldi	r18, 0x66	; 102
    685c:	36 e6       	ldi	r19, 0x66	; 102
    685e:	46 e6       	ldi	r20, 0x66	; 102
    6860:	55 e4       	ldi	r21, 0x45	; 69
    6862:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6866:	dc 01       	movw	r26, r24
    6868:	cb 01       	movw	r24, r22
    686a:	f8 01       	movw	r30, r16
    686c:	80 83       	st	Z, r24
    686e:	91 83       	std	Z+1, r25	; 0x01
    6870:	a2 83       	std	Z+2, r26	; 0x02
    6872:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6874:	ce 01       	movw	r24, r28
    6876:	8f 59       	subi	r24, 0x9F	; 159
    6878:	9e 4f       	sbci	r25, 0xFE	; 254
    687a:	11 e0       	ldi	r17, 0x01	; 1
    687c:	fc 01       	movw	r30, r24
    687e:	60 81       	ld	r22, Z
    6880:	71 81       	ldd	r23, Z+1	; 0x01
    6882:	82 81       	ldd	r24, Z+2	; 0x02
    6884:	93 81       	ldd	r25, Z+3	; 0x03
    6886:	20 e0       	ldi	r18, 0x00	; 0
    6888:	30 e0       	ldi	r19, 0x00	; 0
    688a:	40 e8       	ldi	r20, 0x80	; 128
    688c:	5f e3       	ldi	r21, 0x3F	; 63
    688e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6892:	88 23       	and	r24, r24
    6894:	0c f0       	brlt	.+2      	; 0x6898 <main+0x2bc4>
    6896:	10 e0       	ldi	r17, 0x00	; 0
    6898:	11 23       	and	r17, r17
    689a:	49 f0       	breq	.+18     	; 0x68ae <main+0x2bda>
		__ticks = 1;
    689c:	ce 01       	movw	r24, r28
    689e:	8b 59       	subi	r24, 0x9B	; 155
    68a0:	9e 4f       	sbci	r25, 0xFE	; 254
    68a2:	21 e0       	ldi	r18, 0x01	; 1
    68a4:	30 e0       	ldi	r19, 0x00	; 0
    68a6:	fc 01       	movw	r30, r24
    68a8:	31 83       	std	Z+1, r19	; 0x01
    68aa:	20 83       	st	Z, r18
    68ac:	74 c0       	rjmp	.+232    	; 0x6996 <main+0x2cc2>
	else if (__tmp > 65535)
    68ae:	ce 01       	movw	r24, r28
    68b0:	8f 59       	subi	r24, 0x9F	; 159
    68b2:	9e 4f       	sbci	r25, 0xFE	; 254
    68b4:	11 e0       	ldi	r17, 0x01	; 1
    68b6:	fc 01       	movw	r30, r24
    68b8:	60 81       	ld	r22, Z
    68ba:	71 81       	ldd	r23, Z+1	; 0x01
    68bc:	82 81       	ldd	r24, Z+2	; 0x02
    68be:	93 81       	ldd	r25, Z+3	; 0x03
    68c0:	20 e0       	ldi	r18, 0x00	; 0
    68c2:	3f ef       	ldi	r19, 0xFF	; 255
    68c4:	4f e7       	ldi	r20, 0x7F	; 127
    68c6:	57 e4       	ldi	r21, 0x47	; 71
    68c8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    68cc:	18 16       	cp	r1, r24
    68ce:	0c f0       	brlt	.+2      	; 0x68d2 <main+0x2bfe>
    68d0:	10 e0       	ldi	r17, 0x00	; 0
    68d2:	11 23       	and	r17, r17
    68d4:	09 f4       	brne	.+2      	; 0x68d8 <main+0x2c04>
    68d6:	4d c0       	rjmp	.+154    	; 0x6972 <main+0x2c9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    68d8:	ce 01       	movw	r24, r28
    68da:	83 5a       	subi	r24, 0xA3	; 163
    68dc:	9e 4f       	sbci	r25, 0xFE	; 254
    68de:	fc 01       	movw	r30, r24
    68e0:	60 81       	ld	r22, Z
    68e2:	71 81       	ldd	r23, Z+1	; 0x01
    68e4:	82 81       	ldd	r24, Z+2	; 0x02
    68e6:	93 81       	ldd	r25, Z+3	; 0x03
    68e8:	20 e0       	ldi	r18, 0x00	; 0
    68ea:	30 e0       	ldi	r19, 0x00	; 0
    68ec:	40 e2       	ldi	r20, 0x20	; 32
    68ee:	51 e4       	ldi	r21, 0x41	; 65
    68f0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    68f4:	dc 01       	movw	r26, r24
    68f6:	cb 01       	movw	r24, r22
    68f8:	8e 01       	movw	r16, r28
    68fa:	0b 59       	subi	r16, 0x9B	; 155
    68fc:	1e 4f       	sbci	r17, 0xFE	; 254
    68fe:	bc 01       	movw	r22, r24
    6900:	cd 01       	movw	r24, r26
    6902:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6906:	dc 01       	movw	r26, r24
    6908:	cb 01       	movw	r24, r22
    690a:	f8 01       	movw	r30, r16
    690c:	91 83       	std	Z+1, r25	; 0x01
    690e:	80 83       	st	Z, r24
    6910:	27 c0       	rjmp	.+78     	; 0x6960 <main+0x2c8c>
    6912:	ce 01       	movw	r24, r28
    6914:	89 59       	subi	r24, 0x99	; 153
    6916:	9e 4f       	sbci	r25, 0xFE	; 254
    6918:	20 e7       	ldi	r18, 0x70	; 112
    691a:	31 e0       	ldi	r19, 0x01	; 1
    691c:	fc 01       	movw	r30, r24
    691e:	31 83       	std	Z+1, r19	; 0x01
    6920:	20 83       	st	Z, r18
    6922:	ce 01       	movw	r24, r28
    6924:	89 59       	subi	r24, 0x99	; 153
    6926:	9e 4f       	sbci	r25, 0xFE	; 254
    6928:	fc 01       	movw	r30, r24
    692a:	80 81       	ld	r24, Z
    692c:	91 81       	ldd	r25, Z+1	; 0x01
    692e:	8c 01       	movw	r16, r24
    6930:	c8 01       	movw	r24, r16
    6932:	01 97       	sbiw	r24, 0x01	; 1
    6934:	f1 f7       	brne	.-4      	; 0x6932 <main+0x2c5e>
    6936:	8c 01       	movw	r16, r24
    6938:	ce 01       	movw	r24, r28
    693a:	89 59       	subi	r24, 0x99	; 153
    693c:	9e 4f       	sbci	r25, 0xFE	; 254
    693e:	fc 01       	movw	r30, r24
    6940:	11 83       	std	Z+1, r17	; 0x01
    6942:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6944:	ce 01       	movw	r24, r28
    6946:	8b 59       	subi	r24, 0x9B	; 155
    6948:	9e 4f       	sbci	r25, 0xFE	; 254
    694a:	9e 01       	movw	r18, r28
    694c:	2b 59       	subi	r18, 0x9B	; 155
    694e:	3e 4f       	sbci	r19, 0xFE	; 254
    6950:	f9 01       	movw	r30, r18
    6952:	20 81       	ld	r18, Z
    6954:	31 81       	ldd	r19, Z+1	; 0x01
    6956:	21 50       	subi	r18, 0x01	; 1
    6958:	30 40       	sbci	r19, 0x00	; 0
    695a:	fc 01       	movw	r30, r24
    695c:	31 83       	std	Z+1, r19	; 0x01
    695e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6960:	ce 01       	movw	r24, r28
    6962:	8b 59       	subi	r24, 0x9B	; 155
    6964:	9e 4f       	sbci	r25, 0xFE	; 254
    6966:	fc 01       	movw	r30, r24
    6968:	80 81       	ld	r24, Z
    696a:	91 81       	ldd	r25, Z+1	; 0x01
    696c:	00 97       	sbiw	r24, 0x00	; 0
    696e:	89 f6       	brne	.-94     	; 0x6912 <main+0x2c3e>
    6970:	2f c0       	rjmp	.+94     	; 0x69d0 <main+0x2cfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6972:	8e 01       	movw	r16, r28
    6974:	0b 59       	subi	r16, 0x9B	; 155
    6976:	1e 4f       	sbci	r17, 0xFE	; 254
    6978:	ce 01       	movw	r24, r28
    697a:	8f 59       	subi	r24, 0x9F	; 159
    697c:	9e 4f       	sbci	r25, 0xFE	; 254
    697e:	fc 01       	movw	r30, r24
    6980:	60 81       	ld	r22, Z
    6982:	71 81       	ldd	r23, Z+1	; 0x01
    6984:	82 81       	ldd	r24, Z+2	; 0x02
    6986:	93 81       	ldd	r25, Z+3	; 0x03
    6988:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    698c:	dc 01       	movw	r26, r24
    698e:	cb 01       	movw	r24, r22
    6990:	f8 01       	movw	r30, r16
    6992:	91 83       	std	Z+1, r25	; 0x01
    6994:	80 83       	st	Z, r24
    6996:	ce 01       	movw	r24, r28
    6998:	87 59       	subi	r24, 0x97	; 151
    699a:	9e 4f       	sbci	r25, 0xFE	; 254
    699c:	9e 01       	movw	r18, r28
    699e:	2b 59       	subi	r18, 0x9B	; 155
    69a0:	3e 4f       	sbci	r19, 0xFE	; 254
    69a2:	f9 01       	movw	r30, r18
    69a4:	20 81       	ld	r18, Z
    69a6:	31 81       	ldd	r19, Z+1	; 0x01
    69a8:	fc 01       	movw	r30, r24
    69aa:	31 83       	std	Z+1, r19	; 0x01
    69ac:	20 83       	st	Z, r18
    69ae:	ce 01       	movw	r24, r28
    69b0:	87 59       	subi	r24, 0x97	; 151
    69b2:	9e 4f       	sbci	r25, 0xFE	; 254
    69b4:	fc 01       	movw	r30, r24
    69b6:	80 81       	ld	r24, Z
    69b8:	91 81       	ldd	r25, Z+1	; 0x01
    69ba:	8c 01       	movw	r16, r24
    69bc:	c8 01       	movw	r24, r16
    69be:	01 97       	sbiw	r24, 0x01	; 1
    69c0:	f1 f7       	brne	.-4      	; 0x69be <main+0x2cea>
    69c2:	8c 01       	movw	r16, r24
    69c4:	ce 01       	movw	r24, r28
    69c6:	87 59       	subi	r24, 0x97	; 151
    69c8:	9e 4f       	sbci	r25, 0xFE	; 254
    69ca:	fc 01       	movw	r30, r24
    69cc:	11 83       	std	Z+1, r17	; 0x01
    69ce:	00 83       	st	Z, r16
									_delay_ms(100);
									linefollwer();
    69d0:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    69d4:	2f c6       	rjmp	.+3166   	; 0x7634 <main+0x3960>
						}
					}
				}
				else
				{
					if(final[1]<coor[1])
    69d6:	ce 01       	movw	r24, r28
    69d8:	8d 52       	subi	r24, 0x2D	; 45
    69da:	99 4f       	sbci	r25, 0xF9	; 249
    69dc:	fc 01       	movw	r30, r24
    69de:	22 81       	ldd	r18, Z+2	; 0x02
    69e0:	33 81       	ldd	r19, Z+3	; 0x03
    69e2:	80 91 a8 04 	lds	r24, 0x04A8
    69e6:	90 91 a9 04 	lds	r25, 0x04A9
    69ea:	28 17       	cp	r18, r24
    69ec:	39 07       	cpc	r19, r25
    69ee:	0c f0       	brlt	.+2      	; 0x69f2 <main+0x2d1e>
    69f0:	21 c6       	rjmp	.+3138   	; 0x7634 <main+0x3960>
					{
						if(compass==6)
    69f2:	8b 81       	ldd	r24, Y+3	; 0x03
    69f4:	9c 81       	ldd	r25, Y+4	; 0x04
    69f6:	86 30       	cpi	r24, 0x06	; 6
    69f8:	91 05       	cpc	r25, r1
    69fa:	09 f0       	breq	.+2      	; 0x69fe <main+0x2d2a>
    69fc:	b8 c1       	rjmp	.+880    	; 0x6d6e <main+0x309a>
						{
							coor[1]=coor[1]-1;
    69fe:	80 91 a8 04 	lds	r24, 0x04A8
    6a02:	90 91 a9 04 	lds	r25, 0x04A9
    6a06:	01 97       	sbiw	r24, 0x01	; 1
    6a08:	90 93 a9 04 	sts	0x04A9, r25
    6a0c:	80 93 a8 04 	sts	0x04A8, r24
							compass=5;
    6a10:	85 e0       	ldi	r24, 0x05	; 5
    6a12:	90 e0       	ldi	r25, 0x00	; 0
    6a14:	9c 83       	std	Y+4, r25	; 0x04
    6a16:	8b 83       	std	Y+3, r24	; 0x03
    6a18:	9e 01       	movw	r18, r28
    6a1a:	25 59       	subi	r18, 0x95	; 149
    6a1c:	3e 4f       	sbci	r19, 0xFE	; 254
    6a1e:	80 e0       	ldi	r24, 0x00	; 0
    6a20:	90 e0       	ldi	r25, 0x00	; 0
    6a22:	aa ef       	ldi	r26, 0xFA	; 250
    6a24:	b3 e4       	ldi	r27, 0x43	; 67
    6a26:	f9 01       	movw	r30, r18
    6a28:	80 83       	st	Z, r24
    6a2a:	91 83       	std	Z+1, r25	; 0x01
    6a2c:	a2 83       	std	Z+2, r26	; 0x02
    6a2e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6a30:	8e 01       	movw	r16, r28
    6a32:	01 59       	subi	r16, 0x91	; 145
    6a34:	1e 4f       	sbci	r17, 0xFE	; 254
    6a36:	ce 01       	movw	r24, r28
    6a38:	85 59       	subi	r24, 0x95	; 149
    6a3a:	9e 4f       	sbci	r25, 0xFE	; 254
    6a3c:	fc 01       	movw	r30, r24
    6a3e:	60 81       	ld	r22, Z
    6a40:	71 81       	ldd	r23, Z+1	; 0x01
    6a42:	82 81       	ldd	r24, Z+2	; 0x02
    6a44:	93 81       	ldd	r25, Z+3	; 0x03
    6a46:	26 e6       	ldi	r18, 0x66	; 102
    6a48:	36 e6       	ldi	r19, 0x66	; 102
    6a4a:	46 e6       	ldi	r20, 0x66	; 102
    6a4c:	55 e4       	ldi	r21, 0x45	; 69
    6a4e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6a52:	dc 01       	movw	r26, r24
    6a54:	cb 01       	movw	r24, r22
    6a56:	f8 01       	movw	r30, r16
    6a58:	80 83       	st	Z, r24
    6a5a:	91 83       	std	Z+1, r25	; 0x01
    6a5c:	a2 83       	std	Z+2, r26	; 0x02
    6a5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6a60:	ce 01       	movw	r24, r28
    6a62:	81 59       	subi	r24, 0x91	; 145
    6a64:	9e 4f       	sbci	r25, 0xFE	; 254
    6a66:	11 e0       	ldi	r17, 0x01	; 1
    6a68:	fc 01       	movw	r30, r24
    6a6a:	60 81       	ld	r22, Z
    6a6c:	71 81       	ldd	r23, Z+1	; 0x01
    6a6e:	82 81       	ldd	r24, Z+2	; 0x02
    6a70:	93 81       	ldd	r25, Z+3	; 0x03
    6a72:	20 e0       	ldi	r18, 0x00	; 0
    6a74:	30 e0       	ldi	r19, 0x00	; 0
    6a76:	40 e8       	ldi	r20, 0x80	; 128
    6a78:	5f e3       	ldi	r21, 0x3F	; 63
    6a7a:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6a7e:	88 23       	and	r24, r24
    6a80:	0c f0       	brlt	.+2      	; 0x6a84 <main+0x2db0>
    6a82:	10 e0       	ldi	r17, 0x00	; 0
    6a84:	11 23       	and	r17, r17
    6a86:	49 f0       	breq	.+18     	; 0x6a9a <main+0x2dc6>
		__ticks = 1;
    6a88:	ce 01       	movw	r24, r28
    6a8a:	8d 58       	subi	r24, 0x8D	; 141
    6a8c:	9e 4f       	sbci	r25, 0xFE	; 254
    6a8e:	21 e0       	ldi	r18, 0x01	; 1
    6a90:	30 e0       	ldi	r19, 0x00	; 0
    6a92:	fc 01       	movw	r30, r24
    6a94:	31 83       	std	Z+1, r19	; 0x01
    6a96:	20 83       	st	Z, r18
    6a98:	74 c0       	rjmp	.+232    	; 0x6b82 <main+0x2eae>
	else if (__tmp > 65535)
    6a9a:	ce 01       	movw	r24, r28
    6a9c:	81 59       	subi	r24, 0x91	; 145
    6a9e:	9e 4f       	sbci	r25, 0xFE	; 254
    6aa0:	11 e0       	ldi	r17, 0x01	; 1
    6aa2:	fc 01       	movw	r30, r24
    6aa4:	60 81       	ld	r22, Z
    6aa6:	71 81       	ldd	r23, Z+1	; 0x01
    6aa8:	82 81       	ldd	r24, Z+2	; 0x02
    6aaa:	93 81       	ldd	r25, Z+3	; 0x03
    6aac:	20 e0       	ldi	r18, 0x00	; 0
    6aae:	3f ef       	ldi	r19, 0xFF	; 255
    6ab0:	4f e7       	ldi	r20, 0x7F	; 127
    6ab2:	57 e4       	ldi	r21, 0x47	; 71
    6ab4:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    6ab8:	18 16       	cp	r1, r24
    6aba:	0c f0       	brlt	.+2      	; 0x6abe <main+0x2dea>
    6abc:	10 e0       	ldi	r17, 0x00	; 0
    6abe:	11 23       	and	r17, r17
    6ac0:	09 f4       	brne	.+2      	; 0x6ac4 <main+0x2df0>
    6ac2:	4d c0       	rjmp	.+154    	; 0x6b5e <main+0x2e8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6ac4:	ce 01       	movw	r24, r28
    6ac6:	85 59       	subi	r24, 0x95	; 149
    6ac8:	9e 4f       	sbci	r25, 0xFE	; 254
    6aca:	fc 01       	movw	r30, r24
    6acc:	60 81       	ld	r22, Z
    6ace:	71 81       	ldd	r23, Z+1	; 0x01
    6ad0:	82 81       	ldd	r24, Z+2	; 0x02
    6ad2:	93 81       	ldd	r25, Z+3	; 0x03
    6ad4:	20 e0       	ldi	r18, 0x00	; 0
    6ad6:	30 e0       	ldi	r19, 0x00	; 0
    6ad8:	40 e2       	ldi	r20, 0x20	; 32
    6ada:	51 e4       	ldi	r21, 0x41	; 65
    6adc:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6ae0:	dc 01       	movw	r26, r24
    6ae2:	cb 01       	movw	r24, r22
    6ae4:	8e 01       	movw	r16, r28
    6ae6:	0d 58       	subi	r16, 0x8D	; 141
    6ae8:	1e 4f       	sbci	r17, 0xFE	; 254
    6aea:	bc 01       	movw	r22, r24
    6aec:	cd 01       	movw	r24, r26
    6aee:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6af2:	dc 01       	movw	r26, r24
    6af4:	cb 01       	movw	r24, r22
    6af6:	f8 01       	movw	r30, r16
    6af8:	91 83       	std	Z+1, r25	; 0x01
    6afa:	80 83       	st	Z, r24
    6afc:	27 c0       	rjmp	.+78     	; 0x6b4c <main+0x2e78>
    6afe:	ce 01       	movw	r24, r28
    6b00:	8b 58       	subi	r24, 0x8B	; 139
    6b02:	9e 4f       	sbci	r25, 0xFE	; 254
    6b04:	20 e7       	ldi	r18, 0x70	; 112
    6b06:	31 e0       	ldi	r19, 0x01	; 1
    6b08:	fc 01       	movw	r30, r24
    6b0a:	31 83       	std	Z+1, r19	; 0x01
    6b0c:	20 83       	st	Z, r18
    6b0e:	ce 01       	movw	r24, r28
    6b10:	8b 58       	subi	r24, 0x8B	; 139
    6b12:	9e 4f       	sbci	r25, 0xFE	; 254
    6b14:	fc 01       	movw	r30, r24
    6b16:	80 81       	ld	r24, Z
    6b18:	91 81       	ldd	r25, Z+1	; 0x01
    6b1a:	8c 01       	movw	r16, r24
    6b1c:	c8 01       	movw	r24, r16
    6b1e:	01 97       	sbiw	r24, 0x01	; 1
    6b20:	f1 f7       	brne	.-4      	; 0x6b1e <main+0x2e4a>
    6b22:	8c 01       	movw	r16, r24
    6b24:	ce 01       	movw	r24, r28
    6b26:	8b 58       	subi	r24, 0x8B	; 139
    6b28:	9e 4f       	sbci	r25, 0xFE	; 254
    6b2a:	fc 01       	movw	r30, r24
    6b2c:	11 83       	std	Z+1, r17	; 0x01
    6b2e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b30:	ce 01       	movw	r24, r28
    6b32:	8d 58       	subi	r24, 0x8D	; 141
    6b34:	9e 4f       	sbci	r25, 0xFE	; 254
    6b36:	9e 01       	movw	r18, r28
    6b38:	2d 58       	subi	r18, 0x8D	; 141
    6b3a:	3e 4f       	sbci	r19, 0xFE	; 254
    6b3c:	f9 01       	movw	r30, r18
    6b3e:	20 81       	ld	r18, Z
    6b40:	31 81       	ldd	r19, Z+1	; 0x01
    6b42:	21 50       	subi	r18, 0x01	; 1
    6b44:	30 40       	sbci	r19, 0x00	; 0
    6b46:	fc 01       	movw	r30, r24
    6b48:	31 83       	std	Z+1, r19	; 0x01
    6b4a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6b4c:	ce 01       	movw	r24, r28
    6b4e:	8d 58       	subi	r24, 0x8D	; 141
    6b50:	9e 4f       	sbci	r25, 0xFE	; 254
    6b52:	fc 01       	movw	r30, r24
    6b54:	80 81       	ld	r24, Z
    6b56:	91 81       	ldd	r25, Z+1	; 0x01
    6b58:	00 97       	sbiw	r24, 0x00	; 0
    6b5a:	89 f6       	brne	.-94     	; 0x6afe <main+0x2e2a>
    6b5c:	2f c0       	rjmp	.+94     	; 0x6bbc <main+0x2ee8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6b5e:	8e 01       	movw	r16, r28
    6b60:	0d 58       	subi	r16, 0x8D	; 141
    6b62:	1e 4f       	sbci	r17, 0xFE	; 254
    6b64:	ce 01       	movw	r24, r28
    6b66:	81 59       	subi	r24, 0x91	; 145
    6b68:	9e 4f       	sbci	r25, 0xFE	; 254
    6b6a:	fc 01       	movw	r30, r24
    6b6c:	60 81       	ld	r22, Z
    6b6e:	71 81       	ldd	r23, Z+1	; 0x01
    6b70:	82 81       	ldd	r24, Z+2	; 0x02
    6b72:	93 81       	ldd	r25, Z+3	; 0x03
    6b74:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6b78:	dc 01       	movw	r26, r24
    6b7a:	cb 01       	movw	r24, r22
    6b7c:	f8 01       	movw	r30, r16
    6b7e:	91 83       	std	Z+1, r25	; 0x01
    6b80:	80 83       	st	Z, r24
    6b82:	ce 01       	movw	r24, r28
    6b84:	89 58       	subi	r24, 0x89	; 137
    6b86:	9e 4f       	sbci	r25, 0xFE	; 254
    6b88:	9e 01       	movw	r18, r28
    6b8a:	2d 58       	subi	r18, 0x8D	; 141
    6b8c:	3e 4f       	sbci	r19, 0xFE	; 254
    6b8e:	f9 01       	movw	r30, r18
    6b90:	20 81       	ld	r18, Z
    6b92:	31 81       	ldd	r19, Z+1	; 0x01
    6b94:	fc 01       	movw	r30, r24
    6b96:	31 83       	std	Z+1, r19	; 0x01
    6b98:	20 83       	st	Z, r18
    6b9a:	ce 01       	movw	r24, r28
    6b9c:	89 58       	subi	r24, 0x89	; 137
    6b9e:	9e 4f       	sbci	r25, 0xFE	; 254
    6ba0:	fc 01       	movw	r30, r24
    6ba2:	80 81       	ld	r24, Z
    6ba4:	91 81       	ldd	r25, Z+1	; 0x01
    6ba6:	8c 01       	movw	r16, r24
    6ba8:	c8 01       	movw	r24, r16
    6baa:	01 97       	sbiw	r24, 0x01	; 1
    6bac:	f1 f7       	brne	.-4      	; 0x6baa <main+0x2ed6>
    6bae:	8c 01       	movw	r16, r24
    6bb0:	ce 01       	movw	r24, r28
    6bb2:	89 58       	subi	r24, 0x89	; 137
    6bb4:	9e 4f       	sbci	r25, 0xFE	; 254
    6bb6:	fc 01       	movw	r30, r24
    6bb8:	11 83       	std	Z+1, r17	; 0x01
    6bba:	00 83       	st	Z, r16
							_delay_ms(500);
							right_degrees(90);                 ////// my mistake calibration
    6bbc:	8a e5       	ldi	r24, 0x5A	; 90
    6bbe:	90 e0       	ldi	r25, 0x00	; 0
    6bc0:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    6bc4:	9e 01       	movw	r18, r28
    6bc6:	27 58       	subi	r18, 0x87	; 135
    6bc8:	3e 4f       	sbci	r19, 0xFE	; 254
    6bca:	80 e0       	ldi	r24, 0x00	; 0
    6bcc:	90 e0       	ldi	r25, 0x00	; 0
    6bce:	a8 ec       	ldi	r26, 0xC8	; 200
    6bd0:	b2 e4       	ldi	r27, 0x42	; 66
    6bd2:	f9 01       	movw	r30, r18
    6bd4:	80 83       	st	Z, r24
    6bd6:	91 83       	std	Z+1, r25	; 0x01
    6bd8:	a2 83       	std	Z+2, r26	; 0x02
    6bda:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6bdc:	8e 01       	movw	r16, r28
    6bde:	03 58       	subi	r16, 0x83	; 131
    6be0:	1e 4f       	sbci	r17, 0xFE	; 254
    6be2:	ce 01       	movw	r24, r28
    6be4:	87 58       	subi	r24, 0x87	; 135
    6be6:	9e 4f       	sbci	r25, 0xFE	; 254
    6be8:	fc 01       	movw	r30, r24
    6bea:	60 81       	ld	r22, Z
    6bec:	71 81       	ldd	r23, Z+1	; 0x01
    6bee:	82 81       	ldd	r24, Z+2	; 0x02
    6bf0:	93 81       	ldd	r25, Z+3	; 0x03
    6bf2:	26 e6       	ldi	r18, 0x66	; 102
    6bf4:	36 e6       	ldi	r19, 0x66	; 102
    6bf6:	46 e6       	ldi	r20, 0x66	; 102
    6bf8:	55 e4       	ldi	r21, 0x45	; 69
    6bfa:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6bfe:	dc 01       	movw	r26, r24
    6c00:	cb 01       	movw	r24, r22
    6c02:	f8 01       	movw	r30, r16
    6c04:	80 83       	st	Z, r24
    6c06:	91 83       	std	Z+1, r25	; 0x01
    6c08:	a2 83       	std	Z+2, r26	; 0x02
    6c0a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6c0c:	ce 01       	movw	r24, r28
    6c0e:	83 58       	subi	r24, 0x83	; 131
    6c10:	9e 4f       	sbci	r25, 0xFE	; 254
    6c12:	11 e0       	ldi	r17, 0x01	; 1
    6c14:	fc 01       	movw	r30, r24
    6c16:	60 81       	ld	r22, Z
    6c18:	71 81       	ldd	r23, Z+1	; 0x01
    6c1a:	82 81       	ldd	r24, Z+2	; 0x02
    6c1c:	93 81       	ldd	r25, Z+3	; 0x03
    6c1e:	20 e0       	ldi	r18, 0x00	; 0
    6c20:	30 e0       	ldi	r19, 0x00	; 0
    6c22:	40 e8       	ldi	r20, 0x80	; 128
    6c24:	5f e3       	ldi	r21, 0x3F	; 63
    6c26:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6c2a:	88 23       	and	r24, r24
    6c2c:	0c f0       	brlt	.+2      	; 0x6c30 <main+0x2f5c>
    6c2e:	10 e0       	ldi	r17, 0x00	; 0
    6c30:	11 23       	and	r17, r17
    6c32:	49 f0       	breq	.+18     	; 0x6c46 <main+0x2f72>
		__ticks = 1;
    6c34:	ce 01       	movw	r24, r28
    6c36:	8f 57       	subi	r24, 0x7F	; 127
    6c38:	9e 4f       	sbci	r25, 0xFE	; 254
    6c3a:	21 e0       	ldi	r18, 0x01	; 1
    6c3c:	30 e0       	ldi	r19, 0x00	; 0
    6c3e:	fc 01       	movw	r30, r24
    6c40:	31 83       	std	Z+1, r19	; 0x01
    6c42:	20 83       	st	Z, r18
    6c44:	74 c0       	rjmp	.+232    	; 0x6d2e <main+0x305a>
	else if (__tmp > 65535)
    6c46:	ce 01       	movw	r24, r28
    6c48:	83 58       	subi	r24, 0x83	; 131
    6c4a:	9e 4f       	sbci	r25, 0xFE	; 254
    6c4c:	11 e0       	ldi	r17, 0x01	; 1
    6c4e:	fc 01       	movw	r30, r24
    6c50:	60 81       	ld	r22, Z
    6c52:	71 81       	ldd	r23, Z+1	; 0x01
    6c54:	82 81       	ldd	r24, Z+2	; 0x02
    6c56:	93 81       	ldd	r25, Z+3	; 0x03
    6c58:	20 e0       	ldi	r18, 0x00	; 0
    6c5a:	3f ef       	ldi	r19, 0xFF	; 255
    6c5c:	4f e7       	ldi	r20, 0x7F	; 127
    6c5e:	57 e4       	ldi	r21, 0x47	; 71
    6c60:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    6c64:	18 16       	cp	r1, r24
    6c66:	0c f0       	brlt	.+2      	; 0x6c6a <main+0x2f96>
    6c68:	10 e0       	ldi	r17, 0x00	; 0
    6c6a:	11 23       	and	r17, r17
    6c6c:	09 f4       	brne	.+2      	; 0x6c70 <main+0x2f9c>
    6c6e:	4d c0       	rjmp	.+154    	; 0x6d0a <main+0x3036>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6c70:	ce 01       	movw	r24, r28
    6c72:	87 58       	subi	r24, 0x87	; 135
    6c74:	9e 4f       	sbci	r25, 0xFE	; 254
    6c76:	fc 01       	movw	r30, r24
    6c78:	60 81       	ld	r22, Z
    6c7a:	71 81       	ldd	r23, Z+1	; 0x01
    6c7c:	82 81       	ldd	r24, Z+2	; 0x02
    6c7e:	93 81       	ldd	r25, Z+3	; 0x03
    6c80:	20 e0       	ldi	r18, 0x00	; 0
    6c82:	30 e0       	ldi	r19, 0x00	; 0
    6c84:	40 e2       	ldi	r20, 0x20	; 32
    6c86:	51 e4       	ldi	r21, 0x41	; 65
    6c88:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6c8c:	dc 01       	movw	r26, r24
    6c8e:	cb 01       	movw	r24, r22
    6c90:	8e 01       	movw	r16, r28
    6c92:	0f 57       	subi	r16, 0x7F	; 127
    6c94:	1e 4f       	sbci	r17, 0xFE	; 254
    6c96:	bc 01       	movw	r22, r24
    6c98:	cd 01       	movw	r24, r26
    6c9a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6c9e:	dc 01       	movw	r26, r24
    6ca0:	cb 01       	movw	r24, r22
    6ca2:	f8 01       	movw	r30, r16
    6ca4:	91 83       	std	Z+1, r25	; 0x01
    6ca6:	80 83       	st	Z, r24
    6ca8:	27 c0       	rjmp	.+78     	; 0x6cf8 <main+0x3024>
    6caa:	ce 01       	movw	r24, r28
    6cac:	8d 57       	subi	r24, 0x7D	; 125
    6cae:	9e 4f       	sbci	r25, 0xFE	; 254
    6cb0:	20 e7       	ldi	r18, 0x70	; 112
    6cb2:	31 e0       	ldi	r19, 0x01	; 1
    6cb4:	fc 01       	movw	r30, r24
    6cb6:	31 83       	std	Z+1, r19	; 0x01
    6cb8:	20 83       	st	Z, r18
    6cba:	ce 01       	movw	r24, r28
    6cbc:	8d 57       	subi	r24, 0x7D	; 125
    6cbe:	9e 4f       	sbci	r25, 0xFE	; 254
    6cc0:	fc 01       	movw	r30, r24
    6cc2:	80 81       	ld	r24, Z
    6cc4:	91 81       	ldd	r25, Z+1	; 0x01
    6cc6:	8c 01       	movw	r16, r24
    6cc8:	c8 01       	movw	r24, r16
    6cca:	01 97       	sbiw	r24, 0x01	; 1
    6ccc:	f1 f7       	brne	.-4      	; 0x6cca <main+0x2ff6>
    6cce:	8c 01       	movw	r16, r24
    6cd0:	ce 01       	movw	r24, r28
    6cd2:	8d 57       	subi	r24, 0x7D	; 125
    6cd4:	9e 4f       	sbci	r25, 0xFE	; 254
    6cd6:	fc 01       	movw	r30, r24
    6cd8:	11 83       	std	Z+1, r17	; 0x01
    6cda:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6cdc:	ce 01       	movw	r24, r28
    6cde:	8f 57       	subi	r24, 0x7F	; 127
    6ce0:	9e 4f       	sbci	r25, 0xFE	; 254
    6ce2:	9e 01       	movw	r18, r28
    6ce4:	2f 57       	subi	r18, 0x7F	; 127
    6ce6:	3e 4f       	sbci	r19, 0xFE	; 254
    6ce8:	f9 01       	movw	r30, r18
    6cea:	20 81       	ld	r18, Z
    6cec:	31 81       	ldd	r19, Z+1	; 0x01
    6cee:	21 50       	subi	r18, 0x01	; 1
    6cf0:	30 40       	sbci	r19, 0x00	; 0
    6cf2:	fc 01       	movw	r30, r24
    6cf4:	31 83       	std	Z+1, r19	; 0x01
    6cf6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6cf8:	ce 01       	movw	r24, r28
    6cfa:	8f 57       	subi	r24, 0x7F	; 127
    6cfc:	9e 4f       	sbci	r25, 0xFE	; 254
    6cfe:	fc 01       	movw	r30, r24
    6d00:	80 81       	ld	r24, Z
    6d02:	91 81       	ldd	r25, Z+1	; 0x01
    6d04:	00 97       	sbiw	r24, 0x00	; 0
    6d06:	89 f6       	brne	.-94     	; 0x6caa <main+0x2fd6>
    6d08:	2f c0       	rjmp	.+94     	; 0x6d68 <main+0x3094>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6d0a:	8e 01       	movw	r16, r28
    6d0c:	0f 57       	subi	r16, 0x7F	; 127
    6d0e:	1e 4f       	sbci	r17, 0xFE	; 254
    6d10:	ce 01       	movw	r24, r28
    6d12:	83 58       	subi	r24, 0x83	; 131
    6d14:	9e 4f       	sbci	r25, 0xFE	; 254
    6d16:	fc 01       	movw	r30, r24
    6d18:	60 81       	ld	r22, Z
    6d1a:	71 81       	ldd	r23, Z+1	; 0x01
    6d1c:	82 81       	ldd	r24, Z+2	; 0x02
    6d1e:	93 81       	ldd	r25, Z+3	; 0x03
    6d20:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6d24:	dc 01       	movw	r26, r24
    6d26:	cb 01       	movw	r24, r22
    6d28:	f8 01       	movw	r30, r16
    6d2a:	91 83       	std	Z+1, r25	; 0x01
    6d2c:	80 83       	st	Z, r24
    6d2e:	ce 01       	movw	r24, r28
    6d30:	8b 57       	subi	r24, 0x7B	; 123
    6d32:	9e 4f       	sbci	r25, 0xFE	; 254
    6d34:	9e 01       	movw	r18, r28
    6d36:	2f 57       	subi	r18, 0x7F	; 127
    6d38:	3e 4f       	sbci	r19, 0xFE	; 254
    6d3a:	f9 01       	movw	r30, r18
    6d3c:	20 81       	ld	r18, Z
    6d3e:	31 81       	ldd	r19, Z+1	; 0x01
    6d40:	fc 01       	movw	r30, r24
    6d42:	31 83       	std	Z+1, r19	; 0x01
    6d44:	20 83       	st	Z, r18
    6d46:	ce 01       	movw	r24, r28
    6d48:	8b 57       	subi	r24, 0x7B	; 123
    6d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    6d4c:	fc 01       	movw	r30, r24
    6d4e:	80 81       	ld	r24, Z
    6d50:	91 81       	ldd	r25, Z+1	; 0x01
    6d52:	8c 01       	movw	r16, r24
    6d54:	c8 01       	movw	r24, r16
    6d56:	01 97       	sbiw	r24, 0x01	; 1
    6d58:	f1 f7       	brne	.-4      	; 0x6d56 <main+0x3082>
    6d5a:	8c 01       	movw	r16, r24
    6d5c:	ce 01       	movw	r24, r28
    6d5e:	8b 57       	subi	r24, 0x7B	; 123
    6d60:	9e 4f       	sbci	r25, 0xFE	; 254
    6d62:	fc 01       	movw	r30, r24
    6d64:	11 83       	std	Z+1, r17	; 0x01
    6d66:	00 83       	st	Z, r16
							_delay_ms(100);
							linefollwer();
    6d68:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    6d6c:	63 c4       	rjmp	.+2246   	; 0x7634 <main+0x3960>
						}
						else
						{
							if(compass==7)
    6d6e:	8b 81       	ldd	r24, Y+3	; 0x03
    6d70:	9c 81       	ldd	r25, Y+4	; 0x04
    6d72:	87 30       	cpi	r24, 0x07	; 7
    6d74:	91 05       	cpc	r25, r1
    6d76:	09 f0       	breq	.+2      	; 0x6d7a <main+0x30a6>
    6d78:	b8 c1       	rjmp	.+880    	; 0x70ea <main+0x3416>
							{
								coor[1]=coor[1]-1;
    6d7a:	80 91 a8 04 	lds	r24, 0x04A8
    6d7e:	90 91 a9 04 	lds	r25, 0x04A9
    6d82:	01 97       	sbiw	r24, 0x01	; 1
    6d84:	90 93 a9 04 	sts	0x04A9, r25
    6d88:	80 93 a8 04 	sts	0x04A8, r24
								compass=5;
    6d8c:	85 e0       	ldi	r24, 0x05	; 5
    6d8e:	90 e0       	ldi	r25, 0x00	; 0
    6d90:	9c 83       	std	Y+4, r25	; 0x04
    6d92:	8b 83       	std	Y+3, r24	; 0x03
    6d94:	9e 01       	movw	r18, r28
    6d96:	29 57       	subi	r18, 0x79	; 121
    6d98:	3e 4f       	sbci	r19, 0xFE	; 254
    6d9a:	80 e0       	ldi	r24, 0x00	; 0
    6d9c:	90 e0       	ldi	r25, 0x00	; 0
    6d9e:	aa ef       	ldi	r26, 0xFA	; 250
    6da0:	b3 e4       	ldi	r27, 0x43	; 67
    6da2:	f9 01       	movw	r30, r18
    6da4:	80 83       	st	Z, r24
    6da6:	91 83       	std	Z+1, r25	; 0x01
    6da8:	a2 83       	std	Z+2, r26	; 0x02
    6daa:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6dac:	8e 01       	movw	r16, r28
    6dae:	05 57       	subi	r16, 0x75	; 117
    6db0:	1e 4f       	sbci	r17, 0xFE	; 254
    6db2:	ce 01       	movw	r24, r28
    6db4:	89 57       	subi	r24, 0x79	; 121
    6db6:	9e 4f       	sbci	r25, 0xFE	; 254
    6db8:	fc 01       	movw	r30, r24
    6dba:	60 81       	ld	r22, Z
    6dbc:	71 81       	ldd	r23, Z+1	; 0x01
    6dbe:	82 81       	ldd	r24, Z+2	; 0x02
    6dc0:	93 81       	ldd	r25, Z+3	; 0x03
    6dc2:	26 e6       	ldi	r18, 0x66	; 102
    6dc4:	36 e6       	ldi	r19, 0x66	; 102
    6dc6:	46 e6       	ldi	r20, 0x66	; 102
    6dc8:	55 e4       	ldi	r21, 0x45	; 69
    6dca:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6dce:	dc 01       	movw	r26, r24
    6dd0:	cb 01       	movw	r24, r22
    6dd2:	f8 01       	movw	r30, r16
    6dd4:	80 83       	st	Z, r24
    6dd6:	91 83       	std	Z+1, r25	; 0x01
    6dd8:	a2 83       	std	Z+2, r26	; 0x02
    6dda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6ddc:	ce 01       	movw	r24, r28
    6dde:	85 57       	subi	r24, 0x75	; 117
    6de0:	9e 4f       	sbci	r25, 0xFE	; 254
    6de2:	11 e0       	ldi	r17, 0x01	; 1
    6de4:	fc 01       	movw	r30, r24
    6de6:	60 81       	ld	r22, Z
    6de8:	71 81       	ldd	r23, Z+1	; 0x01
    6dea:	82 81       	ldd	r24, Z+2	; 0x02
    6dec:	93 81       	ldd	r25, Z+3	; 0x03
    6dee:	20 e0       	ldi	r18, 0x00	; 0
    6df0:	30 e0       	ldi	r19, 0x00	; 0
    6df2:	40 e8       	ldi	r20, 0x80	; 128
    6df4:	5f e3       	ldi	r21, 0x3F	; 63
    6df6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6dfa:	88 23       	and	r24, r24
    6dfc:	0c f0       	brlt	.+2      	; 0x6e00 <main+0x312c>
    6dfe:	10 e0       	ldi	r17, 0x00	; 0
    6e00:	11 23       	and	r17, r17
    6e02:	49 f0       	breq	.+18     	; 0x6e16 <main+0x3142>
		__ticks = 1;
    6e04:	ce 01       	movw	r24, r28
    6e06:	81 57       	subi	r24, 0x71	; 113
    6e08:	9e 4f       	sbci	r25, 0xFE	; 254
    6e0a:	21 e0       	ldi	r18, 0x01	; 1
    6e0c:	30 e0       	ldi	r19, 0x00	; 0
    6e0e:	fc 01       	movw	r30, r24
    6e10:	31 83       	std	Z+1, r19	; 0x01
    6e12:	20 83       	st	Z, r18
    6e14:	74 c0       	rjmp	.+232    	; 0x6efe <main+0x322a>
	else if (__tmp > 65535)
    6e16:	ce 01       	movw	r24, r28
    6e18:	85 57       	subi	r24, 0x75	; 117
    6e1a:	9e 4f       	sbci	r25, 0xFE	; 254
    6e1c:	11 e0       	ldi	r17, 0x01	; 1
    6e1e:	fc 01       	movw	r30, r24
    6e20:	60 81       	ld	r22, Z
    6e22:	71 81       	ldd	r23, Z+1	; 0x01
    6e24:	82 81       	ldd	r24, Z+2	; 0x02
    6e26:	93 81       	ldd	r25, Z+3	; 0x03
    6e28:	20 e0       	ldi	r18, 0x00	; 0
    6e2a:	3f ef       	ldi	r19, 0xFF	; 255
    6e2c:	4f e7       	ldi	r20, 0x7F	; 127
    6e2e:	57 e4       	ldi	r21, 0x47	; 71
    6e30:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    6e34:	18 16       	cp	r1, r24
    6e36:	0c f0       	brlt	.+2      	; 0x6e3a <main+0x3166>
    6e38:	10 e0       	ldi	r17, 0x00	; 0
    6e3a:	11 23       	and	r17, r17
    6e3c:	09 f4       	brne	.+2      	; 0x6e40 <main+0x316c>
    6e3e:	4d c0       	rjmp	.+154    	; 0x6eda <main+0x3206>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6e40:	ce 01       	movw	r24, r28
    6e42:	89 57       	subi	r24, 0x79	; 121
    6e44:	9e 4f       	sbci	r25, 0xFE	; 254
    6e46:	fc 01       	movw	r30, r24
    6e48:	60 81       	ld	r22, Z
    6e4a:	71 81       	ldd	r23, Z+1	; 0x01
    6e4c:	82 81       	ldd	r24, Z+2	; 0x02
    6e4e:	93 81       	ldd	r25, Z+3	; 0x03
    6e50:	20 e0       	ldi	r18, 0x00	; 0
    6e52:	30 e0       	ldi	r19, 0x00	; 0
    6e54:	40 e2       	ldi	r20, 0x20	; 32
    6e56:	51 e4       	ldi	r21, 0x41	; 65
    6e58:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6e5c:	dc 01       	movw	r26, r24
    6e5e:	cb 01       	movw	r24, r22
    6e60:	8e 01       	movw	r16, r28
    6e62:	01 57       	subi	r16, 0x71	; 113
    6e64:	1e 4f       	sbci	r17, 0xFE	; 254
    6e66:	bc 01       	movw	r22, r24
    6e68:	cd 01       	movw	r24, r26
    6e6a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6e6e:	dc 01       	movw	r26, r24
    6e70:	cb 01       	movw	r24, r22
    6e72:	f8 01       	movw	r30, r16
    6e74:	91 83       	std	Z+1, r25	; 0x01
    6e76:	80 83       	st	Z, r24
    6e78:	27 c0       	rjmp	.+78     	; 0x6ec8 <main+0x31f4>
    6e7a:	ce 01       	movw	r24, r28
    6e7c:	8f 56       	subi	r24, 0x6F	; 111
    6e7e:	9e 4f       	sbci	r25, 0xFE	; 254
    6e80:	20 e7       	ldi	r18, 0x70	; 112
    6e82:	31 e0       	ldi	r19, 0x01	; 1
    6e84:	fc 01       	movw	r30, r24
    6e86:	31 83       	std	Z+1, r19	; 0x01
    6e88:	20 83       	st	Z, r18
    6e8a:	ce 01       	movw	r24, r28
    6e8c:	8f 56       	subi	r24, 0x6F	; 111
    6e8e:	9e 4f       	sbci	r25, 0xFE	; 254
    6e90:	fc 01       	movw	r30, r24
    6e92:	80 81       	ld	r24, Z
    6e94:	91 81       	ldd	r25, Z+1	; 0x01
    6e96:	8c 01       	movw	r16, r24
    6e98:	c8 01       	movw	r24, r16
    6e9a:	01 97       	sbiw	r24, 0x01	; 1
    6e9c:	f1 f7       	brne	.-4      	; 0x6e9a <main+0x31c6>
    6e9e:	8c 01       	movw	r16, r24
    6ea0:	ce 01       	movw	r24, r28
    6ea2:	8f 56       	subi	r24, 0x6F	; 111
    6ea4:	9e 4f       	sbci	r25, 0xFE	; 254
    6ea6:	fc 01       	movw	r30, r24
    6ea8:	11 83       	std	Z+1, r17	; 0x01
    6eaa:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6eac:	ce 01       	movw	r24, r28
    6eae:	81 57       	subi	r24, 0x71	; 113
    6eb0:	9e 4f       	sbci	r25, 0xFE	; 254
    6eb2:	9e 01       	movw	r18, r28
    6eb4:	21 57       	subi	r18, 0x71	; 113
    6eb6:	3e 4f       	sbci	r19, 0xFE	; 254
    6eb8:	f9 01       	movw	r30, r18
    6eba:	20 81       	ld	r18, Z
    6ebc:	31 81       	ldd	r19, Z+1	; 0x01
    6ebe:	21 50       	subi	r18, 0x01	; 1
    6ec0:	30 40       	sbci	r19, 0x00	; 0
    6ec2:	fc 01       	movw	r30, r24
    6ec4:	31 83       	std	Z+1, r19	; 0x01
    6ec6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6ec8:	ce 01       	movw	r24, r28
    6eca:	81 57       	subi	r24, 0x71	; 113
    6ecc:	9e 4f       	sbci	r25, 0xFE	; 254
    6ece:	fc 01       	movw	r30, r24
    6ed0:	80 81       	ld	r24, Z
    6ed2:	91 81       	ldd	r25, Z+1	; 0x01
    6ed4:	00 97       	sbiw	r24, 0x00	; 0
    6ed6:	89 f6       	brne	.-94     	; 0x6e7a <main+0x31a6>
    6ed8:	2f c0       	rjmp	.+94     	; 0x6f38 <main+0x3264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6eda:	8e 01       	movw	r16, r28
    6edc:	01 57       	subi	r16, 0x71	; 113
    6ede:	1e 4f       	sbci	r17, 0xFE	; 254
    6ee0:	ce 01       	movw	r24, r28
    6ee2:	85 57       	subi	r24, 0x75	; 117
    6ee4:	9e 4f       	sbci	r25, 0xFE	; 254
    6ee6:	fc 01       	movw	r30, r24
    6ee8:	60 81       	ld	r22, Z
    6eea:	71 81       	ldd	r23, Z+1	; 0x01
    6eec:	82 81       	ldd	r24, Z+2	; 0x02
    6eee:	93 81       	ldd	r25, Z+3	; 0x03
    6ef0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    6ef4:	dc 01       	movw	r26, r24
    6ef6:	cb 01       	movw	r24, r22
    6ef8:	f8 01       	movw	r30, r16
    6efa:	91 83       	std	Z+1, r25	; 0x01
    6efc:	80 83       	st	Z, r24
    6efe:	ce 01       	movw	r24, r28
    6f00:	8d 56       	subi	r24, 0x6D	; 109
    6f02:	9e 4f       	sbci	r25, 0xFE	; 254
    6f04:	9e 01       	movw	r18, r28
    6f06:	21 57       	subi	r18, 0x71	; 113
    6f08:	3e 4f       	sbci	r19, 0xFE	; 254
    6f0a:	f9 01       	movw	r30, r18
    6f0c:	20 81       	ld	r18, Z
    6f0e:	31 81       	ldd	r19, Z+1	; 0x01
    6f10:	fc 01       	movw	r30, r24
    6f12:	31 83       	std	Z+1, r19	; 0x01
    6f14:	20 83       	st	Z, r18
    6f16:	ce 01       	movw	r24, r28
    6f18:	8d 56       	subi	r24, 0x6D	; 109
    6f1a:	9e 4f       	sbci	r25, 0xFE	; 254
    6f1c:	fc 01       	movw	r30, r24
    6f1e:	80 81       	ld	r24, Z
    6f20:	91 81       	ldd	r25, Z+1	; 0x01
    6f22:	8c 01       	movw	r16, r24
    6f24:	c8 01       	movw	r24, r16
    6f26:	01 97       	sbiw	r24, 0x01	; 1
    6f28:	f1 f7       	brne	.-4      	; 0x6f26 <main+0x3252>
    6f2a:	8c 01       	movw	r16, r24
    6f2c:	ce 01       	movw	r24, r28
    6f2e:	8d 56       	subi	r24, 0x6D	; 109
    6f30:	9e 4f       	sbci	r25, 0xFE	; 254
    6f32:	fc 01       	movw	r30, r24
    6f34:	11 83       	std	Z+1, r17	; 0x01
    6f36:	00 83       	st	Z, r16
								_delay_ms(500);
								left_degrees(85);
    6f38:	85 e5       	ldi	r24, 0x55	; 85
    6f3a:	90 e0       	ldi	r25, 0x00	; 0
    6f3c:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    6f40:	9e 01       	movw	r18, r28
    6f42:	2b 56       	subi	r18, 0x6B	; 107
    6f44:	3e 4f       	sbci	r19, 0xFE	; 254
    6f46:	80 e0       	ldi	r24, 0x00	; 0
    6f48:	90 e0       	ldi	r25, 0x00	; 0
    6f4a:	a8 ec       	ldi	r26, 0xC8	; 200
    6f4c:	b2 e4       	ldi	r27, 0x42	; 66
    6f4e:	f9 01       	movw	r30, r18
    6f50:	80 83       	st	Z, r24
    6f52:	91 83       	std	Z+1, r25	; 0x01
    6f54:	a2 83       	std	Z+2, r26	; 0x02
    6f56:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    6f58:	8e 01       	movw	r16, r28
    6f5a:	07 56       	subi	r16, 0x67	; 103
    6f5c:	1e 4f       	sbci	r17, 0xFE	; 254
    6f5e:	ce 01       	movw	r24, r28
    6f60:	8b 56       	subi	r24, 0x6B	; 107
    6f62:	9e 4f       	sbci	r25, 0xFE	; 254
    6f64:	fc 01       	movw	r30, r24
    6f66:	60 81       	ld	r22, Z
    6f68:	71 81       	ldd	r23, Z+1	; 0x01
    6f6a:	82 81       	ldd	r24, Z+2	; 0x02
    6f6c:	93 81       	ldd	r25, Z+3	; 0x03
    6f6e:	26 e6       	ldi	r18, 0x66	; 102
    6f70:	36 e6       	ldi	r19, 0x66	; 102
    6f72:	46 e6       	ldi	r20, 0x66	; 102
    6f74:	55 e4       	ldi	r21, 0x45	; 69
    6f76:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    6f7a:	dc 01       	movw	r26, r24
    6f7c:	cb 01       	movw	r24, r22
    6f7e:	f8 01       	movw	r30, r16
    6f80:	80 83       	st	Z, r24
    6f82:	91 83       	std	Z+1, r25	; 0x01
    6f84:	a2 83       	std	Z+2, r26	; 0x02
    6f86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6f88:	ce 01       	movw	r24, r28
    6f8a:	87 56       	subi	r24, 0x67	; 103
    6f8c:	9e 4f       	sbci	r25, 0xFE	; 254
    6f8e:	11 e0       	ldi	r17, 0x01	; 1
    6f90:	fc 01       	movw	r30, r24
    6f92:	60 81       	ld	r22, Z
    6f94:	71 81       	ldd	r23, Z+1	; 0x01
    6f96:	82 81       	ldd	r24, Z+2	; 0x02
    6f98:	93 81       	ldd	r25, Z+3	; 0x03
    6f9a:	20 e0       	ldi	r18, 0x00	; 0
    6f9c:	30 e0       	ldi	r19, 0x00	; 0
    6f9e:	40 e8       	ldi	r20, 0x80	; 128
    6fa0:	5f e3       	ldi	r21, 0x3F	; 63
    6fa2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    6fa6:	88 23       	and	r24, r24
    6fa8:	0c f0       	brlt	.+2      	; 0x6fac <main+0x32d8>
    6faa:	10 e0       	ldi	r17, 0x00	; 0
    6fac:	11 23       	and	r17, r17
    6fae:	49 f0       	breq	.+18     	; 0x6fc2 <main+0x32ee>
		__ticks = 1;
    6fb0:	ce 01       	movw	r24, r28
    6fb2:	83 56       	subi	r24, 0x63	; 99
    6fb4:	9e 4f       	sbci	r25, 0xFE	; 254
    6fb6:	21 e0       	ldi	r18, 0x01	; 1
    6fb8:	30 e0       	ldi	r19, 0x00	; 0
    6fba:	fc 01       	movw	r30, r24
    6fbc:	31 83       	std	Z+1, r19	; 0x01
    6fbe:	20 83       	st	Z, r18
    6fc0:	74 c0       	rjmp	.+232    	; 0x70aa <main+0x33d6>
	else if (__tmp > 65535)
    6fc2:	ce 01       	movw	r24, r28
    6fc4:	87 56       	subi	r24, 0x67	; 103
    6fc6:	9e 4f       	sbci	r25, 0xFE	; 254
    6fc8:	11 e0       	ldi	r17, 0x01	; 1
    6fca:	fc 01       	movw	r30, r24
    6fcc:	60 81       	ld	r22, Z
    6fce:	71 81       	ldd	r23, Z+1	; 0x01
    6fd0:	82 81       	ldd	r24, Z+2	; 0x02
    6fd2:	93 81       	ldd	r25, Z+3	; 0x03
    6fd4:	20 e0       	ldi	r18, 0x00	; 0
    6fd6:	3f ef       	ldi	r19, 0xFF	; 255
    6fd8:	4f e7       	ldi	r20, 0x7F	; 127
    6fda:	57 e4       	ldi	r21, 0x47	; 71
    6fdc:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    6fe0:	18 16       	cp	r1, r24
    6fe2:	0c f0       	brlt	.+2      	; 0x6fe6 <main+0x3312>
    6fe4:	10 e0       	ldi	r17, 0x00	; 0
    6fe6:	11 23       	and	r17, r17
    6fe8:	09 f4       	brne	.+2      	; 0x6fec <main+0x3318>
    6fea:	4d c0       	rjmp	.+154    	; 0x7086 <main+0x33b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6fec:	ce 01       	movw	r24, r28
    6fee:	8b 56       	subi	r24, 0x6B	; 107
    6ff0:	9e 4f       	sbci	r25, 0xFE	; 254
    6ff2:	fc 01       	movw	r30, r24
    6ff4:	60 81       	ld	r22, Z
    6ff6:	71 81       	ldd	r23, Z+1	; 0x01
    6ff8:	82 81       	ldd	r24, Z+2	; 0x02
    6ffa:	93 81       	ldd	r25, Z+3	; 0x03
    6ffc:	20 e0       	ldi	r18, 0x00	; 0
    6ffe:	30 e0       	ldi	r19, 0x00	; 0
    7000:	40 e2       	ldi	r20, 0x20	; 32
    7002:	51 e4       	ldi	r21, 0x41	; 65
    7004:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7008:	dc 01       	movw	r26, r24
    700a:	cb 01       	movw	r24, r22
    700c:	8e 01       	movw	r16, r28
    700e:	03 56       	subi	r16, 0x63	; 99
    7010:	1e 4f       	sbci	r17, 0xFE	; 254
    7012:	bc 01       	movw	r22, r24
    7014:	cd 01       	movw	r24, r26
    7016:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    701a:	dc 01       	movw	r26, r24
    701c:	cb 01       	movw	r24, r22
    701e:	f8 01       	movw	r30, r16
    7020:	91 83       	std	Z+1, r25	; 0x01
    7022:	80 83       	st	Z, r24
    7024:	27 c0       	rjmp	.+78     	; 0x7074 <main+0x33a0>
    7026:	ce 01       	movw	r24, r28
    7028:	81 56       	subi	r24, 0x61	; 97
    702a:	9e 4f       	sbci	r25, 0xFE	; 254
    702c:	20 e7       	ldi	r18, 0x70	; 112
    702e:	31 e0       	ldi	r19, 0x01	; 1
    7030:	fc 01       	movw	r30, r24
    7032:	31 83       	std	Z+1, r19	; 0x01
    7034:	20 83       	st	Z, r18
    7036:	ce 01       	movw	r24, r28
    7038:	81 56       	subi	r24, 0x61	; 97
    703a:	9e 4f       	sbci	r25, 0xFE	; 254
    703c:	fc 01       	movw	r30, r24
    703e:	80 81       	ld	r24, Z
    7040:	91 81       	ldd	r25, Z+1	; 0x01
    7042:	8c 01       	movw	r16, r24
    7044:	c8 01       	movw	r24, r16
    7046:	01 97       	sbiw	r24, 0x01	; 1
    7048:	f1 f7       	brne	.-4      	; 0x7046 <main+0x3372>
    704a:	8c 01       	movw	r16, r24
    704c:	ce 01       	movw	r24, r28
    704e:	81 56       	subi	r24, 0x61	; 97
    7050:	9e 4f       	sbci	r25, 0xFE	; 254
    7052:	fc 01       	movw	r30, r24
    7054:	11 83       	std	Z+1, r17	; 0x01
    7056:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7058:	ce 01       	movw	r24, r28
    705a:	83 56       	subi	r24, 0x63	; 99
    705c:	9e 4f       	sbci	r25, 0xFE	; 254
    705e:	9e 01       	movw	r18, r28
    7060:	23 56       	subi	r18, 0x63	; 99
    7062:	3e 4f       	sbci	r19, 0xFE	; 254
    7064:	f9 01       	movw	r30, r18
    7066:	20 81       	ld	r18, Z
    7068:	31 81       	ldd	r19, Z+1	; 0x01
    706a:	21 50       	subi	r18, 0x01	; 1
    706c:	30 40       	sbci	r19, 0x00	; 0
    706e:	fc 01       	movw	r30, r24
    7070:	31 83       	std	Z+1, r19	; 0x01
    7072:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7074:	ce 01       	movw	r24, r28
    7076:	83 56       	subi	r24, 0x63	; 99
    7078:	9e 4f       	sbci	r25, 0xFE	; 254
    707a:	fc 01       	movw	r30, r24
    707c:	80 81       	ld	r24, Z
    707e:	91 81       	ldd	r25, Z+1	; 0x01
    7080:	00 97       	sbiw	r24, 0x00	; 0
    7082:	89 f6       	brne	.-94     	; 0x7026 <main+0x3352>
    7084:	2f c0       	rjmp	.+94     	; 0x70e4 <main+0x3410>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7086:	8e 01       	movw	r16, r28
    7088:	03 56       	subi	r16, 0x63	; 99
    708a:	1e 4f       	sbci	r17, 0xFE	; 254
    708c:	ce 01       	movw	r24, r28
    708e:	87 56       	subi	r24, 0x67	; 103
    7090:	9e 4f       	sbci	r25, 0xFE	; 254
    7092:	fc 01       	movw	r30, r24
    7094:	60 81       	ld	r22, Z
    7096:	71 81       	ldd	r23, Z+1	; 0x01
    7098:	82 81       	ldd	r24, Z+2	; 0x02
    709a:	93 81       	ldd	r25, Z+3	; 0x03
    709c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    70a0:	dc 01       	movw	r26, r24
    70a2:	cb 01       	movw	r24, r22
    70a4:	f8 01       	movw	r30, r16
    70a6:	91 83       	std	Z+1, r25	; 0x01
    70a8:	80 83       	st	Z, r24
    70aa:	ce 01       	movw	r24, r28
    70ac:	8f 55       	subi	r24, 0x5F	; 95
    70ae:	9e 4f       	sbci	r25, 0xFE	; 254
    70b0:	9e 01       	movw	r18, r28
    70b2:	23 56       	subi	r18, 0x63	; 99
    70b4:	3e 4f       	sbci	r19, 0xFE	; 254
    70b6:	f9 01       	movw	r30, r18
    70b8:	20 81       	ld	r18, Z
    70ba:	31 81       	ldd	r19, Z+1	; 0x01
    70bc:	fc 01       	movw	r30, r24
    70be:	31 83       	std	Z+1, r19	; 0x01
    70c0:	20 83       	st	Z, r18
    70c2:	ce 01       	movw	r24, r28
    70c4:	8f 55       	subi	r24, 0x5F	; 95
    70c6:	9e 4f       	sbci	r25, 0xFE	; 254
    70c8:	fc 01       	movw	r30, r24
    70ca:	80 81       	ld	r24, Z
    70cc:	91 81       	ldd	r25, Z+1	; 0x01
    70ce:	8c 01       	movw	r16, r24
    70d0:	c8 01       	movw	r24, r16
    70d2:	01 97       	sbiw	r24, 0x01	; 1
    70d4:	f1 f7       	brne	.-4      	; 0x70d2 <main+0x33fe>
    70d6:	8c 01       	movw	r16, r24
    70d8:	ce 01       	movw	r24, r28
    70da:	8f 55       	subi	r24, 0x5F	; 95
    70dc:	9e 4f       	sbci	r25, 0xFE	; 254
    70de:	fc 01       	movw	r30, r24
    70e0:	11 83       	std	Z+1, r17	; 0x01
    70e2:	00 83       	st	Z, r16
								_delay_ms(100);
								linefollwer();
    70e4:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    70e8:	a5 c2       	rjmp	.+1354   	; 0x7634 <main+0x3960>
							}
							else
							{
								if(compass==5)
    70ea:	8b 81       	ldd	r24, Y+3	; 0x03
    70ec:	9c 81       	ldd	r25, Y+4	; 0x04
    70ee:	85 30       	cpi	r24, 0x05	; 5
    70f0:	91 05       	cpc	r25, r1
    70f2:	09 f0       	breq	.+2      	; 0x70f6 <main+0x3422>
    70f4:	e2 c0       	rjmp	.+452    	; 0x72ba <main+0x35e6>
								{		   
									coor[1]=coor[1]-1;
    70f6:	80 91 a8 04 	lds	r24, 0x04A8
    70fa:	90 91 a9 04 	lds	r25, 0x04A9
    70fe:	01 97       	sbiw	r24, 0x01	; 1
    7100:	90 93 a9 04 	sts	0x04A9, r25
    7104:	80 93 a8 04 	sts	0x04A8, r24
									compass=5;
    7108:	85 e0       	ldi	r24, 0x05	; 5
    710a:	90 e0       	ldi	r25, 0x00	; 0
    710c:	9c 83       	std	Y+4, r25	; 0x04
    710e:	8b 83       	std	Y+3, r24	; 0x03
    7110:	9e 01       	movw	r18, r28
    7112:	2d 55       	subi	r18, 0x5D	; 93
    7114:	3e 4f       	sbci	r19, 0xFE	; 254
    7116:	80 e0       	ldi	r24, 0x00	; 0
    7118:	90 e0       	ldi	r25, 0x00	; 0
    711a:	a8 ec       	ldi	r26, 0xC8	; 200
    711c:	b2 e4       	ldi	r27, 0x42	; 66
    711e:	f9 01       	movw	r30, r18
    7120:	80 83       	st	Z, r24
    7122:	91 83       	std	Z+1, r25	; 0x01
    7124:	a2 83       	std	Z+2, r26	; 0x02
    7126:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    7128:	8e 01       	movw	r16, r28
    712a:	09 55       	subi	r16, 0x59	; 89
    712c:	1e 4f       	sbci	r17, 0xFE	; 254
    712e:	ce 01       	movw	r24, r28
    7130:	8d 55       	subi	r24, 0x5D	; 93
    7132:	9e 4f       	sbci	r25, 0xFE	; 254
    7134:	fc 01       	movw	r30, r24
    7136:	60 81       	ld	r22, Z
    7138:	71 81       	ldd	r23, Z+1	; 0x01
    713a:	82 81       	ldd	r24, Z+2	; 0x02
    713c:	93 81       	ldd	r25, Z+3	; 0x03
    713e:	26 e6       	ldi	r18, 0x66	; 102
    7140:	36 e6       	ldi	r19, 0x66	; 102
    7142:	46 e6       	ldi	r20, 0x66	; 102
    7144:	55 e4       	ldi	r21, 0x45	; 69
    7146:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    714a:	dc 01       	movw	r26, r24
    714c:	cb 01       	movw	r24, r22
    714e:	f8 01       	movw	r30, r16
    7150:	80 83       	st	Z, r24
    7152:	91 83       	std	Z+1, r25	; 0x01
    7154:	a2 83       	std	Z+2, r26	; 0x02
    7156:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7158:	ce 01       	movw	r24, r28
    715a:	89 55       	subi	r24, 0x59	; 89
    715c:	9e 4f       	sbci	r25, 0xFE	; 254
    715e:	11 e0       	ldi	r17, 0x01	; 1
    7160:	fc 01       	movw	r30, r24
    7162:	60 81       	ld	r22, Z
    7164:	71 81       	ldd	r23, Z+1	; 0x01
    7166:	82 81       	ldd	r24, Z+2	; 0x02
    7168:	93 81       	ldd	r25, Z+3	; 0x03
    716a:	20 e0       	ldi	r18, 0x00	; 0
    716c:	30 e0       	ldi	r19, 0x00	; 0
    716e:	40 e8       	ldi	r20, 0x80	; 128
    7170:	5f e3       	ldi	r21, 0x3F	; 63
    7172:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7176:	88 23       	and	r24, r24
    7178:	0c f0       	brlt	.+2      	; 0x717c <main+0x34a8>
    717a:	10 e0       	ldi	r17, 0x00	; 0
    717c:	11 23       	and	r17, r17
    717e:	49 f0       	breq	.+18     	; 0x7192 <main+0x34be>
		__ticks = 1;
    7180:	ce 01       	movw	r24, r28
    7182:	85 55       	subi	r24, 0x55	; 85
    7184:	9e 4f       	sbci	r25, 0xFE	; 254
    7186:	21 e0       	ldi	r18, 0x01	; 1
    7188:	30 e0       	ldi	r19, 0x00	; 0
    718a:	fc 01       	movw	r30, r24
    718c:	31 83       	std	Z+1, r19	; 0x01
    718e:	20 83       	st	Z, r18
    7190:	74 c0       	rjmp	.+232    	; 0x727a <main+0x35a6>
	else if (__tmp > 65535)
    7192:	ce 01       	movw	r24, r28
    7194:	89 55       	subi	r24, 0x59	; 89
    7196:	9e 4f       	sbci	r25, 0xFE	; 254
    7198:	11 e0       	ldi	r17, 0x01	; 1
    719a:	fc 01       	movw	r30, r24
    719c:	60 81       	ld	r22, Z
    719e:	71 81       	ldd	r23, Z+1	; 0x01
    71a0:	82 81       	ldd	r24, Z+2	; 0x02
    71a2:	93 81       	ldd	r25, Z+3	; 0x03
    71a4:	20 e0       	ldi	r18, 0x00	; 0
    71a6:	3f ef       	ldi	r19, 0xFF	; 255
    71a8:	4f e7       	ldi	r20, 0x7F	; 127
    71aa:	57 e4       	ldi	r21, 0x47	; 71
    71ac:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    71b0:	18 16       	cp	r1, r24
    71b2:	0c f0       	brlt	.+2      	; 0x71b6 <main+0x34e2>
    71b4:	10 e0       	ldi	r17, 0x00	; 0
    71b6:	11 23       	and	r17, r17
    71b8:	09 f4       	brne	.+2      	; 0x71bc <main+0x34e8>
    71ba:	4d c0       	rjmp	.+154    	; 0x7256 <main+0x3582>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    71bc:	ce 01       	movw	r24, r28
    71be:	8d 55       	subi	r24, 0x5D	; 93
    71c0:	9e 4f       	sbci	r25, 0xFE	; 254
    71c2:	fc 01       	movw	r30, r24
    71c4:	60 81       	ld	r22, Z
    71c6:	71 81       	ldd	r23, Z+1	; 0x01
    71c8:	82 81       	ldd	r24, Z+2	; 0x02
    71ca:	93 81       	ldd	r25, Z+3	; 0x03
    71cc:	20 e0       	ldi	r18, 0x00	; 0
    71ce:	30 e0       	ldi	r19, 0x00	; 0
    71d0:	40 e2       	ldi	r20, 0x20	; 32
    71d2:	51 e4       	ldi	r21, 0x41	; 65
    71d4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    71d8:	dc 01       	movw	r26, r24
    71da:	cb 01       	movw	r24, r22
    71dc:	8e 01       	movw	r16, r28
    71de:	05 55       	subi	r16, 0x55	; 85
    71e0:	1e 4f       	sbci	r17, 0xFE	; 254
    71e2:	bc 01       	movw	r22, r24
    71e4:	cd 01       	movw	r24, r26
    71e6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    71ea:	dc 01       	movw	r26, r24
    71ec:	cb 01       	movw	r24, r22
    71ee:	f8 01       	movw	r30, r16
    71f0:	91 83       	std	Z+1, r25	; 0x01
    71f2:	80 83       	st	Z, r24
    71f4:	27 c0       	rjmp	.+78     	; 0x7244 <main+0x3570>
    71f6:	ce 01       	movw	r24, r28
    71f8:	83 55       	subi	r24, 0x53	; 83
    71fa:	9e 4f       	sbci	r25, 0xFE	; 254
    71fc:	20 e7       	ldi	r18, 0x70	; 112
    71fe:	31 e0       	ldi	r19, 0x01	; 1
    7200:	fc 01       	movw	r30, r24
    7202:	31 83       	std	Z+1, r19	; 0x01
    7204:	20 83       	st	Z, r18
    7206:	ce 01       	movw	r24, r28
    7208:	83 55       	subi	r24, 0x53	; 83
    720a:	9e 4f       	sbci	r25, 0xFE	; 254
    720c:	fc 01       	movw	r30, r24
    720e:	80 81       	ld	r24, Z
    7210:	91 81       	ldd	r25, Z+1	; 0x01
    7212:	8c 01       	movw	r16, r24
    7214:	c8 01       	movw	r24, r16
    7216:	01 97       	sbiw	r24, 0x01	; 1
    7218:	f1 f7       	brne	.-4      	; 0x7216 <main+0x3542>
    721a:	8c 01       	movw	r16, r24
    721c:	ce 01       	movw	r24, r28
    721e:	83 55       	subi	r24, 0x53	; 83
    7220:	9e 4f       	sbci	r25, 0xFE	; 254
    7222:	fc 01       	movw	r30, r24
    7224:	11 83       	std	Z+1, r17	; 0x01
    7226:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7228:	ce 01       	movw	r24, r28
    722a:	85 55       	subi	r24, 0x55	; 85
    722c:	9e 4f       	sbci	r25, 0xFE	; 254
    722e:	9e 01       	movw	r18, r28
    7230:	25 55       	subi	r18, 0x55	; 85
    7232:	3e 4f       	sbci	r19, 0xFE	; 254
    7234:	f9 01       	movw	r30, r18
    7236:	20 81       	ld	r18, Z
    7238:	31 81       	ldd	r19, Z+1	; 0x01
    723a:	21 50       	subi	r18, 0x01	; 1
    723c:	30 40       	sbci	r19, 0x00	; 0
    723e:	fc 01       	movw	r30, r24
    7240:	31 83       	std	Z+1, r19	; 0x01
    7242:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7244:	ce 01       	movw	r24, r28
    7246:	85 55       	subi	r24, 0x55	; 85
    7248:	9e 4f       	sbci	r25, 0xFE	; 254
    724a:	fc 01       	movw	r30, r24
    724c:	80 81       	ld	r24, Z
    724e:	91 81       	ldd	r25, Z+1	; 0x01
    7250:	00 97       	sbiw	r24, 0x00	; 0
    7252:	89 f6       	brne	.-94     	; 0x71f6 <main+0x3522>
    7254:	2f c0       	rjmp	.+94     	; 0x72b4 <main+0x35e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7256:	8e 01       	movw	r16, r28
    7258:	05 55       	subi	r16, 0x55	; 85
    725a:	1e 4f       	sbci	r17, 0xFE	; 254
    725c:	ce 01       	movw	r24, r28
    725e:	89 55       	subi	r24, 0x59	; 89
    7260:	9e 4f       	sbci	r25, 0xFE	; 254
    7262:	fc 01       	movw	r30, r24
    7264:	60 81       	ld	r22, Z
    7266:	71 81       	ldd	r23, Z+1	; 0x01
    7268:	82 81       	ldd	r24, Z+2	; 0x02
    726a:	93 81       	ldd	r25, Z+3	; 0x03
    726c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7270:	dc 01       	movw	r26, r24
    7272:	cb 01       	movw	r24, r22
    7274:	f8 01       	movw	r30, r16
    7276:	91 83       	std	Z+1, r25	; 0x01
    7278:	80 83       	st	Z, r24
    727a:	ce 01       	movw	r24, r28
    727c:	81 55       	subi	r24, 0x51	; 81
    727e:	9e 4f       	sbci	r25, 0xFE	; 254
    7280:	9e 01       	movw	r18, r28
    7282:	25 55       	subi	r18, 0x55	; 85
    7284:	3e 4f       	sbci	r19, 0xFE	; 254
    7286:	f9 01       	movw	r30, r18
    7288:	20 81       	ld	r18, Z
    728a:	31 81       	ldd	r19, Z+1	; 0x01
    728c:	fc 01       	movw	r30, r24
    728e:	31 83       	std	Z+1, r19	; 0x01
    7290:	20 83       	st	Z, r18
    7292:	ce 01       	movw	r24, r28
    7294:	81 55       	subi	r24, 0x51	; 81
    7296:	9e 4f       	sbci	r25, 0xFE	; 254
    7298:	fc 01       	movw	r30, r24
    729a:	80 81       	ld	r24, Z
    729c:	91 81       	ldd	r25, Z+1	; 0x01
    729e:	8c 01       	movw	r16, r24
    72a0:	c8 01       	movw	r24, r16
    72a2:	01 97       	sbiw	r24, 0x01	; 1
    72a4:	f1 f7       	brne	.-4      	; 0x72a2 <main+0x35ce>
    72a6:	8c 01       	movw	r16, r24
    72a8:	ce 01       	movw	r24, r28
    72aa:	81 55       	subi	r24, 0x51	; 81
    72ac:	9e 4f       	sbci	r25, 0xFE	; 254
    72ae:	fc 01       	movw	r30, r24
    72b0:	11 83       	std	Z+1, r17	; 0x01
    72b2:	00 83       	st	Z, r16
									_delay_ms(100);
									linefollwer();
    72b4:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
    72b8:	bd c1       	rjmp	.+890    	; 0x7634 <main+0x3960>
								}
								else
								{
									if(compass==4)
    72ba:	8b 81       	ldd	r24, Y+3	; 0x03
    72bc:	9c 81       	ldd	r25, Y+4	; 0x04
    72be:	84 30       	cpi	r24, 0x04	; 4
    72c0:	91 05       	cpc	r25, r1
    72c2:	09 f0       	breq	.+2      	; 0x72c6 <main+0x35f2>
    72c4:	b7 c1       	rjmp	.+878    	; 0x7634 <main+0x3960>
									{
										coor[1]=coor[1]-1;
    72c6:	80 91 a8 04 	lds	r24, 0x04A8
    72ca:	90 91 a9 04 	lds	r25, 0x04A9
    72ce:	01 97       	sbiw	r24, 0x01	; 1
    72d0:	90 93 a9 04 	sts	0x04A9, r25
    72d4:	80 93 a8 04 	sts	0x04A8, r24
										compass=5;
    72d8:	85 e0       	ldi	r24, 0x05	; 5
    72da:	90 e0       	ldi	r25, 0x00	; 0
    72dc:	9c 83       	std	Y+4, r25	; 0x04
    72de:	8b 83       	std	Y+3, r24	; 0x03
    72e0:	9e 01       	movw	r18, r28
    72e2:	2f 54       	subi	r18, 0x4F	; 79
    72e4:	3e 4f       	sbci	r19, 0xFE	; 254
    72e6:	80 e0       	ldi	r24, 0x00	; 0
    72e8:	90 e0       	ldi	r25, 0x00	; 0
    72ea:	aa ef       	ldi	r26, 0xFA	; 250
    72ec:	b3 e4       	ldi	r27, 0x43	; 67
    72ee:	f9 01       	movw	r30, r18
    72f0:	80 83       	st	Z, r24
    72f2:	91 83       	std	Z+1, r25	; 0x01
    72f4:	a2 83       	std	Z+2, r26	; 0x02
    72f6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    72f8:	8e 01       	movw	r16, r28
    72fa:	0b 54       	subi	r16, 0x4B	; 75
    72fc:	1e 4f       	sbci	r17, 0xFE	; 254
    72fe:	ce 01       	movw	r24, r28
    7300:	8f 54       	subi	r24, 0x4F	; 79
    7302:	9e 4f       	sbci	r25, 0xFE	; 254
    7304:	fc 01       	movw	r30, r24
    7306:	60 81       	ld	r22, Z
    7308:	71 81       	ldd	r23, Z+1	; 0x01
    730a:	82 81       	ldd	r24, Z+2	; 0x02
    730c:	93 81       	ldd	r25, Z+3	; 0x03
    730e:	26 e6       	ldi	r18, 0x66	; 102
    7310:	36 e6       	ldi	r19, 0x66	; 102
    7312:	46 e6       	ldi	r20, 0x66	; 102
    7314:	55 e4       	ldi	r21, 0x45	; 69
    7316:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    731a:	dc 01       	movw	r26, r24
    731c:	cb 01       	movw	r24, r22
    731e:	f8 01       	movw	r30, r16
    7320:	80 83       	st	Z, r24
    7322:	91 83       	std	Z+1, r25	; 0x01
    7324:	a2 83       	std	Z+2, r26	; 0x02
    7326:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7328:	ce 01       	movw	r24, r28
    732a:	8b 54       	subi	r24, 0x4B	; 75
    732c:	9e 4f       	sbci	r25, 0xFE	; 254
    732e:	11 e0       	ldi	r17, 0x01	; 1
    7330:	fc 01       	movw	r30, r24
    7332:	60 81       	ld	r22, Z
    7334:	71 81       	ldd	r23, Z+1	; 0x01
    7336:	82 81       	ldd	r24, Z+2	; 0x02
    7338:	93 81       	ldd	r25, Z+3	; 0x03
    733a:	20 e0       	ldi	r18, 0x00	; 0
    733c:	30 e0       	ldi	r19, 0x00	; 0
    733e:	40 e8       	ldi	r20, 0x80	; 128
    7340:	5f e3       	ldi	r21, 0x3F	; 63
    7342:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7346:	88 23       	and	r24, r24
    7348:	0c f0       	brlt	.+2      	; 0x734c <main+0x3678>
    734a:	10 e0       	ldi	r17, 0x00	; 0
    734c:	11 23       	and	r17, r17
    734e:	49 f0       	breq	.+18     	; 0x7362 <main+0x368e>
		__ticks = 1;
    7350:	ce 01       	movw	r24, r28
    7352:	87 54       	subi	r24, 0x47	; 71
    7354:	9e 4f       	sbci	r25, 0xFE	; 254
    7356:	21 e0       	ldi	r18, 0x01	; 1
    7358:	30 e0       	ldi	r19, 0x00	; 0
    735a:	fc 01       	movw	r30, r24
    735c:	31 83       	std	Z+1, r19	; 0x01
    735e:	20 83       	st	Z, r18
    7360:	74 c0       	rjmp	.+232    	; 0x744a <main+0x3776>
	else if (__tmp > 65535)
    7362:	ce 01       	movw	r24, r28
    7364:	8b 54       	subi	r24, 0x4B	; 75
    7366:	9e 4f       	sbci	r25, 0xFE	; 254
    7368:	11 e0       	ldi	r17, 0x01	; 1
    736a:	fc 01       	movw	r30, r24
    736c:	60 81       	ld	r22, Z
    736e:	71 81       	ldd	r23, Z+1	; 0x01
    7370:	82 81       	ldd	r24, Z+2	; 0x02
    7372:	93 81       	ldd	r25, Z+3	; 0x03
    7374:	20 e0       	ldi	r18, 0x00	; 0
    7376:	3f ef       	ldi	r19, 0xFF	; 255
    7378:	4f e7       	ldi	r20, 0x7F	; 127
    737a:	57 e4       	ldi	r21, 0x47	; 71
    737c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    7380:	18 16       	cp	r1, r24
    7382:	0c f0       	brlt	.+2      	; 0x7386 <main+0x36b2>
    7384:	10 e0       	ldi	r17, 0x00	; 0
    7386:	11 23       	and	r17, r17
    7388:	09 f4       	brne	.+2      	; 0x738c <main+0x36b8>
    738a:	4d c0       	rjmp	.+154    	; 0x7426 <main+0x3752>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    738c:	ce 01       	movw	r24, r28
    738e:	8f 54       	subi	r24, 0x4F	; 79
    7390:	9e 4f       	sbci	r25, 0xFE	; 254
    7392:	fc 01       	movw	r30, r24
    7394:	60 81       	ld	r22, Z
    7396:	71 81       	ldd	r23, Z+1	; 0x01
    7398:	82 81       	ldd	r24, Z+2	; 0x02
    739a:	93 81       	ldd	r25, Z+3	; 0x03
    739c:	20 e0       	ldi	r18, 0x00	; 0
    739e:	30 e0       	ldi	r19, 0x00	; 0
    73a0:	40 e2       	ldi	r20, 0x20	; 32
    73a2:	51 e4       	ldi	r21, 0x41	; 65
    73a4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    73a8:	dc 01       	movw	r26, r24
    73aa:	cb 01       	movw	r24, r22
    73ac:	8e 01       	movw	r16, r28
    73ae:	07 54       	subi	r16, 0x47	; 71
    73b0:	1e 4f       	sbci	r17, 0xFE	; 254
    73b2:	bc 01       	movw	r22, r24
    73b4:	cd 01       	movw	r24, r26
    73b6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    73ba:	dc 01       	movw	r26, r24
    73bc:	cb 01       	movw	r24, r22
    73be:	f8 01       	movw	r30, r16
    73c0:	91 83       	std	Z+1, r25	; 0x01
    73c2:	80 83       	st	Z, r24
    73c4:	27 c0       	rjmp	.+78     	; 0x7414 <main+0x3740>
    73c6:	ce 01       	movw	r24, r28
    73c8:	85 54       	subi	r24, 0x45	; 69
    73ca:	9e 4f       	sbci	r25, 0xFE	; 254
    73cc:	20 e7       	ldi	r18, 0x70	; 112
    73ce:	31 e0       	ldi	r19, 0x01	; 1
    73d0:	fc 01       	movw	r30, r24
    73d2:	31 83       	std	Z+1, r19	; 0x01
    73d4:	20 83       	st	Z, r18
    73d6:	ce 01       	movw	r24, r28
    73d8:	85 54       	subi	r24, 0x45	; 69
    73da:	9e 4f       	sbci	r25, 0xFE	; 254
    73dc:	fc 01       	movw	r30, r24
    73de:	80 81       	ld	r24, Z
    73e0:	91 81       	ldd	r25, Z+1	; 0x01
    73e2:	8c 01       	movw	r16, r24
    73e4:	c8 01       	movw	r24, r16
    73e6:	01 97       	sbiw	r24, 0x01	; 1
    73e8:	f1 f7       	brne	.-4      	; 0x73e6 <main+0x3712>
    73ea:	8c 01       	movw	r16, r24
    73ec:	ce 01       	movw	r24, r28
    73ee:	85 54       	subi	r24, 0x45	; 69
    73f0:	9e 4f       	sbci	r25, 0xFE	; 254
    73f2:	fc 01       	movw	r30, r24
    73f4:	11 83       	std	Z+1, r17	; 0x01
    73f6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    73f8:	ce 01       	movw	r24, r28
    73fa:	87 54       	subi	r24, 0x47	; 71
    73fc:	9e 4f       	sbci	r25, 0xFE	; 254
    73fe:	9e 01       	movw	r18, r28
    7400:	27 54       	subi	r18, 0x47	; 71
    7402:	3e 4f       	sbci	r19, 0xFE	; 254
    7404:	f9 01       	movw	r30, r18
    7406:	20 81       	ld	r18, Z
    7408:	31 81       	ldd	r19, Z+1	; 0x01
    740a:	21 50       	subi	r18, 0x01	; 1
    740c:	30 40       	sbci	r19, 0x00	; 0
    740e:	fc 01       	movw	r30, r24
    7410:	31 83       	std	Z+1, r19	; 0x01
    7412:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7414:	ce 01       	movw	r24, r28
    7416:	87 54       	subi	r24, 0x47	; 71
    7418:	9e 4f       	sbci	r25, 0xFE	; 254
    741a:	fc 01       	movw	r30, r24
    741c:	80 81       	ld	r24, Z
    741e:	91 81       	ldd	r25, Z+1	; 0x01
    7420:	00 97       	sbiw	r24, 0x00	; 0
    7422:	89 f6       	brne	.-94     	; 0x73c6 <main+0x36f2>
    7424:	2f c0       	rjmp	.+94     	; 0x7484 <main+0x37b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7426:	8e 01       	movw	r16, r28
    7428:	07 54       	subi	r16, 0x47	; 71
    742a:	1e 4f       	sbci	r17, 0xFE	; 254
    742c:	ce 01       	movw	r24, r28
    742e:	8b 54       	subi	r24, 0x4B	; 75
    7430:	9e 4f       	sbci	r25, 0xFE	; 254
    7432:	fc 01       	movw	r30, r24
    7434:	60 81       	ld	r22, Z
    7436:	71 81       	ldd	r23, Z+1	; 0x01
    7438:	82 81       	ldd	r24, Z+2	; 0x02
    743a:	93 81       	ldd	r25, Z+3	; 0x03
    743c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7440:	dc 01       	movw	r26, r24
    7442:	cb 01       	movw	r24, r22
    7444:	f8 01       	movw	r30, r16
    7446:	91 83       	std	Z+1, r25	; 0x01
    7448:	80 83       	st	Z, r24
    744a:	ce 01       	movw	r24, r28
    744c:	83 54       	subi	r24, 0x43	; 67
    744e:	9e 4f       	sbci	r25, 0xFE	; 254
    7450:	9e 01       	movw	r18, r28
    7452:	27 54       	subi	r18, 0x47	; 71
    7454:	3e 4f       	sbci	r19, 0xFE	; 254
    7456:	f9 01       	movw	r30, r18
    7458:	20 81       	ld	r18, Z
    745a:	31 81       	ldd	r19, Z+1	; 0x01
    745c:	fc 01       	movw	r30, r24
    745e:	31 83       	std	Z+1, r19	; 0x01
    7460:	20 83       	st	Z, r18
    7462:	ce 01       	movw	r24, r28
    7464:	83 54       	subi	r24, 0x43	; 67
    7466:	9e 4f       	sbci	r25, 0xFE	; 254
    7468:	fc 01       	movw	r30, r24
    746a:	80 81       	ld	r24, Z
    746c:	91 81       	ldd	r25, Z+1	; 0x01
    746e:	8c 01       	movw	r16, r24
    7470:	c8 01       	movw	r24, r16
    7472:	01 97       	sbiw	r24, 0x01	; 1
    7474:	f1 f7       	brne	.-4      	; 0x7472 <main+0x379e>
    7476:	8c 01       	movw	r16, r24
    7478:	ce 01       	movw	r24, r28
    747a:	83 54       	subi	r24, 0x43	; 67
    747c:	9e 4f       	sbci	r25, 0xFE	; 254
    747e:	fc 01       	movw	r30, r24
    7480:	11 83       	std	Z+1, r17	; 0x01
    7482:	00 83       	st	Z, r16
										_delay_ms(500);
										right_degrees(185);
    7484:	89 eb       	ldi	r24, 0xB9	; 185
    7486:	90 e0       	ldi	r25, 0x00	; 0
    7488:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    748c:	9e 01       	movw	r18, r28
    748e:	21 54       	subi	r18, 0x41	; 65
    7490:	3e 4f       	sbci	r19, 0xFE	; 254
    7492:	80 e0       	ldi	r24, 0x00	; 0
    7494:	90 e0       	ldi	r25, 0x00	; 0
    7496:	a8 ec       	ldi	r26, 0xC8	; 200
    7498:	b2 e4       	ldi	r27, 0x42	; 66
    749a:	f9 01       	movw	r30, r18
    749c:	80 83       	st	Z, r24
    749e:	91 83       	std	Z+1, r25	; 0x01
    74a0:	a2 83       	std	Z+2, r26	; 0x02
    74a2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    74a4:	8e 01       	movw	r16, r28
    74a6:	0d 53       	subi	r16, 0x3D	; 61
    74a8:	1e 4f       	sbci	r17, 0xFE	; 254
    74aa:	ce 01       	movw	r24, r28
    74ac:	81 54       	subi	r24, 0x41	; 65
    74ae:	9e 4f       	sbci	r25, 0xFE	; 254
    74b0:	fc 01       	movw	r30, r24
    74b2:	60 81       	ld	r22, Z
    74b4:	71 81       	ldd	r23, Z+1	; 0x01
    74b6:	82 81       	ldd	r24, Z+2	; 0x02
    74b8:	93 81       	ldd	r25, Z+3	; 0x03
    74ba:	26 e6       	ldi	r18, 0x66	; 102
    74bc:	36 e6       	ldi	r19, 0x66	; 102
    74be:	46 e6       	ldi	r20, 0x66	; 102
    74c0:	55 e4       	ldi	r21, 0x45	; 69
    74c2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    74c6:	dc 01       	movw	r26, r24
    74c8:	cb 01       	movw	r24, r22
    74ca:	f8 01       	movw	r30, r16
    74cc:	80 83       	st	Z, r24
    74ce:	91 83       	std	Z+1, r25	; 0x01
    74d0:	a2 83       	std	Z+2, r26	; 0x02
    74d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    74d4:	ce 01       	movw	r24, r28
    74d6:	8d 53       	subi	r24, 0x3D	; 61
    74d8:	9e 4f       	sbci	r25, 0xFE	; 254
    74da:	11 e0       	ldi	r17, 0x01	; 1
    74dc:	fc 01       	movw	r30, r24
    74de:	60 81       	ld	r22, Z
    74e0:	71 81       	ldd	r23, Z+1	; 0x01
    74e2:	82 81       	ldd	r24, Z+2	; 0x02
    74e4:	93 81       	ldd	r25, Z+3	; 0x03
    74e6:	20 e0       	ldi	r18, 0x00	; 0
    74e8:	30 e0       	ldi	r19, 0x00	; 0
    74ea:	40 e8       	ldi	r20, 0x80	; 128
    74ec:	5f e3       	ldi	r21, 0x3F	; 63
    74ee:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    74f2:	88 23       	and	r24, r24
    74f4:	0c f0       	brlt	.+2      	; 0x74f8 <main+0x3824>
    74f6:	10 e0       	ldi	r17, 0x00	; 0
    74f8:	11 23       	and	r17, r17
    74fa:	49 f0       	breq	.+18     	; 0x750e <main+0x383a>
		__ticks = 1;
    74fc:	ce 01       	movw	r24, r28
    74fe:	89 53       	subi	r24, 0x39	; 57
    7500:	9e 4f       	sbci	r25, 0xFE	; 254
    7502:	21 e0       	ldi	r18, 0x01	; 1
    7504:	30 e0       	ldi	r19, 0x00	; 0
    7506:	fc 01       	movw	r30, r24
    7508:	31 83       	std	Z+1, r19	; 0x01
    750a:	20 83       	st	Z, r18
    750c:	74 c0       	rjmp	.+232    	; 0x75f6 <main+0x3922>
	else if (__tmp > 65535)
    750e:	ce 01       	movw	r24, r28
    7510:	8d 53       	subi	r24, 0x3D	; 61
    7512:	9e 4f       	sbci	r25, 0xFE	; 254
    7514:	11 e0       	ldi	r17, 0x01	; 1
    7516:	fc 01       	movw	r30, r24
    7518:	60 81       	ld	r22, Z
    751a:	71 81       	ldd	r23, Z+1	; 0x01
    751c:	82 81       	ldd	r24, Z+2	; 0x02
    751e:	93 81       	ldd	r25, Z+3	; 0x03
    7520:	20 e0       	ldi	r18, 0x00	; 0
    7522:	3f ef       	ldi	r19, 0xFF	; 255
    7524:	4f e7       	ldi	r20, 0x7F	; 127
    7526:	57 e4       	ldi	r21, 0x47	; 71
    7528:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    752c:	18 16       	cp	r1, r24
    752e:	0c f0       	brlt	.+2      	; 0x7532 <main+0x385e>
    7530:	10 e0       	ldi	r17, 0x00	; 0
    7532:	11 23       	and	r17, r17
    7534:	09 f4       	brne	.+2      	; 0x7538 <main+0x3864>
    7536:	4d c0       	rjmp	.+154    	; 0x75d2 <main+0x38fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7538:	ce 01       	movw	r24, r28
    753a:	81 54       	subi	r24, 0x41	; 65
    753c:	9e 4f       	sbci	r25, 0xFE	; 254
    753e:	fc 01       	movw	r30, r24
    7540:	60 81       	ld	r22, Z
    7542:	71 81       	ldd	r23, Z+1	; 0x01
    7544:	82 81       	ldd	r24, Z+2	; 0x02
    7546:	93 81       	ldd	r25, Z+3	; 0x03
    7548:	20 e0       	ldi	r18, 0x00	; 0
    754a:	30 e0       	ldi	r19, 0x00	; 0
    754c:	40 e2       	ldi	r20, 0x20	; 32
    754e:	51 e4       	ldi	r21, 0x41	; 65
    7550:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7554:	dc 01       	movw	r26, r24
    7556:	cb 01       	movw	r24, r22
    7558:	8e 01       	movw	r16, r28
    755a:	09 53       	subi	r16, 0x39	; 57
    755c:	1e 4f       	sbci	r17, 0xFE	; 254
    755e:	bc 01       	movw	r22, r24
    7560:	cd 01       	movw	r24, r26
    7562:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7566:	dc 01       	movw	r26, r24
    7568:	cb 01       	movw	r24, r22
    756a:	f8 01       	movw	r30, r16
    756c:	91 83       	std	Z+1, r25	; 0x01
    756e:	80 83       	st	Z, r24
    7570:	27 c0       	rjmp	.+78     	; 0x75c0 <main+0x38ec>
    7572:	ce 01       	movw	r24, r28
    7574:	87 53       	subi	r24, 0x37	; 55
    7576:	9e 4f       	sbci	r25, 0xFE	; 254
    7578:	20 e7       	ldi	r18, 0x70	; 112
    757a:	31 e0       	ldi	r19, 0x01	; 1
    757c:	fc 01       	movw	r30, r24
    757e:	31 83       	std	Z+1, r19	; 0x01
    7580:	20 83       	st	Z, r18
    7582:	ce 01       	movw	r24, r28
    7584:	87 53       	subi	r24, 0x37	; 55
    7586:	9e 4f       	sbci	r25, 0xFE	; 254
    7588:	fc 01       	movw	r30, r24
    758a:	80 81       	ld	r24, Z
    758c:	91 81       	ldd	r25, Z+1	; 0x01
    758e:	8c 01       	movw	r16, r24
    7590:	c8 01       	movw	r24, r16
    7592:	01 97       	sbiw	r24, 0x01	; 1
    7594:	f1 f7       	brne	.-4      	; 0x7592 <main+0x38be>
    7596:	8c 01       	movw	r16, r24
    7598:	ce 01       	movw	r24, r28
    759a:	87 53       	subi	r24, 0x37	; 55
    759c:	9e 4f       	sbci	r25, 0xFE	; 254
    759e:	fc 01       	movw	r30, r24
    75a0:	11 83       	std	Z+1, r17	; 0x01
    75a2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    75a4:	ce 01       	movw	r24, r28
    75a6:	89 53       	subi	r24, 0x39	; 57
    75a8:	9e 4f       	sbci	r25, 0xFE	; 254
    75aa:	9e 01       	movw	r18, r28
    75ac:	29 53       	subi	r18, 0x39	; 57
    75ae:	3e 4f       	sbci	r19, 0xFE	; 254
    75b0:	f9 01       	movw	r30, r18
    75b2:	20 81       	ld	r18, Z
    75b4:	31 81       	ldd	r19, Z+1	; 0x01
    75b6:	21 50       	subi	r18, 0x01	; 1
    75b8:	30 40       	sbci	r19, 0x00	; 0
    75ba:	fc 01       	movw	r30, r24
    75bc:	31 83       	std	Z+1, r19	; 0x01
    75be:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    75c0:	ce 01       	movw	r24, r28
    75c2:	89 53       	subi	r24, 0x39	; 57
    75c4:	9e 4f       	sbci	r25, 0xFE	; 254
    75c6:	fc 01       	movw	r30, r24
    75c8:	80 81       	ld	r24, Z
    75ca:	91 81       	ldd	r25, Z+1	; 0x01
    75cc:	00 97       	sbiw	r24, 0x00	; 0
    75ce:	89 f6       	brne	.-94     	; 0x7572 <main+0x389e>
    75d0:	2f c0       	rjmp	.+94     	; 0x7630 <main+0x395c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    75d2:	8e 01       	movw	r16, r28
    75d4:	09 53       	subi	r16, 0x39	; 57
    75d6:	1e 4f       	sbci	r17, 0xFE	; 254
    75d8:	ce 01       	movw	r24, r28
    75da:	8d 53       	subi	r24, 0x3D	; 61
    75dc:	9e 4f       	sbci	r25, 0xFE	; 254
    75de:	fc 01       	movw	r30, r24
    75e0:	60 81       	ld	r22, Z
    75e2:	71 81       	ldd	r23, Z+1	; 0x01
    75e4:	82 81       	ldd	r24, Z+2	; 0x02
    75e6:	93 81       	ldd	r25, Z+3	; 0x03
    75e8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    75ec:	dc 01       	movw	r26, r24
    75ee:	cb 01       	movw	r24, r22
    75f0:	f8 01       	movw	r30, r16
    75f2:	91 83       	std	Z+1, r25	; 0x01
    75f4:	80 83       	st	Z, r24
    75f6:	ce 01       	movw	r24, r28
    75f8:	85 53       	subi	r24, 0x35	; 53
    75fa:	9e 4f       	sbci	r25, 0xFE	; 254
    75fc:	9e 01       	movw	r18, r28
    75fe:	29 53       	subi	r18, 0x39	; 57
    7600:	3e 4f       	sbci	r19, 0xFE	; 254
    7602:	f9 01       	movw	r30, r18
    7604:	20 81       	ld	r18, Z
    7606:	31 81       	ldd	r19, Z+1	; 0x01
    7608:	fc 01       	movw	r30, r24
    760a:	31 83       	std	Z+1, r19	; 0x01
    760c:	20 83       	st	Z, r18
    760e:	ce 01       	movw	r24, r28
    7610:	85 53       	subi	r24, 0x35	; 53
    7612:	9e 4f       	sbci	r25, 0xFE	; 254
    7614:	fc 01       	movw	r30, r24
    7616:	80 81       	ld	r24, Z
    7618:	91 81       	ldd	r25, Z+1	; 0x01
    761a:	8c 01       	movw	r16, r24
    761c:	c8 01       	movw	r24, r16
    761e:	01 97       	sbiw	r24, 0x01	; 1
    7620:	f1 f7       	brne	.-4      	; 0x761e <main+0x394a>
    7622:	8c 01       	movw	r16, r24
    7624:	ce 01       	movw	r24, r28
    7626:	85 53       	subi	r24, 0x35	; 53
    7628:	9e 4f       	sbci	r25, 0xFE	; 254
    762a:	fc 01       	movw	r30, r24
    762c:	11 83       	std	Z+1, r17	; 0x01
    762e:	00 83       	st	Z, r16
										_delay_ms(100);
										linefollwer();
    7630:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
				}
			}
		}							
			
	}		
		if(final[0]==coor[0] && final[1]==coor[1])
    7634:	ce 01       	movw	r24, r28
    7636:	8d 52       	subi	r24, 0x2D	; 45
    7638:	99 4f       	sbci	r25, 0xF9	; 249
    763a:	fc 01       	movw	r30, r24
    763c:	20 81       	ld	r18, Z
    763e:	31 81       	ldd	r19, Z+1	; 0x01
    7640:	80 91 a6 04 	lds	r24, 0x04A6
    7644:	90 91 a7 04 	lds	r25, 0x04A7
    7648:	28 17       	cp	r18, r24
    764a:	39 07       	cpc	r19, r25
    764c:	11 f0       	breq	.+4      	; 0x7652 <main+0x397e>
    764e:	0c 94 4c 22 	jmp	0x4498	; 0x4498 <main+0x7c4>
    7652:	ce 01       	movw	r24, r28
    7654:	8d 52       	subi	r24, 0x2D	; 45
    7656:	99 4f       	sbci	r25, 0xF9	; 249
    7658:	fc 01       	movw	r30, r24
    765a:	22 81       	ldd	r18, Z+2	; 0x02
    765c:	33 81       	ldd	r19, Z+3	; 0x03
    765e:	80 91 a8 04 	lds	r24, 0x04A8
    7662:	90 91 a9 04 	lds	r25, 0x04A9
    7666:	28 17       	cp	r18, r24
    7668:	39 07       	cpc	r19, r25
    766a:	11 f0       	breq	.+4      	; 0x7670 <main+0x399c>
    766c:	0c 94 4c 22 	jmp	0x4498	; 0x4498 <main+0x7c4>
		{
			if(coor[0]==0 && coor[1]==0 && flag4==1)
    7670:	80 91 a6 04 	lds	r24, 0x04A6
    7674:	90 91 a7 04 	lds	r25, 0x04A7
    7678:	00 97       	sbiw	r24, 0x00	; 0
    767a:	59 f4       	brne	.+22     	; 0x7692 <main+0x39be>
    767c:	80 91 a8 04 	lds	r24, 0x04A8
    7680:	90 91 a9 04 	lds	r25, 0x04A9
    7684:	00 97       	sbiw	r24, 0x00	; 0
    7686:	29 f4       	brne	.+10     	; 0x7692 <main+0x39be>
    7688:	89 89       	ldd	r24, Y+17	; 0x11
    768a:	9a 89       	ldd	r25, Y+18	; 0x12
    768c:	81 30       	cpi	r24, 0x01	; 1
    768e:	91 05       	cpc	r25, r1
    7690:	a9 f0       	breq	.+42     	; 0x76bc <main+0x39e8>
			{
				break;
			}
			else
			{
				if(flag1%2!=0)
    7692:	89 81       	ldd	r24, Y+1	; 0x01
    7694:	9a 81       	ldd	r25, Y+2	; 0x02
    7696:	81 70       	andi	r24, 0x01	; 1
    7698:	90 70       	andi	r25, 0x00	; 0
    769a:	88 23       	and	r24, r24
    769c:	11 f0       	breq	.+4      	; 0x76a2 <main+0x39ce>
    769e:	0c 94 55 43 	jmp	0x86aa	; 0x86aa <main+0x49d6>
					goto ppt;
				else
				{
					if(flag1%2==0)
    76a2:	89 81       	ldd	r24, Y+1	; 0x01
    76a4:	9a 81       	ldd	r25, Y+2	; 0x02
    76a6:	81 70       	andi	r24, 0x01	; 1
    76a8:	90 70       	andi	r25, 0x00	; 0
    76aa:	00 97       	sbiw	r24, 0x00	; 0
    76ac:	11 f4       	brne	.+4      	; 0x76b2 <main+0x39de>
    76ae:	0c 94 52 47 	jmp	0x8ea4	; 0x8ea4 <main+0x51d0>
					    goto ppt1;
					else
						break;
    76b2:	00 00       	nop
    76b4:	03 c0       	rjmp	.+6      	; 0x76bc <main+0x39e8>
				}
			}
		}
		
	}
	goto hotspot;
    76b6:	00 00       	nop
    76b8:	01 c0       	rjmp	.+2      	; 0x76bc <main+0x39e8>
					}
				}					
			}
		}
	}
	goto hotspot;
    76ba:	00 00       	nop
				}						
			}					
		}
	}
	
	hotspot: if(coor[0]==0 && coor[1]==0 && flag1%2!=0)    ////////////////////////////////////////////////////////////////////////////////////
    76bc:	80 91 a6 04 	lds	r24, 0x04A6
    76c0:	90 91 a7 04 	lds	r25, 0x04A7
    76c4:	00 97       	sbiw	r24, 0x00	; 0
    76c6:	09 f0       	breq	.+2      	; 0x76ca <main+0x39f6>
    76c8:	d6 c3       	rjmp	.+1964   	; 0x7e76 <main+0x41a2>
    76ca:	80 91 a8 04 	lds	r24, 0x04A8
    76ce:	90 91 a9 04 	lds	r25, 0x04A9
    76d2:	00 97       	sbiw	r24, 0x00	; 0
    76d4:	09 f0       	breq	.+2      	; 0x76d8 <main+0x3a04>
    76d6:	cf c3       	rjmp	.+1950   	; 0x7e76 <main+0x41a2>
    76d8:	89 81       	ldd	r24, Y+1	; 0x01
    76da:	9a 81       	ldd	r25, Y+2	; 0x02
    76dc:	81 70       	andi	r24, 0x01	; 1
    76de:	90 70       	andi	r25, 0x00	; 0
    76e0:	88 23       	and	r24, r24
    76e2:	09 f4       	brne	.+2      	; 0x76e6 <main+0x3a12>
    76e4:	c8 c3       	rjmp	.+1936   	; 0x7e76 <main+0x41a2>
	{
		if(compass==6)
    76e6:	8b 81       	ldd	r24, Y+3	; 0x03
    76e8:	9c 81       	ldd	r25, Y+4	; 0x04
    76ea:	86 30       	cpi	r24, 0x06	; 6
    76ec:	91 05       	cpc	r25, r1
    76ee:	09 f0       	breq	.+2      	; 0x76f2 <main+0x3a1e>
    76f0:	e9 c0       	rjmp	.+466    	; 0x78c4 <main+0x3bf0>
		{
			right_degrees(85);                                
    76f2:	85 e5       	ldi	r24, 0x55	; 85
    76f4:	90 e0       	ldi	r25, 0x00	; 0
    76f6:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    76fa:	9e 01       	movw	r18, r28
    76fc:	23 53       	subi	r18, 0x33	; 51
    76fe:	3e 4f       	sbci	r19, 0xFE	; 254
    7700:	80 e0       	ldi	r24, 0x00	; 0
    7702:	90 e0       	ldi	r25, 0x00	; 0
    7704:	a8 ec       	ldi	r26, 0xC8	; 200
    7706:	b2 e4       	ldi	r27, 0x42	; 66
    7708:	f9 01       	movw	r30, r18
    770a:	80 83       	st	Z, r24
    770c:	91 83       	std	Z+1, r25	; 0x01
    770e:	a2 83       	std	Z+2, r26	; 0x02
    7710:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    7712:	8e 01       	movw	r16, r28
    7714:	0f 52       	subi	r16, 0x2F	; 47
    7716:	1e 4f       	sbci	r17, 0xFE	; 254
    7718:	ce 01       	movw	r24, r28
    771a:	83 53       	subi	r24, 0x33	; 51
    771c:	9e 4f       	sbci	r25, 0xFE	; 254
    771e:	fc 01       	movw	r30, r24
    7720:	60 81       	ld	r22, Z
    7722:	71 81       	ldd	r23, Z+1	; 0x01
    7724:	82 81       	ldd	r24, Z+2	; 0x02
    7726:	93 81       	ldd	r25, Z+3	; 0x03
    7728:	26 e6       	ldi	r18, 0x66	; 102
    772a:	36 e6       	ldi	r19, 0x66	; 102
    772c:	46 e6       	ldi	r20, 0x66	; 102
    772e:	55 e4       	ldi	r21, 0x45	; 69
    7730:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7734:	dc 01       	movw	r26, r24
    7736:	cb 01       	movw	r24, r22
    7738:	f8 01       	movw	r30, r16
    773a:	80 83       	st	Z, r24
    773c:	91 83       	std	Z+1, r25	; 0x01
    773e:	a2 83       	std	Z+2, r26	; 0x02
    7740:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7742:	ce 01       	movw	r24, r28
    7744:	8f 52       	subi	r24, 0x2F	; 47
    7746:	9e 4f       	sbci	r25, 0xFE	; 254
    7748:	11 e0       	ldi	r17, 0x01	; 1
    774a:	fc 01       	movw	r30, r24
    774c:	60 81       	ld	r22, Z
    774e:	71 81       	ldd	r23, Z+1	; 0x01
    7750:	82 81       	ldd	r24, Z+2	; 0x02
    7752:	93 81       	ldd	r25, Z+3	; 0x03
    7754:	20 e0       	ldi	r18, 0x00	; 0
    7756:	30 e0       	ldi	r19, 0x00	; 0
    7758:	40 e8       	ldi	r20, 0x80	; 128
    775a:	5f e3       	ldi	r21, 0x3F	; 63
    775c:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7760:	88 23       	and	r24, r24
    7762:	0c f0       	brlt	.+2      	; 0x7766 <main+0x3a92>
    7764:	10 e0       	ldi	r17, 0x00	; 0
    7766:	11 23       	and	r17, r17
    7768:	49 f0       	breq	.+18     	; 0x777c <main+0x3aa8>
		__ticks = 1;
    776a:	ce 01       	movw	r24, r28
    776c:	8b 52       	subi	r24, 0x2B	; 43
    776e:	9e 4f       	sbci	r25, 0xFE	; 254
    7770:	21 e0       	ldi	r18, 0x01	; 1
    7772:	30 e0       	ldi	r19, 0x00	; 0
    7774:	fc 01       	movw	r30, r24
    7776:	31 83       	std	Z+1, r19	; 0x01
    7778:	20 83       	st	Z, r18
    777a:	74 c0       	rjmp	.+232    	; 0x7864 <main+0x3b90>
	else if (__tmp > 65535)
    777c:	ce 01       	movw	r24, r28
    777e:	8f 52       	subi	r24, 0x2F	; 47
    7780:	9e 4f       	sbci	r25, 0xFE	; 254
    7782:	11 e0       	ldi	r17, 0x01	; 1
    7784:	fc 01       	movw	r30, r24
    7786:	60 81       	ld	r22, Z
    7788:	71 81       	ldd	r23, Z+1	; 0x01
    778a:	82 81       	ldd	r24, Z+2	; 0x02
    778c:	93 81       	ldd	r25, Z+3	; 0x03
    778e:	20 e0       	ldi	r18, 0x00	; 0
    7790:	3f ef       	ldi	r19, 0xFF	; 255
    7792:	4f e7       	ldi	r20, 0x7F	; 127
    7794:	57 e4       	ldi	r21, 0x47	; 71
    7796:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    779a:	18 16       	cp	r1, r24
    779c:	0c f0       	brlt	.+2      	; 0x77a0 <main+0x3acc>
    779e:	10 e0       	ldi	r17, 0x00	; 0
    77a0:	11 23       	and	r17, r17
    77a2:	09 f4       	brne	.+2      	; 0x77a6 <main+0x3ad2>
    77a4:	4d c0       	rjmp	.+154    	; 0x7840 <main+0x3b6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    77a6:	ce 01       	movw	r24, r28
    77a8:	83 53       	subi	r24, 0x33	; 51
    77aa:	9e 4f       	sbci	r25, 0xFE	; 254
    77ac:	fc 01       	movw	r30, r24
    77ae:	60 81       	ld	r22, Z
    77b0:	71 81       	ldd	r23, Z+1	; 0x01
    77b2:	82 81       	ldd	r24, Z+2	; 0x02
    77b4:	93 81       	ldd	r25, Z+3	; 0x03
    77b6:	20 e0       	ldi	r18, 0x00	; 0
    77b8:	30 e0       	ldi	r19, 0x00	; 0
    77ba:	40 e2       	ldi	r20, 0x20	; 32
    77bc:	51 e4       	ldi	r21, 0x41	; 65
    77be:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    77c2:	dc 01       	movw	r26, r24
    77c4:	cb 01       	movw	r24, r22
    77c6:	8e 01       	movw	r16, r28
    77c8:	0b 52       	subi	r16, 0x2B	; 43
    77ca:	1e 4f       	sbci	r17, 0xFE	; 254
    77cc:	bc 01       	movw	r22, r24
    77ce:	cd 01       	movw	r24, r26
    77d0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    77d4:	dc 01       	movw	r26, r24
    77d6:	cb 01       	movw	r24, r22
    77d8:	f8 01       	movw	r30, r16
    77da:	91 83       	std	Z+1, r25	; 0x01
    77dc:	80 83       	st	Z, r24
    77de:	27 c0       	rjmp	.+78     	; 0x782e <main+0x3b5a>
    77e0:	ce 01       	movw	r24, r28
    77e2:	89 52       	subi	r24, 0x29	; 41
    77e4:	9e 4f       	sbci	r25, 0xFE	; 254
    77e6:	20 e7       	ldi	r18, 0x70	; 112
    77e8:	31 e0       	ldi	r19, 0x01	; 1
    77ea:	fc 01       	movw	r30, r24
    77ec:	31 83       	std	Z+1, r19	; 0x01
    77ee:	20 83       	st	Z, r18
    77f0:	ce 01       	movw	r24, r28
    77f2:	89 52       	subi	r24, 0x29	; 41
    77f4:	9e 4f       	sbci	r25, 0xFE	; 254
    77f6:	fc 01       	movw	r30, r24
    77f8:	80 81       	ld	r24, Z
    77fa:	91 81       	ldd	r25, Z+1	; 0x01
    77fc:	8c 01       	movw	r16, r24
    77fe:	c8 01       	movw	r24, r16
    7800:	01 97       	sbiw	r24, 0x01	; 1
    7802:	f1 f7       	brne	.-4      	; 0x7800 <main+0x3b2c>
    7804:	8c 01       	movw	r16, r24
    7806:	ce 01       	movw	r24, r28
    7808:	89 52       	subi	r24, 0x29	; 41
    780a:	9e 4f       	sbci	r25, 0xFE	; 254
    780c:	fc 01       	movw	r30, r24
    780e:	11 83       	std	Z+1, r17	; 0x01
    7810:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7812:	ce 01       	movw	r24, r28
    7814:	8b 52       	subi	r24, 0x2B	; 43
    7816:	9e 4f       	sbci	r25, 0xFE	; 254
    7818:	9e 01       	movw	r18, r28
    781a:	2b 52       	subi	r18, 0x2B	; 43
    781c:	3e 4f       	sbci	r19, 0xFE	; 254
    781e:	f9 01       	movw	r30, r18
    7820:	20 81       	ld	r18, Z
    7822:	31 81       	ldd	r19, Z+1	; 0x01
    7824:	21 50       	subi	r18, 0x01	; 1
    7826:	30 40       	sbci	r19, 0x00	; 0
    7828:	fc 01       	movw	r30, r24
    782a:	31 83       	std	Z+1, r19	; 0x01
    782c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    782e:	ce 01       	movw	r24, r28
    7830:	8b 52       	subi	r24, 0x2B	; 43
    7832:	9e 4f       	sbci	r25, 0xFE	; 254
    7834:	fc 01       	movw	r30, r24
    7836:	80 81       	ld	r24, Z
    7838:	91 81       	ldd	r25, Z+1	; 0x01
    783a:	00 97       	sbiw	r24, 0x00	; 0
    783c:	89 f6       	brne	.-94     	; 0x77e0 <main+0x3b0c>
    783e:	2f c0       	rjmp	.+94     	; 0x789e <main+0x3bca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7840:	8e 01       	movw	r16, r28
    7842:	0b 52       	subi	r16, 0x2B	; 43
    7844:	1e 4f       	sbci	r17, 0xFE	; 254
    7846:	ce 01       	movw	r24, r28
    7848:	8f 52       	subi	r24, 0x2F	; 47
    784a:	9e 4f       	sbci	r25, 0xFE	; 254
    784c:	fc 01       	movw	r30, r24
    784e:	60 81       	ld	r22, Z
    7850:	71 81       	ldd	r23, Z+1	; 0x01
    7852:	82 81       	ldd	r24, Z+2	; 0x02
    7854:	93 81       	ldd	r25, Z+3	; 0x03
    7856:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    785a:	dc 01       	movw	r26, r24
    785c:	cb 01       	movw	r24, r22
    785e:	f8 01       	movw	r30, r16
    7860:	91 83       	std	Z+1, r25	; 0x01
    7862:	80 83       	st	Z, r24
    7864:	ce 01       	movw	r24, r28
    7866:	87 52       	subi	r24, 0x27	; 39
    7868:	9e 4f       	sbci	r25, 0xFE	; 254
    786a:	9e 01       	movw	r18, r28
    786c:	2b 52       	subi	r18, 0x2B	; 43
    786e:	3e 4f       	sbci	r19, 0xFE	; 254
    7870:	f9 01       	movw	r30, r18
    7872:	20 81       	ld	r18, Z
    7874:	31 81       	ldd	r19, Z+1	; 0x01
    7876:	fc 01       	movw	r30, r24
    7878:	31 83       	std	Z+1, r19	; 0x01
    787a:	20 83       	st	Z, r18
    787c:	ce 01       	movw	r24, r28
    787e:	87 52       	subi	r24, 0x27	; 39
    7880:	9e 4f       	sbci	r25, 0xFE	; 254
    7882:	fc 01       	movw	r30, r24
    7884:	80 81       	ld	r24, Z
    7886:	91 81       	ldd	r25, Z+1	; 0x01
    7888:	8c 01       	movw	r16, r24
    788a:	c8 01       	movw	r24, r16
    788c:	01 97       	sbiw	r24, 0x01	; 1
    788e:	f1 f7       	brne	.-4      	; 0x788c <main+0x3bb8>
    7890:	8c 01       	movw	r16, r24
    7892:	ce 01       	movw	r24, r28
    7894:	87 52       	subi	r24, 0x27	; 39
    7896:	9e 4f       	sbci	r25, 0xFE	; 254
    7898:	fc 01       	movw	r30, r24
    789a:	11 83       	std	Z+1, r17	; 0x01
    789c:	00 83       	st	Z, r16
			_delay_ms(100);
			coor[0]=0;
    789e:	10 92 a7 04 	sts	0x04A7, r1
    78a2:	10 92 a6 04 	sts	0x04A6, r1
			coor[1]=0;
    78a6:	10 92 a9 04 	sts	0x04A9, r1
    78aa:	10 92 a8 04 	sts	0x04A8, r1
			forward_mm(150);
    78ae:	86 e9       	ldi	r24, 0x96	; 150
    78b0:	90 e0       	ldi	r25, 0x00	; 0
    78b2:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
			linefollwer();
    78b6:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
			compass=4;
    78ba:	84 e0       	ldi	r24, 0x04	; 4
    78bc:	90 e0       	ldi	r25, 0x00	; 0
    78be:	9c 83       	std	Y+4, r25	; 0x04
    78c0:	8b 83       	std	Y+3, r24	; 0x03
    78c2:	c0 c2       	rjmp	.+1408   	; 0x7e44 <main+0x4170>
		}
		else
		{
			if(compass==7)
    78c4:	8b 81       	ldd	r24, Y+3	; 0x03
    78c6:	9c 81       	ldd	r25, Y+4	; 0x04
    78c8:	87 30       	cpi	r24, 0x07	; 7
    78ca:	91 05       	cpc	r25, r1
    78cc:	09 f0       	breq	.+2      	; 0x78d0 <main+0x3bfc>
    78ce:	e9 c0       	rjmp	.+466    	; 0x7aa2 <main+0x3dce>
			{
				left_degrees(85);
    78d0:	85 e5       	ldi	r24, 0x55	; 85
    78d2:	90 e0       	ldi	r25, 0x00	; 0
    78d4:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    78d8:	9e 01       	movw	r18, r28
    78da:	25 52       	subi	r18, 0x25	; 37
    78dc:	3e 4f       	sbci	r19, 0xFE	; 254
    78de:	80 e0       	ldi	r24, 0x00	; 0
    78e0:	90 e0       	ldi	r25, 0x00	; 0
    78e2:	a8 ec       	ldi	r26, 0xC8	; 200
    78e4:	b2 e4       	ldi	r27, 0x42	; 66
    78e6:	f9 01       	movw	r30, r18
    78e8:	80 83       	st	Z, r24
    78ea:	91 83       	std	Z+1, r25	; 0x01
    78ec:	a2 83       	std	Z+2, r26	; 0x02
    78ee:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    78f0:	8e 01       	movw	r16, r28
    78f2:	01 52       	subi	r16, 0x21	; 33
    78f4:	1e 4f       	sbci	r17, 0xFE	; 254
    78f6:	ce 01       	movw	r24, r28
    78f8:	85 52       	subi	r24, 0x25	; 37
    78fa:	9e 4f       	sbci	r25, 0xFE	; 254
    78fc:	fc 01       	movw	r30, r24
    78fe:	60 81       	ld	r22, Z
    7900:	71 81       	ldd	r23, Z+1	; 0x01
    7902:	82 81       	ldd	r24, Z+2	; 0x02
    7904:	93 81       	ldd	r25, Z+3	; 0x03
    7906:	26 e6       	ldi	r18, 0x66	; 102
    7908:	36 e6       	ldi	r19, 0x66	; 102
    790a:	46 e6       	ldi	r20, 0x66	; 102
    790c:	55 e4       	ldi	r21, 0x45	; 69
    790e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7912:	dc 01       	movw	r26, r24
    7914:	cb 01       	movw	r24, r22
    7916:	f8 01       	movw	r30, r16
    7918:	80 83       	st	Z, r24
    791a:	91 83       	std	Z+1, r25	; 0x01
    791c:	a2 83       	std	Z+2, r26	; 0x02
    791e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7920:	ce 01       	movw	r24, r28
    7922:	81 52       	subi	r24, 0x21	; 33
    7924:	9e 4f       	sbci	r25, 0xFE	; 254
    7926:	11 e0       	ldi	r17, 0x01	; 1
    7928:	fc 01       	movw	r30, r24
    792a:	60 81       	ld	r22, Z
    792c:	71 81       	ldd	r23, Z+1	; 0x01
    792e:	82 81       	ldd	r24, Z+2	; 0x02
    7930:	93 81       	ldd	r25, Z+3	; 0x03
    7932:	20 e0       	ldi	r18, 0x00	; 0
    7934:	30 e0       	ldi	r19, 0x00	; 0
    7936:	40 e8       	ldi	r20, 0x80	; 128
    7938:	5f e3       	ldi	r21, 0x3F	; 63
    793a:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    793e:	88 23       	and	r24, r24
    7940:	0c f0       	brlt	.+2      	; 0x7944 <main+0x3c70>
    7942:	10 e0       	ldi	r17, 0x00	; 0
    7944:	11 23       	and	r17, r17
    7946:	49 f0       	breq	.+18     	; 0x795a <main+0x3c86>
		__ticks = 1;
    7948:	ce 01       	movw	r24, r28
    794a:	8d 51       	subi	r24, 0x1D	; 29
    794c:	9e 4f       	sbci	r25, 0xFE	; 254
    794e:	21 e0       	ldi	r18, 0x01	; 1
    7950:	30 e0       	ldi	r19, 0x00	; 0
    7952:	fc 01       	movw	r30, r24
    7954:	31 83       	std	Z+1, r19	; 0x01
    7956:	20 83       	st	Z, r18
    7958:	74 c0       	rjmp	.+232    	; 0x7a42 <main+0x3d6e>
	else if (__tmp > 65535)
    795a:	ce 01       	movw	r24, r28
    795c:	81 52       	subi	r24, 0x21	; 33
    795e:	9e 4f       	sbci	r25, 0xFE	; 254
    7960:	11 e0       	ldi	r17, 0x01	; 1
    7962:	fc 01       	movw	r30, r24
    7964:	60 81       	ld	r22, Z
    7966:	71 81       	ldd	r23, Z+1	; 0x01
    7968:	82 81       	ldd	r24, Z+2	; 0x02
    796a:	93 81       	ldd	r25, Z+3	; 0x03
    796c:	20 e0       	ldi	r18, 0x00	; 0
    796e:	3f ef       	ldi	r19, 0xFF	; 255
    7970:	4f e7       	ldi	r20, 0x7F	; 127
    7972:	57 e4       	ldi	r21, 0x47	; 71
    7974:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    7978:	18 16       	cp	r1, r24
    797a:	0c f0       	brlt	.+2      	; 0x797e <main+0x3caa>
    797c:	10 e0       	ldi	r17, 0x00	; 0
    797e:	11 23       	and	r17, r17
    7980:	09 f4       	brne	.+2      	; 0x7984 <main+0x3cb0>
    7982:	4d c0       	rjmp	.+154    	; 0x7a1e <main+0x3d4a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7984:	ce 01       	movw	r24, r28
    7986:	85 52       	subi	r24, 0x25	; 37
    7988:	9e 4f       	sbci	r25, 0xFE	; 254
    798a:	fc 01       	movw	r30, r24
    798c:	60 81       	ld	r22, Z
    798e:	71 81       	ldd	r23, Z+1	; 0x01
    7990:	82 81       	ldd	r24, Z+2	; 0x02
    7992:	93 81       	ldd	r25, Z+3	; 0x03
    7994:	20 e0       	ldi	r18, 0x00	; 0
    7996:	30 e0       	ldi	r19, 0x00	; 0
    7998:	40 e2       	ldi	r20, 0x20	; 32
    799a:	51 e4       	ldi	r21, 0x41	; 65
    799c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    79a0:	dc 01       	movw	r26, r24
    79a2:	cb 01       	movw	r24, r22
    79a4:	8e 01       	movw	r16, r28
    79a6:	0d 51       	subi	r16, 0x1D	; 29
    79a8:	1e 4f       	sbci	r17, 0xFE	; 254
    79aa:	bc 01       	movw	r22, r24
    79ac:	cd 01       	movw	r24, r26
    79ae:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    79b2:	dc 01       	movw	r26, r24
    79b4:	cb 01       	movw	r24, r22
    79b6:	f8 01       	movw	r30, r16
    79b8:	91 83       	std	Z+1, r25	; 0x01
    79ba:	80 83       	st	Z, r24
    79bc:	27 c0       	rjmp	.+78     	; 0x7a0c <main+0x3d38>
    79be:	ce 01       	movw	r24, r28
    79c0:	8b 51       	subi	r24, 0x1B	; 27
    79c2:	9e 4f       	sbci	r25, 0xFE	; 254
    79c4:	20 e7       	ldi	r18, 0x70	; 112
    79c6:	31 e0       	ldi	r19, 0x01	; 1
    79c8:	fc 01       	movw	r30, r24
    79ca:	31 83       	std	Z+1, r19	; 0x01
    79cc:	20 83       	st	Z, r18
    79ce:	ce 01       	movw	r24, r28
    79d0:	8b 51       	subi	r24, 0x1B	; 27
    79d2:	9e 4f       	sbci	r25, 0xFE	; 254
    79d4:	fc 01       	movw	r30, r24
    79d6:	80 81       	ld	r24, Z
    79d8:	91 81       	ldd	r25, Z+1	; 0x01
    79da:	8c 01       	movw	r16, r24
    79dc:	c8 01       	movw	r24, r16
    79de:	01 97       	sbiw	r24, 0x01	; 1
    79e0:	f1 f7       	brne	.-4      	; 0x79de <main+0x3d0a>
    79e2:	8c 01       	movw	r16, r24
    79e4:	ce 01       	movw	r24, r28
    79e6:	8b 51       	subi	r24, 0x1B	; 27
    79e8:	9e 4f       	sbci	r25, 0xFE	; 254
    79ea:	fc 01       	movw	r30, r24
    79ec:	11 83       	std	Z+1, r17	; 0x01
    79ee:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    79f0:	ce 01       	movw	r24, r28
    79f2:	8d 51       	subi	r24, 0x1D	; 29
    79f4:	9e 4f       	sbci	r25, 0xFE	; 254
    79f6:	9e 01       	movw	r18, r28
    79f8:	2d 51       	subi	r18, 0x1D	; 29
    79fa:	3e 4f       	sbci	r19, 0xFE	; 254
    79fc:	f9 01       	movw	r30, r18
    79fe:	20 81       	ld	r18, Z
    7a00:	31 81       	ldd	r19, Z+1	; 0x01
    7a02:	21 50       	subi	r18, 0x01	; 1
    7a04:	30 40       	sbci	r19, 0x00	; 0
    7a06:	fc 01       	movw	r30, r24
    7a08:	31 83       	std	Z+1, r19	; 0x01
    7a0a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7a0c:	ce 01       	movw	r24, r28
    7a0e:	8d 51       	subi	r24, 0x1D	; 29
    7a10:	9e 4f       	sbci	r25, 0xFE	; 254
    7a12:	fc 01       	movw	r30, r24
    7a14:	80 81       	ld	r24, Z
    7a16:	91 81       	ldd	r25, Z+1	; 0x01
    7a18:	00 97       	sbiw	r24, 0x00	; 0
    7a1a:	89 f6       	brne	.-94     	; 0x79be <main+0x3cea>
    7a1c:	2f c0       	rjmp	.+94     	; 0x7a7c <main+0x3da8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7a1e:	8e 01       	movw	r16, r28
    7a20:	0d 51       	subi	r16, 0x1D	; 29
    7a22:	1e 4f       	sbci	r17, 0xFE	; 254
    7a24:	ce 01       	movw	r24, r28
    7a26:	81 52       	subi	r24, 0x21	; 33
    7a28:	9e 4f       	sbci	r25, 0xFE	; 254
    7a2a:	fc 01       	movw	r30, r24
    7a2c:	60 81       	ld	r22, Z
    7a2e:	71 81       	ldd	r23, Z+1	; 0x01
    7a30:	82 81       	ldd	r24, Z+2	; 0x02
    7a32:	93 81       	ldd	r25, Z+3	; 0x03
    7a34:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7a38:	dc 01       	movw	r26, r24
    7a3a:	cb 01       	movw	r24, r22
    7a3c:	f8 01       	movw	r30, r16
    7a3e:	91 83       	std	Z+1, r25	; 0x01
    7a40:	80 83       	st	Z, r24
    7a42:	ce 01       	movw	r24, r28
    7a44:	89 51       	subi	r24, 0x19	; 25
    7a46:	9e 4f       	sbci	r25, 0xFE	; 254
    7a48:	9e 01       	movw	r18, r28
    7a4a:	2d 51       	subi	r18, 0x1D	; 29
    7a4c:	3e 4f       	sbci	r19, 0xFE	; 254
    7a4e:	f9 01       	movw	r30, r18
    7a50:	20 81       	ld	r18, Z
    7a52:	31 81       	ldd	r19, Z+1	; 0x01
    7a54:	fc 01       	movw	r30, r24
    7a56:	31 83       	std	Z+1, r19	; 0x01
    7a58:	20 83       	st	Z, r18
    7a5a:	ce 01       	movw	r24, r28
    7a5c:	89 51       	subi	r24, 0x19	; 25
    7a5e:	9e 4f       	sbci	r25, 0xFE	; 254
    7a60:	fc 01       	movw	r30, r24
    7a62:	80 81       	ld	r24, Z
    7a64:	91 81       	ldd	r25, Z+1	; 0x01
    7a66:	8c 01       	movw	r16, r24
    7a68:	c8 01       	movw	r24, r16
    7a6a:	01 97       	sbiw	r24, 0x01	; 1
    7a6c:	f1 f7       	brne	.-4      	; 0x7a6a <main+0x3d96>
    7a6e:	8c 01       	movw	r16, r24
    7a70:	ce 01       	movw	r24, r28
    7a72:	89 51       	subi	r24, 0x19	; 25
    7a74:	9e 4f       	sbci	r25, 0xFE	; 254
    7a76:	fc 01       	movw	r30, r24
    7a78:	11 83       	std	Z+1, r17	; 0x01
    7a7a:	00 83       	st	Z, r16
				_delay_ms(100);
				coor[0]=0;
    7a7c:	10 92 a7 04 	sts	0x04A7, r1
    7a80:	10 92 a6 04 	sts	0x04A6, r1
				coor[1]=0;
    7a84:	10 92 a9 04 	sts	0x04A9, r1
    7a88:	10 92 a8 04 	sts	0x04A8, r1
				forward_mm(150);
    7a8c:	86 e9       	ldi	r24, 0x96	; 150
    7a8e:	90 e0       	ldi	r25, 0x00	; 0
    7a90:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
				linefollwer();
    7a94:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
				compass=4;
    7a98:	84 e0       	ldi	r24, 0x04	; 4
    7a9a:	90 e0       	ldi	r25, 0x00	; 0
    7a9c:	9c 83       	std	Y+4, r25	; 0x04
    7a9e:	8b 83       	std	Y+3, r24	; 0x03
    7aa0:	d1 c1       	rjmp	.+930    	; 0x7e44 <main+0x4170>
				
			}
			else
			{
				if(compass==5)
    7aa2:	8b 81       	ldd	r24, Y+3	; 0x03
    7aa4:	9c 81       	ldd	r25, Y+4	; 0x04
    7aa6:	85 30       	cpi	r24, 0x05	; 5
    7aa8:	91 05       	cpc	r25, r1
    7aaa:	09 f0       	breq	.+2      	; 0x7aae <main+0x3dda>
    7aac:	e1 c0       	rjmp	.+450    	; 0x7c70 <main+0x3f9c>
    7aae:	9e 01       	movw	r18, r28
    7ab0:	27 51       	subi	r18, 0x17	; 23
    7ab2:	3e 4f       	sbci	r19, 0xFE	; 254
    7ab4:	80 e0       	ldi	r24, 0x00	; 0
    7ab6:	90 e0       	ldi	r25, 0x00	; 0
    7ab8:	a8 ec       	ldi	r26, 0xC8	; 200
    7aba:	b2 e4       	ldi	r27, 0x42	; 66
    7abc:	f9 01       	movw	r30, r18
    7abe:	80 83       	st	Z, r24
    7ac0:	91 83       	std	Z+1, r25	; 0x01
    7ac2:	a2 83       	std	Z+2, r26	; 0x02
    7ac4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    7ac6:	8e 01       	movw	r16, r28
    7ac8:	03 51       	subi	r16, 0x13	; 19
    7aca:	1e 4f       	sbci	r17, 0xFE	; 254
    7acc:	ce 01       	movw	r24, r28
    7ace:	87 51       	subi	r24, 0x17	; 23
    7ad0:	9e 4f       	sbci	r25, 0xFE	; 254
    7ad2:	fc 01       	movw	r30, r24
    7ad4:	60 81       	ld	r22, Z
    7ad6:	71 81       	ldd	r23, Z+1	; 0x01
    7ad8:	82 81       	ldd	r24, Z+2	; 0x02
    7ada:	93 81       	ldd	r25, Z+3	; 0x03
    7adc:	26 e6       	ldi	r18, 0x66	; 102
    7ade:	36 e6       	ldi	r19, 0x66	; 102
    7ae0:	46 e6       	ldi	r20, 0x66	; 102
    7ae2:	55 e4       	ldi	r21, 0x45	; 69
    7ae4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7ae8:	dc 01       	movw	r26, r24
    7aea:	cb 01       	movw	r24, r22
    7aec:	f8 01       	movw	r30, r16
    7aee:	80 83       	st	Z, r24
    7af0:	91 83       	std	Z+1, r25	; 0x01
    7af2:	a2 83       	std	Z+2, r26	; 0x02
    7af4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7af6:	ce 01       	movw	r24, r28
    7af8:	83 51       	subi	r24, 0x13	; 19
    7afa:	9e 4f       	sbci	r25, 0xFE	; 254
    7afc:	11 e0       	ldi	r17, 0x01	; 1
    7afe:	fc 01       	movw	r30, r24
    7b00:	60 81       	ld	r22, Z
    7b02:	71 81       	ldd	r23, Z+1	; 0x01
    7b04:	82 81       	ldd	r24, Z+2	; 0x02
    7b06:	93 81       	ldd	r25, Z+3	; 0x03
    7b08:	20 e0       	ldi	r18, 0x00	; 0
    7b0a:	30 e0       	ldi	r19, 0x00	; 0
    7b0c:	40 e8       	ldi	r20, 0x80	; 128
    7b0e:	5f e3       	ldi	r21, 0x3F	; 63
    7b10:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7b14:	88 23       	and	r24, r24
    7b16:	0c f0       	brlt	.+2      	; 0x7b1a <main+0x3e46>
    7b18:	10 e0       	ldi	r17, 0x00	; 0
    7b1a:	11 23       	and	r17, r17
    7b1c:	49 f0       	breq	.+18     	; 0x7b30 <main+0x3e5c>
		__ticks = 1;
    7b1e:	ce 01       	movw	r24, r28
    7b20:	8f 50       	subi	r24, 0x0F	; 15
    7b22:	9e 4f       	sbci	r25, 0xFE	; 254
    7b24:	21 e0       	ldi	r18, 0x01	; 1
    7b26:	30 e0       	ldi	r19, 0x00	; 0
    7b28:	fc 01       	movw	r30, r24
    7b2a:	31 83       	std	Z+1, r19	; 0x01
    7b2c:	20 83       	st	Z, r18
    7b2e:	74 c0       	rjmp	.+232    	; 0x7c18 <main+0x3f44>
	else if (__tmp > 65535)
    7b30:	ce 01       	movw	r24, r28
    7b32:	83 51       	subi	r24, 0x13	; 19
    7b34:	9e 4f       	sbci	r25, 0xFE	; 254
    7b36:	11 e0       	ldi	r17, 0x01	; 1
    7b38:	fc 01       	movw	r30, r24
    7b3a:	60 81       	ld	r22, Z
    7b3c:	71 81       	ldd	r23, Z+1	; 0x01
    7b3e:	82 81       	ldd	r24, Z+2	; 0x02
    7b40:	93 81       	ldd	r25, Z+3	; 0x03
    7b42:	20 e0       	ldi	r18, 0x00	; 0
    7b44:	3f ef       	ldi	r19, 0xFF	; 255
    7b46:	4f e7       	ldi	r20, 0x7F	; 127
    7b48:	57 e4       	ldi	r21, 0x47	; 71
    7b4a:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    7b4e:	18 16       	cp	r1, r24
    7b50:	0c f0       	brlt	.+2      	; 0x7b54 <main+0x3e80>
    7b52:	10 e0       	ldi	r17, 0x00	; 0
    7b54:	11 23       	and	r17, r17
    7b56:	09 f4       	brne	.+2      	; 0x7b5a <main+0x3e86>
    7b58:	4d c0       	rjmp	.+154    	; 0x7bf4 <main+0x3f20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7b5a:	ce 01       	movw	r24, r28
    7b5c:	87 51       	subi	r24, 0x17	; 23
    7b5e:	9e 4f       	sbci	r25, 0xFE	; 254
    7b60:	fc 01       	movw	r30, r24
    7b62:	60 81       	ld	r22, Z
    7b64:	71 81       	ldd	r23, Z+1	; 0x01
    7b66:	82 81       	ldd	r24, Z+2	; 0x02
    7b68:	93 81       	ldd	r25, Z+3	; 0x03
    7b6a:	20 e0       	ldi	r18, 0x00	; 0
    7b6c:	30 e0       	ldi	r19, 0x00	; 0
    7b6e:	40 e2       	ldi	r20, 0x20	; 32
    7b70:	51 e4       	ldi	r21, 0x41	; 65
    7b72:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7b76:	dc 01       	movw	r26, r24
    7b78:	cb 01       	movw	r24, r22
    7b7a:	8e 01       	movw	r16, r28
    7b7c:	0f 50       	subi	r16, 0x0F	; 15
    7b7e:	1e 4f       	sbci	r17, 0xFE	; 254
    7b80:	bc 01       	movw	r22, r24
    7b82:	cd 01       	movw	r24, r26
    7b84:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7b88:	dc 01       	movw	r26, r24
    7b8a:	cb 01       	movw	r24, r22
    7b8c:	f8 01       	movw	r30, r16
    7b8e:	91 83       	std	Z+1, r25	; 0x01
    7b90:	80 83       	st	Z, r24
    7b92:	27 c0       	rjmp	.+78     	; 0x7be2 <main+0x3f0e>
    7b94:	ce 01       	movw	r24, r28
    7b96:	8d 50       	subi	r24, 0x0D	; 13
    7b98:	9e 4f       	sbci	r25, 0xFE	; 254
    7b9a:	20 e7       	ldi	r18, 0x70	; 112
    7b9c:	31 e0       	ldi	r19, 0x01	; 1
    7b9e:	fc 01       	movw	r30, r24
    7ba0:	31 83       	std	Z+1, r19	; 0x01
    7ba2:	20 83       	st	Z, r18
    7ba4:	ce 01       	movw	r24, r28
    7ba6:	8d 50       	subi	r24, 0x0D	; 13
    7ba8:	9e 4f       	sbci	r25, 0xFE	; 254
    7baa:	fc 01       	movw	r30, r24
    7bac:	80 81       	ld	r24, Z
    7bae:	91 81       	ldd	r25, Z+1	; 0x01
    7bb0:	8c 01       	movw	r16, r24
    7bb2:	c8 01       	movw	r24, r16
    7bb4:	01 97       	sbiw	r24, 0x01	; 1
    7bb6:	f1 f7       	brne	.-4      	; 0x7bb4 <main+0x3ee0>
    7bb8:	8c 01       	movw	r16, r24
    7bba:	ce 01       	movw	r24, r28
    7bbc:	8d 50       	subi	r24, 0x0D	; 13
    7bbe:	9e 4f       	sbci	r25, 0xFE	; 254
    7bc0:	fc 01       	movw	r30, r24
    7bc2:	11 83       	std	Z+1, r17	; 0x01
    7bc4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7bc6:	ce 01       	movw	r24, r28
    7bc8:	8f 50       	subi	r24, 0x0F	; 15
    7bca:	9e 4f       	sbci	r25, 0xFE	; 254
    7bcc:	9e 01       	movw	r18, r28
    7bce:	2f 50       	subi	r18, 0x0F	; 15
    7bd0:	3e 4f       	sbci	r19, 0xFE	; 254
    7bd2:	f9 01       	movw	r30, r18
    7bd4:	20 81       	ld	r18, Z
    7bd6:	31 81       	ldd	r19, Z+1	; 0x01
    7bd8:	21 50       	subi	r18, 0x01	; 1
    7bda:	30 40       	sbci	r19, 0x00	; 0
    7bdc:	fc 01       	movw	r30, r24
    7bde:	31 83       	std	Z+1, r19	; 0x01
    7be0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7be2:	ce 01       	movw	r24, r28
    7be4:	8f 50       	subi	r24, 0x0F	; 15
    7be6:	9e 4f       	sbci	r25, 0xFE	; 254
    7be8:	fc 01       	movw	r30, r24
    7bea:	80 81       	ld	r24, Z
    7bec:	91 81       	ldd	r25, Z+1	; 0x01
    7bee:	00 97       	sbiw	r24, 0x00	; 0
    7bf0:	89 f6       	brne	.-94     	; 0x7b94 <main+0x3ec0>
    7bf2:	2f c0       	rjmp	.+94     	; 0x7c52 <main+0x3f7e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7bf4:	8e 01       	movw	r16, r28
    7bf6:	0f 50       	subi	r16, 0x0F	; 15
    7bf8:	1e 4f       	sbci	r17, 0xFE	; 254
    7bfa:	ce 01       	movw	r24, r28
    7bfc:	83 51       	subi	r24, 0x13	; 19
    7bfe:	9e 4f       	sbci	r25, 0xFE	; 254
    7c00:	fc 01       	movw	r30, r24
    7c02:	60 81       	ld	r22, Z
    7c04:	71 81       	ldd	r23, Z+1	; 0x01
    7c06:	82 81       	ldd	r24, Z+2	; 0x02
    7c08:	93 81       	ldd	r25, Z+3	; 0x03
    7c0a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7c0e:	dc 01       	movw	r26, r24
    7c10:	cb 01       	movw	r24, r22
    7c12:	f8 01       	movw	r30, r16
    7c14:	91 83       	std	Z+1, r25	; 0x01
    7c16:	80 83       	st	Z, r24
    7c18:	ce 01       	movw	r24, r28
    7c1a:	8b 50       	subi	r24, 0x0B	; 11
    7c1c:	9e 4f       	sbci	r25, 0xFE	; 254
    7c1e:	9e 01       	movw	r18, r28
    7c20:	2f 50       	subi	r18, 0x0F	; 15
    7c22:	3e 4f       	sbci	r19, 0xFE	; 254
    7c24:	f9 01       	movw	r30, r18
    7c26:	20 81       	ld	r18, Z
    7c28:	31 81       	ldd	r19, Z+1	; 0x01
    7c2a:	fc 01       	movw	r30, r24
    7c2c:	31 83       	std	Z+1, r19	; 0x01
    7c2e:	20 83       	st	Z, r18
    7c30:	ce 01       	movw	r24, r28
    7c32:	8b 50       	subi	r24, 0x0B	; 11
    7c34:	9e 4f       	sbci	r25, 0xFE	; 254
    7c36:	fc 01       	movw	r30, r24
    7c38:	80 81       	ld	r24, Z
    7c3a:	91 81       	ldd	r25, Z+1	; 0x01
    7c3c:	8c 01       	movw	r16, r24
    7c3e:	c8 01       	movw	r24, r16
    7c40:	01 97       	sbiw	r24, 0x01	; 1
    7c42:	f1 f7       	brne	.-4      	; 0x7c40 <main+0x3f6c>
    7c44:	8c 01       	movw	r16, r24
    7c46:	ce 01       	movw	r24, r28
    7c48:	8b 50       	subi	r24, 0x0B	; 11
    7c4a:	9e 4f       	sbci	r25, 0xFE	; 254
    7c4c:	fc 01       	movw	r30, r24
    7c4e:	11 83       	std	Z+1, r17	; 0x01
    7c50:	00 83       	st	Z, r16
				{
					_delay_ms(100);
					coor[0]=0;
    7c52:	10 92 a7 04 	sts	0x04A7, r1
    7c56:	10 92 a6 04 	sts	0x04A6, r1
					coor[1]=0;
    7c5a:	10 92 a9 04 	sts	0x04A9, r1
    7c5e:	10 92 a8 04 	sts	0x04A8, r1
					linefollwer();
    7c62:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
					compass=4;
    7c66:	84 e0       	ldi	r24, 0x04	; 4
    7c68:	90 e0       	ldi	r25, 0x00	; 0
    7c6a:	9c 83       	std	Y+4, r25	; 0x04
    7c6c:	8b 83       	std	Y+3, r24	; 0x03
    7c6e:	ea c0       	rjmp	.+468    	; 0x7e44 <main+0x4170>
					
				}
				else
				{
					if(compass==4)
    7c70:	8b 81       	ldd	r24, Y+3	; 0x03
    7c72:	9c 81       	ldd	r25, Y+4	; 0x04
    7c74:	84 30       	cpi	r24, 0x04	; 4
    7c76:	91 05       	cpc	r25, r1
    7c78:	09 f0       	breq	.+2      	; 0x7c7c <main+0x3fa8>
    7c7a:	e4 c0       	rjmp	.+456    	; 0x7e44 <main+0x4170>
					{
						right_degrees(185);
    7c7c:	89 eb       	ldi	r24, 0xB9	; 185
    7c7e:	90 e0       	ldi	r25, 0x00	; 0
    7c80:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    7c84:	9e 01       	movw	r18, r28
    7c86:	29 50       	subi	r18, 0x09	; 9
    7c88:	3e 4f       	sbci	r19, 0xFE	; 254
    7c8a:	80 e0       	ldi	r24, 0x00	; 0
    7c8c:	90 e0       	ldi	r25, 0x00	; 0
    7c8e:	a8 ec       	ldi	r26, 0xC8	; 200
    7c90:	b2 e4       	ldi	r27, 0x42	; 66
    7c92:	f9 01       	movw	r30, r18
    7c94:	80 83       	st	Z, r24
    7c96:	91 83       	std	Z+1, r25	; 0x01
    7c98:	a2 83       	std	Z+2, r26	; 0x02
    7c9a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    7c9c:	8e 01       	movw	r16, r28
    7c9e:	05 50       	subi	r16, 0x05	; 5
    7ca0:	1e 4f       	sbci	r17, 0xFE	; 254
    7ca2:	ce 01       	movw	r24, r28
    7ca4:	89 50       	subi	r24, 0x09	; 9
    7ca6:	9e 4f       	sbci	r25, 0xFE	; 254
    7ca8:	fc 01       	movw	r30, r24
    7caa:	60 81       	ld	r22, Z
    7cac:	71 81       	ldd	r23, Z+1	; 0x01
    7cae:	82 81       	ldd	r24, Z+2	; 0x02
    7cb0:	93 81       	ldd	r25, Z+3	; 0x03
    7cb2:	26 e6       	ldi	r18, 0x66	; 102
    7cb4:	36 e6       	ldi	r19, 0x66	; 102
    7cb6:	46 e6       	ldi	r20, 0x66	; 102
    7cb8:	55 e4       	ldi	r21, 0x45	; 69
    7cba:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7cbe:	dc 01       	movw	r26, r24
    7cc0:	cb 01       	movw	r24, r22
    7cc2:	f8 01       	movw	r30, r16
    7cc4:	80 83       	st	Z, r24
    7cc6:	91 83       	std	Z+1, r25	; 0x01
    7cc8:	a2 83       	std	Z+2, r26	; 0x02
    7cca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7ccc:	ce 01       	movw	r24, r28
    7cce:	85 50       	subi	r24, 0x05	; 5
    7cd0:	9e 4f       	sbci	r25, 0xFE	; 254
    7cd2:	11 e0       	ldi	r17, 0x01	; 1
    7cd4:	fc 01       	movw	r30, r24
    7cd6:	60 81       	ld	r22, Z
    7cd8:	71 81       	ldd	r23, Z+1	; 0x01
    7cda:	82 81       	ldd	r24, Z+2	; 0x02
    7cdc:	93 81       	ldd	r25, Z+3	; 0x03
    7cde:	20 e0       	ldi	r18, 0x00	; 0
    7ce0:	30 e0       	ldi	r19, 0x00	; 0
    7ce2:	40 e8       	ldi	r20, 0x80	; 128
    7ce4:	5f e3       	ldi	r21, 0x3F	; 63
    7ce6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7cea:	88 23       	and	r24, r24
    7cec:	0c f0       	brlt	.+2      	; 0x7cf0 <main+0x401c>
    7cee:	10 e0       	ldi	r17, 0x00	; 0
    7cf0:	11 23       	and	r17, r17
    7cf2:	49 f0       	breq	.+18     	; 0x7d06 <main+0x4032>
		__ticks = 1;
    7cf4:	ce 01       	movw	r24, r28
    7cf6:	81 50       	subi	r24, 0x01	; 1
    7cf8:	9e 4f       	sbci	r25, 0xFE	; 254
    7cfa:	21 e0       	ldi	r18, 0x01	; 1
    7cfc:	30 e0       	ldi	r19, 0x00	; 0
    7cfe:	fc 01       	movw	r30, r24
    7d00:	31 83       	std	Z+1, r19	; 0x01
    7d02:	20 83       	st	Z, r18
    7d04:	74 c0       	rjmp	.+232    	; 0x7dee <main+0x411a>
	else if (__tmp > 65535)
    7d06:	ce 01       	movw	r24, r28
    7d08:	85 50       	subi	r24, 0x05	; 5
    7d0a:	9e 4f       	sbci	r25, 0xFE	; 254
    7d0c:	11 e0       	ldi	r17, 0x01	; 1
    7d0e:	fc 01       	movw	r30, r24
    7d10:	60 81       	ld	r22, Z
    7d12:	71 81       	ldd	r23, Z+1	; 0x01
    7d14:	82 81       	ldd	r24, Z+2	; 0x02
    7d16:	93 81       	ldd	r25, Z+3	; 0x03
    7d18:	20 e0       	ldi	r18, 0x00	; 0
    7d1a:	3f ef       	ldi	r19, 0xFF	; 255
    7d1c:	4f e7       	ldi	r20, 0x7F	; 127
    7d1e:	57 e4       	ldi	r21, 0x47	; 71
    7d20:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    7d24:	18 16       	cp	r1, r24
    7d26:	0c f0       	brlt	.+2      	; 0x7d2a <main+0x4056>
    7d28:	10 e0       	ldi	r17, 0x00	; 0
    7d2a:	11 23       	and	r17, r17
    7d2c:	09 f4       	brne	.+2      	; 0x7d30 <main+0x405c>
    7d2e:	4d c0       	rjmp	.+154    	; 0x7dca <main+0x40f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7d30:	ce 01       	movw	r24, r28
    7d32:	89 50       	subi	r24, 0x09	; 9
    7d34:	9e 4f       	sbci	r25, 0xFE	; 254
    7d36:	fc 01       	movw	r30, r24
    7d38:	60 81       	ld	r22, Z
    7d3a:	71 81       	ldd	r23, Z+1	; 0x01
    7d3c:	82 81       	ldd	r24, Z+2	; 0x02
    7d3e:	93 81       	ldd	r25, Z+3	; 0x03
    7d40:	20 e0       	ldi	r18, 0x00	; 0
    7d42:	30 e0       	ldi	r19, 0x00	; 0
    7d44:	40 e2       	ldi	r20, 0x20	; 32
    7d46:	51 e4       	ldi	r21, 0x41	; 65
    7d48:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7d4c:	dc 01       	movw	r26, r24
    7d4e:	cb 01       	movw	r24, r22
    7d50:	8e 01       	movw	r16, r28
    7d52:	01 50       	subi	r16, 0x01	; 1
    7d54:	1e 4f       	sbci	r17, 0xFE	; 254
    7d56:	bc 01       	movw	r22, r24
    7d58:	cd 01       	movw	r24, r26
    7d5a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7d5e:	dc 01       	movw	r26, r24
    7d60:	cb 01       	movw	r24, r22
    7d62:	f8 01       	movw	r30, r16
    7d64:	91 83       	std	Z+1, r25	; 0x01
    7d66:	80 83       	st	Z, r24
    7d68:	27 c0       	rjmp	.+78     	; 0x7db8 <main+0x40e4>
    7d6a:	ce 01       	movw	r24, r28
    7d6c:	8f 5f       	subi	r24, 0xFF	; 255
    7d6e:	9d 4f       	sbci	r25, 0xFD	; 253
    7d70:	20 e7       	ldi	r18, 0x70	; 112
    7d72:	31 e0       	ldi	r19, 0x01	; 1
    7d74:	fc 01       	movw	r30, r24
    7d76:	31 83       	std	Z+1, r19	; 0x01
    7d78:	20 83       	st	Z, r18
    7d7a:	ce 01       	movw	r24, r28
    7d7c:	8f 5f       	subi	r24, 0xFF	; 255
    7d7e:	9d 4f       	sbci	r25, 0xFD	; 253
    7d80:	fc 01       	movw	r30, r24
    7d82:	80 81       	ld	r24, Z
    7d84:	91 81       	ldd	r25, Z+1	; 0x01
    7d86:	8c 01       	movw	r16, r24
    7d88:	c8 01       	movw	r24, r16
    7d8a:	01 97       	sbiw	r24, 0x01	; 1
    7d8c:	f1 f7       	brne	.-4      	; 0x7d8a <main+0x40b6>
    7d8e:	8c 01       	movw	r16, r24
    7d90:	ce 01       	movw	r24, r28
    7d92:	8f 5f       	subi	r24, 0xFF	; 255
    7d94:	9d 4f       	sbci	r25, 0xFD	; 253
    7d96:	fc 01       	movw	r30, r24
    7d98:	11 83       	std	Z+1, r17	; 0x01
    7d9a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7d9c:	ce 01       	movw	r24, r28
    7d9e:	81 50       	subi	r24, 0x01	; 1
    7da0:	9e 4f       	sbci	r25, 0xFE	; 254
    7da2:	9e 01       	movw	r18, r28
    7da4:	21 50       	subi	r18, 0x01	; 1
    7da6:	3e 4f       	sbci	r19, 0xFE	; 254
    7da8:	f9 01       	movw	r30, r18
    7daa:	20 81       	ld	r18, Z
    7dac:	31 81       	ldd	r19, Z+1	; 0x01
    7dae:	21 50       	subi	r18, 0x01	; 1
    7db0:	30 40       	sbci	r19, 0x00	; 0
    7db2:	fc 01       	movw	r30, r24
    7db4:	31 83       	std	Z+1, r19	; 0x01
    7db6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7db8:	ce 01       	movw	r24, r28
    7dba:	81 50       	subi	r24, 0x01	; 1
    7dbc:	9e 4f       	sbci	r25, 0xFE	; 254
    7dbe:	fc 01       	movw	r30, r24
    7dc0:	80 81       	ld	r24, Z
    7dc2:	91 81       	ldd	r25, Z+1	; 0x01
    7dc4:	00 97       	sbiw	r24, 0x00	; 0
    7dc6:	89 f6       	brne	.-94     	; 0x7d6a <main+0x4096>
    7dc8:	2f c0       	rjmp	.+94     	; 0x7e28 <main+0x4154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7dca:	8e 01       	movw	r16, r28
    7dcc:	01 50       	subi	r16, 0x01	; 1
    7dce:	1e 4f       	sbci	r17, 0xFE	; 254
    7dd0:	ce 01       	movw	r24, r28
    7dd2:	85 50       	subi	r24, 0x05	; 5
    7dd4:	9e 4f       	sbci	r25, 0xFE	; 254
    7dd6:	fc 01       	movw	r30, r24
    7dd8:	60 81       	ld	r22, Z
    7dda:	71 81       	ldd	r23, Z+1	; 0x01
    7ddc:	82 81       	ldd	r24, Z+2	; 0x02
    7dde:	93 81       	ldd	r25, Z+3	; 0x03
    7de0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7de4:	dc 01       	movw	r26, r24
    7de6:	cb 01       	movw	r24, r22
    7de8:	f8 01       	movw	r30, r16
    7dea:	91 83       	std	Z+1, r25	; 0x01
    7dec:	80 83       	st	Z, r24
    7dee:	ce 01       	movw	r24, r28
    7df0:	8d 5f       	subi	r24, 0xFD	; 253
    7df2:	9d 4f       	sbci	r25, 0xFD	; 253
    7df4:	9e 01       	movw	r18, r28
    7df6:	21 50       	subi	r18, 0x01	; 1
    7df8:	3e 4f       	sbci	r19, 0xFE	; 254
    7dfa:	f9 01       	movw	r30, r18
    7dfc:	20 81       	ld	r18, Z
    7dfe:	31 81       	ldd	r19, Z+1	; 0x01
    7e00:	fc 01       	movw	r30, r24
    7e02:	31 83       	std	Z+1, r19	; 0x01
    7e04:	20 83       	st	Z, r18
    7e06:	ce 01       	movw	r24, r28
    7e08:	8d 5f       	subi	r24, 0xFD	; 253
    7e0a:	9d 4f       	sbci	r25, 0xFD	; 253
    7e0c:	fc 01       	movw	r30, r24
    7e0e:	80 81       	ld	r24, Z
    7e10:	91 81       	ldd	r25, Z+1	; 0x01
    7e12:	8c 01       	movw	r16, r24
    7e14:	c8 01       	movw	r24, r16
    7e16:	01 97       	sbiw	r24, 0x01	; 1
    7e18:	f1 f7       	brne	.-4      	; 0x7e16 <main+0x4142>
    7e1a:	8c 01       	movw	r16, r24
    7e1c:	ce 01       	movw	r24, r28
    7e1e:	8d 5f       	subi	r24, 0xFD	; 253
    7e20:	9d 4f       	sbci	r25, 0xFD	; 253
    7e22:	fc 01       	movw	r30, r24
    7e24:	11 83       	std	Z+1, r17	; 0x01
    7e26:	00 83       	st	Z, r16
						_delay_ms(100);
						coor[0]=0;
    7e28:	10 92 a7 04 	sts	0x04A7, r1
    7e2c:	10 92 a6 04 	sts	0x04A6, r1
						coor[1]=0;
    7e30:	10 92 a9 04 	sts	0x04A9, r1
    7e34:	10 92 a8 04 	sts	0x04A8, r1
						linefollwer();
    7e38:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
						compass=4;
    7e3c:	84 e0       	ldi	r24, 0x04	; 4
    7e3e:	90 e0       	ldi	r25, 0x00	; 0
    7e40:	9c 83       	std	Y+4, r25	; 0x04
    7e42:	8b 83       	std	Y+3, r24	; 0x03
					}
				}					
			}
		}
		flag1=flag1+1;
    7e44:	89 81       	ldd	r24, Y+1	; 0x01
    7e46:	9a 81       	ldd	r25, Y+2	; 0x02
    7e48:	01 96       	adiw	r24, 0x01	; 1
    7e4a:	9a 83       	std	Y+2, r25	; 0x02
    7e4c:	89 83       	std	Y+1, r24	; 0x01
		boxnumber=D2[recur1][0];
    7e4e:	9e 01       	movw	r18, r28
    7e50:	25 56       	subi	r18, 0x65	; 101
    7e52:	39 4f       	sbci	r19, 0xF9	; 249
    7e54:	89 85       	ldd	r24, Y+9	; 0x09
    7e56:	9a 85       	ldd	r25, Y+10	; 0x0a
    7e58:	88 0f       	add	r24, r24
    7e5a:	99 1f       	adc	r25, r25
    7e5c:	88 0f       	add	r24, r24
    7e5e:	99 1f       	adc	r25, r25
    7e60:	88 0f       	add	r24, r24
    7e62:	99 1f       	adc	r25, r25
    7e64:	82 0f       	add	r24, r18
    7e66:	93 1f       	adc	r25, r19
    7e68:	fc 01       	movw	r30, r24
    7e6a:	80 81       	ld	r24, Z
    7e6c:	91 81       	ldd	r25, Z+1	; 0x01
    7e6e:	9e 83       	std	Y+6, r25	; 0x06
    7e70:	8d 83       	std	Y+5, r24	; 0x05
		goto point1;
    7e72:	0c 94 a5 20 	jmp	0x414a	; 0x414a <main+0x476>
	}
	else
	{
		if(coor[0]==0 && coor[1]==0 && flag1%2==0)
    7e76:	80 91 a6 04 	lds	r24, 0x04A6
    7e7a:	90 91 a7 04 	lds	r25, 0x04A7
    7e7e:	00 97       	sbiw	r24, 0x00	; 0
    7e80:	09 f0       	breq	.+2      	; 0x7e84 <main+0x41b0>
    7e82:	cf c3       	rjmp	.+1950   	; 0x8622 <main+0x494e>
    7e84:	80 91 a8 04 	lds	r24, 0x04A8
    7e88:	90 91 a9 04 	lds	r25, 0x04A9
    7e8c:	00 97       	sbiw	r24, 0x00	; 0
    7e8e:	09 f0       	breq	.+2      	; 0x7e92 <main+0x41be>
    7e90:	c8 c3       	rjmp	.+1936   	; 0x8622 <main+0x494e>
    7e92:	89 81       	ldd	r24, Y+1	; 0x01
    7e94:	9a 81       	ldd	r25, Y+2	; 0x02
    7e96:	81 70       	andi	r24, 0x01	; 1
    7e98:	90 70       	andi	r25, 0x00	; 0
    7e9a:	00 97       	sbiw	r24, 0x00	; 0
    7e9c:	09 f0       	breq	.+2      	; 0x7ea0 <main+0x41cc>
    7e9e:	c1 c3       	rjmp	.+1922   	; 0x8622 <main+0x494e>
		{
			if(compass==6)
    7ea0:	8b 81       	ldd	r24, Y+3	; 0x03
    7ea2:	9c 81       	ldd	r25, Y+4	; 0x04
    7ea4:	86 30       	cpi	r24, 0x06	; 6
    7ea6:	91 05       	cpc	r25, r1
    7ea8:	09 f0       	breq	.+2      	; 0x7eac <main+0x41d8>
    7eaa:	e5 c0       	rjmp	.+458    	; 0x8076 <main+0x43a2>
			{
				right_degrees(92);                           ////// calibration required
    7eac:	8c e5       	ldi	r24, 0x5C	; 92
    7eae:	90 e0       	ldi	r25, 0x00	; 0
    7eb0:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    7eb4:	9e 01       	movw	r18, r28
    7eb6:	2b 5f       	subi	r18, 0xFB	; 251
    7eb8:	3d 4f       	sbci	r19, 0xFD	; 253
    7eba:	80 e0       	ldi	r24, 0x00	; 0
    7ebc:	90 e0       	ldi	r25, 0x00	; 0
    7ebe:	a8 ec       	ldi	r26, 0xC8	; 200
    7ec0:	b2 e4       	ldi	r27, 0x42	; 66
    7ec2:	f9 01       	movw	r30, r18
    7ec4:	80 83       	st	Z, r24
    7ec6:	91 83       	std	Z+1, r25	; 0x01
    7ec8:	a2 83       	std	Z+2, r26	; 0x02
    7eca:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    7ecc:	8e 01       	movw	r16, r28
    7ece:	07 5f       	subi	r16, 0xF7	; 247
    7ed0:	1d 4f       	sbci	r17, 0xFD	; 253
    7ed2:	ce 01       	movw	r24, r28
    7ed4:	8b 5f       	subi	r24, 0xFB	; 251
    7ed6:	9d 4f       	sbci	r25, 0xFD	; 253
    7ed8:	fc 01       	movw	r30, r24
    7eda:	60 81       	ld	r22, Z
    7edc:	71 81       	ldd	r23, Z+1	; 0x01
    7ede:	82 81       	ldd	r24, Z+2	; 0x02
    7ee0:	93 81       	ldd	r25, Z+3	; 0x03
    7ee2:	26 e6       	ldi	r18, 0x66	; 102
    7ee4:	36 e6       	ldi	r19, 0x66	; 102
    7ee6:	46 e6       	ldi	r20, 0x66	; 102
    7ee8:	55 e4       	ldi	r21, 0x45	; 69
    7eea:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7eee:	dc 01       	movw	r26, r24
    7ef0:	cb 01       	movw	r24, r22
    7ef2:	f8 01       	movw	r30, r16
    7ef4:	80 83       	st	Z, r24
    7ef6:	91 83       	std	Z+1, r25	; 0x01
    7ef8:	a2 83       	std	Z+2, r26	; 0x02
    7efa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7efc:	ce 01       	movw	r24, r28
    7efe:	87 5f       	subi	r24, 0xF7	; 247
    7f00:	9d 4f       	sbci	r25, 0xFD	; 253
    7f02:	11 e0       	ldi	r17, 0x01	; 1
    7f04:	fc 01       	movw	r30, r24
    7f06:	60 81       	ld	r22, Z
    7f08:	71 81       	ldd	r23, Z+1	; 0x01
    7f0a:	82 81       	ldd	r24, Z+2	; 0x02
    7f0c:	93 81       	ldd	r25, Z+3	; 0x03
    7f0e:	20 e0       	ldi	r18, 0x00	; 0
    7f10:	30 e0       	ldi	r19, 0x00	; 0
    7f12:	40 e8       	ldi	r20, 0x80	; 128
    7f14:	5f e3       	ldi	r21, 0x3F	; 63
    7f16:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    7f1a:	88 23       	and	r24, r24
    7f1c:	0c f0       	brlt	.+2      	; 0x7f20 <main+0x424c>
    7f1e:	10 e0       	ldi	r17, 0x00	; 0
    7f20:	11 23       	and	r17, r17
    7f22:	49 f0       	breq	.+18     	; 0x7f36 <main+0x4262>
		__ticks = 1;
    7f24:	ce 01       	movw	r24, r28
    7f26:	83 5f       	subi	r24, 0xF3	; 243
    7f28:	9d 4f       	sbci	r25, 0xFD	; 253
    7f2a:	21 e0       	ldi	r18, 0x01	; 1
    7f2c:	30 e0       	ldi	r19, 0x00	; 0
    7f2e:	fc 01       	movw	r30, r24
    7f30:	31 83       	std	Z+1, r19	; 0x01
    7f32:	20 83       	st	Z, r18
    7f34:	74 c0       	rjmp	.+232    	; 0x801e <main+0x434a>
	else if (__tmp > 65535)
    7f36:	ce 01       	movw	r24, r28
    7f38:	87 5f       	subi	r24, 0xF7	; 247
    7f3a:	9d 4f       	sbci	r25, 0xFD	; 253
    7f3c:	11 e0       	ldi	r17, 0x01	; 1
    7f3e:	fc 01       	movw	r30, r24
    7f40:	60 81       	ld	r22, Z
    7f42:	71 81       	ldd	r23, Z+1	; 0x01
    7f44:	82 81       	ldd	r24, Z+2	; 0x02
    7f46:	93 81       	ldd	r25, Z+3	; 0x03
    7f48:	20 e0       	ldi	r18, 0x00	; 0
    7f4a:	3f ef       	ldi	r19, 0xFF	; 255
    7f4c:	4f e7       	ldi	r20, 0x7F	; 127
    7f4e:	57 e4       	ldi	r21, 0x47	; 71
    7f50:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    7f54:	18 16       	cp	r1, r24
    7f56:	0c f0       	brlt	.+2      	; 0x7f5a <main+0x4286>
    7f58:	10 e0       	ldi	r17, 0x00	; 0
    7f5a:	11 23       	and	r17, r17
    7f5c:	09 f4       	brne	.+2      	; 0x7f60 <main+0x428c>
    7f5e:	4d c0       	rjmp	.+154    	; 0x7ffa <main+0x4326>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7f60:	ce 01       	movw	r24, r28
    7f62:	8b 5f       	subi	r24, 0xFB	; 251
    7f64:	9d 4f       	sbci	r25, 0xFD	; 253
    7f66:	fc 01       	movw	r30, r24
    7f68:	60 81       	ld	r22, Z
    7f6a:	71 81       	ldd	r23, Z+1	; 0x01
    7f6c:	82 81       	ldd	r24, Z+2	; 0x02
    7f6e:	93 81       	ldd	r25, Z+3	; 0x03
    7f70:	20 e0       	ldi	r18, 0x00	; 0
    7f72:	30 e0       	ldi	r19, 0x00	; 0
    7f74:	40 e2       	ldi	r20, 0x20	; 32
    7f76:	51 e4       	ldi	r21, 0x41	; 65
    7f78:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    7f7c:	dc 01       	movw	r26, r24
    7f7e:	cb 01       	movw	r24, r22
    7f80:	8e 01       	movw	r16, r28
    7f82:	03 5f       	subi	r16, 0xF3	; 243
    7f84:	1d 4f       	sbci	r17, 0xFD	; 253
    7f86:	bc 01       	movw	r22, r24
    7f88:	cd 01       	movw	r24, r26
    7f8a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    7f8e:	dc 01       	movw	r26, r24
    7f90:	cb 01       	movw	r24, r22
    7f92:	f8 01       	movw	r30, r16
    7f94:	91 83       	std	Z+1, r25	; 0x01
    7f96:	80 83       	st	Z, r24
    7f98:	27 c0       	rjmp	.+78     	; 0x7fe8 <main+0x4314>
    7f9a:	ce 01       	movw	r24, r28
    7f9c:	81 5f       	subi	r24, 0xF1	; 241
    7f9e:	9d 4f       	sbci	r25, 0xFD	; 253
    7fa0:	20 e7       	ldi	r18, 0x70	; 112
    7fa2:	31 e0       	ldi	r19, 0x01	; 1
    7fa4:	fc 01       	movw	r30, r24
    7fa6:	31 83       	std	Z+1, r19	; 0x01
    7fa8:	20 83       	st	Z, r18
    7faa:	ce 01       	movw	r24, r28
    7fac:	81 5f       	subi	r24, 0xF1	; 241
    7fae:	9d 4f       	sbci	r25, 0xFD	; 253
    7fb0:	fc 01       	movw	r30, r24
    7fb2:	80 81       	ld	r24, Z
    7fb4:	91 81       	ldd	r25, Z+1	; 0x01
    7fb6:	8c 01       	movw	r16, r24
    7fb8:	c8 01       	movw	r24, r16
    7fba:	01 97       	sbiw	r24, 0x01	; 1
    7fbc:	f1 f7       	brne	.-4      	; 0x7fba <main+0x42e6>
    7fbe:	8c 01       	movw	r16, r24
    7fc0:	ce 01       	movw	r24, r28
    7fc2:	81 5f       	subi	r24, 0xF1	; 241
    7fc4:	9d 4f       	sbci	r25, 0xFD	; 253
    7fc6:	fc 01       	movw	r30, r24
    7fc8:	11 83       	std	Z+1, r17	; 0x01
    7fca:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7fcc:	ce 01       	movw	r24, r28
    7fce:	83 5f       	subi	r24, 0xF3	; 243
    7fd0:	9d 4f       	sbci	r25, 0xFD	; 253
    7fd2:	9e 01       	movw	r18, r28
    7fd4:	23 5f       	subi	r18, 0xF3	; 243
    7fd6:	3d 4f       	sbci	r19, 0xFD	; 253
    7fd8:	f9 01       	movw	r30, r18
    7fda:	20 81       	ld	r18, Z
    7fdc:	31 81       	ldd	r19, Z+1	; 0x01
    7fde:	21 50       	subi	r18, 0x01	; 1
    7fe0:	30 40       	sbci	r19, 0x00	; 0
    7fe2:	fc 01       	movw	r30, r24
    7fe4:	31 83       	std	Z+1, r19	; 0x01
    7fe6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7fe8:	ce 01       	movw	r24, r28
    7fea:	83 5f       	subi	r24, 0xF3	; 243
    7fec:	9d 4f       	sbci	r25, 0xFD	; 253
    7fee:	fc 01       	movw	r30, r24
    7ff0:	80 81       	ld	r24, Z
    7ff2:	91 81       	ldd	r25, Z+1	; 0x01
    7ff4:	00 97       	sbiw	r24, 0x00	; 0
    7ff6:	89 f6       	brne	.-94     	; 0x7f9a <main+0x42c6>
    7ff8:	2f c0       	rjmp	.+94     	; 0x8058 <main+0x4384>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7ffa:	8e 01       	movw	r16, r28
    7ffc:	03 5f       	subi	r16, 0xF3	; 243
    7ffe:	1d 4f       	sbci	r17, 0xFD	; 253
    8000:	ce 01       	movw	r24, r28
    8002:	87 5f       	subi	r24, 0xF7	; 247
    8004:	9d 4f       	sbci	r25, 0xFD	; 253
    8006:	fc 01       	movw	r30, r24
    8008:	60 81       	ld	r22, Z
    800a:	71 81       	ldd	r23, Z+1	; 0x01
    800c:	82 81       	ldd	r24, Z+2	; 0x02
    800e:	93 81       	ldd	r25, Z+3	; 0x03
    8010:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8014:	dc 01       	movw	r26, r24
    8016:	cb 01       	movw	r24, r22
    8018:	f8 01       	movw	r30, r16
    801a:	91 83       	std	Z+1, r25	; 0x01
    801c:	80 83       	st	Z, r24
    801e:	ce 01       	movw	r24, r28
    8020:	8f 5e       	subi	r24, 0xEF	; 239
    8022:	9d 4f       	sbci	r25, 0xFD	; 253
    8024:	9e 01       	movw	r18, r28
    8026:	23 5f       	subi	r18, 0xF3	; 243
    8028:	3d 4f       	sbci	r19, 0xFD	; 253
    802a:	f9 01       	movw	r30, r18
    802c:	20 81       	ld	r18, Z
    802e:	31 81       	ldd	r19, Z+1	; 0x01
    8030:	fc 01       	movw	r30, r24
    8032:	31 83       	std	Z+1, r19	; 0x01
    8034:	20 83       	st	Z, r18
    8036:	ce 01       	movw	r24, r28
    8038:	8f 5e       	subi	r24, 0xEF	; 239
    803a:	9d 4f       	sbci	r25, 0xFD	; 253
    803c:	fc 01       	movw	r30, r24
    803e:	80 81       	ld	r24, Z
    8040:	91 81       	ldd	r25, Z+1	; 0x01
    8042:	8c 01       	movw	r16, r24
    8044:	c8 01       	movw	r24, r16
    8046:	01 97       	sbiw	r24, 0x01	; 1
    8048:	f1 f7       	brne	.-4      	; 0x8046 <main+0x4372>
    804a:	8c 01       	movw	r16, r24
    804c:	ce 01       	movw	r24, r28
    804e:	8f 5e       	subi	r24, 0xEF	; 239
    8050:	9d 4f       	sbci	r25, 0xFD	; 253
    8052:	fc 01       	movw	r30, r24
    8054:	11 83       	std	Z+1, r17	; 0x01
    8056:	00 83       	st	Z, r16
				_delay_ms(100);
				coor[0]=0;
    8058:	10 92 a7 04 	sts	0x04A7, r1
    805c:	10 92 a6 04 	sts	0x04A6, r1
				coor[1]=0;
    8060:	10 92 a9 04 	sts	0x04A9, r1
    8064:	10 92 a8 04 	sts	0x04A8, r1
				linefollwer();
    8068:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
				compass=4;
    806c:	84 e0       	ldi	r24, 0x04	; 4
    806e:	90 e0       	ldi	r25, 0x00	; 0
    8070:	9c 83       	std	Y+4, r25	; 0x04
    8072:	8b 83       	std	Y+3, r24	; 0x03
    8074:	bc c2       	rjmp	.+1400   	; 0x85ee <main+0x491a>
			}
			else
			{
				if(compass==7)
    8076:	8b 81       	ldd	r24, Y+3	; 0x03
    8078:	9c 81       	ldd	r25, Y+4	; 0x04
    807a:	87 30       	cpi	r24, 0x07	; 7
    807c:	91 05       	cpc	r25, r1
    807e:	09 f0       	breq	.+2      	; 0x8082 <main+0x43ae>
    8080:	e5 c0       	rjmp	.+458    	; 0x824c <main+0x4578>
				{
					left_degrees(85);
    8082:	85 e5       	ldi	r24, 0x55	; 85
    8084:	90 e0       	ldi	r25, 0x00	; 0
    8086:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    808a:	9e 01       	movw	r18, r28
    808c:	2d 5e       	subi	r18, 0xED	; 237
    808e:	3d 4f       	sbci	r19, 0xFD	; 253
    8090:	80 e0       	ldi	r24, 0x00	; 0
    8092:	90 e0       	ldi	r25, 0x00	; 0
    8094:	a8 ec       	ldi	r26, 0xC8	; 200
    8096:	b2 e4       	ldi	r27, 0x42	; 66
    8098:	f9 01       	movw	r30, r18
    809a:	80 83       	st	Z, r24
    809c:	91 83       	std	Z+1, r25	; 0x01
    809e:	a2 83       	std	Z+2, r26	; 0x02
    80a0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    80a2:	8e 01       	movw	r16, r28
    80a4:	09 5e       	subi	r16, 0xE9	; 233
    80a6:	1d 4f       	sbci	r17, 0xFD	; 253
    80a8:	ce 01       	movw	r24, r28
    80aa:	8d 5e       	subi	r24, 0xED	; 237
    80ac:	9d 4f       	sbci	r25, 0xFD	; 253
    80ae:	fc 01       	movw	r30, r24
    80b0:	60 81       	ld	r22, Z
    80b2:	71 81       	ldd	r23, Z+1	; 0x01
    80b4:	82 81       	ldd	r24, Z+2	; 0x02
    80b6:	93 81       	ldd	r25, Z+3	; 0x03
    80b8:	26 e6       	ldi	r18, 0x66	; 102
    80ba:	36 e6       	ldi	r19, 0x66	; 102
    80bc:	46 e6       	ldi	r20, 0x66	; 102
    80be:	55 e4       	ldi	r21, 0x45	; 69
    80c0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    80c4:	dc 01       	movw	r26, r24
    80c6:	cb 01       	movw	r24, r22
    80c8:	f8 01       	movw	r30, r16
    80ca:	80 83       	st	Z, r24
    80cc:	91 83       	std	Z+1, r25	; 0x01
    80ce:	a2 83       	std	Z+2, r26	; 0x02
    80d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    80d2:	ce 01       	movw	r24, r28
    80d4:	89 5e       	subi	r24, 0xE9	; 233
    80d6:	9d 4f       	sbci	r25, 0xFD	; 253
    80d8:	11 e0       	ldi	r17, 0x01	; 1
    80da:	fc 01       	movw	r30, r24
    80dc:	60 81       	ld	r22, Z
    80de:	71 81       	ldd	r23, Z+1	; 0x01
    80e0:	82 81       	ldd	r24, Z+2	; 0x02
    80e2:	93 81       	ldd	r25, Z+3	; 0x03
    80e4:	20 e0       	ldi	r18, 0x00	; 0
    80e6:	30 e0       	ldi	r19, 0x00	; 0
    80e8:	40 e8       	ldi	r20, 0x80	; 128
    80ea:	5f e3       	ldi	r21, 0x3F	; 63
    80ec:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    80f0:	88 23       	and	r24, r24
    80f2:	0c f0       	brlt	.+2      	; 0x80f6 <main+0x4422>
    80f4:	10 e0       	ldi	r17, 0x00	; 0
    80f6:	11 23       	and	r17, r17
    80f8:	49 f0       	breq	.+18     	; 0x810c <main+0x4438>
		__ticks = 1;
    80fa:	ce 01       	movw	r24, r28
    80fc:	85 5e       	subi	r24, 0xE5	; 229
    80fe:	9d 4f       	sbci	r25, 0xFD	; 253
    8100:	21 e0       	ldi	r18, 0x01	; 1
    8102:	30 e0       	ldi	r19, 0x00	; 0
    8104:	fc 01       	movw	r30, r24
    8106:	31 83       	std	Z+1, r19	; 0x01
    8108:	20 83       	st	Z, r18
    810a:	74 c0       	rjmp	.+232    	; 0x81f4 <main+0x4520>
	else if (__tmp > 65535)
    810c:	ce 01       	movw	r24, r28
    810e:	89 5e       	subi	r24, 0xE9	; 233
    8110:	9d 4f       	sbci	r25, 0xFD	; 253
    8112:	11 e0       	ldi	r17, 0x01	; 1
    8114:	fc 01       	movw	r30, r24
    8116:	60 81       	ld	r22, Z
    8118:	71 81       	ldd	r23, Z+1	; 0x01
    811a:	82 81       	ldd	r24, Z+2	; 0x02
    811c:	93 81       	ldd	r25, Z+3	; 0x03
    811e:	20 e0       	ldi	r18, 0x00	; 0
    8120:	3f ef       	ldi	r19, 0xFF	; 255
    8122:	4f e7       	ldi	r20, 0x7F	; 127
    8124:	57 e4       	ldi	r21, 0x47	; 71
    8126:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    812a:	18 16       	cp	r1, r24
    812c:	0c f0       	brlt	.+2      	; 0x8130 <main+0x445c>
    812e:	10 e0       	ldi	r17, 0x00	; 0
    8130:	11 23       	and	r17, r17
    8132:	09 f4       	brne	.+2      	; 0x8136 <main+0x4462>
    8134:	4d c0       	rjmp	.+154    	; 0x81d0 <main+0x44fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    8136:	ce 01       	movw	r24, r28
    8138:	8d 5e       	subi	r24, 0xED	; 237
    813a:	9d 4f       	sbci	r25, 0xFD	; 253
    813c:	fc 01       	movw	r30, r24
    813e:	60 81       	ld	r22, Z
    8140:	71 81       	ldd	r23, Z+1	; 0x01
    8142:	82 81       	ldd	r24, Z+2	; 0x02
    8144:	93 81       	ldd	r25, Z+3	; 0x03
    8146:	20 e0       	ldi	r18, 0x00	; 0
    8148:	30 e0       	ldi	r19, 0x00	; 0
    814a:	40 e2       	ldi	r20, 0x20	; 32
    814c:	51 e4       	ldi	r21, 0x41	; 65
    814e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8152:	dc 01       	movw	r26, r24
    8154:	cb 01       	movw	r24, r22
    8156:	8e 01       	movw	r16, r28
    8158:	05 5e       	subi	r16, 0xE5	; 229
    815a:	1d 4f       	sbci	r17, 0xFD	; 253
    815c:	bc 01       	movw	r22, r24
    815e:	cd 01       	movw	r24, r26
    8160:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8164:	dc 01       	movw	r26, r24
    8166:	cb 01       	movw	r24, r22
    8168:	f8 01       	movw	r30, r16
    816a:	91 83       	std	Z+1, r25	; 0x01
    816c:	80 83       	st	Z, r24
    816e:	27 c0       	rjmp	.+78     	; 0x81be <main+0x44ea>
    8170:	ce 01       	movw	r24, r28
    8172:	83 5e       	subi	r24, 0xE3	; 227
    8174:	9d 4f       	sbci	r25, 0xFD	; 253
    8176:	20 e7       	ldi	r18, 0x70	; 112
    8178:	31 e0       	ldi	r19, 0x01	; 1
    817a:	fc 01       	movw	r30, r24
    817c:	31 83       	std	Z+1, r19	; 0x01
    817e:	20 83       	st	Z, r18
    8180:	ce 01       	movw	r24, r28
    8182:	83 5e       	subi	r24, 0xE3	; 227
    8184:	9d 4f       	sbci	r25, 0xFD	; 253
    8186:	fc 01       	movw	r30, r24
    8188:	80 81       	ld	r24, Z
    818a:	91 81       	ldd	r25, Z+1	; 0x01
    818c:	8c 01       	movw	r16, r24
    818e:	c8 01       	movw	r24, r16
    8190:	01 97       	sbiw	r24, 0x01	; 1
    8192:	f1 f7       	brne	.-4      	; 0x8190 <main+0x44bc>
    8194:	8c 01       	movw	r16, r24
    8196:	ce 01       	movw	r24, r28
    8198:	83 5e       	subi	r24, 0xE3	; 227
    819a:	9d 4f       	sbci	r25, 0xFD	; 253
    819c:	fc 01       	movw	r30, r24
    819e:	11 83       	std	Z+1, r17	; 0x01
    81a0:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    81a2:	ce 01       	movw	r24, r28
    81a4:	85 5e       	subi	r24, 0xE5	; 229
    81a6:	9d 4f       	sbci	r25, 0xFD	; 253
    81a8:	9e 01       	movw	r18, r28
    81aa:	25 5e       	subi	r18, 0xE5	; 229
    81ac:	3d 4f       	sbci	r19, 0xFD	; 253
    81ae:	f9 01       	movw	r30, r18
    81b0:	20 81       	ld	r18, Z
    81b2:	31 81       	ldd	r19, Z+1	; 0x01
    81b4:	21 50       	subi	r18, 0x01	; 1
    81b6:	30 40       	sbci	r19, 0x00	; 0
    81b8:	fc 01       	movw	r30, r24
    81ba:	31 83       	std	Z+1, r19	; 0x01
    81bc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    81be:	ce 01       	movw	r24, r28
    81c0:	85 5e       	subi	r24, 0xE5	; 229
    81c2:	9d 4f       	sbci	r25, 0xFD	; 253
    81c4:	fc 01       	movw	r30, r24
    81c6:	80 81       	ld	r24, Z
    81c8:	91 81       	ldd	r25, Z+1	; 0x01
    81ca:	00 97       	sbiw	r24, 0x00	; 0
    81cc:	89 f6       	brne	.-94     	; 0x8170 <main+0x449c>
    81ce:	2f c0       	rjmp	.+94     	; 0x822e <main+0x455a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    81d0:	8e 01       	movw	r16, r28
    81d2:	05 5e       	subi	r16, 0xE5	; 229
    81d4:	1d 4f       	sbci	r17, 0xFD	; 253
    81d6:	ce 01       	movw	r24, r28
    81d8:	89 5e       	subi	r24, 0xE9	; 233
    81da:	9d 4f       	sbci	r25, 0xFD	; 253
    81dc:	fc 01       	movw	r30, r24
    81de:	60 81       	ld	r22, Z
    81e0:	71 81       	ldd	r23, Z+1	; 0x01
    81e2:	82 81       	ldd	r24, Z+2	; 0x02
    81e4:	93 81       	ldd	r25, Z+3	; 0x03
    81e6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    81ea:	dc 01       	movw	r26, r24
    81ec:	cb 01       	movw	r24, r22
    81ee:	f8 01       	movw	r30, r16
    81f0:	91 83       	std	Z+1, r25	; 0x01
    81f2:	80 83       	st	Z, r24
    81f4:	ce 01       	movw	r24, r28
    81f6:	81 5e       	subi	r24, 0xE1	; 225
    81f8:	9d 4f       	sbci	r25, 0xFD	; 253
    81fa:	9e 01       	movw	r18, r28
    81fc:	25 5e       	subi	r18, 0xE5	; 229
    81fe:	3d 4f       	sbci	r19, 0xFD	; 253
    8200:	f9 01       	movw	r30, r18
    8202:	20 81       	ld	r18, Z
    8204:	31 81       	ldd	r19, Z+1	; 0x01
    8206:	fc 01       	movw	r30, r24
    8208:	31 83       	std	Z+1, r19	; 0x01
    820a:	20 83       	st	Z, r18
    820c:	ce 01       	movw	r24, r28
    820e:	81 5e       	subi	r24, 0xE1	; 225
    8210:	9d 4f       	sbci	r25, 0xFD	; 253
    8212:	fc 01       	movw	r30, r24
    8214:	80 81       	ld	r24, Z
    8216:	91 81       	ldd	r25, Z+1	; 0x01
    8218:	8c 01       	movw	r16, r24
    821a:	c8 01       	movw	r24, r16
    821c:	01 97       	sbiw	r24, 0x01	; 1
    821e:	f1 f7       	brne	.-4      	; 0x821c <main+0x4548>
    8220:	8c 01       	movw	r16, r24
    8222:	ce 01       	movw	r24, r28
    8224:	81 5e       	subi	r24, 0xE1	; 225
    8226:	9d 4f       	sbci	r25, 0xFD	; 253
    8228:	fc 01       	movw	r30, r24
    822a:	11 83       	std	Z+1, r17	; 0x01
    822c:	00 83       	st	Z, r16
					_delay_ms(100);
					coor[0]=0;
    822e:	10 92 a7 04 	sts	0x04A7, r1
    8232:	10 92 a6 04 	sts	0x04A6, r1
					coor[1]=0;
    8236:	10 92 a9 04 	sts	0x04A9, r1
    823a:	10 92 a8 04 	sts	0x04A8, r1
					linefollwer();
    823e:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
					compass=4;
    8242:	84 e0       	ldi	r24, 0x04	; 4
    8244:	90 e0       	ldi	r25, 0x00	; 0
    8246:	9c 83       	std	Y+4, r25	; 0x04
    8248:	8b 83       	std	Y+3, r24	; 0x03
    824a:	d1 c1       	rjmp	.+930    	; 0x85ee <main+0x491a>
					
				}
				else
				{
					if(compass==5)
    824c:	8b 81       	ldd	r24, Y+3	; 0x03
    824e:	9c 81       	ldd	r25, Y+4	; 0x04
    8250:	85 30       	cpi	r24, 0x05	; 5
    8252:	91 05       	cpc	r25, r1
    8254:	09 f0       	breq	.+2      	; 0x8258 <main+0x4584>
    8256:	e1 c0       	rjmp	.+450    	; 0x841a <main+0x4746>
    8258:	9e 01       	movw	r18, r28
    825a:	2f 5d       	subi	r18, 0xDF	; 223
    825c:	3d 4f       	sbci	r19, 0xFD	; 253
    825e:	80 e0       	ldi	r24, 0x00	; 0
    8260:	90 e0       	ldi	r25, 0x00	; 0
    8262:	a8 ec       	ldi	r26, 0xC8	; 200
    8264:	b2 e4       	ldi	r27, 0x42	; 66
    8266:	f9 01       	movw	r30, r18
    8268:	80 83       	st	Z, r24
    826a:	91 83       	std	Z+1, r25	; 0x01
    826c:	a2 83       	std	Z+2, r26	; 0x02
    826e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    8270:	8e 01       	movw	r16, r28
    8272:	0b 5d       	subi	r16, 0xDB	; 219
    8274:	1d 4f       	sbci	r17, 0xFD	; 253
    8276:	ce 01       	movw	r24, r28
    8278:	8f 5d       	subi	r24, 0xDF	; 223
    827a:	9d 4f       	sbci	r25, 0xFD	; 253
    827c:	fc 01       	movw	r30, r24
    827e:	60 81       	ld	r22, Z
    8280:	71 81       	ldd	r23, Z+1	; 0x01
    8282:	82 81       	ldd	r24, Z+2	; 0x02
    8284:	93 81       	ldd	r25, Z+3	; 0x03
    8286:	26 e6       	ldi	r18, 0x66	; 102
    8288:	36 e6       	ldi	r19, 0x66	; 102
    828a:	46 e6       	ldi	r20, 0x66	; 102
    828c:	55 e4       	ldi	r21, 0x45	; 69
    828e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8292:	dc 01       	movw	r26, r24
    8294:	cb 01       	movw	r24, r22
    8296:	f8 01       	movw	r30, r16
    8298:	80 83       	st	Z, r24
    829a:	91 83       	std	Z+1, r25	; 0x01
    829c:	a2 83       	std	Z+2, r26	; 0x02
    829e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    82a0:	ce 01       	movw	r24, r28
    82a2:	8b 5d       	subi	r24, 0xDB	; 219
    82a4:	9d 4f       	sbci	r25, 0xFD	; 253
    82a6:	11 e0       	ldi	r17, 0x01	; 1
    82a8:	fc 01       	movw	r30, r24
    82aa:	60 81       	ld	r22, Z
    82ac:	71 81       	ldd	r23, Z+1	; 0x01
    82ae:	82 81       	ldd	r24, Z+2	; 0x02
    82b0:	93 81       	ldd	r25, Z+3	; 0x03
    82b2:	20 e0       	ldi	r18, 0x00	; 0
    82b4:	30 e0       	ldi	r19, 0x00	; 0
    82b6:	40 e8       	ldi	r20, 0x80	; 128
    82b8:	5f e3       	ldi	r21, 0x3F	; 63
    82ba:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    82be:	88 23       	and	r24, r24
    82c0:	0c f0       	brlt	.+2      	; 0x82c4 <main+0x45f0>
    82c2:	10 e0       	ldi	r17, 0x00	; 0
    82c4:	11 23       	and	r17, r17
    82c6:	49 f0       	breq	.+18     	; 0x82da <main+0x4606>
		__ticks = 1;
    82c8:	ce 01       	movw	r24, r28
    82ca:	87 5d       	subi	r24, 0xD7	; 215
    82cc:	9d 4f       	sbci	r25, 0xFD	; 253
    82ce:	21 e0       	ldi	r18, 0x01	; 1
    82d0:	30 e0       	ldi	r19, 0x00	; 0
    82d2:	fc 01       	movw	r30, r24
    82d4:	31 83       	std	Z+1, r19	; 0x01
    82d6:	20 83       	st	Z, r18
    82d8:	74 c0       	rjmp	.+232    	; 0x83c2 <main+0x46ee>
	else if (__tmp > 65535)
    82da:	ce 01       	movw	r24, r28
    82dc:	8b 5d       	subi	r24, 0xDB	; 219
    82de:	9d 4f       	sbci	r25, 0xFD	; 253
    82e0:	11 e0       	ldi	r17, 0x01	; 1
    82e2:	fc 01       	movw	r30, r24
    82e4:	60 81       	ld	r22, Z
    82e6:	71 81       	ldd	r23, Z+1	; 0x01
    82e8:	82 81       	ldd	r24, Z+2	; 0x02
    82ea:	93 81       	ldd	r25, Z+3	; 0x03
    82ec:	20 e0       	ldi	r18, 0x00	; 0
    82ee:	3f ef       	ldi	r19, 0xFF	; 255
    82f0:	4f e7       	ldi	r20, 0x7F	; 127
    82f2:	57 e4       	ldi	r21, 0x47	; 71
    82f4:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    82f8:	18 16       	cp	r1, r24
    82fa:	0c f0       	brlt	.+2      	; 0x82fe <main+0x462a>
    82fc:	10 e0       	ldi	r17, 0x00	; 0
    82fe:	11 23       	and	r17, r17
    8300:	09 f4       	brne	.+2      	; 0x8304 <main+0x4630>
    8302:	4d c0       	rjmp	.+154    	; 0x839e <main+0x46ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    8304:	ce 01       	movw	r24, r28
    8306:	8f 5d       	subi	r24, 0xDF	; 223
    8308:	9d 4f       	sbci	r25, 0xFD	; 253
    830a:	fc 01       	movw	r30, r24
    830c:	60 81       	ld	r22, Z
    830e:	71 81       	ldd	r23, Z+1	; 0x01
    8310:	82 81       	ldd	r24, Z+2	; 0x02
    8312:	93 81       	ldd	r25, Z+3	; 0x03
    8314:	20 e0       	ldi	r18, 0x00	; 0
    8316:	30 e0       	ldi	r19, 0x00	; 0
    8318:	40 e2       	ldi	r20, 0x20	; 32
    831a:	51 e4       	ldi	r21, 0x41	; 65
    831c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8320:	dc 01       	movw	r26, r24
    8322:	cb 01       	movw	r24, r22
    8324:	8e 01       	movw	r16, r28
    8326:	07 5d       	subi	r16, 0xD7	; 215
    8328:	1d 4f       	sbci	r17, 0xFD	; 253
    832a:	bc 01       	movw	r22, r24
    832c:	cd 01       	movw	r24, r26
    832e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8332:	dc 01       	movw	r26, r24
    8334:	cb 01       	movw	r24, r22
    8336:	f8 01       	movw	r30, r16
    8338:	91 83       	std	Z+1, r25	; 0x01
    833a:	80 83       	st	Z, r24
    833c:	27 c0       	rjmp	.+78     	; 0x838c <main+0x46b8>
    833e:	ce 01       	movw	r24, r28
    8340:	85 5d       	subi	r24, 0xD5	; 213
    8342:	9d 4f       	sbci	r25, 0xFD	; 253
    8344:	20 e7       	ldi	r18, 0x70	; 112
    8346:	31 e0       	ldi	r19, 0x01	; 1
    8348:	fc 01       	movw	r30, r24
    834a:	31 83       	std	Z+1, r19	; 0x01
    834c:	20 83       	st	Z, r18
    834e:	ce 01       	movw	r24, r28
    8350:	85 5d       	subi	r24, 0xD5	; 213
    8352:	9d 4f       	sbci	r25, 0xFD	; 253
    8354:	fc 01       	movw	r30, r24
    8356:	80 81       	ld	r24, Z
    8358:	91 81       	ldd	r25, Z+1	; 0x01
    835a:	8c 01       	movw	r16, r24
    835c:	c8 01       	movw	r24, r16
    835e:	01 97       	sbiw	r24, 0x01	; 1
    8360:	f1 f7       	brne	.-4      	; 0x835e <main+0x468a>
    8362:	8c 01       	movw	r16, r24
    8364:	ce 01       	movw	r24, r28
    8366:	85 5d       	subi	r24, 0xD5	; 213
    8368:	9d 4f       	sbci	r25, 0xFD	; 253
    836a:	fc 01       	movw	r30, r24
    836c:	11 83       	std	Z+1, r17	; 0x01
    836e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    8370:	ce 01       	movw	r24, r28
    8372:	87 5d       	subi	r24, 0xD7	; 215
    8374:	9d 4f       	sbci	r25, 0xFD	; 253
    8376:	9e 01       	movw	r18, r28
    8378:	27 5d       	subi	r18, 0xD7	; 215
    837a:	3d 4f       	sbci	r19, 0xFD	; 253
    837c:	f9 01       	movw	r30, r18
    837e:	20 81       	ld	r18, Z
    8380:	31 81       	ldd	r19, Z+1	; 0x01
    8382:	21 50       	subi	r18, 0x01	; 1
    8384:	30 40       	sbci	r19, 0x00	; 0
    8386:	fc 01       	movw	r30, r24
    8388:	31 83       	std	Z+1, r19	; 0x01
    838a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    838c:	ce 01       	movw	r24, r28
    838e:	87 5d       	subi	r24, 0xD7	; 215
    8390:	9d 4f       	sbci	r25, 0xFD	; 253
    8392:	fc 01       	movw	r30, r24
    8394:	80 81       	ld	r24, Z
    8396:	91 81       	ldd	r25, Z+1	; 0x01
    8398:	00 97       	sbiw	r24, 0x00	; 0
    839a:	89 f6       	brne	.-94     	; 0x833e <main+0x466a>
    839c:	2f c0       	rjmp	.+94     	; 0x83fc <main+0x4728>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    839e:	8e 01       	movw	r16, r28
    83a0:	07 5d       	subi	r16, 0xD7	; 215
    83a2:	1d 4f       	sbci	r17, 0xFD	; 253
    83a4:	ce 01       	movw	r24, r28
    83a6:	8b 5d       	subi	r24, 0xDB	; 219
    83a8:	9d 4f       	sbci	r25, 0xFD	; 253
    83aa:	fc 01       	movw	r30, r24
    83ac:	60 81       	ld	r22, Z
    83ae:	71 81       	ldd	r23, Z+1	; 0x01
    83b0:	82 81       	ldd	r24, Z+2	; 0x02
    83b2:	93 81       	ldd	r25, Z+3	; 0x03
    83b4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    83b8:	dc 01       	movw	r26, r24
    83ba:	cb 01       	movw	r24, r22
    83bc:	f8 01       	movw	r30, r16
    83be:	91 83       	std	Z+1, r25	; 0x01
    83c0:	80 83       	st	Z, r24
    83c2:	ce 01       	movw	r24, r28
    83c4:	83 5d       	subi	r24, 0xD3	; 211
    83c6:	9d 4f       	sbci	r25, 0xFD	; 253
    83c8:	9e 01       	movw	r18, r28
    83ca:	27 5d       	subi	r18, 0xD7	; 215
    83cc:	3d 4f       	sbci	r19, 0xFD	; 253
    83ce:	f9 01       	movw	r30, r18
    83d0:	20 81       	ld	r18, Z
    83d2:	31 81       	ldd	r19, Z+1	; 0x01
    83d4:	fc 01       	movw	r30, r24
    83d6:	31 83       	std	Z+1, r19	; 0x01
    83d8:	20 83       	st	Z, r18
    83da:	ce 01       	movw	r24, r28
    83dc:	83 5d       	subi	r24, 0xD3	; 211
    83de:	9d 4f       	sbci	r25, 0xFD	; 253
    83e0:	fc 01       	movw	r30, r24
    83e2:	80 81       	ld	r24, Z
    83e4:	91 81       	ldd	r25, Z+1	; 0x01
    83e6:	8c 01       	movw	r16, r24
    83e8:	c8 01       	movw	r24, r16
    83ea:	01 97       	sbiw	r24, 0x01	; 1
    83ec:	f1 f7       	brne	.-4      	; 0x83ea <main+0x4716>
    83ee:	8c 01       	movw	r16, r24
    83f0:	ce 01       	movw	r24, r28
    83f2:	83 5d       	subi	r24, 0xD3	; 211
    83f4:	9d 4f       	sbci	r25, 0xFD	; 253
    83f6:	fc 01       	movw	r30, r24
    83f8:	11 83       	std	Z+1, r17	; 0x01
    83fa:	00 83       	st	Z, r16
					{
					    _delay_ms(100);                      /// calibration required
						coor[0]=0;
    83fc:	10 92 a7 04 	sts	0x04A7, r1
    8400:	10 92 a6 04 	sts	0x04A6, r1
						coor[1]=0;
    8404:	10 92 a9 04 	sts	0x04A9, r1
    8408:	10 92 a8 04 	sts	0x04A8, r1
						linefollwer();
    840c:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
						compass=4;
    8410:	84 e0       	ldi	r24, 0x04	; 4
    8412:	90 e0       	ldi	r25, 0x00	; 0
    8414:	9c 83       	std	Y+4, r25	; 0x04
    8416:	8b 83       	std	Y+3, r24	; 0x03
    8418:	ea c0       	rjmp	.+468    	; 0x85ee <main+0x491a>
						
					}
						else
						{
							if(compass==4)
    841a:	8b 81       	ldd	r24, Y+3	; 0x03
    841c:	9c 81       	ldd	r25, Y+4	; 0x04
    841e:	84 30       	cpi	r24, 0x04	; 4
    8420:	91 05       	cpc	r25, r1
    8422:	09 f0       	breq	.+2      	; 0x8426 <main+0x4752>
    8424:	e4 c0       	rjmp	.+456    	; 0x85ee <main+0x491a>
							{
								right_degrees(185);
    8426:	89 eb       	ldi	r24, 0xB9	; 185
    8428:	90 e0       	ldi	r25, 0x00	; 0
    842a:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    842e:	9e 01       	movw	r18, r28
    8430:	21 5d       	subi	r18, 0xD1	; 209
    8432:	3d 4f       	sbci	r19, 0xFD	; 253
    8434:	80 e0       	ldi	r24, 0x00	; 0
    8436:	90 e0       	ldi	r25, 0x00	; 0
    8438:	a8 ec       	ldi	r26, 0xC8	; 200
    843a:	b2 e4       	ldi	r27, 0x42	; 66
    843c:	f9 01       	movw	r30, r18
    843e:	80 83       	st	Z, r24
    8440:	91 83       	std	Z+1, r25	; 0x01
    8442:	a2 83       	std	Z+2, r26	; 0x02
    8444:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    8446:	8e 01       	movw	r16, r28
    8448:	0d 5c       	subi	r16, 0xCD	; 205
    844a:	1d 4f       	sbci	r17, 0xFD	; 253
    844c:	ce 01       	movw	r24, r28
    844e:	81 5d       	subi	r24, 0xD1	; 209
    8450:	9d 4f       	sbci	r25, 0xFD	; 253
    8452:	fc 01       	movw	r30, r24
    8454:	60 81       	ld	r22, Z
    8456:	71 81       	ldd	r23, Z+1	; 0x01
    8458:	82 81       	ldd	r24, Z+2	; 0x02
    845a:	93 81       	ldd	r25, Z+3	; 0x03
    845c:	26 e6       	ldi	r18, 0x66	; 102
    845e:	36 e6       	ldi	r19, 0x66	; 102
    8460:	46 e6       	ldi	r20, 0x66	; 102
    8462:	55 e4       	ldi	r21, 0x45	; 69
    8464:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8468:	dc 01       	movw	r26, r24
    846a:	cb 01       	movw	r24, r22
    846c:	f8 01       	movw	r30, r16
    846e:	80 83       	st	Z, r24
    8470:	91 83       	std	Z+1, r25	; 0x01
    8472:	a2 83       	std	Z+2, r26	; 0x02
    8474:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    8476:	ce 01       	movw	r24, r28
    8478:	8d 5c       	subi	r24, 0xCD	; 205
    847a:	9d 4f       	sbci	r25, 0xFD	; 253
    847c:	11 e0       	ldi	r17, 0x01	; 1
    847e:	fc 01       	movw	r30, r24
    8480:	60 81       	ld	r22, Z
    8482:	71 81       	ldd	r23, Z+1	; 0x01
    8484:	82 81       	ldd	r24, Z+2	; 0x02
    8486:	93 81       	ldd	r25, Z+3	; 0x03
    8488:	20 e0       	ldi	r18, 0x00	; 0
    848a:	30 e0       	ldi	r19, 0x00	; 0
    848c:	40 e8       	ldi	r20, 0x80	; 128
    848e:	5f e3       	ldi	r21, 0x3F	; 63
    8490:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    8494:	88 23       	and	r24, r24
    8496:	0c f0       	brlt	.+2      	; 0x849a <main+0x47c6>
    8498:	10 e0       	ldi	r17, 0x00	; 0
    849a:	11 23       	and	r17, r17
    849c:	49 f0       	breq	.+18     	; 0x84b0 <main+0x47dc>
		__ticks = 1;
    849e:	ce 01       	movw	r24, r28
    84a0:	89 5c       	subi	r24, 0xC9	; 201
    84a2:	9d 4f       	sbci	r25, 0xFD	; 253
    84a4:	21 e0       	ldi	r18, 0x01	; 1
    84a6:	30 e0       	ldi	r19, 0x00	; 0
    84a8:	fc 01       	movw	r30, r24
    84aa:	31 83       	std	Z+1, r19	; 0x01
    84ac:	20 83       	st	Z, r18
    84ae:	74 c0       	rjmp	.+232    	; 0x8598 <main+0x48c4>
	else if (__tmp > 65535)
    84b0:	ce 01       	movw	r24, r28
    84b2:	8d 5c       	subi	r24, 0xCD	; 205
    84b4:	9d 4f       	sbci	r25, 0xFD	; 253
    84b6:	11 e0       	ldi	r17, 0x01	; 1
    84b8:	fc 01       	movw	r30, r24
    84ba:	60 81       	ld	r22, Z
    84bc:	71 81       	ldd	r23, Z+1	; 0x01
    84be:	82 81       	ldd	r24, Z+2	; 0x02
    84c0:	93 81       	ldd	r25, Z+3	; 0x03
    84c2:	20 e0       	ldi	r18, 0x00	; 0
    84c4:	3f ef       	ldi	r19, 0xFF	; 255
    84c6:	4f e7       	ldi	r20, 0x7F	; 127
    84c8:	57 e4       	ldi	r21, 0x47	; 71
    84ca:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    84ce:	18 16       	cp	r1, r24
    84d0:	0c f0       	brlt	.+2      	; 0x84d4 <main+0x4800>
    84d2:	10 e0       	ldi	r17, 0x00	; 0
    84d4:	11 23       	and	r17, r17
    84d6:	09 f4       	brne	.+2      	; 0x84da <main+0x4806>
    84d8:	4d c0       	rjmp	.+154    	; 0x8574 <main+0x48a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    84da:	ce 01       	movw	r24, r28
    84dc:	81 5d       	subi	r24, 0xD1	; 209
    84de:	9d 4f       	sbci	r25, 0xFD	; 253
    84e0:	fc 01       	movw	r30, r24
    84e2:	60 81       	ld	r22, Z
    84e4:	71 81       	ldd	r23, Z+1	; 0x01
    84e6:	82 81       	ldd	r24, Z+2	; 0x02
    84e8:	93 81       	ldd	r25, Z+3	; 0x03
    84ea:	20 e0       	ldi	r18, 0x00	; 0
    84ec:	30 e0       	ldi	r19, 0x00	; 0
    84ee:	40 e2       	ldi	r20, 0x20	; 32
    84f0:	51 e4       	ldi	r21, 0x41	; 65
    84f2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    84f6:	dc 01       	movw	r26, r24
    84f8:	cb 01       	movw	r24, r22
    84fa:	8e 01       	movw	r16, r28
    84fc:	09 5c       	subi	r16, 0xC9	; 201
    84fe:	1d 4f       	sbci	r17, 0xFD	; 253
    8500:	bc 01       	movw	r22, r24
    8502:	cd 01       	movw	r24, r26
    8504:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8508:	dc 01       	movw	r26, r24
    850a:	cb 01       	movw	r24, r22
    850c:	f8 01       	movw	r30, r16
    850e:	91 83       	std	Z+1, r25	; 0x01
    8510:	80 83       	st	Z, r24
    8512:	27 c0       	rjmp	.+78     	; 0x8562 <main+0x488e>
    8514:	ce 01       	movw	r24, r28
    8516:	87 5c       	subi	r24, 0xC7	; 199
    8518:	9d 4f       	sbci	r25, 0xFD	; 253
    851a:	20 e7       	ldi	r18, 0x70	; 112
    851c:	31 e0       	ldi	r19, 0x01	; 1
    851e:	fc 01       	movw	r30, r24
    8520:	31 83       	std	Z+1, r19	; 0x01
    8522:	20 83       	st	Z, r18
    8524:	ce 01       	movw	r24, r28
    8526:	87 5c       	subi	r24, 0xC7	; 199
    8528:	9d 4f       	sbci	r25, 0xFD	; 253
    852a:	fc 01       	movw	r30, r24
    852c:	80 81       	ld	r24, Z
    852e:	91 81       	ldd	r25, Z+1	; 0x01
    8530:	8c 01       	movw	r16, r24
    8532:	c8 01       	movw	r24, r16
    8534:	01 97       	sbiw	r24, 0x01	; 1
    8536:	f1 f7       	brne	.-4      	; 0x8534 <main+0x4860>
    8538:	8c 01       	movw	r16, r24
    853a:	ce 01       	movw	r24, r28
    853c:	87 5c       	subi	r24, 0xC7	; 199
    853e:	9d 4f       	sbci	r25, 0xFD	; 253
    8540:	fc 01       	movw	r30, r24
    8542:	11 83       	std	Z+1, r17	; 0x01
    8544:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    8546:	ce 01       	movw	r24, r28
    8548:	89 5c       	subi	r24, 0xC9	; 201
    854a:	9d 4f       	sbci	r25, 0xFD	; 253
    854c:	9e 01       	movw	r18, r28
    854e:	29 5c       	subi	r18, 0xC9	; 201
    8550:	3d 4f       	sbci	r19, 0xFD	; 253
    8552:	f9 01       	movw	r30, r18
    8554:	20 81       	ld	r18, Z
    8556:	31 81       	ldd	r19, Z+1	; 0x01
    8558:	21 50       	subi	r18, 0x01	; 1
    855a:	30 40       	sbci	r19, 0x00	; 0
    855c:	fc 01       	movw	r30, r24
    855e:	31 83       	std	Z+1, r19	; 0x01
    8560:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    8562:	ce 01       	movw	r24, r28
    8564:	89 5c       	subi	r24, 0xC9	; 201
    8566:	9d 4f       	sbci	r25, 0xFD	; 253
    8568:	fc 01       	movw	r30, r24
    856a:	80 81       	ld	r24, Z
    856c:	91 81       	ldd	r25, Z+1	; 0x01
    856e:	00 97       	sbiw	r24, 0x00	; 0
    8570:	89 f6       	brne	.-94     	; 0x8514 <main+0x4840>
    8572:	2f c0       	rjmp	.+94     	; 0x85d2 <main+0x48fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    8574:	8e 01       	movw	r16, r28
    8576:	09 5c       	subi	r16, 0xC9	; 201
    8578:	1d 4f       	sbci	r17, 0xFD	; 253
    857a:	ce 01       	movw	r24, r28
    857c:	8d 5c       	subi	r24, 0xCD	; 205
    857e:	9d 4f       	sbci	r25, 0xFD	; 253
    8580:	fc 01       	movw	r30, r24
    8582:	60 81       	ld	r22, Z
    8584:	71 81       	ldd	r23, Z+1	; 0x01
    8586:	82 81       	ldd	r24, Z+2	; 0x02
    8588:	93 81       	ldd	r25, Z+3	; 0x03
    858a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    858e:	dc 01       	movw	r26, r24
    8590:	cb 01       	movw	r24, r22
    8592:	f8 01       	movw	r30, r16
    8594:	91 83       	std	Z+1, r25	; 0x01
    8596:	80 83       	st	Z, r24
    8598:	ce 01       	movw	r24, r28
    859a:	85 5c       	subi	r24, 0xC5	; 197
    859c:	9d 4f       	sbci	r25, 0xFD	; 253
    859e:	9e 01       	movw	r18, r28
    85a0:	29 5c       	subi	r18, 0xC9	; 201
    85a2:	3d 4f       	sbci	r19, 0xFD	; 253
    85a4:	f9 01       	movw	r30, r18
    85a6:	20 81       	ld	r18, Z
    85a8:	31 81       	ldd	r19, Z+1	; 0x01
    85aa:	fc 01       	movw	r30, r24
    85ac:	31 83       	std	Z+1, r19	; 0x01
    85ae:	20 83       	st	Z, r18
    85b0:	ce 01       	movw	r24, r28
    85b2:	85 5c       	subi	r24, 0xC5	; 197
    85b4:	9d 4f       	sbci	r25, 0xFD	; 253
    85b6:	fc 01       	movw	r30, r24
    85b8:	80 81       	ld	r24, Z
    85ba:	91 81       	ldd	r25, Z+1	; 0x01
    85bc:	8c 01       	movw	r16, r24
    85be:	c8 01       	movw	r24, r16
    85c0:	01 97       	sbiw	r24, 0x01	; 1
    85c2:	f1 f7       	brne	.-4      	; 0x85c0 <main+0x48ec>
    85c4:	8c 01       	movw	r16, r24
    85c6:	ce 01       	movw	r24, r28
    85c8:	85 5c       	subi	r24, 0xC5	; 197
    85ca:	9d 4f       	sbci	r25, 0xFD	; 253
    85cc:	fc 01       	movw	r30, r24
    85ce:	11 83       	std	Z+1, r17	; 0x01
    85d0:	00 83       	st	Z, r16
								_delay_ms(100);
								coor[0]=0;
    85d2:	10 92 a7 04 	sts	0x04A7, r1
    85d6:	10 92 a6 04 	sts	0x04A6, r1
								coor[1]=0;
    85da:	10 92 a9 04 	sts	0x04A9, r1
    85de:	10 92 a8 04 	sts	0x04A8, r1
								linefollwer();
    85e2:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <linefollwer>
								compass=4;
    85e6:	84 e0       	ldi	r24, 0x04	; 4
    85e8:	90 e0       	ldi	r25, 0x00	; 0
    85ea:	9c 83       	std	Y+4, r25	; 0x04
    85ec:	8b 83       	std	Y+3, r24	; 0x03
							}
						}
				
				}
			}				
			flag1=flag1+1;
    85ee:	89 81       	ldd	r24, Y+1	; 0x01
    85f0:	9a 81       	ldd	r25, Y+2	; 0x02
    85f2:	01 96       	adiw	r24, 0x01	; 1
    85f4:	9a 83       	std	Y+2, r25	; 0x02
    85f6:	89 83       	std	Y+1, r24	; 0x01
			recur=recur+1;
    85f8:	8f 81       	ldd	r24, Y+7	; 0x07
    85fa:	98 85       	ldd	r25, Y+8	; 0x08
    85fc:	01 96       	adiw	r24, 0x01	; 1
    85fe:	98 87       	std	Y+8, r25	; 0x08
    8600:	8f 83       	std	Y+7, r24	; 0x07
			help=summ1[recur];
    8602:	9e 01       	movw	r18, r28
    8604:	25 54       	subi	r18, 0x45	; 69
    8606:	39 4f       	sbci	r19, 0xF9	; 249
    8608:	8f 81       	ldd	r24, Y+7	; 0x07
    860a:	98 85       	ldd	r25, Y+8	; 0x08
    860c:	88 0f       	add	r24, r24
    860e:	99 1f       	adc	r25, r25
    8610:	82 0f       	add	r24, r18
    8612:	93 1f       	adc	r25, r19
    8614:	fc 01       	movw	r30, r24
    8616:	80 81       	ld	r24, Z
    8618:	91 81       	ldd	r25, Z+1	; 0x01
    861a:	9c 87       	std	Y+12, r25	; 0x0c
    861c:	8b 87       	std	Y+11, r24	; 0x0b
			goto point1;	
    861e:	0c 94 a5 20 	jmp	0x414a	; 0x414a <main+0x476>
		}
		else
		{
			if(flag1%2==0)
    8622:	89 81       	ldd	r24, Y+1	; 0x01
    8624:	9a 81       	ldd	r25, Y+2	; 0x02
    8626:	81 70       	andi	r24, 0x01	; 1
    8628:	90 70       	andi	r25, 0x00	; 0
    862a:	00 97       	sbiw	r24, 0x00	; 0
    862c:	31 f5       	brne	.+76     	; 0x867a <main+0x49a6>
			{	
				flag4=1;
    862e:	81 e0       	ldi	r24, 0x01	; 1
    8630:	90 e0       	ldi	r25, 0x00	; 0
    8632:	9a 8b       	std	Y+18, r25	; 0x12
    8634:	89 8b       	std	Y+17, r24	; 0x11
				if(summ1[recur+1]==3)                     ///////// change
    8636:	8f 81       	ldd	r24, Y+7	; 0x07
    8638:	98 85       	ldd	r25, Y+8	; 0x08
    863a:	01 96       	adiw	r24, 0x01	; 1
    863c:	9e 01       	movw	r18, r28
    863e:	25 54       	subi	r18, 0x45	; 69
    8640:	39 4f       	sbci	r19, 0xF9	; 249
    8642:	88 0f       	add	r24, r24
    8644:	99 1f       	adc	r25, r25
    8646:	82 0f       	add	r24, r18
    8648:	93 1f       	adc	r25, r19
    864a:	fc 01       	movw	r30, r24
    864c:	80 81       	ld	r24, Z
    864e:	91 81       	ldd	r25, Z+1	; 0x01
    8650:	83 30       	cpi	r24, 0x03	; 3
    8652:	91 05       	cpc	r25, r1
    8654:	21 f4       	brne	.+8      	; 0x865e <main+0x498a>
				{
					stop();
    8656:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <stop>
					goto point2;
    865a:	0c 94 8b 67 	jmp	0xcf16	; 0xcf16 <main+0x9242>
				}
				final[0]=0;
    865e:	ce 01       	movw	r24, r28
    8660:	8d 52       	subi	r24, 0x2D	; 45
    8662:	99 4f       	sbci	r25, 0xF9	; 249
    8664:	fc 01       	movw	r30, r24
    8666:	11 82       	std	Z+1, r1	; 0x01
    8668:	10 82       	st	Z, r1
				final[1]=0;
    866a:	ce 01       	movw	r24, r28
    866c:	8d 52       	subi	r24, 0x2D	; 45
    866e:	99 4f       	sbci	r25, 0xF9	; 249
    8670:	fc 01       	movw	r30, r24
    8672:	13 82       	std	Z+3, r1	; 0x03
    8674:	12 82       	std	Z+2, r1	; 0x02
				goto point;
    8676:	0c 94 4d 22 	jmp	0x449a	; 0x449a <main+0x7c6>
									
			}
			else
			{
				if(flag1%2!=0)
    867a:	89 81       	ldd	r24, Y+1	; 0x01
    867c:	9a 81       	ldd	r25, Y+2	; 0x02
    867e:	81 70       	andi	r24, 0x01	; 1
    8680:	90 70       	andi	r25, 0x00	; 0
    8682:	88 23       	and	r24, r24
    8684:	99 f0       	breq	.+38     	; 0x86ac <main+0x49d8>
				{
					flag4=1;
    8686:	81 e0       	ldi	r24, 0x01	; 1
    8688:	90 e0       	ldi	r25, 0x00	; 0
    868a:	9a 8b       	std	Y+18, r25	; 0x12
    868c:	89 8b       	std	Y+17, r24	; 0x11
					final[0]=0;
    868e:	ce 01       	movw	r24, r28
    8690:	8d 52       	subi	r24, 0x2D	; 45
    8692:	99 4f       	sbci	r25, 0xF9	; 249
    8694:	fc 01       	movw	r30, r24
    8696:	11 82       	std	Z+1, r1	; 0x01
    8698:	10 82       	st	Z, r1
					final[1]=0;
    869a:	ce 01       	movw	r24, r28
    869c:	8d 52       	subi	r24, 0x2D	; 45
    869e:	99 4f       	sbci	r25, 0xF9	; 249
    86a0:	fc 01       	movw	r30, r24
    86a2:	13 82       	std	Z+3, r1	; 0x03
    86a4:	12 82       	std	Z+2, r1	; 0x02
					goto point;
    86a6:	0c 94 4d 22 	jmp	0x449a	; 0x449a <main+0x7c6>
				break;
			}
			else
			{
				if(flag1%2!=0)
					goto ppt;
    86aa:	00 00       	nop
					
				}
			}
		}
	}	
	ppt: if(compass==6)     //////////////////////////////////////////////////////////////////////////////////////////////////////
    86ac:	8b 81       	ldd	r24, Y+3	; 0x03
    86ae:	9c 81       	ldd	r25, Y+4	; 0x04
    86b0:	86 30       	cpi	r24, 0x06	; 6
    86b2:	91 05       	cpc	r25, r1
    86b4:	09 f0       	breq	.+2      	; 0x86b8 <main+0x49e4>
    86b6:	e7 c0       	rjmp	.+462    	; 0x8886 <main+0x4bb2>
	{
		lcd_print(2,1,help,1);
    86b8:	2b 85       	ldd	r18, Y+11	; 0x0b
    86ba:	3c 85       	ldd	r19, Y+12	; 0x0c
    86bc:	82 e0       	ldi	r24, 0x02	; 2
    86be:	61 e0       	ldi	r22, 0x01	; 1
    86c0:	a9 01       	movw	r20, r18
    86c2:	21 e0       	ldi	r18, 0x01	; 1
    86c4:	30 e0       	ldi	r19, 0x00	; 0
    86c6:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
		left_degrees(41);
    86ca:	89 e2       	ldi	r24, 0x29	; 41
    86cc:	90 e0       	ldi	r25, 0x00	; 0
    86ce:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
		matrix1();
    86d2:	0e 94 3f 1a 	call	0x347e	; 0x347e <matrix1>
    86d6:	9e 01       	movw	r18, r28
    86d8:	23 5c       	subi	r18, 0xC3	; 195
    86da:	3d 4f       	sbci	r19, 0xFD	; 253
    86dc:	80 e0       	ldi	r24, 0x00	; 0
    86de:	90 e0       	ldi	r25, 0x00	; 0
    86e0:	aa ef       	ldi	r26, 0xFA	; 250
    86e2:	b3 e4       	ldi	r27, 0x43	; 67
    86e4:	f9 01       	movw	r30, r18
    86e6:	80 83       	st	Z, r24
    86e8:	91 83       	std	Z+1, r25	; 0x01
    86ea:	a2 83       	std	Z+2, r26	; 0x02
    86ec:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    86ee:	8e 01       	movw	r16, r28
    86f0:	0f 5b       	subi	r16, 0xBF	; 191
    86f2:	1d 4f       	sbci	r17, 0xFD	; 253
    86f4:	ce 01       	movw	r24, r28
    86f6:	83 5c       	subi	r24, 0xC3	; 195
    86f8:	9d 4f       	sbci	r25, 0xFD	; 253
    86fa:	fc 01       	movw	r30, r24
    86fc:	60 81       	ld	r22, Z
    86fe:	71 81       	ldd	r23, Z+1	; 0x01
    8700:	82 81       	ldd	r24, Z+2	; 0x02
    8702:	93 81       	ldd	r25, Z+3	; 0x03
    8704:	26 e6       	ldi	r18, 0x66	; 102
    8706:	36 e6       	ldi	r19, 0x66	; 102
    8708:	46 e6       	ldi	r20, 0x66	; 102
    870a:	55 e4       	ldi	r21, 0x45	; 69
    870c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8710:	dc 01       	movw	r26, r24
    8712:	cb 01       	movw	r24, r22
    8714:	f8 01       	movw	r30, r16
    8716:	80 83       	st	Z, r24
    8718:	91 83       	std	Z+1, r25	; 0x01
    871a:	a2 83       	std	Z+2, r26	; 0x02
    871c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    871e:	ce 01       	movw	r24, r28
    8720:	8f 5b       	subi	r24, 0xBF	; 191
    8722:	9d 4f       	sbci	r25, 0xFD	; 253
    8724:	11 e0       	ldi	r17, 0x01	; 1
    8726:	fc 01       	movw	r30, r24
    8728:	60 81       	ld	r22, Z
    872a:	71 81       	ldd	r23, Z+1	; 0x01
    872c:	82 81       	ldd	r24, Z+2	; 0x02
    872e:	93 81       	ldd	r25, Z+3	; 0x03
    8730:	20 e0       	ldi	r18, 0x00	; 0
    8732:	30 e0       	ldi	r19, 0x00	; 0
    8734:	40 e8       	ldi	r20, 0x80	; 128
    8736:	5f e3       	ldi	r21, 0x3F	; 63
    8738:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    873c:	88 23       	and	r24, r24
    873e:	0c f0       	brlt	.+2      	; 0x8742 <main+0x4a6e>
    8740:	10 e0       	ldi	r17, 0x00	; 0
    8742:	11 23       	and	r17, r17
    8744:	49 f0       	breq	.+18     	; 0x8758 <main+0x4a84>
		__ticks = 1;
    8746:	ce 01       	movw	r24, r28
    8748:	8b 5b       	subi	r24, 0xBB	; 187
    874a:	9d 4f       	sbci	r25, 0xFD	; 253
    874c:	21 e0       	ldi	r18, 0x01	; 1
    874e:	30 e0       	ldi	r19, 0x00	; 0
    8750:	fc 01       	movw	r30, r24
    8752:	31 83       	std	Z+1, r19	; 0x01
    8754:	20 83       	st	Z, r18
    8756:	74 c0       	rjmp	.+232    	; 0x8840 <main+0x4b6c>
	else if (__tmp > 65535)
    8758:	ce 01       	movw	r24, r28
    875a:	8f 5b       	subi	r24, 0xBF	; 191
    875c:	9d 4f       	sbci	r25, 0xFD	; 253
    875e:	11 e0       	ldi	r17, 0x01	; 1
    8760:	fc 01       	movw	r30, r24
    8762:	60 81       	ld	r22, Z
    8764:	71 81       	ldd	r23, Z+1	; 0x01
    8766:	82 81       	ldd	r24, Z+2	; 0x02
    8768:	93 81       	ldd	r25, Z+3	; 0x03
    876a:	20 e0       	ldi	r18, 0x00	; 0
    876c:	3f ef       	ldi	r19, 0xFF	; 255
    876e:	4f e7       	ldi	r20, 0x7F	; 127
    8770:	57 e4       	ldi	r21, 0x47	; 71
    8772:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    8776:	18 16       	cp	r1, r24
    8778:	0c f0       	brlt	.+2      	; 0x877c <main+0x4aa8>
    877a:	10 e0       	ldi	r17, 0x00	; 0
    877c:	11 23       	and	r17, r17
    877e:	09 f4       	brne	.+2      	; 0x8782 <main+0x4aae>
    8780:	4d c0       	rjmp	.+154    	; 0x881c <main+0x4b48>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    8782:	ce 01       	movw	r24, r28
    8784:	83 5c       	subi	r24, 0xC3	; 195
    8786:	9d 4f       	sbci	r25, 0xFD	; 253
    8788:	fc 01       	movw	r30, r24
    878a:	60 81       	ld	r22, Z
    878c:	71 81       	ldd	r23, Z+1	; 0x01
    878e:	82 81       	ldd	r24, Z+2	; 0x02
    8790:	93 81       	ldd	r25, Z+3	; 0x03
    8792:	20 e0       	ldi	r18, 0x00	; 0
    8794:	30 e0       	ldi	r19, 0x00	; 0
    8796:	40 e2       	ldi	r20, 0x20	; 32
    8798:	51 e4       	ldi	r21, 0x41	; 65
    879a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    879e:	dc 01       	movw	r26, r24
    87a0:	cb 01       	movw	r24, r22
    87a2:	8e 01       	movw	r16, r28
    87a4:	0b 5b       	subi	r16, 0xBB	; 187
    87a6:	1d 4f       	sbci	r17, 0xFD	; 253
    87a8:	bc 01       	movw	r22, r24
    87aa:	cd 01       	movw	r24, r26
    87ac:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    87b0:	dc 01       	movw	r26, r24
    87b2:	cb 01       	movw	r24, r22
    87b4:	f8 01       	movw	r30, r16
    87b6:	91 83       	std	Z+1, r25	; 0x01
    87b8:	80 83       	st	Z, r24
    87ba:	27 c0       	rjmp	.+78     	; 0x880a <main+0x4b36>
    87bc:	ce 01       	movw	r24, r28
    87be:	89 5b       	subi	r24, 0xB9	; 185
    87c0:	9d 4f       	sbci	r25, 0xFD	; 253
    87c2:	20 e7       	ldi	r18, 0x70	; 112
    87c4:	31 e0       	ldi	r19, 0x01	; 1
    87c6:	fc 01       	movw	r30, r24
    87c8:	31 83       	std	Z+1, r19	; 0x01
    87ca:	20 83       	st	Z, r18
    87cc:	ce 01       	movw	r24, r28
    87ce:	89 5b       	subi	r24, 0xB9	; 185
    87d0:	9d 4f       	sbci	r25, 0xFD	; 253
    87d2:	fc 01       	movw	r30, r24
    87d4:	80 81       	ld	r24, Z
    87d6:	91 81       	ldd	r25, Z+1	; 0x01
    87d8:	8c 01       	movw	r16, r24
    87da:	c8 01       	movw	r24, r16
    87dc:	01 97       	sbiw	r24, 0x01	; 1
    87de:	f1 f7       	brne	.-4      	; 0x87dc <main+0x4b08>
    87e0:	8c 01       	movw	r16, r24
    87e2:	ce 01       	movw	r24, r28
    87e4:	89 5b       	subi	r24, 0xB9	; 185
    87e6:	9d 4f       	sbci	r25, 0xFD	; 253
    87e8:	fc 01       	movw	r30, r24
    87ea:	11 83       	std	Z+1, r17	; 0x01
    87ec:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    87ee:	ce 01       	movw	r24, r28
    87f0:	8b 5b       	subi	r24, 0xBB	; 187
    87f2:	9d 4f       	sbci	r25, 0xFD	; 253
    87f4:	9e 01       	movw	r18, r28
    87f6:	2b 5b       	subi	r18, 0xBB	; 187
    87f8:	3d 4f       	sbci	r19, 0xFD	; 253
    87fa:	f9 01       	movw	r30, r18
    87fc:	20 81       	ld	r18, Z
    87fe:	31 81       	ldd	r19, Z+1	; 0x01
    8800:	21 50       	subi	r18, 0x01	; 1
    8802:	30 40       	sbci	r19, 0x00	; 0
    8804:	fc 01       	movw	r30, r24
    8806:	31 83       	std	Z+1, r19	; 0x01
    8808:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    880a:	ce 01       	movw	r24, r28
    880c:	8b 5b       	subi	r24, 0xBB	; 187
    880e:	9d 4f       	sbci	r25, 0xFD	; 253
    8810:	fc 01       	movw	r30, r24
    8812:	80 81       	ld	r24, Z
    8814:	91 81       	ldd	r25, Z+1	; 0x01
    8816:	00 97       	sbiw	r24, 0x00	; 0
    8818:	89 f6       	brne	.-94     	; 0x87bc <main+0x4ae8>
    881a:	2f c0       	rjmp	.+94     	; 0x887a <main+0x4ba6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    881c:	8e 01       	movw	r16, r28
    881e:	0b 5b       	subi	r16, 0xBB	; 187
    8820:	1d 4f       	sbci	r17, 0xFD	; 253
    8822:	ce 01       	movw	r24, r28
    8824:	8f 5b       	subi	r24, 0xBF	; 191
    8826:	9d 4f       	sbci	r25, 0xFD	; 253
    8828:	fc 01       	movw	r30, r24
    882a:	60 81       	ld	r22, Z
    882c:	71 81       	ldd	r23, Z+1	; 0x01
    882e:	82 81       	ldd	r24, Z+2	; 0x02
    8830:	93 81       	ldd	r25, Z+3	; 0x03
    8832:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8836:	dc 01       	movw	r26, r24
    8838:	cb 01       	movw	r24, r22
    883a:	f8 01       	movw	r30, r16
    883c:	91 83       	std	Z+1, r25	; 0x01
    883e:	80 83       	st	Z, r24
    8840:	ce 01       	movw	r24, r28
    8842:	87 5b       	subi	r24, 0xB7	; 183
    8844:	9d 4f       	sbci	r25, 0xFD	; 253
    8846:	9e 01       	movw	r18, r28
    8848:	2b 5b       	subi	r18, 0xBB	; 187
    884a:	3d 4f       	sbci	r19, 0xFD	; 253
    884c:	f9 01       	movw	r30, r18
    884e:	20 81       	ld	r18, Z
    8850:	31 81       	ldd	r19, Z+1	; 0x01
    8852:	fc 01       	movw	r30, r24
    8854:	31 83       	std	Z+1, r19	; 0x01
    8856:	20 83       	st	Z, r18
    8858:	ce 01       	movw	r24, r28
    885a:	87 5b       	subi	r24, 0xB7	; 183
    885c:	9d 4f       	sbci	r25, 0xFD	; 253
    885e:	fc 01       	movw	r30, r24
    8860:	80 81       	ld	r24, Z
    8862:	91 81       	ldd	r25, Z+1	; 0x01
    8864:	8c 01       	movw	r16, r24
    8866:	c8 01       	movw	r24, r16
    8868:	01 97       	sbiw	r24, 0x01	; 1
    886a:	f1 f7       	brne	.-4      	; 0x8868 <main+0x4b94>
    886c:	8c 01       	movw	r16, r24
    886e:	ce 01       	movw	r24, r28
    8870:	87 5b       	subi	r24, 0xB7	; 183
    8872:	9d 4f       	sbci	r25, 0xFD	; 253
    8874:	fc 01       	movw	r30, r24
    8876:	11 83       	std	Z+1, r17	; 0x01
    8878:	00 83       	st	Z, r16
		_delay_ms(500);
		right_degrees(43);
    887a:	8b e2       	ldi	r24, 0x2B	; 43
    887c:	90 e0       	ldi	r25, 0x00	; 0
    887e:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
				}
			}
		}
		
	}
	goto hotspot;
    8882:	0c 94 5b 3b 	jmp	0x76b6	; 0x76b6 <main+0x39e2>
		right_degrees(43);
		
	}
	else
	{
		if(compass==7)
    8886:	8b 81       	ldd	r24, Y+3	; 0x03
    8888:	9c 81       	ldd	r25, Y+4	; 0x04
    888a:	87 30       	cpi	r24, 0x07	; 7
    888c:	91 05       	cpc	r25, r1
    888e:	09 f0       	breq	.+2      	; 0x8892 <main+0x4bbe>
    8890:	e7 c0       	rjmp	.+462    	; 0x8a60 <main+0x4d8c>
		{
			lcd_print(2,1,help,1);
    8892:	2b 85       	ldd	r18, Y+11	; 0x0b
    8894:	3c 85       	ldd	r19, Y+12	; 0x0c
    8896:	82 e0       	ldi	r24, 0x02	; 2
    8898:	61 e0       	ldi	r22, 0x01	; 1
    889a:	a9 01       	movw	r20, r18
    889c:	21 e0       	ldi	r18, 0x01	; 1
    889e:	30 e0       	ldi	r19, 0x00	; 0
    88a0:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
			right_degrees(41);
    88a4:	89 e2       	ldi	r24, 0x29	; 41
    88a6:	90 e0       	ldi	r25, 0x00	; 0
    88a8:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
			matrix1();
    88ac:	0e 94 3f 1a 	call	0x347e	; 0x347e <matrix1>
    88b0:	9e 01       	movw	r18, r28
    88b2:	25 5b       	subi	r18, 0xB5	; 181
    88b4:	3d 4f       	sbci	r19, 0xFD	; 253
    88b6:	80 e0       	ldi	r24, 0x00	; 0
    88b8:	90 e0       	ldi	r25, 0x00	; 0
    88ba:	aa ef       	ldi	r26, 0xFA	; 250
    88bc:	b3 e4       	ldi	r27, 0x43	; 67
    88be:	f9 01       	movw	r30, r18
    88c0:	80 83       	st	Z, r24
    88c2:	91 83       	std	Z+1, r25	; 0x01
    88c4:	a2 83       	std	Z+2, r26	; 0x02
    88c6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    88c8:	8e 01       	movw	r16, r28
    88ca:	01 5b       	subi	r16, 0xB1	; 177
    88cc:	1d 4f       	sbci	r17, 0xFD	; 253
    88ce:	ce 01       	movw	r24, r28
    88d0:	85 5b       	subi	r24, 0xB5	; 181
    88d2:	9d 4f       	sbci	r25, 0xFD	; 253
    88d4:	fc 01       	movw	r30, r24
    88d6:	60 81       	ld	r22, Z
    88d8:	71 81       	ldd	r23, Z+1	; 0x01
    88da:	82 81       	ldd	r24, Z+2	; 0x02
    88dc:	93 81       	ldd	r25, Z+3	; 0x03
    88de:	26 e6       	ldi	r18, 0x66	; 102
    88e0:	36 e6       	ldi	r19, 0x66	; 102
    88e2:	46 e6       	ldi	r20, 0x66	; 102
    88e4:	55 e4       	ldi	r21, 0x45	; 69
    88e6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    88ea:	dc 01       	movw	r26, r24
    88ec:	cb 01       	movw	r24, r22
    88ee:	f8 01       	movw	r30, r16
    88f0:	80 83       	st	Z, r24
    88f2:	91 83       	std	Z+1, r25	; 0x01
    88f4:	a2 83       	std	Z+2, r26	; 0x02
    88f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    88f8:	ce 01       	movw	r24, r28
    88fa:	81 5b       	subi	r24, 0xB1	; 177
    88fc:	9d 4f       	sbci	r25, 0xFD	; 253
    88fe:	11 e0       	ldi	r17, 0x01	; 1
    8900:	fc 01       	movw	r30, r24
    8902:	60 81       	ld	r22, Z
    8904:	71 81       	ldd	r23, Z+1	; 0x01
    8906:	82 81       	ldd	r24, Z+2	; 0x02
    8908:	93 81       	ldd	r25, Z+3	; 0x03
    890a:	20 e0       	ldi	r18, 0x00	; 0
    890c:	30 e0       	ldi	r19, 0x00	; 0
    890e:	40 e8       	ldi	r20, 0x80	; 128
    8910:	5f e3       	ldi	r21, 0x3F	; 63
    8912:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    8916:	88 23       	and	r24, r24
    8918:	0c f0       	brlt	.+2      	; 0x891c <main+0x4c48>
    891a:	10 e0       	ldi	r17, 0x00	; 0
    891c:	11 23       	and	r17, r17
    891e:	49 f0       	breq	.+18     	; 0x8932 <main+0x4c5e>
		__ticks = 1;
    8920:	ce 01       	movw	r24, r28
    8922:	8d 5a       	subi	r24, 0xAD	; 173
    8924:	9d 4f       	sbci	r25, 0xFD	; 253
    8926:	21 e0       	ldi	r18, 0x01	; 1
    8928:	30 e0       	ldi	r19, 0x00	; 0
    892a:	fc 01       	movw	r30, r24
    892c:	31 83       	std	Z+1, r19	; 0x01
    892e:	20 83       	st	Z, r18
    8930:	74 c0       	rjmp	.+232    	; 0x8a1a <main+0x4d46>
	else if (__tmp > 65535)
    8932:	ce 01       	movw	r24, r28
    8934:	81 5b       	subi	r24, 0xB1	; 177
    8936:	9d 4f       	sbci	r25, 0xFD	; 253
    8938:	11 e0       	ldi	r17, 0x01	; 1
    893a:	fc 01       	movw	r30, r24
    893c:	60 81       	ld	r22, Z
    893e:	71 81       	ldd	r23, Z+1	; 0x01
    8940:	82 81       	ldd	r24, Z+2	; 0x02
    8942:	93 81       	ldd	r25, Z+3	; 0x03
    8944:	20 e0       	ldi	r18, 0x00	; 0
    8946:	3f ef       	ldi	r19, 0xFF	; 255
    8948:	4f e7       	ldi	r20, 0x7F	; 127
    894a:	57 e4       	ldi	r21, 0x47	; 71
    894c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    8950:	18 16       	cp	r1, r24
    8952:	0c f0       	brlt	.+2      	; 0x8956 <main+0x4c82>
    8954:	10 e0       	ldi	r17, 0x00	; 0
    8956:	11 23       	and	r17, r17
    8958:	09 f4       	brne	.+2      	; 0x895c <main+0x4c88>
    895a:	4d c0       	rjmp	.+154    	; 0x89f6 <main+0x4d22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    895c:	ce 01       	movw	r24, r28
    895e:	85 5b       	subi	r24, 0xB5	; 181
    8960:	9d 4f       	sbci	r25, 0xFD	; 253
    8962:	fc 01       	movw	r30, r24
    8964:	60 81       	ld	r22, Z
    8966:	71 81       	ldd	r23, Z+1	; 0x01
    8968:	82 81       	ldd	r24, Z+2	; 0x02
    896a:	93 81       	ldd	r25, Z+3	; 0x03
    896c:	20 e0       	ldi	r18, 0x00	; 0
    896e:	30 e0       	ldi	r19, 0x00	; 0
    8970:	40 e2       	ldi	r20, 0x20	; 32
    8972:	51 e4       	ldi	r21, 0x41	; 65
    8974:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8978:	dc 01       	movw	r26, r24
    897a:	cb 01       	movw	r24, r22
    897c:	8e 01       	movw	r16, r28
    897e:	0d 5a       	subi	r16, 0xAD	; 173
    8980:	1d 4f       	sbci	r17, 0xFD	; 253
    8982:	bc 01       	movw	r22, r24
    8984:	cd 01       	movw	r24, r26
    8986:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    898a:	dc 01       	movw	r26, r24
    898c:	cb 01       	movw	r24, r22
    898e:	f8 01       	movw	r30, r16
    8990:	91 83       	std	Z+1, r25	; 0x01
    8992:	80 83       	st	Z, r24
    8994:	27 c0       	rjmp	.+78     	; 0x89e4 <main+0x4d10>
    8996:	ce 01       	movw	r24, r28
    8998:	8b 5a       	subi	r24, 0xAB	; 171
    899a:	9d 4f       	sbci	r25, 0xFD	; 253
    899c:	20 e7       	ldi	r18, 0x70	; 112
    899e:	31 e0       	ldi	r19, 0x01	; 1
    89a0:	fc 01       	movw	r30, r24
    89a2:	31 83       	std	Z+1, r19	; 0x01
    89a4:	20 83       	st	Z, r18
    89a6:	ce 01       	movw	r24, r28
    89a8:	8b 5a       	subi	r24, 0xAB	; 171
    89aa:	9d 4f       	sbci	r25, 0xFD	; 253
    89ac:	fc 01       	movw	r30, r24
    89ae:	80 81       	ld	r24, Z
    89b0:	91 81       	ldd	r25, Z+1	; 0x01
    89b2:	8c 01       	movw	r16, r24
    89b4:	c8 01       	movw	r24, r16
    89b6:	01 97       	sbiw	r24, 0x01	; 1
    89b8:	f1 f7       	brne	.-4      	; 0x89b6 <main+0x4ce2>
    89ba:	8c 01       	movw	r16, r24
    89bc:	ce 01       	movw	r24, r28
    89be:	8b 5a       	subi	r24, 0xAB	; 171
    89c0:	9d 4f       	sbci	r25, 0xFD	; 253
    89c2:	fc 01       	movw	r30, r24
    89c4:	11 83       	std	Z+1, r17	; 0x01
    89c6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    89c8:	ce 01       	movw	r24, r28
    89ca:	8d 5a       	subi	r24, 0xAD	; 173
    89cc:	9d 4f       	sbci	r25, 0xFD	; 253
    89ce:	9e 01       	movw	r18, r28
    89d0:	2d 5a       	subi	r18, 0xAD	; 173
    89d2:	3d 4f       	sbci	r19, 0xFD	; 253
    89d4:	f9 01       	movw	r30, r18
    89d6:	20 81       	ld	r18, Z
    89d8:	31 81       	ldd	r19, Z+1	; 0x01
    89da:	21 50       	subi	r18, 0x01	; 1
    89dc:	30 40       	sbci	r19, 0x00	; 0
    89de:	fc 01       	movw	r30, r24
    89e0:	31 83       	std	Z+1, r19	; 0x01
    89e2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    89e4:	ce 01       	movw	r24, r28
    89e6:	8d 5a       	subi	r24, 0xAD	; 173
    89e8:	9d 4f       	sbci	r25, 0xFD	; 253
    89ea:	fc 01       	movw	r30, r24
    89ec:	80 81       	ld	r24, Z
    89ee:	91 81       	ldd	r25, Z+1	; 0x01
    89f0:	00 97       	sbiw	r24, 0x00	; 0
    89f2:	89 f6       	brne	.-94     	; 0x8996 <main+0x4cc2>
    89f4:	2f c0       	rjmp	.+94     	; 0x8a54 <main+0x4d80>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    89f6:	8e 01       	movw	r16, r28
    89f8:	0d 5a       	subi	r16, 0xAD	; 173
    89fa:	1d 4f       	sbci	r17, 0xFD	; 253
    89fc:	ce 01       	movw	r24, r28
    89fe:	81 5b       	subi	r24, 0xB1	; 177
    8a00:	9d 4f       	sbci	r25, 0xFD	; 253
    8a02:	fc 01       	movw	r30, r24
    8a04:	60 81       	ld	r22, Z
    8a06:	71 81       	ldd	r23, Z+1	; 0x01
    8a08:	82 81       	ldd	r24, Z+2	; 0x02
    8a0a:	93 81       	ldd	r25, Z+3	; 0x03
    8a0c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8a10:	dc 01       	movw	r26, r24
    8a12:	cb 01       	movw	r24, r22
    8a14:	f8 01       	movw	r30, r16
    8a16:	91 83       	std	Z+1, r25	; 0x01
    8a18:	80 83       	st	Z, r24
    8a1a:	ce 01       	movw	r24, r28
    8a1c:	89 5a       	subi	r24, 0xA9	; 169
    8a1e:	9d 4f       	sbci	r25, 0xFD	; 253
    8a20:	9e 01       	movw	r18, r28
    8a22:	2d 5a       	subi	r18, 0xAD	; 173
    8a24:	3d 4f       	sbci	r19, 0xFD	; 253
    8a26:	f9 01       	movw	r30, r18
    8a28:	20 81       	ld	r18, Z
    8a2a:	31 81       	ldd	r19, Z+1	; 0x01
    8a2c:	fc 01       	movw	r30, r24
    8a2e:	31 83       	std	Z+1, r19	; 0x01
    8a30:	20 83       	st	Z, r18
    8a32:	ce 01       	movw	r24, r28
    8a34:	89 5a       	subi	r24, 0xA9	; 169
    8a36:	9d 4f       	sbci	r25, 0xFD	; 253
    8a38:	fc 01       	movw	r30, r24
    8a3a:	80 81       	ld	r24, Z
    8a3c:	91 81       	ldd	r25, Z+1	; 0x01
    8a3e:	8c 01       	movw	r16, r24
    8a40:	c8 01       	movw	r24, r16
    8a42:	01 97       	sbiw	r24, 0x01	; 1
    8a44:	f1 f7       	brne	.-4      	; 0x8a42 <main+0x4d6e>
    8a46:	8c 01       	movw	r16, r24
    8a48:	ce 01       	movw	r24, r28
    8a4a:	89 5a       	subi	r24, 0xA9	; 169
    8a4c:	9d 4f       	sbci	r25, 0xFD	; 253
    8a4e:	fc 01       	movw	r30, r24
    8a50:	11 83       	std	Z+1, r17	; 0x01
    8a52:	00 83       	st	Z, r16
			_delay_ms(500);
			left_degrees(43);
    8a54:	8b e2       	ldi	r24, 0x2B	; 43
    8a56:	90 e0       	ldi	r25, 0x00	; 0
    8a58:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
				}
			}
		}
		
	}
	goto hotspot;
    8a5c:	0c 94 5b 3b 	jmp	0x76b6	; 0x76b6 <main+0x39e2>
			left_degrees(43);
			
		}
		else
		{
			if(compass==4)
    8a60:	8b 81       	ldd	r24, Y+3	; 0x03
    8a62:	9c 81       	ldd	r25, Y+4	; 0x04
    8a64:	84 30       	cpi	r24, 0x04	; 4
    8a66:	91 05       	cpc	r25, r1
    8a68:	11 f0       	breq	.+4      	; 0x8a6e <main+0x4d9a>
    8a6a:	0c 94 5b 3b 	jmp	0x76b6	; 0x76b6 <main+0x39e2>
			{
				lcd_print(2,1,help,1);
    8a6e:	2b 85       	ldd	r18, Y+11	; 0x0b
    8a70:	3c 85       	ldd	r19, Y+12	; 0x0c
    8a72:	82 e0       	ldi	r24, 0x02	; 2
    8a74:	61 e0       	ldi	r22, 0x01	; 1
    8a76:	a9 01       	movw	r20, r18
    8a78:	21 e0       	ldi	r18, 0x01	; 1
    8a7a:	30 e0       	ldi	r19, 0x00	; 0
    8a7c:	0e 94 b6 0a 	call	0x156c	; 0x156c <lcd_print>
				for(int i=0;i<4;i++)
    8a80:	1a a2       	lds	r17, 0x9a
    8a82:	19 a2       	lds	r17, 0x99
    8a84:	05 c2       	rjmp	.+1034   	; 0x8e90 <main+0x51bc>
				{
					if(coor[0]<origin1[boxnumber][i][0])
    8a86:	20 91 a6 04 	lds	r18, 0x04A6
    8a8a:	30 91 a7 04 	lds	r19, 0x04A7
    8a8e:	ae 01       	movw	r20, r28
    8a90:	4d 5b       	subi	r20, 0xBD	; 189
    8a92:	5b 4f       	sbci	r21, 0xFB	; 251
    8a94:	8d 81       	ldd	r24, Y+5	; 0x05
    8a96:	9e 81       	ldd	r25, Y+6	; 0x06
    8a98:	bc 01       	movw	r22, r24
    8a9a:	66 0f       	add	r22, r22
    8a9c:	77 1f       	adc	r23, r23
    8a9e:	66 0f       	add	r22, r22
    8aa0:	77 1f       	adc	r23, r23
    8aa2:	89 a1       	lds	r24, 0x49
    8aa4:	9a a1       	lds	r25, 0x4a
    8aa6:	86 0f       	add	r24, r22
    8aa8:	97 1f       	adc	r25, r23
    8aaa:	88 0f       	add	r24, r24
    8aac:	99 1f       	adc	r25, r25
    8aae:	88 0f       	add	r24, r24
    8ab0:	99 1f       	adc	r25, r25
    8ab2:	84 0f       	add	r24, r20
    8ab4:	95 1f       	adc	r25, r21
    8ab6:	fc 01       	movw	r30, r24
    8ab8:	80 81       	ld	r24, Z
    8aba:	91 81       	ldd	r25, Z+1	; 0x01
    8abc:	28 17       	cp	r18, r24
    8abe:	39 07       	cpc	r19, r25
    8ac0:	0c f0       	brlt	.+2      	; 0x8ac4 <main+0x4df0>
    8ac2:	e1 c0       	rjmp	.+450    	; 0x8c86 <main+0x4fb2>
					{
						right_degrees(41);								//// calibrate
    8ac4:	89 e2       	ldi	r24, 0x29	; 41
    8ac6:	90 e0       	ldi	r25, 0x00	; 0
    8ac8:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
    8acc:	9e 01       	movw	r18, r28
    8ace:	27 5a       	subi	r18, 0xA7	; 167
    8ad0:	3d 4f       	sbci	r19, 0xFD	; 253
    8ad2:	80 e0       	ldi	r24, 0x00	; 0
    8ad4:	90 e0       	ldi	r25, 0x00	; 0
    8ad6:	aa ef       	ldi	r26, 0xFA	; 250
    8ad8:	b3 e4       	ldi	r27, 0x43	; 67
    8ada:	f9 01       	movw	r30, r18
    8adc:	80 83       	st	Z, r24
    8ade:	91 83       	std	Z+1, r25	; 0x01
    8ae0:	a2 83       	std	Z+2, r26	; 0x02
    8ae2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    8ae4:	8e 01       	movw	r16, r28
    8ae6:	03 5a       	subi	r16, 0xA3	; 163
    8ae8:	1d 4f       	sbci	r17, 0xFD	; 253
    8aea:	ce 01       	movw	r24, r28
    8aec:	87 5a       	subi	r24, 0xA7	; 167
    8aee:	9d 4f       	sbci	r25, 0xFD	; 253
    8af0:	fc 01       	movw	r30, r24
    8af2:	60 81       	ld	r22, Z
    8af4:	71 81       	ldd	r23, Z+1	; 0x01
    8af6:	82 81       	ldd	r24, Z+2	; 0x02
    8af8:	93 81       	ldd	r25, Z+3	; 0x03
    8afa:	26 e6       	ldi	r18, 0x66	; 102
    8afc:	36 e6       	ldi	r19, 0x66	; 102
    8afe:	46 e6       	ldi	r20, 0x66	; 102
    8b00:	55 e4       	ldi	r21, 0x45	; 69
    8b02:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8b06:	dc 01       	movw	r26, r24
    8b08:	cb 01       	movw	r24, r22
    8b0a:	f8 01       	movw	r30, r16
    8b0c:	80 83       	st	Z, r24
    8b0e:	91 83       	std	Z+1, r25	; 0x01
    8b10:	a2 83       	std	Z+2, r26	; 0x02
    8b12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    8b14:	ce 01       	movw	r24, r28
    8b16:	83 5a       	subi	r24, 0xA3	; 163
    8b18:	9d 4f       	sbci	r25, 0xFD	; 253
    8b1a:	11 e0       	ldi	r17, 0x01	; 1
    8b1c:	fc 01       	movw	r30, r24
    8b1e:	60 81       	ld	r22, Z
    8b20:	71 81       	ldd	r23, Z+1	; 0x01
    8b22:	82 81       	ldd	r24, Z+2	; 0x02
    8b24:	93 81       	ldd	r25, Z+3	; 0x03
    8b26:	20 e0       	ldi	r18, 0x00	; 0
    8b28:	30 e0       	ldi	r19, 0x00	; 0
    8b2a:	40 e8       	ldi	r20, 0x80	; 128
    8b2c:	5f e3       	ldi	r21, 0x3F	; 63
    8b2e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    8b32:	88 23       	and	r24, r24
    8b34:	0c f0       	brlt	.+2      	; 0x8b38 <main+0x4e64>
    8b36:	10 e0       	ldi	r17, 0x00	; 0
    8b38:	11 23       	and	r17, r17
    8b3a:	49 f0       	breq	.+18     	; 0x8b4e <main+0x4e7a>
		__ticks = 1;
    8b3c:	ce 01       	movw	r24, r28
    8b3e:	8f 59       	subi	r24, 0x9F	; 159
    8b40:	9d 4f       	sbci	r25, 0xFD	; 253
    8b42:	21 e0       	ldi	r18, 0x01	; 1
    8b44:	30 e0       	ldi	r19, 0x00	; 0
    8b46:	fc 01       	movw	r30, r24
    8b48:	31 83       	std	Z+1, r19	; 0x01
    8b4a:	20 83       	st	Z, r18
    8b4c:	74 c0       	rjmp	.+232    	; 0x8c36 <main+0x4f62>
	else if (__tmp > 65535)
    8b4e:	ce 01       	movw	r24, r28
    8b50:	83 5a       	subi	r24, 0xA3	; 163
    8b52:	9d 4f       	sbci	r25, 0xFD	; 253
    8b54:	11 e0       	ldi	r17, 0x01	; 1
    8b56:	fc 01       	movw	r30, r24
    8b58:	60 81       	ld	r22, Z
    8b5a:	71 81       	ldd	r23, Z+1	; 0x01
    8b5c:	82 81       	ldd	r24, Z+2	; 0x02
    8b5e:	93 81       	ldd	r25, Z+3	; 0x03
    8b60:	20 e0       	ldi	r18, 0x00	; 0
    8b62:	3f ef       	ldi	r19, 0xFF	; 255
    8b64:	4f e7       	ldi	r20, 0x7F	; 127
    8b66:	57 e4       	ldi	r21, 0x47	; 71
    8b68:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    8b6c:	18 16       	cp	r1, r24
    8b6e:	0c f0       	brlt	.+2      	; 0x8b72 <main+0x4e9e>
    8b70:	10 e0       	ldi	r17, 0x00	; 0
    8b72:	11 23       	and	r17, r17
    8b74:	09 f4       	brne	.+2      	; 0x8b78 <main+0x4ea4>
    8b76:	4d c0       	rjmp	.+154    	; 0x8c12 <main+0x4f3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    8b78:	ce 01       	movw	r24, r28
    8b7a:	87 5a       	subi	r24, 0xA7	; 167
    8b7c:	9d 4f       	sbci	r25, 0xFD	; 253
    8b7e:	fc 01       	movw	r30, r24
    8b80:	60 81       	ld	r22, Z
    8b82:	71 81       	ldd	r23, Z+1	; 0x01
    8b84:	82 81       	ldd	r24, Z+2	; 0x02
    8b86:	93 81       	ldd	r25, Z+3	; 0x03
    8b88:	20 e0       	ldi	r18, 0x00	; 0
    8b8a:	30 e0       	ldi	r19, 0x00	; 0
    8b8c:	40 e2       	ldi	r20, 0x20	; 32
    8b8e:	51 e4       	ldi	r21, 0x41	; 65
    8b90:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8b94:	dc 01       	movw	r26, r24
    8b96:	cb 01       	movw	r24, r22
    8b98:	8e 01       	movw	r16, r28
    8b9a:	0f 59       	subi	r16, 0x9F	; 159
    8b9c:	1d 4f       	sbci	r17, 0xFD	; 253
    8b9e:	bc 01       	movw	r22, r24
    8ba0:	cd 01       	movw	r24, r26
    8ba2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8ba6:	dc 01       	movw	r26, r24
    8ba8:	cb 01       	movw	r24, r22
    8baa:	f8 01       	movw	r30, r16
    8bac:	91 83       	std	Z+1, r25	; 0x01
    8bae:	80 83       	st	Z, r24
    8bb0:	27 c0       	rjmp	.+78     	; 0x8c00 <main+0x4f2c>
    8bb2:	ce 01       	movw	r24, r28
    8bb4:	8d 59       	subi	r24, 0x9D	; 157
    8bb6:	9d 4f       	sbci	r25, 0xFD	; 253
    8bb8:	20 e7       	ldi	r18, 0x70	; 112
    8bba:	31 e0       	ldi	r19, 0x01	; 1
    8bbc:	fc 01       	movw	r30, r24
    8bbe:	31 83       	std	Z+1, r19	; 0x01
    8bc0:	20 83       	st	Z, r18
    8bc2:	ce 01       	movw	r24, r28
    8bc4:	8d 59       	subi	r24, 0x9D	; 157
    8bc6:	9d 4f       	sbci	r25, 0xFD	; 253
    8bc8:	fc 01       	movw	r30, r24
    8bca:	80 81       	ld	r24, Z
    8bcc:	91 81       	ldd	r25, Z+1	; 0x01
    8bce:	8c 01       	movw	r16, r24
    8bd0:	c8 01       	movw	r24, r16
    8bd2:	01 97       	sbiw	r24, 0x01	; 1
    8bd4:	f1 f7       	brne	.-4      	; 0x8bd2 <main+0x4efe>
    8bd6:	8c 01       	movw	r16, r24
    8bd8:	ce 01       	movw	r24, r28
    8bda:	8d 59       	subi	r24, 0x9D	; 157
    8bdc:	9d 4f       	sbci	r25, 0xFD	; 253
    8bde:	fc 01       	movw	r30, r24
    8be0:	11 83       	std	Z+1, r17	; 0x01
    8be2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    8be4:	ce 01       	movw	r24, r28
    8be6:	8f 59       	subi	r24, 0x9F	; 159
    8be8:	9d 4f       	sbci	r25, 0xFD	; 253
    8bea:	9e 01       	movw	r18, r28
    8bec:	2f 59       	subi	r18, 0x9F	; 159
    8bee:	3d 4f       	sbci	r19, 0xFD	; 253
    8bf0:	f9 01       	movw	r30, r18
    8bf2:	20 81       	ld	r18, Z
    8bf4:	31 81       	ldd	r19, Z+1	; 0x01
    8bf6:	21 50       	subi	r18, 0x01	; 1
    8bf8:	30 40       	sbci	r19, 0x00	; 0
    8bfa:	fc 01       	movw	r30, r24
    8bfc:	31 83       	std	Z+1, r19	; 0x01
    8bfe:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    8c00:	ce 01       	movw	r24, r28
    8c02:	8f 59       	subi	r24, 0x9F	; 159
    8c04:	9d 4f       	sbci	r25, 0xFD	; 253
    8c06:	fc 01       	movw	r30, r24
    8c08:	80 81       	ld	r24, Z
    8c0a:	91 81       	ldd	r25, Z+1	; 0x01
    8c0c:	00 97       	sbiw	r24, 0x00	; 0
    8c0e:	89 f6       	brne	.-94     	; 0x8bb2 <main+0x4ede>
    8c10:	2f c0       	rjmp	.+94     	; 0x8c70 <main+0x4f9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    8c12:	8e 01       	movw	r16, r28
    8c14:	0f 59       	subi	r16, 0x9F	; 159
    8c16:	1d 4f       	sbci	r17, 0xFD	; 253
    8c18:	ce 01       	movw	r24, r28
    8c1a:	83 5a       	subi	r24, 0xA3	; 163
    8c1c:	9d 4f       	sbci	r25, 0xFD	; 253
    8c1e:	fc 01       	movw	r30, r24
    8c20:	60 81       	ld	r22, Z
    8c22:	71 81       	ldd	r23, Z+1	; 0x01
    8c24:	82 81       	ldd	r24, Z+2	; 0x02
    8c26:	93 81       	ldd	r25, Z+3	; 0x03
    8c28:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8c2c:	dc 01       	movw	r26, r24
    8c2e:	cb 01       	movw	r24, r22
    8c30:	f8 01       	movw	r30, r16
    8c32:	91 83       	std	Z+1, r25	; 0x01
    8c34:	80 83       	st	Z, r24
    8c36:	ce 01       	movw	r24, r28
    8c38:	8b 59       	subi	r24, 0x9B	; 155
    8c3a:	9d 4f       	sbci	r25, 0xFD	; 253
    8c3c:	9e 01       	movw	r18, r28
    8c3e:	2f 59       	subi	r18, 0x9F	; 159
    8c40:	3d 4f       	sbci	r19, 0xFD	; 253
    8c42:	f9 01       	movw	r30, r18
    8c44:	20 81       	ld	r18, Z
    8c46:	31 81       	ldd	r19, Z+1	; 0x01
    8c48:	fc 01       	movw	r30, r24
    8c4a:	31 83       	std	Z+1, r19	; 0x01
    8c4c:	20 83       	st	Z, r18
    8c4e:	ce 01       	movw	r24, r28
    8c50:	8b 59       	subi	r24, 0x9B	; 155
    8c52:	9d 4f       	sbci	r25, 0xFD	; 253
    8c54:	fc 01       	movw	r30, r24
    8c56:	80 81       	ld	r24, Z
    8c58:	91 81       	ldd	r25, Z+1	; 0x01
    8c5a:	8c 01       	movw	r16, r24
    8c5c:	c8 01       	movw	r24, r16
    8c5e:	01 97       	sbiw	r24, 0x01	; 1
    8c60:	f1 f7       	brne	.-4      	; 0x8c5e <main+0x4f8a>
    8c62:	8c 01       	movw	r16, r24
    8c64:	ce 01       	movw	r24, r28
    8c66:	8b 59       	subi	r24, 0x9B	; 155
    8c68:	9d 4f       	sbci	r25, 0xFD	; 253
    8c6a:	fc 01       	movw	r30, r24
    8c6c:	11 83       	std	Z+1, r17	; 0x01
    8c6e:	00 83       	st	Z, r16
						_delay_ms(500);
						matrix1();
    8c70:	0e 94 3f 1a 	call	0x347e	; 0x347e <matrix1>
						right_degrees(145);
    8c74:	81 e9       	ldi	r24, 0x91	; 145
    8c76:	90 e0       	ldi	r25, 0x00	; 0
    8c78:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						compass=5;
    8c7c:	85 e0       	ldi	r24, 0x05	; 5
    8c7e:	90 e0       	ldi	r25, 0x00	; 0
    8c80:	9c 83       	std	Y+4, r25	; 0x04
    8c82:	8b 83       	std	Y+3, r24	; 0x03
						break;
    8c84:	0d c1       	rjmp	.+538    	; 0x8ea0 <main+0x51cc>
						
					}
					if(coor[0]>origin1[boxnumber][i][0])
    8c86:	20 91 a6 04 	lds	r18, 0x04A6
    8c8a:	30 91 a7 04 	lds	r19, 0x04A7
    8c8e:	ae 01       	movw	r20, r28
    8c90:	4d 5b       	subi	r20, 0xBD	; 189
    8c92:	5b 4f       	sbci	r21, 0xFB	; 251
    8c94:	8d 81       	ldd	r24, Y+5	; 0x05
    8c96:	9e 81       	ldd	r25, Y+6	; 0x06
    8c98:	bc 01       	movw	r22, r24
    8c9a:	66 0f       	add	r22, r22
    8c9c:	77 1f       	adc	r23, r23
    8c9e:	66 0f       	add	r22, r22
    8ca0:	77 1f       	adc	r23, r23
    8ca2:	89 a1       	lds	r24, 0x49
    8ca4:	9a a1       	lds	r25, 0x4a
    8ca6:	86 0f       	add	r24, r22
    8ca8:	97 1f       	adc	r25, r23
    8caa:	88 0f       	add	r24, r24
    8cac:	99 1f       	adc	r25, r25
    8cae:	88 0f       	add	r24, r24
    8cb0:	99 1f       	adc	r25, r25
    8cb2:	84 0f       	add	r24, r20
    8cb4:	95 1f       	adc	r25, r21
    8cb6:	fc 01       	movw	r30, r24
    8cb8:	80 81       	ld	r24, Z
    8cba:	91 81       	ldd	r25, Z+1	; 0x01
    8cbc:	82 17       	cp	r24, r18
    8cbe:	93 07       	cpc	r25, r19
    8cc0:	0c f0       	brlt	.+2      	; 0x8cc4 <main+0x4ff0>
    8cc2:	e1 c0       	rjmp	.+450    	; 0x8e86 <main+0x51b2>
					{
						left_degrees(41);
    8cc4:	89 e2       	ldi	r24, 0x29	; 41
    8cc6:	90 e0       	ldi	r25, 0x00	; 0
    8cc8:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
    8ccc:	9e 01       	movw	r18, r28
    8cce:	29 59       	subi	r18, 0x99	; 153
    8cd0:	3d 4f       	sbci	r19, 0xFD	; 253
    8cd2:	80 e0       	ldi	r24, 0x00	; 0
    8cd4:	90 e0       	ldi	r25, 0x00	; 0
    8cd6:	aa ef       	ldi	r26, 0xFA	; 250
    8cd8:	b3 e4       	ldi	r27, 0x43	; 67
    8cda:	f9 01       	movw	r30, r18
    8cdc:	80 83       	st	Z, r24
    8cde:	91 83       	std	Z+1, r25	; 0x01
    8ce0:	a2 83       	std	Z+2, r26	; 0x02
    8ce2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    8ce4:	8e 01       	movw	r16, r28
    8ce6:	05 59       	subi	r16, 0x95	; 149
    8ce8:	1d 4f       	sbci	r17, 0xFD	; 253
    8cea:	ce 01       	movw	r24, r28
    8cec:	89 59       	subi	r24, 0x99	; 153
    8cee:	9d 4f       	sbci	r25, 0xFD	; 253
    8cf0:	fc 01       	movw	r30, r24
    8cf2:	60 81       	ld	r22, Z
    8cf4:	71 81       	ldd	r23, Z+1	; 0x01
    8cf6:	82 81       	ldd	r24, Z+2	; 0x02
    8cf8:	93 81       	ldd	r25, Z+3	; 0x03
    8cfa:	26 e6       	ldi	r18, 0x66	; 102
    8cfc:	36 e6       	ldi	r19, 0x66	; 102
    8cfe:	46 e6       	ldi	r20, 0x66	; 102
    8d00:	55 e4       	ldi	r21, 0x45	; 69
    8d02:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8d06:	dc 01       	movw	r26, r24
    8d08:	cb 01       	movw	r24, r22
    8d0a:	f8 01       	movw	r30, r16
    8d0c:	80 83       	st	Z, r24
    8d0e:	91 83       	std	Z+1, r25	; 0x01
    8d10:	a2 83       	std	Z+2, r26	; 0x02
    8d12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    8d14:	ce 01       	movw	r24, r28
    8d16:	85 59       	subi	r24, 0x95	; 149
    8d18:	9d 4f       	sbci	r25, 0xFD	; 253
    8d1a:	11 e0       	ldi	r17, 0x01	; 1
    8d1c:	fc 01       	movw	r30, r24
    8d1e:	60 81       	ld	r22, Z
    8d20:	71 81       	ldd	r23, Z+1	; 0x01
    8d22:	82 81       	ldd	r24, Z+2	; 0x02
    8d24:	93 81       	ldd	r25, Z+3	; 0x03
    8d26:	20 e0       	ldi	r18, 0x00	; 0
    8d28:	30 e0       	ldi	r19, 0x00	; 0
    8d2a:	40 e8       	ldi	r20, 0x80	; 128
    8d2c:	5f e3       	ldi	r21, 0x3F	; 63
    8d2e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    8d32:	88 23       	and	r24, r24
    8d34:	0c f0       	brlt	.+2      	; 0x8d38 <main+0x5064>
    8d36:	10 e0       	ldi	r17, 0x00	; 0
    8d38:	11 23       	and	r17, r17
    8d3a:	49 f0       	breq	.+18     	; 0x8d4e <main+0x507a>
		__ticks = 1;
    8d3c:	ce 01       	movw	r24, r28
    8d3e:	81 59       	subi	r24, 0x91	; 145
    8d40:	9d 4f       	sbci	r25, 0xFD	; 253
    8d42:	21 e0       	ldi	r18, 0x01	; 1
    8d44:	30 e0       	ldi	r19, 0x00	; 0
    8d46:	fc 01       	movw	r30, r24
    8d48:	31 83       	std	Z+1, r19	; 0x01
    8d4a:	20 83       	st	Z, r18
    8d4c:	74 c0       	rjmp	.+232    	; 0x8e36 <main+0x5162>
	else if (__tmp > 65535)
    8d4e:	ce 01       	movw	r24, r28
    8d50:	85 59       	subi	r24, 0x95	; 149
    8d52:	9d 4f       	sbci	r25, 0xFD	; 253
    8d54:	11 e0       	ldi	r17, 0x01	; 1
    8d56:	fc 01       	movw	r30, r24
    8d58:	60 81       	ld	r22, Z
    8d5a:	71 81       	ldd	r23, Z+1	; 0x01
    8d5c:	82 81       	ldd	r24, Z+2	; 0x02
    8d5e:	93 81       	ldd	r25, Z+3	; 0x03
    8d60:	20 e0       	ldi	r18, 0x00	; 0
    8d62:	3f ef       	ldi	r19, 0xFF	; 255
    8d64:	4f e7       	ldi	r20, 0x7F	; 127
    8d66:	57 e4       	ldi	r21, 0x47	; 71
    8d68:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    8d6c:	18 16       	cp	r1, r24
    8d6e:	0c f0       	brlt	.+2      	; 0x8d72 <main+0x509e>
    8d70:	10 e0       	ldi	r17, 0x00	; 0
    8d72:	11 23       	and	r17, r17
    8d74:	09 f4       	brne	.+2      	; 0x8d78 <main+0x50a4>
    8d76:	4d c0       	rjmp	.+154    	; 0x8e12 <main+0x513e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    8d78:	ce 01       	movw	r24, r28
    8d7a:	89 59       	subi	r24, 0x99	; 153
    8d7c:	9d 4f       	sbci	r25, 0xFD	; 253
    8d7e:	fc 01       	movw	r30, r24
    8d80:	60 81       	ld	r22, Z
    8d82:	71 81       	ldd	r23, Z+1	; 0x01
    8d84:	82 81       	ldd	r24, Z+2	; 0x02
    8d86:	93 81       	ldd	r25, Z+3	; 0x03
    8d88:	20 e0       	ldi	r18, 0x00	; 0
    8d8a:	30 e0       	ldi	r19, 0x00	; 0
    8d8c:	40 e2       	ldi	r20, 0x20	; 32
    8d8e:	51 e4       	ldi	r21, 0x41	; 65
    8d90:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8d94:	dc 01       	movw	r26, r24
    8d96:	cb 01       	movw	r24, r22
    8d98:	8e 01       	movw	r16, r28
    8d9a:	01 59       	subi	r16, 0x91	; 145
    8d9c:	1d 4f       	sbci	r17, 0xFD	; 253
    8d9e:	bc 01       	movw	r22, r24
    8da0:	cd 01       	movw	r24, r26
    8da2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8da6:	dc 01       	movw	r26, r24
    8da8:	cb 01       	movw	r24, r22
    8daa:	f8 01       	movw	r30, r16
    8dac:	91 83       	std	Z+1, r25	; 0x01
    8dae:	80 83       	st	Z, r24
    8db0:	27 c0       	rjmp	.+78     	; 0x8e00 <main+0x512c>
    8db2:	ce 01       	movw	r24, r28
    8db4:	8f 58       	subi	r24, 0x8F	; 143
    8db6:	9d 4f       	sbci	r25, 0xFD	; 253
    8db8:	20 e7       	ldi	r18, 0x70	; 112
    8dba:	31 e0       	ldi	r19, 0x01	; 1
    8dbc:	fc 01       	movw	r30, r24
    8dbe:	31 83       	std	Z+1, r19	; 0x01
    8dc0:	20 83       	st	Z, r18
    8dc2:	ce 01       	movw	r24, r28
    8dc4:	8f 58       	subi	r24, 0x8F	; 143
    8dc6:	9d 4f       	sbci	r25, 0xFD	; 253
    8dc8:	fc 01       	movw	r30, r24
    8dca:	80 81       	ld	r24, Z
    8dcc:	91 81       	ldd	r25, Z+1	; 0x01
    8dce:	8c 01       	movw	r16, r24
    8dd0:	c8 01       	movw	r24, r16
    8dd2:	01 97       	sbiw	r24, 0x01	; 1
    8dd4:	f1 f7       	brne	.-4      	; 0x8dd2 <main+0x50fe>
    8dd6:	8c 01       	movw	r16, r24
    8dd8:	ce 01       	movw	r24, r28
    8dda:	8f 58       	subi	r24, 0x8F	; 143
    8ddc:	9d 4f       	sbci	r25, 0xFD	; 253
    8dde:	fc 01       	movw	r30, r24
    8de0:	11 83       	std	Z+1, r17	; 0x01
    8de2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    8de4:	ce 01       	movw	r24, r28
    8de6:	81 59       	subi	r24, 0x91	; 145
    8de8:	9d 4f       	sbci	r25, 0xFD	; 253
    8dea:	9e 01       	movw	r18, r28
    8dec:	21 59       	subi	r18, 0x91	; 145
    8dee:	3d 4f       	sbci	r19, 0xFD	; 253
    8df0:	f9 01       	movw	r30, r18
    8df2:	20 81       	ld	r18, Z
    8df4:	31 81       	ldd	r19, Z+1	; 0x01
    8df6:	21 50       	subi	r18, 0x01	; 1
    8df8:	30 40       	sbci	r19, 0x00	; 0
    8dfa:	fc 01       	movw	r30, r24
    8dfc:	31 83       	std	Z+1, r19	; 0x01
    8dfe:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    8e00:	ce 01       	movw	r24, r28
    8e02:	81 59       	subi	r24, 0x91	; 145
    8e04:	9d 4f       	sbci	r25, 0xFD	; 253
    8e06:	fc 01       	movw	r30, r24
    8e08:	80 81       	ld	r24, Z
    8e0a:	91 81       	ldd	r25, Z+1	; 0x01
    8e0c:	00 97       	sbiw	r24, 0x00	; 0
    8e0e:	89 f6       	brne	.-94     	; 0x8db2 <main+0x50de>
    8e10:	2f c0       	rjmp	.+94     	; 0x8e70 <main+0x519c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    8e12:	8e 01       	movw	r16, r28
    8e14:	01 59       	subi	r16, 0x91	; 145
    8e16:	1d 4f       	sbci	r17, 0xFD	; 253
    8e18:	ce 01       	movw	r24, r28
    8e1a:	85 59       	subi	r24, 0x95	; 149
    8e1c:	9d 4f       	sbci	r25, 0xFD	; 253
    8e1e:	fc 01       	movw	r30, r24
    8e20:	60 81       	ld	r22, Z
    8e22:	71 81       	ldd	r23, Z+1	; 0x01
    8e24:	82 81       	ldd	r24, Z+2	; 0x02
    8e26:	93 81       	ldd	r25, Z+3	; 0x03
    8e28:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    8e2c:	dc 01       	movw	r26, r24
    8e2e:	cb 01       	movw	r24, r22
    8e30:	f8 01       	movw	r30, r16
    8e32:	91 83       	std	Z+1, r25	; 0x01
    8e34:	80 83       	st	Z, r24
    8e36:	ce 01       	movw	r24, r28
    8e38:	8d 58       	subi	r24, 0x8D	; 141
    8e3a:	9d 4f       	sbci	r25, 0xFD	; 253
    8e3c:	9e 01       	movw	r18, r28
    8e3e:	21 59       	subi	r18, 0x91	; 145
    8e40:	3d 4f       	sbci	r19, 0xFD	; 253
    8e42:	f9 01       	movw	r30, r18
    8e44:	20 81       	ld	r18, Z
    8e46:	31 81       	ldd	r19, Z+1	; 0x01
    8e48:	fc 01       	movw	r30, r24
    8e4a:	31 83       	std	Z+1, r19	; 0x01
    8e4c:	20 83       	st	Z, r18
    8e4e:	ce 01       	movw	r24, r28
    8e50:	8d 58       	subi	r24, 0x8D	; 141
    8e52:	9d 4f       	sbci	r25, 0xFD	; 253
    8e54:	fc 01       	movw	r30, r24
    8e56:	80 81       	ld	r24, Z
    8e58:	91 81       	ldd	r25, Z+1	; 0x01
    8e5a:	8c 01       	movw	r16, r24
    8e5c:	c8 01       	movw	r24, r16
    8e5e:	01 97       	sbiw	r24, 0x01	; 1
    8e60:	f1 f7       	brne	.-4      	; 0x8e5e <main+0x518a>
    8e62:	8c 01       	movw	r16, r24
    8e64:	ce 01       	movw	r24, r28
    8e66:	8d 58       	subi	r24, 0x8D	; 141
    8e68:	9d 4f       	sbci	r25, 0xFD	; 253
    8e6a:	fc 01       	movw	r30, r24
    8e6c:	11 83       	std	Z+1, r17	; 0x01
    8e6e:	00 83       	st	Z, r16
						_delay_ms(500);
						matrix1();
    8e70:	0e 94 3f 1a 	call	0x347e	; 0x347e <matrix1>
						left_degrees(145);
    8e74:	81 e9       	ldi	r24, 0x91	; 145
    8e76:	90 e0       	ldi	r25, 0x00	; 0
    8e78:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						compass=5;
    8e7c:	85 e0       	ldi	r24, 0x05	; 5
    8e7e:	90 e0       	ldi	r25, 0x00	; 0
    8e80:	9c 83       	std	Y+4, r25	; 0x04
    8e82:	8b 83       	std	Y+3, r24	; 0x03
						break;
    8e84:	0d c0       	rjmp	.+26     	; 0x8ea0 <main+0x51cc>
		else
		{
			if(compass==4)
			{
				lcd_print(2,1,help,1);
				for(int i=0;i<4;i++)
    8e86:	89 a1       	lds	r24, 0x49
    8e88:	9a a1       	lds	r25, 0x4a
    8e8a:	01 96       	adiw	r24, 0x01	; 1
    8e8c:	9a a3       	lds	r25, 0x5a
    8e8e:	89 a3       	lds	r24, 0x59
    8e90:	89 a1       	lds	r24, 0x49
    8e92:	9a a1       	lds	r25, 0x4a
    8e94:	84 30       	cpi	r24, 0x04	; 4
    8e96:	91 05       	cpc	r25, r1
    8e98:	0c f4       	brge	.+2      	; 0x8e9c <main+0x51c8>
    8e9a:	f5 cd       	rjmp	.-1046   	; 0x8a86 <main+0x4db2>
				}
			}
		}
		
	}
	goto hotspot;
    8e9c:	0c 94 5b 3b 	jmp	0x76b6	; 0x76b6 <main+0x39e2>
    8ea0:	0c 94 5b 3b 	jmp	0x76b6	; 0x76b6 <main+0x39e2>
				if(flag1%2!=0)
					goto ppt;
				else
				{
					if(flag1%2==0)
					    goto ppt1;
    8ea4:	00 00       	nop
			}
		}
		
	}
	goto hotspot;
	ppt1: if(compass==4)
    8ea6:	8b 81       	ldd	r24, Y+3	; 0x03
    8ea8:	9c 81       	ldd	r25, Y+4	; 0x04
    8eaa:	84 30       	cpi	r24, 0x04	; 4
    8eac:	91 05       	cpc	r25, r1
    8eae:	11 f0       	breq	.+4      	; 0x8eb4 <main+0x51e0>
    8eb0:	0c 94 09 53 	jmp	0xa612	; 0xa612 <main+0x693e>
	{
		for(int i=0;i<4;i++)
    8eb4:	1c a2       	lds	r17, 0x9c
    8eb6:	1b a2       	lds	r17, 0x9b
    8eb8:	0c 94 fe 52 	jmp	0xa5fc	; 0xa5fc <main+0x6928>
		{
			if(coor[0]>origin2[boxnumber][i][0] && coor[1]<origin2[boxnumber][i][1])
    8ebc:	20 91 a6 04 	lds	r18, 0x04A6
    8ec0:	30 91 a7 04 	lds	r19, 0x04A7
    8ec4:	ae 01       	movw	r20, r28
    8ec6:	4d 5f       	subi	r20, 0xFD	; 253
    8ec8:	5a 4f       	sbci	r21, 0xFA	; 250
    8eca:	8d 81       	ldd	r24, Y+5	; 0x05
    8ecc:	9e 81       	ldd	r25, Y+6	; 0x06
    8ece:	bc 01       	movw	r22, r24
    8ed0:	66 0f       	add	r22, r22
    8ed2:	77 1f       	adc	r23, r23
    8ed4:	66 0f       	add	r22, r22
    8ed6:	77 1f       	adc	r23, r23
    8ed8:	8b a1       	lds	r24, 0x4b
    8eda:	9c a1       	lds	r25, 0x4c
    8edc:	86 0f       	add	r24, r22
    8ede:	97 1f       	adc	r25, r23
    8ee0:	88 0f       	add	r24, r24
    8ee2:	99 1f       	adc	r25, r25
    8ee4:	88 0f       	add	r24, r24
    8ee6:	99 1f       	adc	r25, r25
    8ee8:	84 0f       	add	r24, r20
    8eea:	95 1f       	adc	r25, r21
    8eec:	fc 01       	movw	r30, r24
    8eee:	80 81       	ld	r24, Z
    8ef0:	91 81       	ldd	r25, Z+1	; 0x01
    8ef2:	82 17       	cp	r24, r18
    8ef4:	93 07       	cpc	r25, r19
    8ef6:	0c f0       	brlt	.+2      	; 0x8efa <main+0x5226>
    8ef8:	c9 c2       	rjmp	.+1426   	; 0x948c <main+0x57b8>
    8efa:	20 91 a8 04 	lds	r18, 0x04A8
    8efe:	30 91 a9 04 	lds	r19, 0x04A9
    8f02:	ae 01       	movw	r20, r28
    8f04:	4d 5f       	subi	r20, 0xFD	; 253
    8f06:	5a 4f       	sbci	r21, 0xFA	; 250
    8f08:	8d 81       	ldd	r24, Y+5	; 0x05
    8f0a:	9e 81       	ldd	r25, Y+6	; 0x06
    8f0c:	bc 01       	movw	r22, r24
    8f0e:	66 0f       	add	r22, r22
    8f10:	77 1f       	adc	r23, r23
    8f12:	66 0f       	add	r22, r22
    8f14:	77 1f       	adc	r23, r23
    8f16:	8b a1       	lds	r24, 0x4b
    8f18:	9c a1       	lds	r25, 0x4c
    8f1a:	86 0f       	add	r24, r22
    8f1c:	97 1f       	adc	r25, r23
    8f1e:	88 0f       	add	r24, r24
    8f20:	99 1f       	adc	r25, r25
    8f22:	88 0f       	add	r24, r24
    8f24:	99 1f       	adc	r25, r25
    8f26:	84 0f       	add	r24, r20
    8f28:	95 1f       	adc	r25, r21
    8f2a:	02 96       	adiw	r24, 0x02	; 2
    8f2c:	fc 01       	movw	r30, r24
    8f2e:	80 81       	ld	r24, Z
    8f30:	91 81       	ldd	r25, Z+1	; 0x01
    8f32:	28 17       	cp	r18, r24
    8f34:	39 07       	cpc	r19, r25
    8f36:	0c f0       	brlt	.+2      	; 0x8f3a <main+0x5266>
    8f38:	a9 c2       	rjmp	.+1362   	; 0x948c <main+0x57b8>
			{
					left_degrees(45);
    8f3a:	8d e2       	ldi	r24, 0x2D	; 45
    8f3c:	90 e0       	ldi	r25, 0x00	; 0
    8f3e:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
					back_mm(65);
    8f42:	81 e4       	ldi	r24, 0x41	; 65
    8f44:	90 e0       	ldi	r25, 0x00	; 0
    8f46:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
					matrix2();
    8f4a:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
						if(summ1[recur+1]>10)
    8f4e:	8f 81       	ldd	r24, Y+7	; 0x07
    8f50:	98 85       	ldd	r25, Y+8	; 0x08
    8f52:	01 96       	adiw	r24, 0x01	; 1
    8f54:	9e 01       	movw	r18, r28
    8f56:	25 54       	subi	r18, 0x45	; 69
    8f58:	39 4f       	sbci	r19, 0xF9	; 249
    8f5a:	88 0f       	add	r24, r24
    8f5c:	99 1f       	adc	r25, r25
    8f5e:	82 0f       	add	r24, r18
    8f60:	93 1f       	adc	r25, r19
    8f62:	fc 01       	movw	r30, r24
    8f64:	80 81       	ld	r24, Z
    8f66:	91 81       	ldd	r25, Z+1	; 0x01
    8f68:	8b 30       	cpi	r24, 0x0B	; 11
    8f6a:	91 05       	cpc	r25, r1
    8f6c:	0c f4       	brge	.+2      	; 0x8f70 <main+0x529c>
    8f6e:	d6 c0       	rjmp	.+428    	; 0x911c <main+0x5448>
						{
							buzzer_on();
    8f70:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    8f74:	9e 01       	movw	r18, r28
    8f76:	2b 58       	subi	r18, 0x8B	; 139
    8f78:	3d 4f       	sbci	r19, 0xFD	; 253
    8f7a:	80 e0       	ldi	r24, 0x00	; 0
    8f7c:	90 e0       	ldi	r25, 0x00	; 0
    8f7e:	aa e7       	ldi	r26, 0x7A	; 122
    8f80:	b4 e4       	ldi	r27, 0x44	; 68
    8f82:	f9 01       	movw	r30, r18
    8f84:	80 83       	st	Z, r24
    8f86:	91 83       	std	Z+1, r25	; 0x01
    8f88:	a2 83       	std	Z+2, r26	; 0x02
    8f8a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    8f8c:	8e 01       	movw	r16, r28
    8f8e:	07 58       	subi	r16, 0x87	; 135
    8f90:	1d 4f       	sbci	r17, 0xFD	; 253
    8f92:	ce 01       	movw	r24, r28
    8f94:	8b 58       	subi	r24, 0x8B	; 139
    8f96:	9d 4f       	sbci	r25, 0xFD	; 253
    8f98:	fc 01       	movw	r30, r24
    8f9a:	60 81       	ld	r22, Z
    8f9c:	71 81       	ldd	r23, Z+1	; 0x01
    8f9e:	82 81       	ldd	r24, Z+2	; 0x02
    8fa0:	93 81       	ldd	r25, Z+3	; 0x03
    8fa2:	26 e6       	ldi	r18, 0x66	; 102
    8fa4:	36 e6       	ldi	r19, 0x66	; 102
    8fa6:	46 e6       	ldi	r20, 0x66	; 102
    8fa8:	55 e4       	ldi	r21, 0x45	; 69
    8faa:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    8fae:	dc 01       	movw	r26, r24
    8fb0:	cb 01       	movw	r24, r22
    8fb2:	f8 01       	movw	r30, r16
    8fb4:	80 83       	st	Z, r24
    8fb6:	91 83       	std	Z+1, r25	; 0x01
    8fb8:	a2 83       	std	Z+2, r26	; 0x02
    8fba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    8fbc:	ce 01       	movw	r24, r28
    8fbe:	87 58       	subi	r24, 0x87	; 135
    8fc0:	9d 4f       	sbci	r25, 0xFD	; 253
    8fc2:	11 e0       	ldi	r17, 0x01	; 1
    8fc4:	fc 01       	movw	r30, r24
    8fc6:	60 81       	ld	r22, Z
    8fc8:	71 81       	ldd	r23, Z+1	; 0x01
    8fca:	82 81       	ldd	r24, Z+2	; 0x02
    8fcc:	93 81       	ldd	r25, Z+3	; 0x03
    8fce:	20 e0       	ldi	r18, 0x00	; 0
    8fd0:	30 e0       	ldi	r19, 0x00	; 0
    8fd2:	40 e8       	ldi	r20, 0x80	; 128
    8fd4:	5f e3       	ldi	r21, 0x3F	; 63
    8fd6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    8fda:	88 23       	and	r24, r24
    8fdc:	0c f0       	brlt	.+2      	; 0x8fe0 <main+0x530c>
    8fde:	10 e0       	ldi	r17, 0x00	; 0
    8fe0:	11 23       	and	r17, r17
    8fe2:	49 f0       	breq	.+18     	; 0x8ff6 <main+0x5322>
		__ticks = 1;
    8fe4:	ce 01       	movw	r24, r28
    8fe6:	83 58       	subi	r24, 0x83	; 131
    8fe8:	9d 4f       	sbci	r25, 0xFD	; 253
    8fea:	21 e0       	ldi	r18, 0x01	; 1
    8fec:	30 e0       	ldi	r19, 0x00	; 0
    8fee:	fc 01       	movw	r30, r24
    8ff0:	31 83       	std	Z+1, r19	; 0x01
    8ff2:	20 83       	st	Z, r18
    8ff4:	74 c0       	rjmp	.+232    	; 0x90de <main+0x540a>
	else if (__tmp > 65535)
    8ff6:	ce 01       	movw	r24, r28
    8ff8:	87 58       	subi	r24, 0x87	; 135
    8ffa:	9d 4f       	sbci	r25, 0xFD	; 253
    8ffc:	11 e0       	ldi	r17, 0x01	; 1
    8ffe:	fc 01       	movw	r30, r24
    9000:	60 81       	ld	r22, Z
    9002:	71 81       	ldd	r23, Z+1	; 0x01
    9004:	82 81       	ldd	r24, Z+2	; 0x02
    9006:	93 81       	ldd	r25, Z+3	; 0x03
    9008:	20 e0       	ldi	r18, 0x00	; 0
    900a:	3f ef       	ldi	r19, 0xFF	; 255
    900c:	4f e7       	ldi	r20, 0x7F	; 127
    900e:	57 e4       	ldi	r21, 0x47	; 71
    9010:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9014:	18 16       	cp	r1, r24
    9016:	0c f0       	brlt	.+2      	; 0x901a <main+0x5346>
    9018:	10 e0       	ldi	r17, 0x00	; 0
    901a:	11 23       	and	r17, r17
    901c:	09 f4       	brne	.+2      	; 0x9020 <main+0x534c>
    901e:	4d c0       	rjmp	.+154    	; 0x90ba <main+0x53e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    9020:	ce 01       	movw	r24, r28
    9022:	8b 58       	subi	r24, 0x8B	; 139
    9024:	9d 4f       	sbci	r25, 0xFD	; 253
    9026:	fc 01       	movw	r30, r24
    9028:	60 81       	ld	r22, Z
    902a:	71 81       	ldd	r23, Z+1	; 0x01
    902c:	82 81       	ldd	r24, Z+2	; 0x02
    902e:	93 81       	ldd	r25, Z+3	; 0x03
    9030:	20 e0       	ldi	r18, 0x00	; 0
    9032:	30 e0       	ldi	r19, 0x00	; 0
    9034:	40 e2       	ldi	r20, 0x20	; 32
    9036:	51 e4       	ldi	r21, 0x41	; 65
    9038:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    903c:	dc 01       	movw	r26, r24
    903e:	cb 01       	movw	r24, r22
    9040:	8e 01       	movw	r16, r28
    9042:	03 58       	subi	r16, 0x83	; 131
    9044:	1d 4f       	sbci	r17, 0xFD	; 253
    9046:	bc 01       	movw	r22, r24
    9048:	cd 01       	movw	r24, r26
    904a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    904e:	dc 01       	movw	r26, r24
    9050:	cb 01       	movw	r24, r22
    9052:	f8 01       	movw	r30, r16
    9054:	91 83       	std	Z+1, r25	; 0x01
    9056:	80 83       	st	Z, r24
    9058:	27 c0       	rjmp	.+78     	; 0x90a8 <main+0x53d4>
    905a:	ce 01       	movw	r24, r28
    905c:	81 58       	subi	r24, 0x81	; 129
    905e:	9d 4f       	sbci	r25, 0xFD	; 253
    9060:	20 e7       	ldi	r18, 0x70	; 112
    9062:	31 e0       	ldi	r19, 0x01	; 1
    9064:	fc 01       	movw	r30, r24
    9066:	31 83       	std	Z+1, r19	; 0x01
    9068:	20 83       	st	Z, r18
    906a:	ce 01       	movw	r24, r28
    906c:	81 58       	subi	r24, 0x81	; 129
    906e:	9d 4f       	sbci	r25, 0xFD	; 253
    9070:	fc 01       	movw	r30, r24
    9072:	80 81       	ld	r24, Z
    9074:	91 81       	ldd	r25, Z+1	; 0x01
    9076:	8c 01       	movw	r16, r24
    9078:	c8 01       	movw	r24, r16
    907a:	01 97       	sbiw	r24, 0x01	; 1
    907c:	f1 f7       	brne	.-4      	; 0x907a <main+0x53a6>
    907e:	8c 01       	movw	r16, r24
    9080:	ce 01       	movw	r24, r28
    9082:	81 58       	subi	r24, 0x81	; 129
    9084:	9d 4f       	sbci	r25, 0xFD	; 253
    9086:	fc 01       	movw	r30, r24
    9088:	11 83       	std	Z+1, r17	; 0x01
    908a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    908c:	ce 01       	movw	r24, r28
    908e:	83 58       	subi	r24, 0x83	; 131
    9090:	9d 4f       	sbci	r25, 0xFD	; 253
    9092:	9e 01       	movw	r18, r28
    9094:	23 58       	subi	r18, 0x83	; 131
    9096:	3d 4f       	sbci	r19, 0xFD	; 253
    9098:	f9 01       	movw	r30, r18
    909a:	20 81       	ld	r18, Z
    909c:	31 81       	ldd	r19, Z+1	; 0x01
    909e:	21 50       	subi	r18, 0x01	; 1
    90a0:	30 40       	sbci	r19, 0x00	; 0
    90a2:	fc 01       	movw	r30, r24
    90a4:	31 83       	std	Z+1, r19	; 0x01
    90a6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    90a8:	ce 01       	movw	r24, r28
    90aa:	83 58       	subi	r24, 0x83	; 131
    90ac:	9d 4f       	sbci	r25, 0xFD	; 253
    90ae:	fc 01       	movw	r30, r24
    90b0:	80 81       	ld	r24, Z
    90b2:	91 81       	ldd	r25, Z+1	; 0x01
    90b4:	00 97       	sbiw	r24, 0x00	; 0
    90b6:	89 f6       	brne	.-94     	; 0x905a <main+0x5386>
    90b8:	2f c0       	rjmp	.+94     	; 0x9118 <main+0x5444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    90ba:	8e 01       	movw	r16, r28
    90bc:	03 58       	subi	r16, 0x83	; 131
    90be:	1d 4f       	sbci	r17, 0xFD	; 253
    90c0:	ce 01       	movw	r24, r28
    90c2:	87 58       	subi	r24, 0x87	; 135
    90c4:	9d 4f       	sbci	r25, 0xFD	; 253
    90c6:	fc 01       	movw	r30, r24
    90c8:	60 81       	ld	r22, Z
    90ca:	71 81       	ldd	r23, Z+1	; 0x01
    90cc:	82 81       	ldd	r24, Z+2	; 0x02
    90ce:	93 81       	ldd	r25, Z+3	; 0x03
    90d0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    90d4:	dc 01       	movw	r26, r24
    90d6:	cb 01       	movw	r24, r22
    90d8:	f8 01       	movw	r30, r16
    90da:	91 83       	std	Z+1, r25	; 0x01
    90dc:	80 83       	st	Z, r24
    90de:	ce 01       	movw	r24, r28
    90e0:	8f 57       	subi	r24, 0x7F	; 127
    90e2:	9d 4f       	sbci	r25, 0xFD	; 253
    90e4:	9e 01       	movw	r18, r28
    90e6:	23 58       	subi	r18, 0x83	; 131
    90e8:	3d 4f       	sbci	r19, 0xFD	; 253
    90ea:	f9 01       	movw	r30, r18
    90ec:	20 81       	ld	r18, Z
    90ee:	31 81       	ldd	r19, Z+1	; 0x01
    90f0:	fc 01       	movw	r30, r24
    90f2:	31 83       	std	Z+1, r19	; 0x01
    90f4:	20 83       	st	Z, r18
    90f6:	ce 01       	movw	r24, r28
    90f8:	8f 57       	subi	r24, 0x7F	; 127
    90fa:	9d 4f       	sbci	r25, 0xFD	; 253
    90fc:	fc 01       	movw	r30, r24
    90fe:	80 81       	ld	r24, Z
    9100:	91 81       	ldd	r25, Z+1	; 0x01
    9102:	8c 01       	movw	r16, r24
    9104:	c8 01       	movw	r24, r16
    9106:	01 97       	sbiw	r24, 0x01	; 1
    9108:	f1 f7       	brne	.-4      	; 0x9106 <main+0x5432>
    910a:	8c 01       	movw	r16, r24
    910c:	ce 01       	movw	r24, r28
    910e:	8f 57       	subi	r24, 0x7F	; 127
    9110:	9d 4f       	sbci	r25, 0xFD	; 253
    9112:	fc 01       	movw	r30, r24
    9114:	11 83       	std	Z+1, r17	; 0x01
    9116:	00 83       	st	Z, r16
							_delay_ms(1000);
							buzzer_off();
    9118:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
						}
					forward_mm(75);
    911c:	8b e4       	ldi	r24, 0x4B	; 75
    911e:	90 e0       	ldi	r25, 0x00	; 0
    9120:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    9124:	9e 01       	movw	r18, r28
    9126:	2d 57       	subi	r18, 0x7D	; 125
    9128:	3d 4f       	sbci	r19, 0xFD	; 253
    912a:	80 e0       	ldi	r24, 0x00	; 0
    912c:	90 e0       	ldi	r25, 0x00	; 0
    912e:	a0 ef       	ldi	r26, 0xF0	; 240
    9130:	b1 e4       	ldi	r27, 0x41	; 65
    9132:	f9 01       	movw	r30, r18
    9134:	80 83       	st	Z, r24
    9136:	91 83       	std	Z+1, r25	; 0x01
    9138:	a2 83       	std	Z+2, r26	; 0x02
    913a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    913c:	8e 01       	movw	r16, r28
    913e:	09 57       	subi	r16, 0x79	; 121
    9140:	1d 4f       	sbci	r17, 0xFD	; 253
    9142:	ce 01       	movw	r24, r28
    9144:	8d 57       	subi	r24, 0x7D	; 125
    9146:	9d 4f       	sbci	r25, 0xFD	; 253
    9148:	fc 01       	movw	r30, r24
    914a:	60 81       	ld	r22, Z
    914c:	71 81       	ldd	r23, Z+1	; 0x01
    914e:	82 81       	ldd	r24, Z+2	; 0x02
    9150:	93 81       	ldd	r25, Z+3	; 0x03
    9152:	26 e6       	ldi	r18, 0x66	; 102
    9154:	36 e6       	ldi	r19, 0x66	; 102
    9156:	46 e6       	ldi	r20, 0x66	; 102
    9158:	55 e4       	ldi	r21, 0x45	; 69
    915a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    915e:	dc 01       	movw	r26, r24
    9160:	cb 01       	movw	r24, r22
    9162:	f8 01       	movw	r30, r16
    9164:	80 83       	st	Z, r24
    9166:	91 83       	std	Z+1, r25	; 0x01
    9168:	a2 83       	std	Z+2, r26	; 0x02
    916a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    916c:	ce 01       	movw	r24, r28
    916e:	89 57       	subi	r24, 0x79	; 121
    9170:	9d 4f       	sbci	r25, 0xFD	; 253
    9172:	11 e0       	ldi	r17, 0x01	; 1
    9174:	fc 01       	movw	r30, r24
    9176:	60 81       	ld	r22, Z
    9178:	71 81       	ldd	r23, Z+1	; 0x01
    917a:	82 81       	ldd	r24, Z+2	; 0x02
    917c:	93 81       	ldd	r25, Z+3	; 0x03
    917e:	20 e0       	ldi	r18, 0x00	; 0
    9180:	30 e0       	ldi	r19, 0x00	; 0
    9182:	40 e8       	ldi	r20, 0x80	; 128
    9184:	5f e3       	ldi	r21, 0x3F	; 63
    9186:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    918a:	88 23       	and	r24, r24
    918c:	0c f0       	brlt	.+2      	; 0x9190 <main+0x54bc>
    918e:	10 e0       	ldi	r17, 0x00	; 0
    9190:	11 23       	and	r17, r17
    9192:	49 f0       	breq	.+18     	; 0x91a6 <main+0x54d2>
		__ticks = 1;
    9194:	ce 01       	movw	r24, r28
    9196:	85 57       	subi	r24, 0x75	; 117
    9198:	9d 4f       	sbci	r25, 0xFD	; 253
    919a:	21 e0       	ldi	r18, 0x01	; 1
    919c:	30 e0       	ldi	r19, 0x00	; 0
    919e:	fc 01       	movw	r30, r24
    91a0:	31 83       	std	Z+1, r19	; 0x01
    91a2:	20 83       	st	Z, r18
    91a4:	74 c0       	rjmp	.+232    	; 0x928e <main+0x55ba>
	else if (__tmp > 65535)
    91a6:	ce 01       	movw	r24, r28
    91a8:	89 57       	subi	r24, 0x79	; 121
    91aa:	9d 4f       	sbci	r25, 0xFD	; 253
    91ac:	11 e0       	ldi	r17, 0x01	; 1
    91ae:	fc 01       	movw	r30, r24
    91b0:	60 81       	ld	r22, Z
    91b2:	71 81       	ldd	r23, Z+1	; 0x01
    91b4:	82 81       	ldd	r24, Z+2	; 0x02
    91b6:	93 81       	ldd	r25, Z+3	; 0x03
    91b8:	20 e0       	ldi	r18, 0x00	; 0
    91ba:	3f ef       	ldi	r19, 0xFF	; 255
    91bc:	4f e7       	ldi	r20, 0x7F	; 127
    91be:	57 e4       	ldi	r21, 0x47	; 71
    91c0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    91c4:	18 16       	cp	r1, r24
    91c6:	0c f0       	brlt	.+2      	; 0x91ca <main+0x54f6>
    91c8:	10 e0       	ldi	r17, 0x00	; 0
    91ca:	11 23       	and	r17, r17
    91cc:	09 f4       	brne	.+2      	; 0x91d0 <main+0x54fc>
    91ce:	4d c0       	rjmp	.+154    	; 0x926a <main+0x5596>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    91d0:	ce 01       	movw	r24, r28
    91d2:	8d 57       	subi	r24, 0x7D	; 125
    91d4:	9d 4f       	sbci	r25, 0xFD	; 253
    91d6:	fc 01       	movw	r30, r24
    91d8:	60 81       	ld	r22, Z
    91da:	71 81       	ldd	r23, Z+1	; 0x01
    91dc:	82 81       	ldd	r24, Z+2	; 0x02
    91de:	93 81       	ldd	r25, Z+3	; 0x03
    91e0:	20 e0       	ldi	r18, 0x00	; 0
    91e2:	30 e0       	ldi	r19, 0x00	; 0
    91e4:	40 e2       	ldi	r20, 0x20	; 32
    91e6:	51 e4       	ldi	r21, 0x41	; 65
    91e8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    91ec:	dc 01       	movw	r26, r24
    91ee:	cb 01       	movw	r24, r22
    91f0:	8e 01       	movw	r16, r28
    91f2:	05 57       	subi	r16, 0x75	; 117
    91f4:	1d 4f       	sbci	r17, 0xFD	; 253
    91f6:	bc 01       	movw	r22, r24
    91f8:	cd 01       	movw	r24, r26
    91fa:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    91fe:	dc 01       	movw	r26, r24
    9200:	cb 01       	movw	r24, r22
    9202:	f8 01       	movw	r30, r16
    9204:	91 83       	std	Z+1, r25	; 0x01
    9206:	80 83       	st	Z, r24
    9208:	27 c0       	rjmp	.+78     	; 0x9258 <main+0x5584>
    920a:	ce 01       	movw	r24, r28
    920c:	83 57       	subi	r24, 0x73	; 115
    920e:	9d 4f       	sbci	r25, 0xFD	; 253
    9210:	20 e7       	ldi	r18, 0x70	; 112
    9212:	31 e0       	ldi	r19, 0x01	; 1
    9214:	fc 01       	movw	r30, r24
    9216:	31 83       	std	Z+1, r19	; 0x01
    9218:	20 83       	st	Z, r18
    921a:	ce 01       	movw	r24, r28
    921c:	83 57       	subi	r24, 0x73	; 115
    921e:	9d 4f       	sbci	r25, 0xFD	; 253
    9220:	fc 01       	movw	r30, r24
    9222:	80 81       	ld	r24, Z
    9224:	91 81       	ldd	r25, Z+1	; 0x01
    9226:	8c 01       	movw	r16, r24
    9228:	c8 01       	movw	r24, r16
    922a:	01 97       	sbiw	r24, 0x01	; 1
    922c:	f1 f7       	brne	.-4      	; 0x922a <main+0x5556>
    922e:	8c 01       	movw	r16, r24
    9230:	ce 01       	movw	r24, r28
    9232:	83 57       	subi	r24, 0x73	; 115
    9234:	9d 4f       	sbci	r25, 0xFD	; 253
    9236:	fc 01       	movw	r30, r24
    9238:	11 83       	std	Z+1, r17	; 0x01
    923a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    923c:	ce 01       	movw	r24, r28
    923e:	85 57       	subi	r24, 0x75	; 117
    9240:	9d 4f       	sbci	r25, 0xFD	; 253
    9242:	9e 01       	movw	r18, r28
    9244:	25 57       	subi	r18, 0x75	; 117
    9246:	3d 4f       	sbci	r19, 0xFD	; 253
    9248:	f9 01       	movw	r30, r18
    924a:	20 81       	ld	r18, Z
    924c:	31 81       	ldd	r19, Z+1	; 0x01
    924e:	21 50       	subi	r18, 0x01	; 1
    9250:	30 40       	sbci	r19, 0x00	; 0
    9252:	fc 01       	movw	r30, r24
    9254:	31 83       	std	Z+1, r19	; 0x01
    9256:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9258:	ce 01       	movw	r24, r28
    925a:	85 57       	subi	r24, 0x75	; 117
    925c:	9d 4f       	sbci	r25, 0xFD	; 253
    925e:	fc 01       	movw	r30, r24
    9260:	80 81       	ld	r24, Z
    9262:	91 81       	ldd	r25, Z+1	; 0x01
    9264:	00 97       	sbiw	r24, 0x00	; 0
    9266:	89 f6       	brne	.-94     	; 0x920a <main+0x5536>
    9268:	2f c0       	rjmp	.+94     	; 0x92c8 <main+0x55f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    926a:	8e 01       	movw	r16, r28
    926c:	05 57       	subi	r16, 0x75	; 117
    926e:	1d 4f       	sbci	r17, 0xFD	; 253
    9270:	ce 01       	movw	r24, r28
    9272:	89 57       	subi	r24, 0x79	; 121
    9274:	9d 4f       	sbci	r25, 0xFD	; 253
    9276:	fc 01       	movw	r30, r24
    9278:	60 81       	ld	r22, Z
    927a:	71 81       	ldd	r23, Z+1	; 0x01
    927c:	82 81       	ldd	r24, Z+2	; 0x02
    927e:	93 81       	ldd	r25, Z+3	; 0x03
    9280:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9284:	dc 01       	movw	r26, r24
    9286:	cb 01       	movw	r24, r22
    9288:	f8 01       	movw	r30, r16
    928a:	91 83       	std	Z+1, r25	; 0x01
    928c:	80 83       	st	Z, r24
    928e:	ce 01       	movw	r24, r28
    9290:	81 57       	subi	r24, 0x71	; 113
    9292:	9d 4f       	sbci	r25, 0xFD	; 253
    9294:	9e 01       	movw	r18, r28
    9296:	25 57       	subi	r18, 0x75	; 117
    9298:	3d 4f       	sbci	r19, 0xFD	; 253
    929a:	f9 01       	movw	r30, r18
    929c:	20 81       	ld	r18, Z
    929e:	31 81       	ldd	r19, Z+1	; 0x01
    92a0:	fc 01       	movw	r30, r24
    92a2:	31 83       	std	Z+1, r19	; 0x01
    92a4:	20 83       	st	Z, r18
    92a6:	ce 01       	movw	r24, r28
    92a8:	81 57       	subi	r24, 0x71	; 113
    92aa:	9d 4f       	sbci	r25, 0xFD	; 253
    92ac:	fc 01       	movw	r30, r24
    92ae:	80 81       	ld	r24, Z
    92b0:	91 81       	ldd	r25, Z+1	; 0x01
    92b2:	8c 01       	movw	r16, r24
    92b4:	c8 01       	movw	r24, r16
    92b6:	01 97       	sbiw	r24, 0x01	; 1
    92b8:	f1 f7       	brne	.-4      	; 0x92b6 <main+0x55e2>
    92ba:	8c 01       	movw	r16, r24
    92bc:	ce 01       	movw	r24, r28
    92be:	81 57       	subi	r24, 0x71	; 113
    92c0:	9d 4f       	sbci	r25, 0xFD	; 253
    92c2:	fc 01       	movw	r30, r24
    92c4:	11 83       	std	Z+1, r17	; 0x01
    92c6:	00 83       	st	Z, r16
					_delay_ms(30);
					back_mm(10);
    92c8:	8a e0       	ldi	r24, 0x0A	; 10
    92ca:	90 e0       	ldi	r25, 0x00	; 0
    92cc:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    92d0:	9e 01       	movw	r18, r28
    92d2:	2f 56       	subi	r18, 0x6F	; 111
    92d4:	3d 4f       	sbci	r19, 0xFD	; 253
    92d6:	80 e0       	ldi	r24, 0x00	; 0
    92d8:	90 e0       	ldi	r25, 0x00	; 0
    92da:	aa ef       	ldi	r26, 0xFA	; 250
    92dc:	b3 e4       	ldi	r27, 0x43	; 67
    92de:	f9 01       	movw	r30, r18
    92e0:	80 83       	st	Z, r24
    92e2:	91 83       	std	Z+1, r25	; 0x01
    92e4:	a2 83       	std	Z+2, r26	; 0x02
    92e6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    92e8:	8e 01       	movw	r16, r28
    92ea:	0b 56       	subi	r16, 0x6B	; 107
    92ec:	1d 4f       	sbci	r17, 0xFD	; 253
    92ee:	ce 01       	movw	r24, r28
    92f0:	8f 56       	subi	r24, 0x6F	; 111
    92f2:	9d 4f       	sbci	r25, 0xFD	; 253
    92f4:	fc 01       	movw	r30, r24
    92f6:	60 81       	ld	r22, Z
    92f8:	71 81       	ldd	r23, Z+1	; 0x01
    92fa:	82 81       	ldd	r24, Z+2	; 0x02
    92fc:	93 81       	ldd	r25, Z+3	; 0x03
    92fe:	26 e6       	ldi	r18, 0x66	; 102
    9300:	36 e6       	ldi	r19, 0x66	; 102
    9302:	46 e6       	ldi	r20, 0x66	; 102
    9304:	55 e4       	ldi	r21, 0x45	; 69
    9306:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    930a:	dc 01       	movw	r26, r24
    930c:	cb 01       	movw	r24, r22
    930e:	f8 01       	movw	r30, r16
    9310:	80 83       	st	Z, r24
    9312:	91 83       	std	Z+1, r25	; 0x01
    9314:	a2 83       	std	Z+2, r26	; 0x02
    9316:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    9318:	ce 01       	movw	r24, r28
    931a:	8b 56       	subi	r24, 0x6B	; 107
    931c:	9d 4f       	sbci	r25, 0xFD	; 253
    931e:	11 e0       	ldi	r17, 0x01	; 1
    9320:	fc 01       	movw	r30, r24
    9322:	60 81       	ld	r22, Z
    9324:	71 81       	ldd	r23, Z+1	; 0x01
    9326:	82 81       	ldd	r24, Z+2	; 0x02
    9328:	93 81       	ldd	r25, Z+3	; 0x03
    932a:	20 e0       	ldi	r18, 0x00	; 0
    932c:	30 e0       	ldi	r19, 0x00	; 0
    932e:	40 e8       	ldi	r20, 0x80	; 128
    9330:	5f e3       	ldi	r21, 0x3F	; 63
    9332:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    9336:	88 23       	and	r24, r24
    9338:	0c f0       	brlt	.+2      	; 0x933c <main+0x5668>
    933a:	10 e0       	ldi	r17, 0x00	; 0
    933c:	11 23       	and	r17, r17
    933e:	49 f0       	breq	.+18     	; 0x9352 <main+0x567e>
		__ticks = 1;
    9340:	ce 01       	movw	r24, r28
    9342:	87 56       	subi	r24, 0x67	; 103
    9344:	9d 4f       	sbci	r25, 0xFD	; 253
    9346:	21 e0       	ldi	r18, 0x01	; 1
    9348:	30 e0       	ldi	r19, 0x00	; 0
    934a:	fc 01       	movw	r30, r24
    934c:	31 83       	std	Z+1, r19	; 0x01
    934e:	20 83       	st	Z, r18
    9350:	74 c0       	rjmp	.+232    	; 0x943a <main+0x5766>
	else if (__tmp > 65535)
    9352:	ce 01       	movw	r24, r28
    9354:	8b 56       	subi	r24, 0x6B	; 107
    9356:	9d 4f       	sbci	r25, 0xFD	; 253
    9358:	11 e0       	ldi	r17, 0x01	; 1
    935a:	fc 01       	movw	r30, r24
    935c:	60 81       	ld	r22, Z
    935e:	71 81       	ldd	r23, Z+1	; 0x01
    9360:	82 81       	ldd	r24, Z+2	; 0x02
    9362:	93 81       	ldd	r25, Z+3	; 0x03
    9364:	20 e0       	ldi	r18, 0x00	; 0
    9366:	3f ef       	ldi	r19, 0xFF	; 255
    9368:	4f e7       	ldi	r20, 0x7F	; 127
    936a:	57 e4       	ldi	r21, 0x47	; 71
    936c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9370:	18 16       	cp	r1, r24
    9372:	0c f0       	brlt	.+2      	; 0x9376 <main+0x56a2>
    9374:	10 e0       	ldi	r17, 0x00	; 0
    9376:	11 23       	and	r17, r17
    9378:	09 f4       	brne	.+2      	; 0x937c <main+0x56a8>
    937a:	4d c0       	rjmp	.+154    	; 0x9416 <main+0x5742>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    937c:	ce 01       	movw	r24, r28
    937e:	8f 56       	subi	r24, 0x6F	; 111
    9380:	9d 4f       	sbci	r25, 0xFD	; 253
    9382:	fc 01       	movw	r30, r24
    9384:	60 81       	ld	r22, Z
    9386:	71 81       	ldd	r23, Z+1	; 0x01
    9388:	82 81       	ldd	r24, Z+2	; 0x02
    938a:	93 81       	ldd	r25, Z+3	; 0x03
    938c:	20 e0       	ldi	r18, 0x00	; 0
    938e:	30 e0       	ldi	r19, 0x00	; 0
    9390:	40 e2       	ldi	r20, 0x20	; 32
    9392:	51 e4       	ldi	r21, 0x41	; 65
    9394:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9398:	dc 01       	movw	r26, r24
    939a:	cb 01       	movw	r24, r22
    939c:	8e 01       	movw	r16, r28
    939e:	07 56       	subi	r16, 0x67	; 103
    93a0:	1d 4f       	sbci	r17, 0xFD	; 253
    93a2:	bc 01       	movw	r22, r24
    93a4:	cd 01       	movw	r24, r26
    93a6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    93aa:	dc 01       	movw	r26, r24
    93ac:	cb 01       	movw	r24, r22
    93ae:	f8 01       	movw	r30, r16
    93b0:	91 83       	std	Z+1, r25	; 0x01
    93b2:	80 83       	st	Z, r24
    93b4:	27 c0       	rjmp	.+78     	; 0x9404 <main+0x5730>
    93b6:	ce 01       	movw	r24, r28
    93b8:	85 56       	subi	r24, 0x65	; 101
    93ba:	9d 4f       	sbci	r25, 0xFD	; 253
    93bc:	20 e7       	ldi	r18, 0x70	; 112
    93be:	31 e0       	ldi	r19, 0x01	; 1
    93c0:	fc 01       	movw	r30, r24
    93c2:	31 83       	std	Z+1, r19	; 0x01
    93c4:	20 83       	st	Z, r18
    93c6:	ce 01       	movw	r24, r28
    93c8:	85 56       	subi	r24, 0x65	; 101
    93ca:	9d 4f       	sbci	r25, 0xFD	; 253
    93cc:	fc 01       	movw	r30, r24
    93ce:	80 81       	ld	r24, Z
    93d0:	91 81       	ldd	r25, Z+1	; 0x01
    93d2:	8c 01       	movw	r16, r24
    93d4:	c8 01       	movw	r24, r16
    93d6:	01 97       	sbiw	r24, 0x01	; 1
    93d8:	f1 f7       	brne	.-4      	; 0x93d6 <main+0x5702>
    93da:	8c 01       	movw	r16, r24
    93dc:	ce 01       	movw	r24, r28
    93de:	85 56       	subi	r24, 0x65	; 101
    93e0:	9d 4f       	sbci	r25, 0xFD	; 253
    93e2:	fc 01       	movw	r30, r24
    93e4:	11 83       	std	Z+1, r17	; 0x01
    93e6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    93e8:	ce 01       	movw	r24, r28
    93ea:	87 56       	subi	r24, 0x67	; 103
    93ec:	9d 4f       	sbci	r25, 0xFD	; 253
    93ee:	9e 01       	movw	r18, r28
    93f0:	27 56       	subi	r18, 0x67	; 103
    93f2:	3d 4f       	sbci	r19, 0xFD	; 253
    93f4:	f9 01       	movw	r30, r18
    93f6:	20 81       	ld	r18, Z
    93f8:	31 81       	ldd	r19, Z+1	; 0x01
    93fa:	21 50       	subi	r18, 0x01	; 1
    93fc:	30 40       	sbci	r19, 0x00	; 0
    93fe:	fc 01       	movw	r30, r24
    9400:	31 83       	std	Z+1, r19	; 0x01
    9402:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9404:	ce 01       	movw	r24, r28
    9406:	87 56       	subi	r24, 0x67	; 103
    9408:	9d 4f       	sbci	r25, 0xFD	; 253
    940a:	fc 01       	movw	r30, r24
    940c:	80 81       	ld	r24, Z
    940e:	91 81       	ldd	r25, Z+1	; 0x01
    9410:	00 97       	sbiw	r24, 0x00	; 0
    9412:	89 f6       	brne	.-94     	; 0x93b6 <main+0x56e2>
    9414:	2f c0       	rjmp	.+94     	; 0x9474 <main+0x57a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    9416:	8e 01       	movw	r16, r28
    9418:	07 56       	subi	r16, 0x67	; 103
    941a:	1d 4f       	sbci	r17, 0xFD	; 253
    941c:	ce 01       	movw	r24, r28
    941e:	8b 56       	subi	r24, 0x6B	; 107
    9420:	9d 4f       	sbci	r25, 0xFD	; 253
    9422:	fc 01       	movw	r30, r24
    9424:	60 81       	ld	r22, Z
    9426:	71 81       	ldd	r23, Z+1	; 0x01
    9428:	82 81       	ldd	r24, Z+2	; 0x02
    942a:	93 81       	ldd	r25, Z+3	; 0x03
    942c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9430:	dc 01       	movw	r26, r24
    9432:	cb 01       	movw	r24, r22
    9434:	f8 01       	movw	r30, r16
    9436:	91 83       	std	Z+1, r25	; 0x01
    9438:	80 83       	st	Z, r24
    943a:	ce 01       	movw	r24, r28
    943c:	83 56       	subi	r24, 0x63	; 99
    943e:	9d 4f       	sbci	r25, 0xFD	; 253
    9440:	9e 01       	movw	r18, r28
    9442:	27 56       	subi	r18, 0x67	; 103
    9444:	3d 4f       	sbci	r19, 0xFD	; 253
    9446:	f9 01       	movw	r30, r18
    9448:	20 81       	ld	r18, Z
    944a:	31 81       	ldd	r19, Z+1	; 0x01
    944c:	fc 01       	movw	r30, r24
    944e:	31 83       	std	Z+1, r19	; 0x01
    9450:	20 83       	st	Z, r18
    9452:	ce 01       	movw	r24, r28
    9454:	83 56       	subi	r24, 0x63	; 99
    9456:	9d 4f       	sbci	r25, 0xFD	; 253
    9458:	fc 01       	movw	r30, r24
    945a:	80 81       	ld	r24, Z
    945c:	91 81       	ldd	r25, Z+1	; 0x01
    945e:	8c 01       	movw	r16, r24
    9460:	c8 01       	movw	r24, r16
    9462:	01 97       	sbiw	r24, 0x01	; 1
    9464:	f1 f7       	brne	.-4      	; 0x9462 <main+0x578e>
    9466:	8c 01       	movw	r16, r24
    9468:	ce 01       	movw	r24, r28
    946a:	83 56       	subi	r24, 0x63	; 99
    946c:	9d 4f       	sbci	r25, 0xFD	; 253
    946e:	fc 01       	movw	r30, r24
    9470:	11 83       	std	Z+1, r17	; 0x01
    9472:	00 83       	st	Z, r16
					_delay_ms(500);
					right_degrees(45);
    9474:	8d e2       	ldi	r24, 0x2D	; 45
    9476:	90 e0       	ldi	r25, 0x00	; 0
    9478:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
					left_degrees(180);        /// change
    947c:	84 eb       	ldi	r24, 0xB4	; 180
    947e:	90 e0       	ldi	r25, 0x00	; 0
    9480:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
					compass=5;
    9484:	85 e0       	ldi	r24, 0x05	; 5
    9486:	90 e0       	ldi	r25, 0x00	; 0
    9488:	9c 83       	std	Y+4, r25	; 0x04
    948a:	8b 83       	std	Y+3, r24	; 0x03
					
			}
			if(coor[0]>origin2[boxnumber][i][0] && coor[1]>origin2[boxnumber][i][1])
    948c:	20 91 a6 04 	lds	r18, 0x04A6
    9490:	30 91 a7 04 	lds	r19, 0x04A7
    9494:	ae 01       	movw	r20, r28
    9496:	4d 5f       	subi	r20, 0xFD	; 253
    9498:	5a 4f       	sbci	r21, 0xFA	; 250
    949a:	8d 81       	ldd	r24, Y+5	; 0x05
    949c:	9e 81       	ldd	r25, Y+6	; 0x06
    949e:	bc 01       	movw	r22, r24
    94a0:	66 0f       	add	r22, r22
    94a2:	77 1f       	adc	r23, r23
    94a4:	66 0f       	add	r22, r22
    94a6:	77 1f       	adc	r23, r23
    94a8:	8b a1       	lds	r24, 0x4b
    94aa:	9c a1       	lds	r25, 0x4c
    94ac:	86 0f       	add	r24, r22
    94ae:	97 1f       	adc	r25, r23
    94b0:	88 0f       	add	r24, r24
    94b2:	99 1f       	adc	r25, r25
    94b4:	88 0f       	add	r24, r24
    94b6:	99 1f       	adc	r25, r25
    94b8:	84 0f       	add	r24, r20
    94ba:	95 1f       	adc	r25, r21
    94bc:	fc 01       	movw	r30, r24
    94be:	80 81       	ld	r24, Z
    94c0:	91 81       	ldd	r25, Z+1	; 0x01
    94c2:	82 17       	cp	r24, r18
    94c4:	93 07       	cpc	r25, r19
    94c6:	0c f0       	brlt	.+2      	; 0x94ca <main+0x57f6>
    94c8:	c6 c2       	rjmp	.+1420   	; 0x9a56 <main+0x5d82>
    94ca:	20 91 a8 04 	lds	r18, 0x04A8
    94ce:	30 91 a9 04 	lds	r19, 0x04A9
    94d2:	ae 01       	movw	r20, r28
    94d4:	4d 5f       	subi	r20, 0xFD	; 253
    94d6:	5a 4f       	sbci	r21, 0xFA	; 250
    94d8:	8d 81       	ldd	r24, Y+5	; 0x05
    94da:	9e 81       	ldd	r25, Y+6	; 0x06
    94dc:	bc 01       	movw	r22, r24
    94de:	66 0f       	add	r22, r22
    94e0:	77 1f       	adc	r23, r23
    94e2:	66 0f       	add	r22, r22
    94e4:	77 1f       	adc	r23, r23
    94e6:	8b a1       	lds	r24, 0x4b
    94e8:	9c a1       	lds	r25, 0x4c
    94ea:	86 0f       	add	r24, r22
    94ec:	97 1f       	adc	r25, r23
    94ee:	88 0f       	add	r24, r24
    94f0:	99 1f       	adc	r25, r25
    94f2:	88 0f       	add	r24, r24
    94f4:	99 1f       	adc	r25, r25
    94f6:	84 0f       	add	r24, r20
    94f8:	95 1f       	adc	r25, r21
    94fa:	02 96       	adiw	r24, 0x02	; 2
    94fc:	fc 01       	movw	r30, r24
    94fe:	80 81       	ld	r24, Z
    9500:	91 81       	ldd	r25, Z+1	; 0x01
    9502:	82 17       	cp	r24, r18
    9504:	93 07       	cpc	r25, r19
    9506:	0c f0       	brlt	.+2      	; 0x950a <main+0x5836>
    9508:	a6 c2       	rjmp	.+1356   	; 0x9a56 <main+0x5d82>
			{
				left_degrees(135);
    950a:	87 e8       	ldi	r24, 0x87	; 135
    950c:	90 e0       	ldi	r25, 0x00	; 0
    950e:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
				back_mm(65);
    9512:	81 e4       	ldi	r24, 0x41	; 65
    9514:	90 e0       	ldi	r25, 0x00	; 0
    9516:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
				matrix2();
    951a:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
					if(summ1[recur+1]>10)
    951e:	8f 81       	ldd	r24, Y+7	; 0x07
    9520:	98 85       	ldd	r25, Y+8	; 0x08
    9522:	01 96       	adiw	r24, 0x01	; 1
    9524:	9e 01       	movw	r18, r28
    9526:	25 54       	subi	r18, 0x45	; 69
    9528:	39 4f       	sbci	r19, 0xF9	; 249
    952a:	88 0f       	add	r24, r24
    952c:	99 1f       	adc	r25, r25
    952e:	82 0f       	add	r24, r18
    9530:	93 1f       	adc	r25, r19
    9532:	fc 01       	movw	r30, r24
    9534:	80 81       	ld	r24, Z
    9536:	91 81       	ldd	r25, Z+1	; 0x01
    9538:	8b 30       	cpi	r24, 0x0B	; 11
    953a:	91 05       	cpc	r25, r1
    953c:	0c f4       	brge	.+2      	; 0x9540 <main+0x586c>
    953e:	d6 c0       	rjmp	.+428    	; 0x96ec <main+0x5a18>
					{
						buzzer_on();
    9540:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    9544:	9e 01       	movw	r18, r28
    9546:	21 56       	subi	r18, 0x61	; 97
    9548:	3d 4f       	sbci	r19, 0xFD	; 253
    954a:	80 e0       	ldi	r24, 0x00	; 0
    954c:	90 e0       	ldi	r25, 0x00	; 0
    954e:	aa e7       	ldi	r26, 0x7A	; 122
    9550:	b4 e4       	ldi	r27, 0x44	; 68
    9552:	f9 01       	movw	r30, r18
    9554:	80 83       	st	Z, r24
    9556:	91 83       	std	Z+1, r25	; 0x01
    9558:	a2 83       	std	Z+2, r26	; 0x02
    955a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    955c:	8e 01       	movw	r16, r28
    955e:	0d 55       	subi	r16, 0x5D	; 93
    9560:	1d 4f       	sbci	r17, 0xFD	; 253
    9562:	ce 01       	movw	r24, r28
    9564:	81 56       	subi	r24, 0x61	; 97
    9566:	9d 4f       	sbci	r25, 0xFD	; 253
    9568:	fc 01       	movw	r30, r24
    956a:	60 81       	ld	r22, Z
    956c:	71 81       	ldd	r23, Z+1	; 0x01
    956e:	82 81       	ldd	r24, Z+2	; 0x02
    9570:	93 81       	ldd	r25, Z+3	; 0x03
    9572:	26 e6       	ldi	r18, 0x66	; 102
    9574:	36 e6       	ldi	r19, 0x66	; 102
    9576:	46 e6       	ldi	r20, 0x66	; 102
    9578:	55 e4       	ldi	r21, 0x45	; 69
    957a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    957e:	dc 01       	movw	r26, r24
    9580:	cb 01       	movw	r24, r22
    9582:	f8 01       	movw	r30, r16
    9584:	80 83       	st	Z, r24
    9586:	91 83       	std	Z+1, r25	; 0x01
    9588:	a2 83       	std	Z+2, r26	; 0x02
    958a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    958c:	ce 01       	movw	r24, r28
    958e:	8d 55       	subi	r24, 0x5D	; 93
    9590:	9d 4f       	sbci	r25, 0xFD	; 253
    9592:	11 e0       	ldi	r17, 0x01	; 1
    9594:	fc 01       	movw	r30, r24
    9596:	60 81       	ld	r22, Z
    9598:	71 81       	ldd	r23, Z+1	; 0x01
    959a:	82 81       	ldd	r24, Z+2	; 0x02
    959c:	93 81       	ldd	r25, Z+3	; 0x03
    959e:	20 e0       	ldi	r18, 0x00	; 0
    95a0:	30 e0       	ldi	r19, 0x00	; 0
    95a2:	40 e8       	ldi	r20, 0x80	; 128
    95a4:	5f e3       	ldi	r21, 0x3F	; 63
    95a6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    95aa:	88 23       	and	r24, r24
    95ac:	0c f0       	brlt	.+2      	; 0x95b0 <main+0x58dc>
    95ae:	10 e0       	ldi	r17, 0x00	; 0
    95b0:	11 23       	and	r17, r17
    95b2:	49 f0       	breq	.+18     	; 0x95c6 <main+0x58f2>
		__ticks = 1;
    95b4:	ce 01       	movw	r24, r28
    95b6:	89 55       	subi	r24, 0x59	; 89
    95b8:	9d 4f       	sbci	r25, 0xFD	; 253
    95ba:	21 e0       	ldi	r18, 0x01	; 1
    95bc:	30 e0       	ldi	r19, 0x00	; 0
    95be:	fc 01       	movw	r30, r24
    95c0:	31 83       	std	Z+1, r19	; 0x01
    95c2:	20 83       	st	Z, r18
    95c4:	74 c0       	rjmp	.+232    	; 0x96ae <main+0x59da>
	else if (__tmp > 65535)
    95c6:	ce 01       	movw	r24, r28
    95c8:	8d 55       	subi	r24, 0x5D	; 93
    95ca:	9d 4f       	sbci	r25, 0xFD	; 253
    95cc:	11 e0       	ldi	r17, 0x01	; 1
    95ce:	fc 01       	movw	r30, r24
    95d0:	60 81       	ld	r22, Z
    95d2:	71 81       	ldd	r23, Z+1	; 0x01
    95d4:	82 81       	ldd	r24, Z+2	; 0x02
    95d6:	93 81       	ldd	r25, Z+3	; 0x03
    95d8:	20 e0       	ldi	r18, 0x00	; 0
    95da:	3f ef       	ldi	r19, 0xFF	; 255
    95dc:	4f e7       	ldi	r20, 0x7F	; 127
    95de:	57 e4       	ldi	r21, 0x47	; 71
    95e0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    95e4:	18 16       	cp	r1, r24
    95e6:	0c f0       	brlt	.+2      	; 0x95ea <main+0x5916>
    95e8:	10 e0       	ldi	r17, 0x00	; 0
    95ea:	11 23       	and	r17, r17
    95ec:	09 f4       	brne	.+2      	; 0x95f0 <main+0x591c>
    95ee:	4d c0       	rjmp	.+154    	; 0x968a <main+0x59b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    95f0:	ce 01       	movw	r24, r28
    95f2:	81 56       	subi	r24, 0x61	; 97
    95f4:	9d 4f       	sbci	r25, 0xFD	; 253
    95f6:	fc 01       	movw	r30, r24
    95f8:	60 81       	ld	r22, Z
    95fa:	71 81       	ldd	r23, Z+1	; 0x01
    95fc:	82 81       	ldd	r24, Z+2	; 0x02
    95fe:	93 81       	ldd	r25, Z+3	; 0x03
    9600:	20 e0       	ldi	r18, 0x00	; 0
    9602:	30 e0       	ldi	r19, 0x00	; 0
    9604:	40 e2       	ldi	r20, 0x20	; 32
    9606:	51 e4       	ldi	r21, 0x41	; 65
    9608:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    960c:	dc 01       	movw	r26, r24
    960e:	cb 01       	movw	r24, r22
    9610:	8e 01       	movw	r16, r28
    9612:	09 55       	subi	r16, 0x59	; 89
    9614:	1d 4f       	sbci	r17, 0xFD	; 253
    9616:	bc 01       	movw	r22, r24
    9618:	cd 01       	movw	r24, r26
    961a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    961e:	dc 01       	movw	r26, r24
    9620:	cb 01       	movw	r24, r22
    9622:	f8 01       	movw	r30, r16
    9624:	91 83       	std	Z+1, r25	; 0x01
    9626:	80 83       	st	Z, r24
    9628:	27 c0       	rjmp	.+78     	; 0x9678 <main+0x59a4>
    962a:	ce 01       	movw	r24, r28
    962c:	87 55       	subi	r24, 0x57	; 87
    962e:	9d 4f       	sbci	r25, 0xFD	; 253
    9630:	20 e7       	ldi	r18, 0x70	; 112
    9632:	31 e0       	ldi	r19, 0x01	; 1
    9634:	fc 01       	movw	r30, r24
    9636:	31 83       	std	Z+1, r19	; 0x01
    9638:	20 83       	st	Z, r18
    963a:	ce 01       	movw	r24, r28
    963c:	87 55       	subi	r24, 0x57	; 87
    963e:	9d 4f       	sbci	r25, 0xFD	; 253
    9640:	fc 01       	movw	r30, r24
    9642:	80 81       	ld	r24, Z
    9644:	91 81       	ldd	r25, Z+1	; 0x01
    9646:	8c 01       	movw	r16, r24
    9648:	c8 01       	movw	r24, r16
    964a:	01 97       	sbiw	r24, 0x01	; 1
    964c:	f1 f7       	brne	.-4      	; 0x964a <main+0x5976>
    964e:	8c 01       	movw	r16, r24
    9650:	ce 01       	movw	r24, r28
    9652:	87 55       	subi	r24, 0x57	; 87
    9654:	9d 4f       	sbci	r25, 0xFD	; 253
    9656:	fc 01       	movw	r30, r24
    9658:	11 83       	std	Z+1, r17	; 0x01
    965a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    965c:	ce 01       	movw	r24, r28
    965e:	89 55       	subi	r24, 0x59	; 89
    9660:	9d 4f       	sbci	r25, 0xFD	; 253
    9662:	9e 01       	movw	r18, r28
    9664:	29 55       	subi	r18, 0x59	; 89
    9666:	3d 4f       	sbci	r19, 0xFD	; 253
    9668:	f9 01       	movw	r30, r18
    966a:	20 81       	ld	r18, Z
    966c:	31 81       	ldd	r19, Z+1	; 0x01
    966e:	21 50       	subi	r18, 0x01	; 1
    9670:	30 40       	sbci	r19, 0x00	; 0
    9672:	fc 01       	movw	r30, r24
    9674:	31 83       	std	Z+1, r19	; 0x01
    9676:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9678:	ce 01       	movw	r24, r28
    967a:	89 55       	subi	r24, 0x59	; 89
    967c:	9d 4f       	sbci	r25, 0xFD	; 253
    967e:	fc 01       	movw	r30, r24
    9680:	80 81       	ld	r24, Z
    9682:	91 81       	ldd	r25, Z+1	; 0x01
    9684:	00 97       	sbiw	r24, 0x00	; 0
    9686:	89 f6       	brne	.-94     	; 0x962a <main+0x5956>
    9688:	2f c0       	rjmp	.+94     	; 0x96e8 <main+0x5a14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    968a:	8e 01       	movw	r16, r28
    968c:	09 55       	subi	r16, 0x59	; 89
    968e:	1d 4f       	sbci	r17, 0xFD	; 253
    9690:	ce 01       	movw	r24, r28
    9692:	8d 55       	subi	r24, 0x5D	; 93
    9694:	9d 4f       	sbci	r25, 0xFD	; 253
    9696:	fc 01       	movw	r30, r24
    9698:	60 81       	ld	r22, Z
    969a:	71 81       	ldd	r23, Z+1	; 0x01
    969c:	82 81       	ldd	r24, Z+2	; 0x02
    969e:	93 81       	ldd	r25, Z+3	; 0x03
    96a0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    96a4:	dc 01       	movw	r26, r24
    96a6:	cb 01       	movw	r24, r22
    96a8:	f8 01       	movw	r30, r16
    96aa:	91 83       	std	Z+1, r25	; 0x01
    96ac:	80 83       	st	Z, r24
    96ae:	ce 01       	movw	r24, r28
    96b0:	85 55       	subi	r24, 0x55	; 85
    96b2:	9d 4f       	sbci	r25, 0xFD	; 253
    96b4:	9e 01       	movw	r18, r28
    96b6:	29 55       	subi	r18, 0x59	; 89
    96b8:	3d 4f       	sbci	r19, 0xFD	; 253
    96ba:	f9 01       	movw	r30, r18
    96bc:	20 81       	ld	r18, Z
    96be:	31 81       	ldd	r19, Z+1	; 0x01
    96c0:	fc 01       	movw	r30, r24
    96c2:	31 83       	std	Z+1, r19	; 0x01
    96c4:	20 83       	st	Z, r18
    96c6:	ce 01       	movw	r24, r28
    96c8:	85 55       	subi	r24, 0x55	; 85
    96ca:	9d 4f       	sbci	r25, 0xFD	; 253
    96cc:	fc 01       	movw	r30, r24
    96ce:	80 81       	ld	r24, Z
    96d0:	91 81       	ldd	r25, Z+1	; 0x01
    96d2:	8c 01       	movw	r16, r24
    96d4:	c8 01       	movw	r24, r16
    96d6:	01 97       	sbiw	r24, 0x01	; 1
    96d8:	f1 f7       	brne	.-4      	; 0x96d6 <main+0x5a02>
    96da:	8c 01       	movw	r16, r24
    96dc:	ce 01       	movw	r24, r28
    96de:	85 55       	subi	r24, 0x55	; 85
    96e0:	9d 4f       	sbci	r25, 0xFD	; 253
    96e2:	fc 01       	movw	r30, r24
    96e4:	11 83       	std	Z+1, r17	; 0x01
    96e6:	00 83       	st	Z, r16
						_delay_ms(1000);
						buzzer_off();
    96e8:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
					}
				forward_mm(75);
    96ec:	8b e4       	ldi	r24, 0x4B	; 75
    96ee:	90 e0       	ldi	r25, 0x00	; 0
    96f0:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    96f4:	9e 01       	movw	r18, r28
    96f6:	23 55       	subi	r18, 0x53	; 83
    96f8:	3d 4f       	sbci	r19, 0xFD	; 253
    96fa:	80 e0       	ldi	r24, 0x00	; 0
    96fc:	90 e0       	ldi	r25, 0x00	; 0
    96fe:	a0 ef       	ldi	r26, 0xF0	; 240
    9700:	b1 e4       	ldi	r27, 0x41	; 65
    9702:	f9 01       	movw	r30, r18
    9704:	80 83       	st	Z, r24
    9706:	91 83       	std	Z+1, r25	; 0x01
    9708:	a2 83       	std	Z+2, r26	; 0x02
    970a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    970c:	8e 01       	movw	r16, r28
    970e:	0f 54       	subi	r16, 0x4F	; 79
    9710:	1d 4f       	sbci	r17, 0xFD	; 253
    9712:	ce 01       	movw	r24, r28
    9714:	83 55       	subi	r24, 0x53	; 83
    9716:	9d 4f       	sbci	r25, 0xFD	; 253
    9718:	fc 01       	movw	r30, r24
    971a:	60 81       	ld	r22, Z
    971c:	71 81       	ldd	r23, Z+1	; 0x01
    971e:	82 81       	ldd	r24, Z+2	; 0x02
    9720:	93 81       	ldd	r25, Z+3	; 0x03
    9722:	26 e6       	ldi	r18, 0x66	; 102
    9724:	36 e6       	ldi	r19, 0x66	; 102
    9726:	46 e6       	ldi	r20, 0x66	; 102
    9728:	55 e4       	ldi	r21, 0x45	; 69
    972a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    972e:	dc 01       	movw	r26, r24
    9730:	cb 01       	movw	r24, r22
    9732:	f8 01       	movw	r30, r16
    9734:	80 83       	st	Z, r24
    9736:	91 83       	std	Z+1, r25	; 0x01
    9738:	a2 83       	std	Z+2, r26	; 0x02
    973a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    973c:	ce 01       	movw	r24, r28
    973e:	8f 54       	subi	r24, 0x4F	; 79
    9740:	9d 4f       	sbci	r25, 0xFD	; 253
    9742:	11 e0       	ldi	r17, 0x01	; 1
    9744:	fc 01       	movw	r30, r24
    9746:	60 81       	ld	r22, Z
    9748:	71 81       	ldd	r23, Z+1	; 0x01
    974a:	82 81       	ldd	r24, Z+2	; 0x02
    974c:	93 81       	ldd	r25, Z+3	; 0x03
    974e:	20 e0       	ldi	r18, 0x00	; 0
    9750:	30 e0       	ldi	r19, 0x00	; 0
    9752:	40 e8       	ldi	r20, 0x80	; 128
    9754:	5f e3       	ldi	r21, 0x3F	; 63
    9756:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    975a:	88 23       	and	r24, r24
    975c:	0c f0       	brlt	.+2      	; 0x9760 <main+0x5a8c>
    975e:	10 e0       	ldi	r17, 0x00	; 0
    9760:	11 23       	and	r17, r17
    9762:	49 f0       	breq	.+18     	; 0x9776 <main+0x5aa2>
		__ticks = 1;
    9764:	ce 01       	movw	r24, r28
    9766:	8b 54       	subi	r24, 0x4B	; 75
    9768:	9d 4f       	sbci	r25, 0xFD	; 253
    976a:	21 e0       	ldi	r18, 0x01	; 1
    976c:	30 e0       	ldi	r19, 0x00	; 0
    976e:	fc 01       	movw	r30, r24
    9770:	31 83       	std	Z+1, r19	; 0x01
    9772:	20 83       	st	Z, r18
    9774:	74 c0       	rjmp	.+232    	; 0x985e <main+0x5b8a>
	else if (__tmp > 65535)
    9776:	ce 01       	movw	r24, r28
    9778:	8f 54       	subi	r24, 0x4F	; 79
    977a:	9d 4f       	sbci	r25, 0xFD	; 253
    977c:	11 e0       	ldi	r17, 0x01	; 1
    977e:	fc 01       	movw	r30, r24
    9780:	60 81       	ld	r22, Z
    9782:	71 81       	ldd	r23, Z+1	; 0x01
    9784:	82 81       	ldd	r24, Z+2	; 0x02
    9786:	93 81       	ldd	r25, Z+3	; 0x03
    9788:	20 e0       	ldi	r18, 0x00	; 0
    978a:	3f ef       	ldi	r19, 0xFF	; 255
    978c:	4f e7       	ldi	r20, 0x7F	; 127
    978e:	57 e4       	ldi	r21, 0x47	; 71
    9790:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9794:	18 16       	cp	r1, r24
    9796:	0c f0       	brlt	.+2      	; 0x979a <main+0x5ac6>
    9798:	10 e0       	ldi	r17, 0x00	; 0
    979a:	11 23       	and	r17, r17
    979c:	09 f4       	brne	.+2      	; 0x97a0 <main+0x5acc>
    979e:	4d c0       	rjmp	.+154    	; 0x983a <main+0x5b66>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    97a0:	ce 01       	movw	r24, r28
    97a2:	83 55       	subi	r24, 0x53	; 83
    97a4:	9d 4f       	sbci	r25, 0xFD	; 253
    97a6:	fc 01       	movw	r30, r24
    97a8:	60 81       	ld	r22, Z
    97aa:	71 81       	ldd	r23, Z+1	; 0x01
    97ac:	82 81       	ldd	r24, Z+2	; 0x02
    97ae:	93 81       	ldd	r25, Z+3	; 0x03
    97b0:	20 e0       	ldi	r18, 0x00	; 0
    97b2:	30 e0       	ldi	r19, 0x00	; 0
    97b4:	40 e2       	ldi	r20, 0x20	; 32
    97b6:	51 e4       	ldi	r21, 0x41	; 65
    97b8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    97bc:	dc 01       	movw	r26, r24
    97be:	cb 01       	movw	r24, r22
    97c0:	8e 01       	movw	r16, r28
    97c2:	0b 54       	subi	r16, 0x4B	; 75
    97c4:	1d 4f       	sbci	r17, 0xFD	; 253
    97c6:	bc 01       	movw	r22, r24
    97c8:	cd 01       	movw	r24, r26
    97ca:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    97ce:	dc 01       	movw	r26, r24
    97d0:	cb 01       	movw	r24, r22
    97d2:	f8 01       	movw	r30, r16
    97d4:	91 83       	std	Z+1, r25	; 0x01
    97d6:	80 83       	st	Z, r24
    97d8:	27 c0       	rjmp	.+78     	; 0x9828 <main+0x5b54>
    97da:	ce 01       	movw	r24, r28
    97dc:	89 54       	subi	r24, 0x49	; 73
    97de:	9d 4f       	sbci	r25, 0xFD	; 253
    97e0:	20 e7       	ldi	r18, 0x70	; 112
    97e2:	31 e0       	ldi	r19, 0x01	; 1
    97e4:	fc 01       	movw	r30, r24
    97e6:	31 83       	std	Z+1, r19	; 0x01
    97e8:	20 83       	st	Z, r18
    97ea:	ce 01       	movw	r24, r28
    97ec:	89 54       	subi	r24, 0x49	; 73
    97ee:	9d 4f       	sbci	r25, 0xFD	; 253
    97f0:	fc 01       	movw	r30, r24
    97f2:	80 81       	ld	r24, Z
    97f4:	91 81       	ldd	r25, Z+1	; 0x01
    97f6:	8c 01       	movw	r16, r24
    97f8:	c8 01       	movw	r24, r16
    97fa:	01 97       	sbiw	r24, 0x01	; 1
    97fc:	f1 f7       	brne	.-4      	; 0x97fa <main+0x5b26>
    97fe:	8c 01       	movw	r16, r24
    9800:	ce 01       	movw	r24, r28
    9802:	89 54       	subi	r24, 0x49	; 73
    9804:	9d 4f       	sbci	r25, 0xFD	; 253
    9806:	fc 01       	movw	r30, r24
    9808:	11 83       	std	Z+1, r17	; 0x01
    980a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    980c:	ce 01       	movw	r24, r28
    980e:	8b 54       	subi	r24, 0x4B	; 75
    9810:	9d 4f       	sbci	r25, 0xFD	; 253
    9812:	9e 01       	movw	r18, r28
    9814:	2b 54       	subi	r18, 0x4B	; 75
    9816:	3d 4f       	sbci	r19, 0xFD	; 253
    9818:	f9 01       	movw	r30, r18
    981a:	20 81       	ld	r18, Z
    981c:	31 81       	ldd	r19, Z+1	; 0x01
    981e:	21 50       	subi	r18, 0x01	; 1
    9820:	30 40       	sbci	r19, 0x00	; 0
    9822:	fc 01       	movw	r30, r24
    9824:	31 83       	std	Z+1, r19	; 0x01
    9826:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9828:	ce 01       	movw	r24, r28
    982a:	8b 54       	subi	r24, 0x4B	; 75
    982c:	9d 4f       	sbci	r25, 0xFD	; 253
    982e:	fc 01       	movw	r30, r24
    9830:	80 81       	ld	r24, Z
    9832:	91 81       	ldd	r25, Z+1	; 0x01
    9834:	00 97       	sbiw	r24, 0x00	; 0
    9836:	89 f6       	brne	.-94     	; 0x97da <main+0x5b06>
    9838:	2f c0       	rjmp	.+94     	; 0x9898 <main+0x5bc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    983a:	8e 01       	movw	r16, r28
    983c:	0b 54       	subi	r16, 0x4B	; 75
    983e:	1d 4f       	sbci	r17, 0xFD	; 253
    9840:	ce 01       	movw	r24, r28
    9842:	8f 54       	subi	r24, 0x4F	; 79
    9844:	9d 4f       	sbci	r25, 0xFD	; 253
    9846:	fc 01       	movw	r30, r24
    9848:	60 81       	ld	r22, Z
    984a:	71 81       	ldd	r23, Z+1	; 0x01
    984c:	82 81       	ldd	r24, Z+2	; 0x02
    984e:	93 81       	ldd	r25, Z+3	; 0x03
    9850:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9854:	dc 01       	movw	r26, r24
    9856:	cb 01       	movw	r24, r22
    9858:	f8 01       	movw	r30, r16
    985a:	91 83       	std	Z+1, r25	; 0x01
    985c:	80 83       	st	Z, r24
    985e:	ce 01       	movw	r24, r28
    9860:	87 54       	subi	r24, 0x47	; 71
    9862:	9d 4f       	sbci	r25, 0xFD	; 253
    9864:	9e 01       	movw	r18, r28
    9866:	2b 54       	subi	r18, 0x4B	; 75
    9868:	3d 4f       	sbci	r19, 0xFD	; 253
    986a:	f9 01       	movw	r30, r18
    986c:	20 81       	ld	r18, Z
    986e:	31 81       	ldd	r19, Z+1	; 0x01
    9870:	fc 01       	movw	r30, r24
    9872:	31 83       	std	Z+1, r19	; 0x01
    9874:	20 83       	st	Z, r18
    9876:	ce 01       	movw	r24, r28
    9878:	87 54       	subi	r24, 0x47	; 71
    987a:	9d 4f       	sbci	r25, 0xFD	; 253
    987c:	fc 01       	movw	r30, r24
    987e:	80 81       	ld	r24, Z
    9880:	91 81       	ldd	r25, Z+1	; 0x01
    9882:	8c 01       	movw	r16, r24
    9884:	c8 01       	movw	r24, r16
    9886:	01 97       	sbiw	r24, 0x01	; 1
    9888:	f1 f7       	brne	.-4      	; 0x9886 <main+0x5bb2>
    988a:	8c 01       	movw	r16, r24
    988c:	ce 01       	movw	r24, r28
    988e:	87 54       	subi	r24, 0x47	; 71
    9890:	9d 4f       	sbci	r25, 0xFD	; 253
    9892:	fc 01       	movw	r30, r24
    9894:	11 83       	std	Z+1, r17	; 0x01
    9896:	00 83       	st	Z, r16
				_delay_ms(30);
				back_mm(10);
    9898:	8a e0       	ldi	r24, 0x0A	; 10
    989a:	90 e0       	ldi	r25, 0x00	; 0
    989c:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    98a0:	9e 01       	movw	r18, r28
    98a2:	25 54       	subi	r18, 0x45	; 69
    98a4:	3d 4f       	sbci	r19, 0xFD	; 253
    98a6:	80 e0       	ldi	r24, 0x00	; 0
    98a8:	90 e0       	ldi	r25, 0x00	; 0
    98aa:	aa ef       	ldi	r26, 0xFA	; 250
    98ac:	b3 e4       	ldi	r27, 0x43	; 67
    98ae:	f9 01       	movw	r30, r18
    98b0:	80 83       	st	Z, r24
    98b2:	91 83       	std	Z+1, r25	; 0x01
    98b4:	a2 83       	std	Z+2, r26	; 0x02
    98b6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    98b8:	8e 01       	movw	r16, r28
    98ba:	01 54       	subi	r16, 0x41	; 65
    98bc:	1d 4f       	sbci	r17, 0xFD	; 253
    98be:	ce 01       	movw	r24, r28
    98c0:	85 54       	subi	r24, 0x45	; 69
    98c2:	9d 4f       	sbci	r25, 0xFD	; 253
    98c4:	fc 01       	movw	r30, r24
    98c6:	60 81       	ld	r22, Z
    98c8:	71 81       	ldd	r23, Z+1	; 0x01
    98ca:	82 81       	ldd	r24, Z+2	; 0x02
    98cc:	93 81       	ldd	r25, Z+3	; 0x03
    98ce:	26 e6       	ldi	r18, 0x66	; 102
    98d0:	36 e6       	ldi	r19, 0x66	; 102
    98d2:	46 e6       	ldi	r20, 0x66	; 102
    98d4:	55 e4       	ldi	r21, 0x45	; 69
    98d6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    98da:	dc 01       	movw	r26, r24
    98dc:	cb 01       	movw	r24, r22
    98de:	f8 01       	movw	r30, r16
    98e0:	80 83       	st	Z, r24
    98e2:	91 83       	std	Z+1, r25	; 0x01
    98e4:	a2 83       	std	Z+2, r26	; 0x02
    98e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    98e8:	ce 01       	movw	r24, r28
    98ea:	81 54       	subi	r24, 0x41	; 65
    98ec:	9d 4f       	sbci	r25, 0xFD	; 253
    98ee:	11 e0       	ldi	r17, 0x01	; 1
    98f0:	fc 01       	movw	r30, r24
    98f2:	60 81       	ld	r22, Z
    98f4:	71 81       	ldd	r23, Z+1	; 0x01
    98f6:	82 81       	ldd	r24, Z+2	; 0x02
    98f8:	93 81       	ldd	r25, Z+3	; 0x03
    98fa:	20 e0       	ldi	r18, 0x00	; 0
    98fc:	30 e0       	ldi	r19, 0x00	; 0
    98fe:	40 e8       	ldi	r20, 0x80	; 128
    9900:	5f e3       	ldi	r21, 0x3F	; 63
    9902:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    9906:	88 23       	and	r24, r24
    9908:	0c f0       	brlt	.+2      	; 0x990c <main+0x5c38>
    990a:	10 e0       	ldi	r17, 0x00	; 0
    990c:	11 23       	and	r17, r17
    990e:	49 f0       	breq	.+18     	; 0x9922 <main+0x5c4e>
		__ticks = 1;
    9910:	ce 01       	movw	r24, r28
    9912:	8d 53       	subi	r24, 0x3D	; 61
    9914:	9d 4f       	sbci	r25, 0xFD	; 253
    9916:	21 e0       	ldi	r18, 0x01	; 1
    9918:	30 e0       	ldi	r19, 0x00	; 0
    991a:	fc 01       	movw	r30, r24
    991c:	31 83       	std	Z+1, r19	; 0x01
    991e:	20 83       	st	Z, r18
    9920:	74 c0       	rjmp	.+232    	; 0x9a0a <main+0x5d36>
	else if (__tmp > 65535)
    9922:	ce 01       	movw	r24, r28
    9924:	81 54       	subi	r24, 0x41	; 65
    9926:	9d 4f       	sbci	r25, 0xFD	; 253
    9928:	11 e0       	ldi	r17, 0x01	; 1
    992a:	fc 01       	movw	r30, r24
    992c:	60 81       	ld	r22, Z
    992e:	71 81       	ldd	r23, Z+1	; 0x01
    9930:	82 81       	ldd	r24, Z+2	; 0x02
    9932:	93 81       	ldd	r25, Z+3	; 0x03
    9934:	20 e0       	ldi	r18, 0x00	; 0
    9936:	3f ef       	ldi	r19, 0xFF	; 255
    9938:	4f e7       	ldi	r20, 0x7F	; 127
    993a:	57 e4       	ldi	r21, 0x47	; 71
    993c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9940:	18 16       	cp	r1, r24
    9942:	0c f0       	brlt	.+2      	; 0x9946 <main+0x5c72>
    9944:	10 e0       	ldi	r17, 0x00	; 0
    9946:	11 23       	and	r17, r17
    9948:	09 f4       	brne	.+2      	; 0x994c <main+0x5c78>
    994a:	4d c0       	rjmp	.+154    	; 0x99e6 <main+0x5d12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    994c:	ce 01       	movw	r24, r28
    994e:	85 54       	subi	r24, 0x45	; 69
    9950:	9d 4f       	sbci	r25, 0xFD	; 253
    9952:	fc 01       	movw	r30, r24
    9954:	60 81       	ld	r22, Z
    9956:	71 81       	ldd	r23, Z+1	; 0x01
    9958:	82 81       	ldd	r24, Z+2	; 0x02
    995a:	93 81       	ldd	r25, Z+3	; 0x03
    995c:	20 e0       	ldi	r18, 0x00	; 0
    995e:	30 e0       	ldi	r19, 0x00	; 0
    9960:	40 e2       	ldi	r20, 0x20	; 32
    9962:	51 e4       	ldi	r21, 0x41	; 65
    9964:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9968:	dc 01       	movw	r26, r24
    996a:	cb 01       	movw	r24, r22
    996c:	8e 01       	movw	r16, r28
    996e:	0d 53       	subi	r16, 0x3D	; 61
    9970:	1d 4f       	sbci	r17, 0xFD	; 253
    9972:	bc 01       	movw	r22, r24
    9974:	cd 01       	movw	r24, r26
    9976:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    997a:	dc 01       	movw	r26, r24
    997c:	cb 01       	movw	r24, r22
    997e:	f8 01       	movw	r30, r16
    9980:	91 83       	std	Z+1, r25	; 0x01
    9982:	80 83       	st	Z, r24
    9984:	27 c0       	rjmp	.+78     	; 0x99d4 <main+0x5d00>
    9986:	ce 01       	movw	r24, r28
    9988:	8b 53       	subi	r24, 0x3B	; 59
    998a:	9d 4f       	sbci	r25, 0xFD	; 253
    998c:	20 e7       	ldi	r18, 0x70	; 112
    998e:	31 e0       	ldi	r19, 0x01	; 1
    9990:	fc 01       	movw	r30, r24
    9992:	31 83       	std	Z+1, r19	; 0x01
    9994:	20 83       	st	Z, r18
    9996:	ce 01       	movw	r24, r28
    9998:	8b 53       	subi	r24, 0x3B	; 59
    999a:	9d 4f       	sbci	r25, 0xFD	; 253
    999c:	fc 01       	movw	r30, r24
    999e:	80 81       	ld	r24, Z
    99a0:	91 81       	ldd	r25, Z+1	; 0x01
    99a2:	8c 01       	movw	r16, r24
    99a4:	c8 01       	movw	r24, r16
    99a6:	01 97       	sbiw	r24, 0x01	; 1
    99a8:	f1 f7       	brne	.-4      	; 0x99a6 <main+0x5cd2>
    99aa:	8c 01       	movw	r16, r24
    99ac:	ce 01       	movw	r24, r28
    99ae:	8b 53       	subi	r24, 0x3B	; 59
    99b0:	9d 4f       	sbci	r25, 0xFD	; 253
    99b2:	fc 01       	movw	r30, r24
    99b4:	11 83       	std	Z+1, r17	; 0x01
    99b6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    99b8:	ce 01       	movw	r24, r28
    99ba:	8d 53       	subi	r24, 0x3D	; 61
    99bc:	9d 4f       	sbci	r25, 0xFD	; 253
    99be:	9e 01       	movw	r18, r28
    99c0:	2d 53       	subi	r18, 0x3D	; 61
    99c2:	3d 4f       	sbci	r19, 0xFD	; 253
    99c4:	f9 01       	movw	r30, r18
    99c6:	20 81       	ld	r18, Z
    99c8:	31 81       	ldd	r19, Z+1	; 0x01
    99ca:	21 50       	subi	r18, 0x01	; 1
    99cc:	30 40       	sbci	r19, 0x00	; 0
    99ce:	fc 01       	movw	r30, r24
    99d0:	31 83       	std	Z+1, r19	; 0x01
    99d2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    99d4:	ce 01       	movw	r24, r28
    99d6:	8d 53       	subi	r24, 0x3D	; 61
    99d8:	9d 4f       	sbci	r25, 0xFD	; 253
    99da:	fc 01       	movw	r30, r24
    99dc:	80 81       	ld	r24, Z
    99de:	91 81       	ldd	r25, Z+1	; 0x01
    99e0:	00 97       	sbiw	r24, 0x00	; 0
    99e2:	89 f6       	brne	.-94     	; 0x9986 <main+0x5cb2>
    99e4:	2f c0       	rjmp	.+94     	; 0x9a44 <main+0x5d70>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    99e6:	8e 01       	movw	r16, r28
    99e8:	0d 53       	subi	r16, 0x3D	; 61
    99ea:	1d 4f       	sbci	r17, 0xFD	; 253
    99ec:	ce 01       	movw	r24, r28
    99ee:	81 54       	subi	r24, 0x41	; 65
    99f0:	9d 4f       	sbci	r25, 0xFD	; 253
    99f2:	fc 01       	movw	r30, r24
    99f4:	60 81       	ld	r22, Z
    99f6:	71 81       	ldd	r23, Z+1	; 0x01
    99f8:	82 81       	ldd	r24, Z+2	; 0x02
    99fa:	93 81       	ldd	r25, Z+3	; 0x03
    99fc:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9a00:	dc 01       	movw	r26, r24
    9a02:	cb 01       	movw	r24, r22
    9a04:	f8 01       	movw	r30, r16
    9a06:	91 83       	std	Z+1, r25	; 0x01
    9a08:	80 83       	st	Z, r24
    9a0a:	ce 01       	movw	r24, r28
    9a0c:	89 53       	subi	r24, 0x39	; 57
    9a0e:	9d 4f       	sbci	r25, 0xFD	; 253
    9a10:	9e 01       	movw	r18, r28
    9a12:	2d 53       	subi	r18, 0x3D	; 61
    9a14:	3d 4f       	sbci	r19, 0xFD	; 253
    9a16:	f9 01       	movw	r30, r18
    9a18:	20 81       	ld	r18, Z
    9a1a:	31 81       	ldd	r19, Z+1	; 0x01
    9a1c:	fc 01       	movw	r30, r24
    9a1e:	31 83       	std	Z+1, r19	; 0x01
    9a20:	20 83       	st	Z, r18
    9a22:	ce 01       	movw	r24, r28
    9a24:	89 53       	subi	r24, 0x39	; 57
    9a26:	9d 4f       	sbci	r25, 0xFD	; 253
    9a28:	fc 01       	movw	r30, r24
    9a2a:	80 81       	ld	r24, Z
    9a2c:	91 81       	ldd	r25, Z+1	; 0x01
    9a2e:	8c 01       	movw	r16, r24
    9a30:	c8 01       	movw	r24, r16
    9a32:	01 97       	sbiw	r24, 0x01	; 1
    9a34:	f1 f7       	brne	.-4      	; 0x9a32 <main+0x5d5e>
    9a36:	8c 01       	movw	r16, r24
    9a38:	ce 01       	movw	r24, r28
    9a3a:	89 53       	subi	r24, 0x39	; 57
    9a3c:	9d 4f       	sbci	r25, 0xFD	; 253
    9a3e:	fc 01       	movw	r30, r24
    9a40:	11 83       	std	Z+1, r17	; 0x01
    9a42:	00 83       	st	Z, r16
				_delay_ms(500);
				left_degrees(40);
    9a44:	88 e2       	ldi	r24, 0x28	; 40
    9a46:	90 e0       	ldi	r25, 0x00	; 0
    9a48:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
				compass=5;
    9a4c:	85 e0       	ldi	r24, 0x05	; 5
    9a4e:	90 e0       	ldi	r25, 0x00	; 0
    9a50:	9c 83       	std	Y+4, r25	; 0x04
    9a52:	8b 83       	std	Y+3, r24	; 0x03
				break;
    9a54:	dc c5       	rjmp	.+3000   	; 0xa60e <main+0x693a>
			}
			if(coor[0]<origin2[boxnumber][i][0] && coor[1]<origin2[boxnumber][i][1])
    9a56:	20 91 a6 04 	lds	r18, 0x04A6
    9a5a:	30 91 a7 04 	lds	r19, 0x04A7
    9a5e:	ae 01       	movw	r20, r28
    9a60:	4d 5f       	subi	r20, 0xFD	; 253
    9a62:	5a 4f       	sbci	r21, 0xFA	; 250
    9a64:	8d 81       	ldd	r24, Y+5	; 0x05
    9a66:	9e 81       	ldd	r25, Y+6	; 0x06
    9a68:	bc 01       	movw	r22, r24
    9a6a:	66 0f       	add	r22, r22
    9a6c:	77 1f       	adc	r23, r23
    9a6e:	66 0f       	add	r22, r22
    9a70:	77 1f       	adc	r23, r23
    9a72:	8b a1       	lds	r24, 0x4b
    9a74:	9c a1       	lds	r25, 0x4c
    9a76:	86 0f       	add	r24, r22
    9a78:	97 1f       	adc	r25, r23
    9a7a:	88 0f       	add	r24, r24
    9a7c:	99 1f       	adc	r25, r25
    9a7e:	88 0f       	add	r24, r24
    9a80:	99 1f       	adc	r25, r25
    9a82:	84 0f       	add	r24, r20
    9a84:	95 1f       	adc	r25, r21
    9a86:	fc 01       	movw	r30, r24
    9a88:	80 81       	ld	r24, Z
    9a8a:	91 81       	ldd	r25, Z+1	; 0x01
    9a8c:	28 17       	cp	r18, r24
    9a8e:	39 07       	cpc	r19, r25
    9a90:	0c f0       	brlt	.+2      	; 0x9a94 <main+0x5dc0>
    9a92:	ca c2       	rjmp	.+1428   	; 0xa028 <main+0x6354>
    9a94:	20 91 a8 04 	lds	r18, 0x04A8
    9a98:	30 91 a9 04 	lds	r19, 0x04A9
    9a9c:	ae 01       	movw	r20, r28
    9a9e:	4d 5f       	subi	r20, 0xFD	; 253
    9aa0:	5a 4f       	sbci	r21, 0xFA	; 250
    9aa2:	8d 81       	ldd	r24, Y+5	; 0x05
    9aa4:	9e 81       	ldd	r25, Y+6	; 0x06
    9aa6:	bc 01       	movw	r22, r24
    9aa8:	66 0f       	add	r22, r22
    9aaa:	77 1f       	adc	r23, r23
    9aac:	66 0f       	add	r22, r22
    9aae:	77 1f       	adc	r23, r23
    9ab0:	8b a1       	lds	r24, 0x4b
    9ab2:	9c a1       	lds	r25, 0x4c
    9ab4:	86 0f       	add	r24, r22
    9ab6:	97 1f       	adc	r25, r23
    9ab8:	88 0f       	add	r24, r24
    9aba:	99 1f       	adc	r25, r25
    9abc:	88 0f       	add	r24, r24
    9abe:	99 1f       	adc	r25, r25
    9ac0:	84 0f       	add	r24, r20
    9ac2:	95 1f       	adc	r25, r21
    9ac4:	02 96       	adiw	r24, 0x02	; 2
    9ac6:	fc 01       	movw	r30, r24
    9ac8:	80 81       	ld	r24, Z
    9aca:	91 81       	ldd	r25, Z+1	; 0x01
    9acc:	28 17       	cp	r18, r24
    9ace:	39 07       	cpc	r19, r25
    9ad0:	0c f0       	brlt	.+2      	; 0x9ad4 <main+0x5e00>
    9ad2:	aa c2       	rjmp	.+1364   	; 0xa028 <main+0x6354>
			{
				right_degrees(45);
    9ad4:	8d e2       	ldi	r24, 0x2D	; 45
    9ad6:	90 e0       	ldi	r25, 0x00	; 0
    9ad8:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
				back_mm(65);
    9adc:	81 e4       	ldi	r24, 0x41	; 65
    9ade:	90 e0       	ldi	r25, 0x00	; 0
    9ae0:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
				matrix2();
    9ae4:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
					if(summ1[recur+1]>10)
    9ae8:	8f 81       	ldd	r24, Y+7	; 0x07
    9aea:	98 85       	ldd	r25, Y+8	; 0x08
    9aec:	01 96       	adiw	r24, 0x01	; 1
    9aee:	9e 01       	movw	r18, r28
    9af0:	25 54       	subi	r18, 0x45	; 69
    9af2:	39 4f       	sbci	r19, 0xF9	; 249
    9af4:	88 0f       	add	r24, r24
    9af6:	99 1f       	adc	r25, r25
    9af8:	82 0f       	add	r24, r18
    9afa:	93 1f       	adc	r25, r19
    9afc:	fc 01       	movw	r30, r24
    9afe:	80 81       	ld	r24, Z
    9b00:	91 81       	ldd	r25, Z+1	; 0x01
    9b02:	8b 30       	cpi	r24, 0x0B	; 11
    9b04:	91 05       	cpc	r25, r1
    9b06:	0c f4       	brge	.+2      	; 0x9b0a <main+0x5e36>
    9b08:	d6 c0       	rjmp	.+428    	; 0x9cb6 <main+0x5fe2>
					{
						buzzer_on();
    9b0a:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    9b0e:	9e 01       	movw	r18, r28
    9b10:	27 53       	subi	r18, 0x37	; 55
    9b12:	3d 4f       	sbci	r19, 0xFD	; 253
    9b14:	80 e0       	ldi	r24, 0x00	; 0
    9b16:	90 e0       	ldi	r25, 0x00	; 0
    9b18:	aa e7       	ldi	r26, 0x7A	; 122
    9b1a:	b4 e4       	ldi	r27, 0x44	; 68
    9b1c:	f9 01       	movw	r30, r18
    9b1e:	80 83       	st	Z, r24
    9b20:	91 83       	std	Z+1, r25	; 0x01
    9b22:	a2 83       	std	Z+2, r26	; 0x02
    9b24:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    9b26:	8e 01       	movw	r16, r28
    9b28:	03 53       	subi	r16, 0x33	; 51
    9b2a:	1d 4f       	sbci	r17, 0xFD	; 253
    9b2c:	ce 01       	movw	r24, r28
    9b2e:	87 53       	subi	r24, 0x37	; 55
    9b30:	9d 4f       	sbci	r25, 0xFD	; 253
    9b32:	fc 01       	movw	r30, r24
    9b34:	60 81       	ld	r22, Z
    9b36:	71 81       	ldd	r23, Z+1	; 0x01
    9b38:	82 81       	ldd	r24, Z+2	; 0x02
    9b3a:	93 81       	ldd	r25, Z+3	; 0x03
    9b3c:	26 e6       	ldi	r18, 0x66	; 102
    9b3e:	36 e6       	ldi	r19, 0x66	; 102
    9b40:	46 e6       	ldi	r20, 0x66	; 102
    9b42:	55 e4       	ldi	r21, 0x45	; 69
    9b44:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9b48:	dc 01       	movw	r26, r24
    9b4a:	cb 01       	movw	r24, r22
    9b4c:	f8 01       	movw	r30, r16
    9b4e:	80 83       	st	Z, r24
    9b50:	91 83       	std	Z+1, r25	; 0x01
    9b52:	a2 83       	std	Z+2, r26	; 0x02
    9b54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    9b56:	ce 01       	movw	r24, r28
    9b58:	83 53       	subi	r24, 0x33	; 51
    9b5a:	9d 4f       	sbci	r25, 0xFD	; 253
    9b5c:	11 e0       	ldi	r17, 0x01	; 1
    9b5e:	fc 01       	movw	r30, r24
    9b60:	60 81       	ld	r22, Z
    9b62:	71 81       	ldd	r23, Z+1	; 0x01
    9b64:	82 81       	ldd	r24, Z+2	; 0x02
    9b66:	93 81       	ldd	r25, Z+3	; 0x03
    9b68:	20 e0       	ldi	r18, 0x00	; 0
    9b6a:	30 e0       	ldi	r19, 0x00	; 0
    9b6c:	40 e8       	ldi	r20, 0x80	; 128
    9b6e:	5f e3       	ldi	r21, 0x3F	; 63
    9b70:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    9b74:	88 23       	and	r24, r24
    9b76:	0c f0       	brlt	.+2      	; 0x9b7a <main+0x5ea6>
    9b78:	10 e0       	ldi	r17, 0x00	; 0
    9b7a:	11 23       	and	r17, r17
    9b7c:	49 f0       	breq	.+18     	; 0x9b90 <main+0x5ebc>
		__ticks = 1;
    9b7e:	ce 01       	movw	r24, r28
    9b80:	8f 52       	subi	r24, 0x2F	; 47
    9b82:	9d 4f       	sbci	r25, 0xFD	; 253
    9b84:	21 e0       	ldi	r18, 0x01	; 1
    9b86:	30 e0       	ldi	r19, 0x00	; 0
    9b88:	fc 01       	movw	r30, r24
    9b8a:	31 83       	std	Z+1, r19	; 0x01
    9b8c:	20 83       	st	Z, r18
    9b8e:	74 c0       	rjmp	.+232    	; 0x9c78 <main+0x5fa4>
	else if (__tmp > 65535)
    9b90:	ce 01       	movw	r24, r28
    9b92:	83 53       	subi	r24, 0x33	; 51
    9b94:	9d 4f       	sbci	r25, 0xFD	; 253
    9b96:	11 e0       	ldi	r17, 0x01	; 1
    9b98:	fc 01       	movw	r30, r24
    9b9a:	60 81       	ld	r22, Z
    9b9c:	71 81       	ldd	r23, Z+1	; 0x01
    9b9e:	82 81       	ldd	r24, Z+2	; 0x02
    9ba0:	93 81       	ldd	r25, Z+3	; 0x03
    9ba2:	20 e0       	ldi	r18, 0x00	; 0
    9ba4:	3f ef       	ldi	r19, 0xFF	; 255
    9ba6:	4f e7       	ldi	r20, 0x7F	; 127
    9ba8:	57 e4       	ldi	r21, 0x47	; 71
    9baa:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9bae:	18 16       	cp	r1, r24
    9bb0:	0c f0       	brlt	.+2      	; 0x9bb4 <main+0x5ee0>
    9bb2:	10 e0       	ldi	r17, 0x00	; 0
    9bb4:	11 23       	and	r17, r17
    9bb6:	09 f4       	brne	.+2      	; 0x9bba <main+0x5ee6>
    9bb8:	4d c0       	rjmp	.+154    	; 0x9c54 <main+0x5f80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    9bba:	ce 01       	movw	r24, r28
    9bbc:	87 53       	subi	r24, 0x37	; 55
    9bbe:	9d 4f       	sbci	r25, 0xFD	; 253
    9bc0:	fc 01       	movw	r30, r24
    9bc2:	60 81       	ld	r22, Z
    9bc4:	71 81       	ldd	r23, Z+1	; 0x01
    9bc6:	82 81       	ldd	r24, Z+2	; 0x02
    9bc8:	93 81       	ldd	r25, Z+3	; 0x03
    9bca:	20 e0       	ldi	r18, 0x00	; 0
    9bcc:	30 e0       	ldi	r19, 0x00	; 0
    9bce:	40 e2       	ldi	r20, 0x20	; 32
    9bd0:	51 e4       	ldi	r21, 0x41	; 65
    9bd2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9bd6:	dc 01       	movw	r26, r24
    9bd8:	cb 01       	movw	r24, r22
    9bda:	8e 01       	movw	r16, r28
    9bdc:	0f 52       	subi	r16, 0x2F	; 47
    9bde:	1d 4f       	sbci	r17, 0xFD	; 253
    9be0:	bc 01       	movw	r22, r24
    9be2:	cd 01       	movw	r24, r26
    9be4:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9be8:	dc 01       	movw	r26, r24
    9bea:	cb 01       	movw	r24, r22
    9bec:	f8 01       	movw	r30, r16
    9bee:	91 83       	std	Z+1, r25	; 0x01
    9bf0:	80 83       	st	Z, r24
    9bf2:	27 c0       	rjmp	.+78     	; 0x9c42 <main+0x5f6e>
    9bf4:	ce 01       	movw	r24, r28
    9bf6:	8d 52       	subi	r24, 0x2D	; 45
    9bf8:	9d 4f       	sbci	r25, 0xFD	; 253
    9bfa:	20 e7       	ldi	r18, 0x70	; 112
    9bfc:	31 e0       	ldi	r19, 0x01	; 1
    9bfe:	fc 01       	movw	r30, r24
    9c00:	31 83       	std	Z+1, r19	; 0x01
    9c02:	20 83       	st	Z, r18
    9c04:	ce 01       	movw	r24, r28
    9c06:	8d 52       	subi	r24, 0x2D	; 45
    9c08:	9d 4f       	sbci	r25, 0xFD	; 253
    9c0a:	fc 01       	movw	r30, r24
    9c0c:	80 81       	ld	r24, Z
    9c0e:	91 81       	ldd	r25, Z+1	; 0x01
    9c10:	8c 01       	movw	r16, r24
    9c12:	c8 01       	movw	r24, r16
    9c14:	01 97       	sbiw	r24, 0x01	; 1
    9c16:	f1 f7       	brne	.-4      	; 0x9c14 <main+0x5f40>
    9c18:	8c 01       	movw	r16, r24
    9c1a:	ce 01       	movw	r24, r28
    9c1c:	8d 52       	subi	r24, 0x2D	; 45
    9c1e:	9d 4f       	sbci	r25, 0xFD	; 253
    9c20:	fc 01       	movw	r30, r24
    9c22:	11 83       	std	Z+1, r17	; 0x01
    9c24:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    9c26:	ce 01       	movw	r24, r28
    9c28:	8f 52       	subi	r24, 0x2F	; 47
    9c2a:	9d 4f       	sbci	r25, 0xFD	; 253
    9c2c:	9e 01       	movw	r18, r28
    9c2e:	2f 52       	subi	r18, 0x2F	; 47
    9c30:	3d 4f       	sbci	r19, 0xFD	; 253
    9c32:	f9 01       	movw	r30, r18
    9c34:	20 81       	ld	r18, Z
    9c36:	31 81       	ldd	r19, Z+1	; 0x01
    9c38:	21 50       	subi	r18, 0x01	; 1
    9c3a:	30 40       	sbci	r19, 0x00	; 0
    9c3c:	fc 01       	movw	r30, r24
    9c3e:	31 83       	std	Z+1, r19	; 0x01
    9c40:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9c42:	ce 01       	movw	r24, r28
    9c44:	8f 52       	subi	r24, 0x2F	; 47
    9c46:	9d 4f       	sbci	r25, 0xFD	; 253
    9c48:	fc 01       	movw	r30, r24
    9c4a:	80 81       	ld	r24, Z
    9c4c:	91 81       	ldd	r25, Z+1	; 0x01
    9c4e:	00 97       	sbiw	r24, 0x00	; 0
    9c50:	89 f6       	brne	.-94     	; 0x9bf4 <main+0x5f20>
    9c52:	2f c0       	rjmp	.+94     	; 0x9cb2 <main+0x5fde>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    9c54:	8e 01       	movw	r16, r28
    9c56:	0f 52       	subi	r16, 0x2F	; 47
    9c58:	1d 4f       	sbci	r17, 0xFD	; 253
    9c5a:	ce 01       	movw	r24, r28
    9c5c:	83 53       	subi	r24, 0x33	; 51
    9c5e:	9d 4f       	sbci	r25, 0xFD	; 253
    9c60:	fc 01       	movw	r30, r24
    9c62:	60 81       	ld	r22, Z
    9c64:	71 81       	ldd	r23, Z+1	; 0x01
    9c66:	82 81       	ldd	r24, Z+2	; 0x02
    9c68:	93 81       	ldd	r25, Z+3	; 0x03
    9c6a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9c6e:	dc 01       	movw	r26, r24
    9c70:	cb 01       	movw	r24, r22
    9c72:	f8 01       	movw	r30, r16
    9c74:	91 83       	std	Z+1, r25	; 0x01
    9c76:	80 83       	st	Z, r24
    9c78:	ce 01       	movw	r24, r28
    9c7a:	8b 52       	subi	r24, 0x2B	; 43
    9c7c:	9d 4f       	sbci	r25, 0xFD	; 253
    9c7e:	9e 01       	movw	r18, r28
    9c80:	2f 52       	subi	r18, 0x2F	; 47
    9c82:	3d 4f       	sbci	r19, 0xFD	; 253
    9c84:	f9 01       	movw	r30, r18
    9c86:	20 81       	ld	r18, Z
    9c88:	31 81       	ldd	r19, Z+1	; 0x01
    9c8a:	fc 01       	movw	r30, r24
    9c8c:	31 83       	std	Z+1, r19	; 0x01
    9c8e:	20 83       	st	Z, r18
    9c90:	ce 01       	movw	r24, r28
    9c92:	8b 52       	subi	r24, 0x2B	; 43
    9c94:	9d 4f       	sbci	r25, 0xFD	; 253
    9c96:	fc 01       	movw	r30, r24
    9c98:	80 81       	ld	r24, Z
    9c9a:	91 81       	ldd	r25, Z+1	; 0x01
    9c9c:	8c 01       	movw	r16, r24
    9c9e:	c8 01       	movw	r24, r16
    9ca0:	01 97       	sbiw	r24, 0x01	; 1
    9ca2:	f1 f7       	brne	.-4      	; 0x9ca0 <main+0x5fcc>
    9ca4:	8c 01       	movw	r16, r24
    9ca6:	ce 01       	movw	r24, r28
    9ca8:	8b 52       	subi	r24, 0x2B	; 43
    9caa:	9d 4f       	sbci	r25, 0xFD	; 253
    9cac:	fc 01       	movw	r30, r24
    9cae:	11 83       	std	Z+1, r17	; 0x01
    9cb0:	00 83       	st	Z, r16
						_delay_ms(1000);
						buzzer_off();
    9cb2:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
					}
				forward_mm(75);
    9cb6:	8b e4       	ldi	r24, 0x4B	; 75
    9cb8:	90 e0       	ldi	r25, 0x00	; 0
    9cba:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    9cbe:	9e 01       	movw	r18, r28
    9cc0:	29 52       	subi	r18, 0x29	; 41
    9cc2:	3d 4f       	sbci	r19, 0xFD	; 253
    9cc4:	80 e0       	ldi	r24, 0x00	; 0
    9cc6:	90 e0       	ldi	r25, 0x00	; 0
    9cc8:	a0 ef       	ldi	r26, 0xF0	; 240
    9cca:	b1 e4       	ldi	r27, 0x41	; 65
    9ccc:	f9 01       	movw	r30, r18
    9cce:	80 83       	st	Z, r24
    9cd0:	91 83       	std	Z+1, r25	; 0x01
    9cd2:	a2 83       	std	Z+2, r26	; 0x02
    9cd4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    9cd6:	8e 01       	movw	r16, r28
    9cd8:	05 52       	subi	r16, 0x25	; 37
    9cda:	1d 4f       	sbci	r17, 0xFD	; 253
    9cdc:	ce 01       	movw	r24, r28
    9cde:	89 52       	subi	r24, 0x29	; 41
    9ce0:	9d 4f       	sbci	r25, 0xFD	; 253
    9ce2:	fc 01       	movw	r30, r24
    9ce4:	60 81       	ld	r22, Z
    9ce6:	71 81       	ldd	r23, Z+1	; 0x01
    9ce8:	82 81       	ldd	r24, Z+2	; 0x02
    9cea:	93 81       	ldd	r25, Z+3	; 0x03
    9cec:	26 e6       	ldi	r18, 0x66	; 102
    9cee:	36 e6       	ldi	r19, 0x66	; 102
    9cf0:	46 e6       	ldi	r20, 0x66	; 102
    9cf2:	55 e4       	ldi	r21, 0x45	; 69
    9cf4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9cf8:	dc 01       	movw	r26, r24
    9cfa:	cb 01       	movw	r24, r22
    9cfc:	f8 01       	movw	r30, r16
    9cfe:	80 83       	st	Z, r24
    9d00:	91 83       	std	Z+1, r25	; 0x01
    9d02:	a2 83       	std	Z+2, r26	; 0x02
    9d04:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    9d06:	ce 01       	movw	r24, r28
    9d08:	85 52       	subi	r24, 0x25	; 37
    9d0a:	9d 4f       	sbci	r25, 0xFD	; 253
    9d0c:	11 e0       	ldi	r17, 0x01	; 1
    9d0e:	fc 01       	movw	r30, r24
    9d10:	60 81       	ld	r22, Z
    9d12:	71 81       	ldd	r23, Z+1	; 0x01
    9d14:	82 81       	ldd	r24, Z+2	; 0x02
    9d16:	93 81       	ldd	r25, Z+3	; 0x03
    9d18:	20 e0       	ldi	r18, 0x00	; 0
    9d1a:	30 e0       	ldi	r19, 0x00	; 0
    9d1c:	40 e8       	ldi	r20, 0x80	; 128
    9d1e:	5f e3       	ldi	r21, 0x3F	; 63
    9d20:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    9d24:	88 23       	and	r24, r24
    9d26:	0c f0       	brlt	.+2      	; 0x9d2a <main+0x6056>
    9d28:	10 e0       	ldi	r17, 0x00	; 0
    9d2a:	11 23       	and	r17, r17
    9d2c:	49 f0       	breq	.+18     	; 0x9d40 <main+0x606c>
		__ticks = 1;
    9d2e:	ce 01       	movw	r24, r28
    9d30:	81 52       	subi	r24, 0x21	; 33
    9d32:	9d 4f       	sbci	r25, 0xFD	; 253
    9d34:	21 e0       	ldi	r18, 0x01	; 1
    9d36:	30 e0       	ldi	r19, 0x00	; 0
    9d38:	fc 01       	movw	r30, r24
    9d3a:	31 83       	std	Z+1, r19	; 0x01
    9d3c:	20 83       	st	Z, r18
    9d3e:	74 c0       	rjmp	.+232    	; 0x9e28 <main+0x6154>
	else if (__tmp > 65535)
    9d40:	ce 01       	movw	r24, r28
    9d42:	85 52       	subi	r24, 0x25	; 37
    9d44:	9d 4f       	sbci	r25, 0xFD	; 253
    9d46:	11 e0       	ldi	r17, 0x01	; 1
    9d48:	fc 01       	movw	r30, r24
    9d4a:	60 81       	ld	r22, Z
    9d4c:	71 81       	ldd	r23, Z+1	; 0x01
    9d4e:	82 81       	ldd	r24, Z+2	; 0x02
    9d50:	93 81       	ldd	r25, Z+3	; 0x03
    9d52:	20 e0       	ldi	r18, 0x00	; 0
    9d54:	3f ef       	ldi	r19, 0xFF	; 255
    9d56:	4f e7       	ldi	r20, 0x7F	; 127
    9d58:	57 e4       	ldi	r21, 0x47	; 71
    9d5a:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9d5e:	18 16       	cp	r1, r24
    9d60:	0c f0       	brlt	.+2      	; 0x9d64 <main+0x6090>
    9d62:	10 e0       	ldi	r17, 0x00	; 0
    9d64:	11 23       	and	r17, r17
    9d66:	09 f4       	brne	.+2      	; 0x9d6a <main+0x6096>
    9d68:	4d c0       	rjmp	.+154    	; 0x9e04 <main+0x6130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    9d6a:	ce 01       	movw	r24, r28
    9d6c:	89 52       	subi	r24, 0x29	; 41
    9d6e:	9d 4f       	sbci	r25, 0xFD	; 253
    9d70:	fc 01       	movw	r30, r24
    9d72:	60 81       	ld	r22, Z
    9d74:	71 81       	ldd	r23, Z+1	; 0x01
    9d76:	82 81       	ldd	r24, Z+2	; 0x02
    9d78:	93 81       	ldd	r25, Z+3	; 0x03
    9d7a:	20 e0       	ldi	r18, 0x00	; 0
    9d7c:	30 e0       	ldi	r19, 0x00	; 0
    9d7e:	40 e2       	ldi	r20, 0x20	; 32
    9d80:	51 e4       	ldi	r21, 0x41	; 65
    9d82:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9d86:	dc 01       	movw	r26, r24
    9d88:	cb 01       	movw	r24, r22
    9d8a:	8e 01       	movw	r16, r28
    9d8c:	01 52       	subi	r16, 0x21	; 33
    9d8e:	1d 4f       	sbci	r17, 0xFD	; 253
    9d90:	bc 01       	movw	r22, r24
    9d92:	cd 01       	movw	r24, r26
    9d94:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9d98:	dc 01       	movw	r26, r24
    9d9a:	cb 01       	movw	r24, r22
    9d9c:	f8 01       	movw	r30, r16
    9d9e:	91 83       	std	Z+1, r25	; 0x01
    9da0:	80 83       	st	Z, r24
    9da2:	27 c0       	rjmp	.+78     	; 0x9df2 <main+0x611e>
    9da4:	ce 01       	movw	r24, r28
    9da6:	8f 51       	subi	r24, 0x1F	; 31
    9da8:	9d 4f       	sbci	r25, 0xFD	; 253
    9daa:	20 e7       	ldi	r18, 0x70	; 112
    9dac:	31 e0       	ldi	r19, 0x01	; 1
    9dae:	fc 01       	movw	r30, r24
    9db0:	31 83       	std	Z+1, r19	; 0x01
    9db2:	20 83       	st	Z, r18
    9db4:	ce 01       	movw	r24, r28
    9db6:	8f 51       	subi	r24, 0x1F	; 31
    9db8:	9d 4f       	sbci	r25, 0xFD	; 253
    9dba:	fc 01       	movw	r30, r24
    9dbc:	80 81       	ld	r24, Z
    9dbe:	91 81       	ldd	r25, Z+1	; 0x01
    9dc0:	8c 01       	movw	r16, r24
    9dc2:	c8 01       	movw	r24, r16
    9dc4:	01 97       	sbiw	r24, 0x01	; 1
    9dc6:	f1 f7       	brne	.-4      	; 0x9dc4 <main+0x60f0>
    9dc8:	8c 01       	movw	r16, r24
    9dca:	ce 01       	movw	r24, r28
    9dcc:	8f 51       	subi	r24, 0x1F	; 31
    9dce:	9d 4f       	sbci	r25, 0xFD	; 253
    9dd0:	fc 01       	movw	r30, r24
    9dd2:	11 83       	std	Z+1, r17	; 0x01
    9dd4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    9dd6:	ce 01       	movw	r24, r28
    9dd8:	81 52       	subi	r24, 0x21	; 33
    9dda:	9d 4f       	sbci	r25, 0xFD	; 253
    9ddc:	9e 01       	movw	r18, r28
    9dde:	21 52       	subi	r18, 0x21	; 33
    9de0:	3d 4f       	sbci	r19, 0xFD	; 253
    9de2:	f9 01       	movw	r30, r18
    9de4:	20 81       	ld	r18, Z
    9de6:	31 81       	ldd	r19, Z+1	; 0x01
    9de8:	21 50       	subi	r18, 0x01	; 1
    9dea:	30 40       	sbci	r19, 0x00	; 0
    9dec:	fc 01       	movw	r30, r24
    9dee:	31 83       	std	Z+1, r19	; 0x01
    9df0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9df2:	ce 01       	movw	r24, r28
    9df4:	81 52       	subi	r24, 0x21	; 33
    9df6:	9d 4f       	sbci	r25, 0xFD	; 253
    9df8:	fc 01       	movw	r30, r24
    9dfa:	80 81       	ld	r24, Z
    9dfc:	91 81       	ldd	r25, Z+1	; 0x01
    9dfe:	00 97       	sbiw	r24, 0x00	; 0
    9e00:	89 f6       	brne	.-94     	; 0x9da4 <main+0x60d0>
    9e02:	2f c0       	rjmp	.+94     	; 0x9e62 <main+0x618e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    9e04:	8e 01       	movw	r16, r28
    9e06:	01 52       	subi	r16, 0x21	; 33
    9e08:	1d 4f       	sbci	r17, 0xFD	; 253
    9e0a:	ce 01       	movw	r24, r28
    9e0c:	85 52       	subi	r24, 0x25	; 37
    9e0e:	9d 4f       	sbci	r25, 0xFD	; 253
    9e10:	fc 01       	movw	r30, r24
    9e12:	60 81       	ld	r22, Z
    9e14:	71 81       	ldd	r23, Z+1	; 0x01
    9e16:	82 81       	ldd	r24, Z+2	; 0x02
    9e18:	93 81       	ldd	r25, Z+3	; 0x03
    9e1a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9e1e:	dc 01       	movw	r26, r24
    9e20:	cb 01       	movw	r24, r22
    9e22:	f8 01       	movw	r30, r16
    9e24:	91 83       	std	Z+1, r25	; 0x01
    9e26:	80 83       	st	Z, r24
    9e28:	ce 01       	movw	r24, r28
    9e2a:	8d 51       	subi	r24, 0x1D	; 29
    9e2c:	9d 4f       	sbci	r25, 0xFD	; 253
    9e2e:	9e 01       	movw	r18, r28
    9e30:	21 52       	subi	r18, 0x21	; 33
    9e32:	3d 4f       	sbci	r19, 0xFD	; 253
    9e34:	f9 01       	movw	r30, r18
    9e36:	20 81       	ld	r18, Z
    9e38:	31 81       	ldd	r19, Z+1	; 0x01
    9e3a:	fc 01       	movw	r30, r24
    9e3c:	31 83       	std	Z+1, r19	; 0x01
    9e3e:	20 83       	st	Z, r18
    9e40:	ce 01       	movw	r24, r28
    9e42:	8d 51       	subi	r24, 0x1D	; 29
    9e44:	9d 4f       	sbci	r25, 0xFD	; 253
    9e46:	fc 01       	movw	r30, r24
    9e48:	80 81       	ld	r24, Z
    9e4a:	91 81       	ldd	r25, Z+1	; 0x01
    9e4c:	8c 01       	movw	r16, r24
    9e4e:	c8 01       	movw	r24, r16
    9e50:	01 97       	sbiw	r24, 0x01	; 1
    9e52:	f1 f7       	brne	.-4      	; 0x9e50 <main+0x617c>
    9e54:	8c 01       	movw	r16, r24
    9e56:	ce 01       	movw	r24, r28
    9e58:	8d 51       	subi	r24, 0x1D	; 29
    9e5a:	9d 4f       	sbci	r25, 0xFD	; 253
    9e5c:	fc 01       	movw	r30, r24
    9e5e:	11 83       	std	Z+1, r17	; 0x01
    9e60:	00 83       	st	Z, r16
				_delay_ms(30);
				back_mm(10);
    9e62:	8a e0       	ldi	r24, 0x0A	; 10
    9e64:	90 e0       	ldi	r25, 0x00	; 0
    9e66:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    9e6a:	9e 01       	movw	r18, r28
    9e6c:	2b 51       	subi	r18, 0x1B	; 27
    9e6e:	3d 4f       	sbci	r19, 0xFD	; 253
    9e70:	80 e0       	ldi	r24, 0x00	; 0
    9e72:	90 e0       	ldi	r25, 0x00	; 0
    9e74:	aa ef       	ldi	r26, 0xFA	; 250
    9e76:	b3 e4       	ldi	r27, 0x43	; 67
    9e78:	f9 01       	movw	r30, r18
    9e7a:	80 83       	st	Z, r24
    9e7c:	91 83       	std	Z+1, r25	; 0x01
    9e7e:	a2 83       	std	Z+2, r26	; 0x02
    9e80:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    9e82:	8e 01       	movw	r16, r28
    9e84:	07 51       	subi	r16, 0x17	; 23
    9e86:	1d 4f       	sbci	r17, 0xFD	; 253
    9e88:	ce 01       	movw	r24, r28
    9e8a:	8b 51       	subi	r24, 0x1B	; 27
    9e8c:	9d 4f       	sbci	r25, 0xFD	; 253
    9e8e:	fc 01       	movw	r30, r24
    9e90:	60 81       	ld	r22, Z
    9e92:	71 81       	ldd	r23, Z+1	; 0x01
    9e94:	82 81       	ldd	r24, Z+2	; 0x02
    9e96:	93 81       	ldd	r25, Z+3	; 0x03
    9e98:	26 e6       	ldi	r18, 0x66	; 102
    9e9a:	36 e6       	ldi	r19, 0x66	; 102
    9e9c:	46 e6       	ldi	r20, 0x66	; 102
    9e9e:	55 e4       	ldi	r21, 0x45	; 69
    9ea0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9ea4:	dc 01       	movw	r26, r24
    9ea6:	cb 01       	movw	r24, r22
    9ea8:	f8 01       	movw	r30, r16
    9eaa:	80 83       	st	Z, r24
    9eac:	91 83       	std	Z+1, r25	; 0x01
    9eae:	a2 83       	std	Z+2, r26	; 0x02
    9eb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    9eb2:	ce 01       	movw	r24, r28
    9eb4:	87 51       	subi	r24, 0x17	; 23
    9eb6:	9d 4f       	sbci	r25, 0xFD	; 253
    9eb8:	11 e0       	ldi	r17, 0x01	; 1
    9eba:	fc 01       	movw	r30, r24
    9ebc:	60 81       	ld	r22, Z
    9ebe:	71 81       	ldd	r23, Z+1	; 0x01
    9ec0:	82 81       	ldd	r24, Z+2	; 0x02
    9ec2:	93 81       	ldd	r25, Z+3	; 0x03
    9ec4:	20 e0       	ldi	r18, 0x00	; 0
    9ec6:	30 e0       	ldi	r19, 0x00	; 0
    9ec8:	40 e8       	ldi	r20, 0x80	; 128
    9eca:	5f e3       	ldi	r21, 0x3F	; 63
    9ecc:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    9ed0:	88 23       	and	r24, r24
    9ed2:	0c f0       	brlt	.+2      	; 0x9ed6 <main+0x6202>
    9ed4:	10 e0       	ldi	r17, 0x00	; 0
    9ed6:	11 23       	and	r17, r17
    9ed8:	49 f0       	breq	.+18     	; 0x9eec <main+0x6218>
		__ticks = 1;
    9eda:	ce 01       	movw	r24, r28
    9edc:	83 51       	subi	r24, 0x13	; 19
    9ede:	9d 4f       	sbci	r25, 0xFD	; 253
    9ee0:	21 e0       	ldi	r18, 0x01	; 1
    9ee2:	30 e0       	ldi	r19, 0x00	; 0
    9ee4:	fc 01       	movw	r30, r24
    9ee6:	31 83       	std	Z+1, r19	; 0x01
    9ee8:	20 83       	st	Z, r18
    9eea:	74 c0       	rjmp	.+232    	; 0x9fd4 <main+0x6300>
	else if (__tmp > 65535)
    9eec:	ce 01       	movw	r24, r28
    9eee:	87 51       	subi	r24, 0x17	; 23
    9ef0:	9d 4f       	sbci	r25, 0xFD	; 253
    9ef2:	11 e0       	ldi	r17, 0x01	; 1
    9ef4:	fc 01       	movw	r30, r24
    9ef6:	60 81       	ld	r22, Z
    9ef8:	71 81       	ldd	r23, Z+1	; 0x01
    9efa:	82 81       	ldd	r24, Z+2	; 0x02
    9efc:	93 81       	ldd	r25, Z+3	; 0x03
    9efe:	20 e0       	ldi	r18, 0x00	; 0
    9f00:	3f ef       	ldi	r19, 0xFF	; 255
    9f02:	4f e7       	ldi	r20, 0x7F	; 127
    9f04:	57 e4       	ldi	r21, 0x47	; 71
    9f06:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    9f0a:	18 16       	cp	r1, r24
    9f0c:	0c f0       	brlt	.+2      	; 0x9f10 <main+0x623c>
    9f0e:	10 e0       	ldi	r17, 0x00	; 0
    9f10:	11 23       	and	r17, r17
    9f12:	09 f4       	brne	.+2      	; 0x9f16 <main+0x6242>
    9f14:	4d c0       	rjmp	.+154    	; 0x9fb0 <main+0x62dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    9f16:	ce 01       	movw	r24, r28
    9f18:	8b 51       	subi	r24, 0x1B	; 27
    9f1a:	9d 4f       	sbci	r25, 0xFD	; 253
    9f1c:	fc 01       	movw	r30, r24
    9f1e:	60 81       	ld	r22, Z
    9f20:	71 81       	ldd	r23, Z+1	; 0x01
    9f22:	82 81       	ldd	r24, Z+2	; 0x02
    9f24:	93 81       	ldd	r25, Z+3	; 0x03
    9f26:	20 e0       	ldi	r18, 0x00	; 0
    9f28:	30 e0       	ldi	r19, 0x00	; 0
    9f2a:	40 e2       	ldi	r20, 0x20	; 32
    9f2c:	51 e4       	ldi	r21, 0x41	; 65
    9f2e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    9f32:	dc 01       	movw	r26, r24
    9f34:	cb 01       	movw	r24, r22
    9f36:	8e 01       	movw	r16, r28
    9f38:	03 51       	subi	r16, 0x13	; 19
    9f3a:	1d 4f       	sbci	r17, 0xFD	; 253
    9f3c:	bc 01       	movw	r22, r24
    9f3e:	cd 01       	movw	r24, r26
    9f40:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9f44:	dc 01       	movw	r26, r24
    9f46:	cb 01       	movw	r24, r22
    9f48:	f8 01       	movw	r30, r16
    9f4a:	91 83       	std	Z+1, r25	; 0x01
    9f4c:	80 83       	st	Z, r24
    9f4e:	27 c0       	rjmp	.+78     	; 0x9f9e <main+0x62ca>
    9f50:	ce 01       	movw	r24, r28
    9f52:	81 51       	subi	r24, 0x11	; 17
    9f54:	9d 4f       	sbci	r25, 0xFD	; 253
    9f56:	20 e7       	ldi	r18, 0x70	; 112
    9f58:	31 e0       	ldi	r19, 0x01	; 1
    9f5a:	fc 01       	movw	r30, r24
    9f5c:	31 83       	std	Z+1, r19	; 0x01
    9f5e:	20 83       	st	Z, r18
    9f60:	ce 01       	movw	r24, r28
    9f62:	81 51       	subi	r24, 0x11	; 17
    9f64:	9d 4f       	sbci	r25, 0xFD	; 253
    9f66:	fc 01       	movw	r30, r24
    9f68:	80 81       	ld	r24, Z
    9f6a:	91 81       	ldd	r25, Z+1	; 0x01
    9f6c:	8c 01       	movw	r16, r24
    9f6e:	c8 01       	movw	r24, r16
    9f70:	01 97       	sbiw	r24, 0x01	; 1
    9f72:	f1 f7       	brne	.-4      	; 0x9f70 <main+0x629c>
    9f74:	8c 01       	movw	r16, r24
    9f76:	ce 01       	movw	r24, r28
    9f78:	81 51       	subi	r24, 0x11	; 17
    9f7a:	9d 4f       	sbci	r25, 0xFD	; 253
    9f7c:	fc 01       	movw	r30, r24
    9f7e:	11 83       	std	Z+1, r17	; 0x01
    9f80:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    9f82:	ce 01       	movw	r24, r28
    9f84:	83 51       	subi	r24, 0x13	; 19
    9f86:	9d 4f       	sbci	r25, 0xFD	; 253
    9f88:	9e 01       	movw	r18, r28
    9f8a:	23 51       	subi	r18, 0x13	; 19
    9f8c:	3d 4f       	sbci	r19, 0xFD	; 253
    9f8e:	f9 01       	movw	r30, r18
    9f90:	20 81       	ld	r18, Z
    9f92:	31 81       	ldd	r19, Z+1	; 0x01
    9f94:	21 50       	subi	r18, 0x01	; 1
    9f96:	30 40       	sbci	r19, 0x00	; 0
    9f98:	fc 01       	movw	r30, r24
    9f9a:	31 83       	std	Z+1, r19	; 0x01
    9f9c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9f9e:	ce 01       	movw	r24, r28
    9fa0:	83 51       	subi	r24, 0x13	; 19
    9fa2:	9d 4f       	sbci	r25, 0xFD	; 253
    9fa4:	fc 01       	movw	r30, r24
    9fa6:	80 81       	ld	r24, Z
    9fa8:	91 81       	ldd	r25, Z+1	; 0x01
    9faa:	00 97       	sbiw	r24, 0x00	; 0
    9fac:	89 f6       	brne	.-94     	; 0x9f50 <main+0x627c>
    9fae:	2f c0       	rjmp	.+94     	; 0xa00e <main+0x633a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    9fb0:	8e 01       	movw	r16, r28
    9fb2:	03 51       	subi	r16, 0x13	; 19
    9fb4:	1d 4f       	sbci	r17, 0xFD	; 253
    9fb6:	ce 01       	movw	r24, r28
    9fb8:	87 51       	subi	r24, 0x17	; 23
    9fba:	9d 4f       	sbci	r25, 0xFD	; 253
    9fbc:	fc 01       	movw	r30, r24
    9fbe:	60 81       	ld	r22, Z
    9fc0:	71 81       	ldd	r23, Z+1	; 0x01
    9fc2:	82 81       	ldd	r24, Z+2	; 0x02
    9fc4:	93 81       	ldd	r25, Z+3	; 0x03
    9fc6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    9fca:	dc 01       	movw	r26, r24
    9fcc:	cb 01       	movw	r24, r22
    9fce:	f8 01       	movw	r30, r16
    9fd0:	91 83       	std	Z+1, r25	; 0x01
    9fd2:	80 83       	st	Z, r24
    9fd4:	ce 01       	movw	r24, r28
    9fd6:	8f 50       	subi	r24, 0x0F	; 15
    9fd8:	9d 4f       	sbci	r25, 0xFD	; 253
    9fda:	9e 01       	movw	r18, r28
    9fdc:	23 51       	subi	r18, 0x13	; 19
    9fde:	3d 4f       	sbci	r19, 0xFD	; 253
    9fe0:	f9 01       	movw	r30, r18
    9fe2:	20 81       	ld	r18, Z
    9fe4:	31 81       	ldd	r19, Z+1	; 0x01
    9fe6:	fc 01       	movw	r30, r24
    9fe8:	31 83       	std	Z+1, r19	; 0x01
    9fea:	20 83       	st	Z, r18
    9fec:	ce 01       	movw	r24, r28
    9fee:	8f 50       	subi	r24, 0x0F	; 15
    9ff0:	9d 4f       	sbci	r25, 0xFD	; 253
    9ff2:	fc 01       	movw	r30, r24
    9ff4:	80 81       	ld	r24, Z
    9ff6:	91 81       	ldd	r25, Z+1	; 0x01
    9ff8:	8c 01       	movw	r16, r24
    9ffa:	c8 01       	movw	r24, r16
    9ffc:	01 97       	sbiw	r24, 0x01	; 1
    9ffe:	f1 f7       	brne	.-4      	; 0x9ffc <main+0x6328>
    a000:	8c 01       	movw	r16, r24
    a002:	ce 01       	movw	r24, r28
    a004:	8f 50       	subi	r24, 0x0F	; 15
    a006:	9d 4f       	sbci	r25, 0xFD	; 253
    a008:	fc 01       	movw	r30, r24
    a00a:	11 83       	std	Z+1, r17	; 0x01
    a00c:	00 83       	st	Z, r16
				_delay_ms(500);
				left_degrees(45);
    a00e:	8d e2       	ldi	r24, 0x2D	; 45
    a010:	90 e0       	ldi	r25, 0x00	; 0
    a012:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
				right_degrees(180);
    a016:	84 eb       	ldi	r24, 0xB4	; 180
    a018:	90 e0       	ldi	r25, 0x00	; 0
    a01a:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
				compass=5;
    a01e:	85 e0       	ldi	r24, 0x05	; 5
    a020:	90 e0       	ldi	r25, 0x00	; 0
    a022:	9c 83       	std	Y+4, r25	; 0x04
    a024:	8b 83       	std	Y+3, r24	; 0x03
				break;
    a026:	f3 c2       	rjmp	.+1510   	; 0xa60e <main+0x693a>
			}
			if(coor[0]<origin2[boxnumber][i][0] && coor[1]>origin2[boxnumber][i][1])
    a028:	20 91 a6 04 	lds	r18, 0x04A6
    a02c:	30 91 a7 04 	lds	r19, 0x04A7
    a030:	ae 01       	movw	r20, r28
    a032:	4d 5f       	subi	r20, 0xFD	; 253
    a034:	5a 4f       	sbci	r21, 0xFA	; 250
    a036:	8d 81       	ldd	r24, Y+5	; 0x05
    a038:	9e 81       	ldd	r25, Y+6	; 0x06
    a03a:	bc 01       	movw	r22, r24
    a03c:	66 0f       	add	r22, r22
    a03e:	77 1f       	adc	r23, r23
    a040:	66 0f       	add	r22, r22
    a042:	77 1f       	adc	r23, r23
    a044:	8b a1       	lds	r24, 0x4b
    a046:	9c a1       	lds	r25, 0x4c
    a048:	86 0f       	add	r24, r22
    a04a:	97 1f       	adc	r25, r23
    a04c:	88 0f       	add	r24, r24
    a04e:	99 1f       	adc	r25, r25
    a050:	88 0f       	add	r24, r24
    a052:	99 1f       	adc	r25, r25
    a054:	84 0f       	add	r24, r20
    a056:	95 1f       	adc	r25, r21
    a058:	fc 01       	movw	r30, r24
    a05a:	80 81       	ld	r24, Z
    a05c:	91 81       	ldd	r25, Z+1	; 0x01
    a05e:	28 17       	cp	r18, r24
    a060:	39 07       	cpc	r19, r25
    a062:	0c f0       	brlt	.+2      	; 0xa066 <main+0x6392>
    a064:	c6 c2       	rjmp	.+1420   	; 0xa5f2 <main+0x691e>
    a066:	20 91 a8 04 	lds	r18, 0x04A8
    a06a:	30 91 a9 04 	lds	r19, 0x04A9
    a06e:	ae 01       	movw	r20, r28
    a070:	4d 5f       	subi	r20, 0xFD	; 253
    a072:	5a 4f       	sbci	r21, 0xFA	; 250
    a074:	8d 81       	ldd	r24, Y+5	; 0x05
    a076:	9e 81       	ldd	r25, Y+6	; 0x06
    a078:	bc 01       	movw	r22, r24
    a07a:	66 0f       	add	r22, r22
    a07c:	77 1f       	adc	r23, r23
    a07e:	66 0f       	add	r22, r22
    a080:	77 1f       	adc	r23, r23
    a082:	8b a1       	lds	r24, 0x4b
    a084:	9c a1       	lds	r25, 0x4c
    a086:	86 0f       	add	r24, r22
    a088:	97 1f       	adc	r25, r23
    a08a:	88 0f       	add	r24, r24
    a08c:	99 1f       	adc	r25, r25
    a08e:	88 0f       	add	r24, r24
    a090:	99 1f       	adc	r25, r25
    a092:	84 0f       	add	r24, r20
    a094:	95 1f       	adc	r25, r21
    a096:	02 96       	adiw	r24, 0x02	; 2
    a098:	fc 01       	movw	r30, r24
    a09a:	80 81       	ld	r24, Z
    a09c:	91 81       	ldd	r25, Z+1	; 0x01
    a09e:	82 17       	cp	r24, r18
    a0a0:	93 07       	cpc	r25, r19
    a0a2:	0c f0       	brlt	.+2      	; 0xa0a6 <main+0x63d2>
    a0a4:	a6 c2       	rjmp	.+1356   	; 0xa5f2 <main+0x691e>
			{
				right_degrees(135);
    a0a6:	87 e8       	ldi	r24, 0x87	; 135
    a0a8:	90 e0       	ldi	r25, 0x00	; 0
    a0aa:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
				back_mm(65);
    a0ae:	81 e4       	ldi	r24, 0x41	; 65
    a0b0:	90 e0       	ldi	r25, 0x00	; 0
    a0b2:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
				matrix2();
    a0b6:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
					if(summ1[recur+1]>10)
    a0ba:	8f 81       	ldd	r24, Y+7	; 0x07
    a0bc:	98 85       	ldd	r25, Y+8	; 0x08
    a0be:	01 96       	adiw	r24, 0x01	; 1
    a0c0:	9e 01       	movw	r18, r28
    a0c2:	25 54       	subi	r18, 0x45	; 69
    a0c4:	39 4f       	sbci	r19, 0xF9	; 249
    a0c6:	88 0f       	add	r24, r24
    a0c8:	99 1f       	adc	r25, r25
    a0ca:	82 0f       	add	r24, r18
    a0cc:	93 1f       	adc	r25, r19
    a0ce:	fc 01       	movw	r30, r24
    a0d0:	80 81       	ld	r24, Z
    a0d2:	91 81       	ldd	r25, Z+1	; 0x01
    a0d4:	8b 30       	cpi	r24, 0x0B	; 11
    a0d6:	91 05       	cpc	r25, r1
    a0d8:	0c f4       	brge	.+2      	; 0xa0dc <main+0x6408>
    a0da:	d6 c0       	rjmp	.+428    	; 0xa288 <main+0x65b4>
					{
						buzzer_on();
    a0dc:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    a0e0:	9e 01       	movw	r18, r28
    a0e2:	2d 50       	subi	r18, 0x0D	; 13
    a0e4:	3d 4f       	sbci	r19, 0xFD	; 253
    a0e6:	80 e0       	ldi	r24, 0x00	; 0
    a0e8:	90 e0       	ldi	r25, 0x00	; 0
    a0ea:	aa e7       	ldi	r26, 0x7A	; 122
    a0ec:	b4 e4       	ldi	r27, 0x44	; 68
    a0ee:	f9 01       	movw	r30, r18
    a0f0:	80 83       	st	Z, r24
    a0f2:	91 83       	std	Z+1, r25	; 0x01
    a0f4:	a2 83       	std	Z+2, r26	; 0x02
    a0f6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    a0f8:	8e 01       	movw	r16, r28
    a0fa:	09 50       	subi	r16, 0x09	; 9
    a0fc:	1d 4f       	sbci	r17, 0xFD	; 253
    a0fe:	ce 01       	movw	r24, r28
    a100:	8d 50       	subi	r24, 0x0D	; 13
    a102:	9d 4f       	sbci	r25, 0xFD	; 253
    a104:	fc 01       	movw	r30, r24
    a106:	60 81       	ld	r22, Z
    a108:	71 81       	ldd	r23, Z+1	; 0x01
    a10a:	82 81       	ldd	r24, Z+2	; 0x02
    a10c:	93 81       	ldd	r25, Z+3	; 0x03
    a10e:	26 e6       	ldi	r18, 0x66	; 102
    a110:	36 e6       	ldi	r19, 0x66	; 102
    a112:	46 e6       	ldi	r20, 0x66	; 102
    a114:	55 e4       	ldi	r21, 0x45	; 69
    a116:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a11a:	dc 01       	movw	r26, r24
    a11c:	cb 01       	movw	r24, r22
    a11e:	f8 01       	movw	r30, r16
    a120:	80 83       	st	Z, r24
    a122:	91 83       	std	Z+1, r25	; 0x01
    a124:	a2 83       	std	Z+2, r26	; 0x02
    a126:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    a128:	ce 01       	movw	r24, r28
    a12a:	89 50       	subi	r24, 0x09	; 9
    a12c:	9d 4f       	sbci	r25, 0xFD	; 253
    a12e:	11 e0       	ldi	r17, 0x01	; 1
    a130:	fc 01       	movw	r30, r24
    a132:	60 81       	ld	r22, Z
    a134:	71 81       	ldd	r23, Z+1	; 0x01
    a136:	82 81       	ldd	r24, Z+2	; 0x02
    a138:	93 81       	ldd	r25, Z+3	; 0x03
    a13a:	20 e0       	ldi	r18, 0x00	; 0
    a13c:	30 e0       	ldi	r19, 0x00	; 0
    a13e:	40 e8       	ldi	r20, 0x80	; 128
    a140:	5f e3       	ldi	r21, 0x3F	; 63
    a142:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    a146:	88 23       	and	r24, r24
    a148:	0c f0       	brlt	.+2      	; 0xa14c <main+0x6478>
    a14a:	10 e0       	ldi	r17, 0x00	; 0
    a14c:	11 23       	and	r17, r17
    a14e:	49 f0       	breq	.+18     	; 0xa162 <main+0x648e>
		__ticks = 1;
    a150:	ce 01       	movw	r24, r28
    a152:	85 50       	subi	r24, 0x05	; 5
    a154:	9d 4f       	sbci	r25, 0xFD	; 253
    a156:	21 e0       	ldi	r18, 0x01	; 1
    a158:	30 e0       	ldi	r19, 0x00	; 0
    a15a:	fc 01       	movw	r30, r24
    a15c:	31 83       	std	Z+1, r19	; 0x01
    a15e:	20 83       	st	Z, r18
    a160:	74 c0       	rjmp	.+232    	; 0xa24a <main+0x6576>
	else if (__tmp > 65535)
    a162:	ce 01       	movw	r24, r28
    a164:	89 50       	subi	r24, 0x09	; 9
    a166:	9d 4f       	sbci	r25, 0xFD	; 253
    a168:	11 e0       	ldi	r17, 0x01	; 1
    a16a:	fc 01       	movw	r30, r24
    a16c:	60 81       	ld	r22, Z
    a16e:	71 81       	ldd	r23, Z+1	; 0x01
    a170:	82 81       	ldd	r24, Z+2	; 0x02
    a172:	93 81       	ldd	r25, Z+3	; 0x03
    a174:	20 e0       	ldi	r18, 0x00	; 0
    a176:	3f ef       	ldi	r19, 0xFF	; 255
    a178:	4f e7       	ldi	r20, 0x7F	; 127
    a17a:	57 e4       	ldi	r21, 0x47	; 71
    a17c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    a180:	18 16       	cp	r1, r24
    a182:	0c f0       	brlt	.+2      	; 0xa186 <main+0x64b2>
    a184:	10 e0       	ldi	r17, 0x00	; 0
    a186:	11 23       	and	r17, r17
    a188:	09 f4       	brne	.+2      	; 0xa18c <main+0x64b8>
    a18a:	4d c0       	rjmp	.+154    	; 0xa226 <main+0x6552>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a18c:	ce 01       	movw	r24, r28
    a18e:	8d 50       	subi	r24, 0x0D	; 13
    a190:	9d 4f       	sbci	r25, 0xFD	; 253
    a192:	fc 01       	movw	r30, r24
    a194:	60 81       	ld	r22, Z
    a196:	71 81       	ldd	r23, Z+1	; 0x01
    a198:	82 81       	ldd	r24, Z+2	; 0x02
    a19a:	93 81       	ldd	r25, Z+3	; 0x03
    a19c:	20 e0       	ldi	r18, 0x00	; 0
    a19e:	30 e0       	ldi	r19, 0x00	; 0
    a1a0:	40 e2       	ldi	r20, 0x20	; 32
    a1a2:	51 e4       	ldi	r21, 0x41	; 65
    a1a4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a1a8:	dc 01       	movw	r26, r24
    a1aa:	cb 01       	movw	r24, r22
    a1ac:	8e 01       	movw	r16, r28
    a1ae:	05 50       	subi	r16, 0x05	; 5
    a1b0:	1d 4f       	sbci	r17, 0xFD	; 253
    a1b2:	bc 01       	movw	r22, r24
    a1b4:	cd 01       	movw	r24, r26
    a1b6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a1ba:	dc 01       	movw	r26, r24
    a1bc:	cb 01       	movw	r24, r22
    a1be:	f8 01       	movw	r30, r16
    a1c0:	91 83       	std	Z+1, r25	; 0x01
    a1c2:	80 83       	st	Z, r24
    a1c4:	27 c0       	rjmp	.+78     	; 0xa214 <main+0x6540>
    a1c6:	ce 01       	movw	r24, r28
    a1c8:	83 50       	subi	r24, 0x03	; 3
    a1ca:	9d 4f       	sbci	r25, 0xFD	; 253
    a1cc:	20 e7       	ldi	r18, 0x70	; 112
    a1ce:	31 e0       	ldi	r19, 0x01	; 1
    a1d0:	fc 01       	movw	r30, r24
    a1d2:	31 83       	std	Z+1, r19	; 0x01
    a1d4:	20 83       	st	Z, r18
    a1d6:	ce 01       	movw	r24, r28
    a1d8:	83 50       	subi	r24, 0x03	; 3
    a1da:	9d 4f       	sbci	r25, 0xFD	; 253
    a1dc:	fc 01       	movw	r30, r24
    a1de:	80 81       	ld	r24, Z
    a1e0:	91 81       	ldd	r25, Z+1	; 0x01
    a1e2:	8c 01       	movw	r16, r24
    a1e4:	c8 01       	movw	r24, r16
    a1e6:	01 97       	sbiw	r24, 0x01	; 1
    a1e8:	f1 f7       	brne	.-4      	; 0xa1e6 <main+0x6512>
    a1ea:	8c 01       	movw	r16, r24
    a1ec:	ce 01       	movw	r24, r28
    a1ee:	83 50       	subi	r24, 0x03	; 3
    a1f0:	9d 4f       	sbci	r25, 0xFD	; 253
    a1f2:	fc 01       	movw	r30, r24
    a1f4:	11 83       	std	Z+1, r17	; 0x01
    a1f6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a1f8:	ce 01       	movw	r24, r28
    a1fa:	85 50       	subi	r24, 0x05	; 5
    a1fc:	9d 4f       	sbci	r25, 0xFD	; 253
    a1fe:	9e 01       	movw	r18, r28
    a200:	25 50       	subi	r18, 0x05	; 5
    a202:	3d 4f       	sbci	r19, 0xFD	; 253
    a204:	f9 01       	movw	r30, r18
    a206:	20 81       	ld	r18, Z
    a208:	31 81       	ldd	r19, Z+1	; 0x01
    a20a:	21 50       	subi	r18, 0x01	; 1
    a20c:	30 40       	sbci	r19, 0x00	; 0
    a20e:	fc 01       	movw	r30, r24
    a210:	31 83       	std	Z+1, r19	; 0x01
    a212:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a214:	ce 01       	movw	r24, r28
    a216:	85 50       	subi	r24, 0x05	; 5
    a218:	9d 4f       	sbci	r25, 0xFD	; 253
    a21a:	fc 01       	movw	r30, r24
    a21c:	80 81       	ld	r24, Z
    a21e:	91 81       	ldd	r25, Z+1	; 0x01
    a220:	00 97       	sbiw	r24, 0x00	; 0
    a222:	89 f6       	brne	.-94     	; 0xa1c6 <main+0x64f2>
    a224:	2f c0       	rjmp	.+94     	; 0xa284 <main+0x65b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a226:	8e 01       	movw	r16, r28
    a228:	05 50       	subi	r16, 0x05	; 5
    a22a:	1d 4f       	sbci	r17, 0xFD	; 253
    a22c:	ce 01       	movw	r24, r28
    a22e:	89 50       	subi	r24, 0x09	; 9
    a230:	9d 4f       	sbci	r25, 0xFD	; 253
    a232:	fc 01       	movw	r30, r24
    a234:	60 81       	ld	r22, Z
    a236:	71 81       	ldd	r23, Z+1	; 0x01
    a238:	82 81       	ldd	r24, Z+2	; 0x02
    a23a:	93 81       	ldd	r25, Z+3	; 0x03
    a23c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a240:	dc 01       	movw	r26, r24
    a242:	cb 01       	movw	r24, r22
    a244:	f8 01       	movw	r30, r16
    a246:	91 83       	std	Z+1, r25	; 0x01
    a248:	80 83       	st	Z, r24
    a24a:	ce 01       	movw	r24, r28
    a24c:	81 50       	subi	r24, 0x01	; 1
    a24e:	9d 4f       	sbci	r25, 0xFD	; 253
    a250:	9e 01       	movw	r18, r28
    a252:	25 50       	subi	r18, 0x05	; 5
    a254:	3d 4f       	sbci	r19, 0xFD	; 253
    a256:	f9 01       	movw	r30, r18
    a258:	20 81       	ld	r18, Z
    a25a:	31 81       	ldd	r19, Z+1	; 0x01
    a25c:	fc 01       	movw	r30, r24
    a25e:	31 83       	std	Z+1, r19	; 0x01
    a260:	20 83       	st	Z, r18
    a262:	ce 01       	movw	r24, r28
    a264:	81 50       	subi	r24, 0x01	; 1
    a266:	9d 4f       	sbci	r25, 0xFD	; 253
    a268:	fc 01       	movw	r30, r24
    a26a:	80 81       	ld	r24, Z
    a26c:	91 81       	ldd	r25, Z+1	; 0x01
    a26e:	8c 01       	movw	r16, r24
    a270:	c8 01       	movw	r24, r16
    a272:	01 97       	sbiw	r24, 0x01	; 1
    a274:	f1 f7       	brne	.-4      	; 0xa272 <main+0x659e>
    a276:	8c 01       	movw	r16, r24
    a278:	ce 01       	movw	r24, r28
    a27a:	81 50       	subi	r24, 0x01	; 1
    a27c:	9d 4f       	sbci	r25, 0xFD	; 253
    a27e:	fc 01       	movw	r30, r24
    a280:	11 83       	std	Z+1, r17	; 0x01
    a282:	00 83       	st	Z, r16
						_delay_ms(1000);
						buzzer_off();
    a284:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
					}
				forward_mm(75);
    a288:	8b e4       	ldi	r24, 0x4B	; 75
    a28a:	90 e0       	ldi	r25, 0x00	; 0
    a28c:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    a290:	9e 01       	movw	r18, r28
    a292:	2f 5f       	subi	r18, 0xFF	; 255
    a294:	3c 4f       	sbci	r19, 0xFC	; 252
    a296:	80 e0       	ldi	r24, 0x00	; 0
    a298:	90 e0       	ldi	r25, 0x00	; 0
    a29a:	a0 ef       	ldi	r26, 0xF0	; 240
    a29c:	b1 e4       	ldi	r27, 0x41	; 65
    a29e:	f9 01       	movw	r30, r18
    a2a0:	80 83       	st	Z, r24
    a2a2:	91 83       	std	Z+1, r25	; 0x01
    a2a4:	a2 83       	std	Z+2, r26	; 0x02
    a2a6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    a2a8:	8e 01       	movw	r16, r28
    a2aa:	0b 5f       	subi	r16, 0xFB	; 251
    a2ac:	1c 4f       	sbci	r17, 0xFC	; 252
    a2ae:	ce 01       	movw	r24, r28
    a2b0:	8f 5f       	subi	r24, 0xFF	; 255
    a2b2:	9c 4f       	sbci	r25, 0xFC	; 252
    a2b4:	fc 01       	movw	r30, r24
    a2b6:	60 81       	ld	r22, Z
    a2b8:	71 81       	ldd	r23, Z+1	; 0x01
    a2ba:	82 81       	ldd	r24, Z+2	; 0x02
    a2bc:	93 81       	ldd	r25, Z+3	; 0x03
    a2be:	26 e6       	ldi	r18, 0x66	; 102
    a2c0:	36 e6       	ldi	r19, 0x66	; 102
    a2c2:	46 e6       	ldi	r20, 0x66	; 102
    a2c4:	55 e4       	ldi	r21, 0x45	; 69
    a2c6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a2ca:	dc 01       	movw	r26, r24
    a2cc:	cb 01       	movw	r24, r22
    a2ce:	f8 01       	movw	r30, r16
    a2d0:	80 83       	st	Z, r24
    a2d2:	91 83       	std	Z+1, r25	; 0x01
    a2d4:	a2 83       	std	Z+2, r26	; 0x02
    a2d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    a2d8:	ce 01       	movw	r24, r28
    a2da:	8b 5f       	subi	r24, 0xFB	; 251
    a2dc:	9c 4f       	sbci	r25, 0xFC	; 252
    a2de:	11 e0       	ldi	r17, 0x01	; 1
    a2e0:	fc 01       	movw	r30, r24
    a2e2:	60 81       	ld	r22, Z
    a2e4:	71 81       	ldd	r23, Z+1	; 0x01
    a2e6:	82 81       	ldd	r24, Z+2	; 0x02
    a2e8:	93 81       	ldd	r25, Z+3	; 0x03
    a2ea:	20 e0       	ldi	r18, 0x00	; 0
    a2ec:	30 e0       	ldi	r19, 0x00	; 0
    a2ee:	40 e8       	ldi	r20, 0x80	; 128
    a2f0:	5f e3       	ldi	r21, 0x3F	; 63
    a2f2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    a2f6:	88 23       	and	r24, r24
    a2f8:	0c f0       	brlt	.+2      	; 0xa2fc <main+0x6628>
    a2fa:	10 e0       	ldi	r17, 0x00	; 0
    a2fc:	11 23       	and	r17, r17
    a2fe:	49 f0       	breq	.+18     	; 0xa312 <main+0x663e>
		__ticks = 1;
    a300:	ce 01       	movw	r24, r28
    a302:	87 5f       	subi	r24, 0xF7	; 247
    a304:	9c 4f       	sbci	r25, 0xFC	; 252
    a306:	21 e0       	ldi	r18, 0x01	; 1
    a308:	30 e0       	ldi	r19, 0x00	; 0
    a30a:	fc 01       	movw	r30, r24
    a30c:	31 83       	std	Z+1, r19	; 0x01
    a30e:	20 83       	st	Z, r18
    a310:	74 c0       	rjmp	.+232    	; 0xa3fa <main+0x6726>
	else if (__tmp > 65535)
    a312:	ce 01       	movw	r24, r28
    a314:	8b 5f       	subi	r24, 0xFB	; 251
    a316:	9c 4f       	sbci	r25, 0xFC	; 252
    a318:	11 e0       	ldi	r17, 0x01	; 1
    a31a:	fc 01       	movw	r30, r24
    a31c:	60 81       	ld	r22, Z
    a31e:	71 81       	ldd	r23, Z+1	; 0x01
    a320:	82 81       	ldd	r24, Z+2	; 0x02
    a322:	93 81       	ldd	r25, Z+3	; 0x03
    a324:	20 e0       	ldi	r18, 0x00	; 0
    a326:	3f ef       	ldi	r19, 0xFF	; 255
    a328:	4f e7       	ldi	r20, 0x7F	; 127
    a32a:	57 e4       	ldi	r21, 0x47	; 71
    a32c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    a330:	18 16       	cp	r1, r24
    a332:	0c f0       	brlt	.+2      	; 0xa336 <main+0x6662>
    a334:	10 e0       	ldi	r17, 0x00	; 0
    a336:	11 23       	and	r17, r17
    a338:	09 f4       	brne	.+2      	; 0xa33c <main+0x6668>
    a33a:	4d c0       	rjmp	.+154    	; 0xa3d6 <main+0x6702>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a33c:	ce 01       	movw	r24, r28
    a33e:	8f 5f       	subi	r24, 0xFF	; 255
    a340:	9c 4f       	sbci	r25, 0xFC	; 252
    a342:	fc 01       	movw	r30, r24
    a344:	60 81       	ld	r22, Z
    a346:	71 81       	ldd	r23, Z+1	; 0x01
    a348:	82 81       	ldd	r24, Z+2	; 0x02
    a34a:	93 81       	ldd	r25, Z+3	; 0x03
    a34c:	20 e0       	ldi	r18, 0x00	; 0
    a34e:	30 e0       	ldi	r19, 0x00	; 0
    a350:	40 e2       	ldi	r20, 0x20	; 32
    a352:	51 e4       	ldi	r21, 0x41	; 65
    a354:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a358:	dc 01       	movw	r26, r24
    a35a:	cb 01       	movw	r24, r22
    a35c:	8e 01       	movw	r16, r28
    a35e:	07 5f       	subi	r16, 0xF7	; 247
    a360:	1c 4f       	sbci	r17, 0xFC	; 252
    a362:	bc 01       	movw	r22, r24
    a364:	cd 01       	movw	r24, r26
    a366:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a36a:	dc 01       	movw	r26, r24
    a36c:	cb 01       	movw	r24, r22
    a36e:	f8 01       	movw	r30, r16
    a370:	91 83       	std	Z+1, r25	; 0x01
    a372:	80 83       	st	Z, r24
    a374:	27 c0       	rjmp	.+78     	; 0xa3c4 <main+0x66f0>
    a376:	ce 01       	movw	r24, r28
    a378:	85 5f       	subi	r24, 0xF5	; 245
    a37a:	9c 4f       	sbci	r25, 0xFC	; 252
    a37c:	20 e7       	ldi	r18, 0x70	; 112
    a37e:	31 e0       	ldi	r19, 0x01	; 1
    a380:	fc 01       	movw	r30, r24
    a382:	31 83       	std	Z+1, r19	; 0x01
    a384:	20 83       	st	Z, r18
    a386:	ce 01       	movw	r24, r28
    a388:	85 5f       	subi	r24, 0xF5	; 245
    a38a:	9c 4f       	sbci	r25, 0xFC	; 252
    a38c:	fc 01       	movw	r30, r24
    a38e:	80 81       	ld	r24, Z
    a390:	91 81       	ldd	r25, Z+1	; 0x01
    a392:	8c 01       	movw	r16, r24
    a394:	c8 01       	movw	r24, r16
    a396:	01 97       	sbiw	r24, 0x01	; 1
    a398:	f1 f7       	brne	.-4      	; 0xa396 <main+0x66c2>
    a39a:	8c 01       	movw	r16, r24
    a39c:	ce 01       	movw	r24, r28
    a39e:	85 5f       	subi	r24, 0xF5	; 245
    a3a0:	9c 4f       	sbci	r25, 0xFC	; 252
    a3a2:	fc 01       	movw	r30, r24
    a3a4:	11 83       	std	Z+1, r17	; 0x01
    a3a6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a3a8:	ce 01       	movw	r24, r28
    a3aa:	87 5f       	subi	r24, 0xF7	; 247
    a3ac:	9c 4f       	sbci	r25, 0xFC	; 252
    a3ae:	9e 01       	movw	r18, r28
    a3b0:	27 5f       	subi	r18, 0xF7	; 247
    a3b2:	3c 4f       	sbci	r19, 0xFC	; 252
    a3b4:	f9 01       	movw	r30, r18
    a3b6:	20 81       	ld	r18, Z
    a3b8:	31 81       	ldd	r19, Z+1	; 0x01
    a3ba:	21 50       	subi	r18, 0x01	; 1
    a3bc:	30 40       	sbci	r19, 0x00	; 0
    a3be:	fc 01       	movw	r30, r24
    a3c0:	31 83       	std	Z+1, r19	; 0x01
    a3c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a3c4:	ce 01       	movw	r24, r28
    a3c6:	87 5f       	subi	r24, 0xF7	; 247
    a3c8:	9c 4f       	sbci	r25, 0xFC	; 252
    a3ca:	fc 01       	movw	r30, r24
    a3cc:	80 81       	ld	r24, Z
    a3ce:	91 81       	ldd	r25, Z+1	; 0x01
    a3d0:	00 97       	sbiw	r24, 0x00	; 0
    a3d2:	89 f6       	brne	.-94     	; 0xa376 <main+0x66a2>
    a3d4:	2f c0       	rjmp	.+94     	; 0xa434 <main+0x6760>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a3d6:	8e 01       	movw	r16, r28
    a3d8:	07 5f       	subi	r16, 0xF7	; 247
    a3da:	1c 4f       	sbci	r17, 0xFC	; 252
    a3dc:	ce 01       	movw	r24, r28
    a3de:	8b 5f       	subi	r24, 0xFB	; 251
    a3e0:	9c 4f       	sbci	r25, 0xFC	; 252
    a3e2:	fc 01       	movw	r30, r24
    a3e4:	60 81       	ld	r22, Z
    a3e6:	71 81       	ldd	r23, Z+1	; 0x01
    a3e8:	82 81       	ldd	r24, Z+2	; 0x02
    a3ea:	93 81       	ldd	r25, Z+3	; 0x03
    a3ec:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a3f0:	dc 01       	movw	r26, r24
    a3f2:	cb 01       	movw	r24, r22
    a3f4:	f8 01       	movw	r30, r16
    a3f6:	91 83       	std	Z+1, r25	; 0x01
    a3f8:	80 83       	st	Z, r24
    a3fa:	ce 01       	movw	r24, r28
    a3fc:	83 5f       	subi	r24, 0xF3	; 243
    a3fe:	9c 4f       	sbci	r25, 0xFC	; 252
    a400:	9e 01       	movw	r18, r28
    a402:	27 5f       	subi	r18, 0xF7	; 247
    a404:	3c 4f       	sbci	r19, 0xFC	; 252
    a406:	f9 01       	movw	r30, r18
    a408:	20 81       	ld	r18, Z
    a40a:	31 81       	ldd	r19, Z+1	; 0x01
    a40c:	fc 01       	movw	r30, r24
    a40e:	31 83       	std	Z+1, r19	; 0x01
    a410:	20 83       	st	Z, r18
    a412:	ce 01       	movw	r24, r28
    a414:	83 5f       	subi	r24, 0xF3	; 243
    a416:	9c 4f       	sbci	r25, 0xFC	; 252
    a418:	fc 01       	movw	r30, r24
    a41a:	80 81       	ld	r24, Z
    a41c:	91 81       	ldd	r25, Z+1	; 0x01
    a41e:	8c 01       	movw	r16, r24
    a420:	c8 01       	movw	r24, r16
    a422:	01 97       	sbiw	r24, 0x01	; 1
    a424:	f1 f7       	brne	.-4      	; 0xa422 <main+0x674e>
    a426:	8c 01       	movw	r16, r24
    a428:	ce 01       	movw	r24, r28
    a42a:	83 5f       	subi	r24, 0xF3	; 243
    a42c:	9c 4f       	sbci	r25, 0xFC	; 252
    a42e:	fc 01       	movw	r30, r24
    a430:	11 83       	std	Z+1, r17	; 0x01
    a432:	00 83       	st	Z, r16
				_delay_ms(30);
				back_mm(10);
    a434:	8a e0       	ldi	r24, 0x0A	; 10
    a436:	90 e0       	ldi	r25, 0x00	; 0
    a438:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    a43c:	9e 01       	movw	r18, r28
    a43e:	21 5f       	subi	r18, 0xF1	; 241
    a440:	3c 4f       	sbci	r19, 0xFC	; 252
    a442:	80 e0       	ldi	r24, 0x00	; 0
    a444:	90 e0       	ldi	r25, 0x00	; 0
    a446:	aa ef       	ldi	r26, 0xFA	; 250
    a448:	b3 e4       	ldi	r27, 0x43	; 67
    a44a:	f9 01       	movw	r30, r18
    a44c:	80 83       	st	Z, r24
    a44e:	91 83       	std	Z+1, r25	; 0x01
    a450:	a2 83       	std	Z+2, r26	; 0x02
    a452:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    a454:	8e 01       	movw	r16, r28
    a456:	0d 5e       	subi	r16, 0xED	; 237
    a458:	1c 4f       	sbci	r17, 0xFC	; 252
    a45a:	ce 01       	movw	r24, r28
    a45c:	81 5f       	subi	r24, 0xF1	; 241
    a45e:	9c 4f       	sbci	r25, 0xFC	; 252
    a460:	fc 01       	movw	r30, r24
    a462:	60 81       	ld	r22, Z
    a464:	71 81       	ldd	r23, Z+1	; 0x01
    a466:	82 81       	ldd	r24, Z+2	; 0x02
    a468:	93 81       	ldd	r25, Z+3	; 0x03
    a46a:	26 e6       	ldi	r18, 0x66	; 102
    a46c:	36 e6       	ldi	r19, 0x66	; 102
    a46e:	46 e6       	ldi	r20, 0x66	; 102
    a470:	55 e4       	ldi	r21, 0x45	; 69
    a472:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a476:	dc 01       	movw	r26, r24
    a478:	cb 01       	movw	r24, r22
    a47a:	f8 01       	movw	r30, r16
    a47c:	80 83       	st	Z, r24
    a47e:	91 83       	std	Z+1, r25	; 0x01
    a480:	a2 83       	std	Z+2, r26	; 0x02
    a482:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    a484:	ce 01       	movw	r24, r28
    a486:	8d 5e       	subi	r24, 0xED	; 237
    a488:	9c 4f       	sbci	r25, 0xFC	; 252
    a48a:	11 e0       	ldi	r17, 0x01	; 1
    a48c:	fc 01       	movw	r30, r24
    a48e:	60 81       	ld	r22, Z
    a490:	71 81       	ldd	r23, Z+1	; 0x01
    a492:	82 81       	ldd	r24, Z+2	; 0x02
    a494:	93 81       	ldd	r25, Z+3	; 0x03
    a496:	20 e0       	ldi	r18, 0x00	; 0
    a498:	30 e0       	ldi	r19, 0x00	; 0
    a49a:	40 e8       	ldi	r20, 0x80	; 128
    a49c:	5f e3       	ldi	r21, 0x3F	; 63
    a49e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    a4a2:	88 23       	and	r24, r24
    a4a4:	0c f0       	brlt	.+2      	; 0xa4a8 <main+0x67d4>
    a4a6:	10 e0       	ldi	r17, 0x00	; 0
    a4a8:	11 23       	and	r17, r17
    a4aa:	49 f0       	breq	.+18     	; 0xa4be <main+0x67ea>
		__ticks = 1;
    a4ac:	ce 01       	movw	r24, r28
    a4ae:	89 5e       	subi	r24, 0xE9	; 233
    a4b0:	9c 4f       	sbci	r25, 0xFC	; 252
    a4b2:	21 e0       	ldi	r18, 0x01	; 1
    a4b4:	30 e0       	ldi	r19, 0x00	; 0
    a4b6:	fc 01       	movw	r30, r24
    a4b8:	31 83       	std	Z+1, r19	; 0x01
    a4ba:	20 83       	st	Z, r18
    a4bc:	74 c0       	rjmp	.+232    	; 0xa5a6 <main+0x68d2>
	else if (__tmp > 65535)
    a4be:	ce 01       	movw	r24, r28
    a4c0:	8d 5e       	subi	r24, 0xED	; 237
    a4c2:	9c 4f       	sbci	r25, 0xFC	; 252
    a4c4:	11 e0       	ldi	r17, 0x01	; 1
    a4c6:	fc 01       	movw	r30, r24
    a4c8:	60 81       	ld	r22, Z
    a4ca:	71 81       	ldd	r23, Z+1	; 0x01
    a4cc:	82 81       	ldd	r24, Z+2	; 0x02
    a4ce:	93 81       	ldd	r25, Z+3	; 0x03
    a4d0:	20 e0       	ldi	r18, 0x00	; 0
    a4d2:	3f ef       	ldi	r19, 0xFF	; 255
    a4d4:	4f e7       	ldi	r20, 0x7F	; 127
    a4d6:	57 e4       	ldi	r21, 0x47	; 71
    a4d8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    a4dc:	18 16       	cp	r1, r24
    a4de:	0c f0       	brlt	.+2      	; 0xa4e2 <main+0x680e>
    a4e0:	10 e0       	ldi	r17, 0x00	; 0
    a4e2:	11 23       	and	r17, r17
    a4e4:	09 f4       	brne	.+2      	; 0xa4e8 <main+0x6814>
    a4e6:	4d c0       	rjmp	.+154    	; 0xa582 <main+0x68ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a4e8:	ce 01       	movw	r24, r28
    a4ea:	81 5f       	subi	r24, 0xF1	; 241
    a4ec:	9c 4f       	sbci	r25, 0xFC	; 252
    a4ee:	fc 01       	movw	r30, r24
    a4f0:	60 81       	ld	r22, Z
    a4f2:	71 81       	ldd	r23, Z+1	; 0x01
    a4f4:	82 81       	ldd	r24, Z+2	; 0x02
    a4f6:	93 81       	ldd	r25, Z+3	; 0x03
    a4f8:	20 e0       	ldi	r18, 0x00	; 0
    a4fa:	30 e0       	ldi	r19, 0x00	; 0
    a4fc:	40 e2       	ldi	r20, 0x20	; 32
    a4fe:	51 e4       	ldi	r21, 0x41	; 65
    a500:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a504:	dc 01       	movw	r26, r24
    a506:	cb 01       	movw	r24, r22
    a508:	8e 01       	movw	r16, r28
    a50a:	09 5e       	subi	r16, 0xE9	; 233
    a50c:	1c 4f       	sbci	r17, 0xFC	; 252
    a50e:	bc 01       	movw	r22, r24
    a510:	cd 01       	movw	r24, r26
    a512:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a516:	dc 01       	movw	r26, r24
    a518:	cb 01       	movw	r24, r22
    a51a:	f8 01       	movw	r30, r16
    a51c:	91 83       	std	Z+1, r25	; 0x01
    a51e:	80 83       	st	Z, r24
    a520:	27 c0       	rjmp	.+78     	; 0xa570 <main+0x689c>
    a522:	ce 01       	movw	r24, r28
    a524:	87 5e       	subi	r24, 0xE7	; 231
    a526:	9c 4f       	sbci	r25, 0xFC	; 252
    a528:	20 e7       	ldi	r18, 0x70	; 112
    a52a:	31 e0       	ldi	r19, 0x01	; 1
    a52c:	fc 01       	movw	r30, r24
    a52e:	31 83       	std	Z+1, r19	; 0x01
    a530:	20 83       	st	Z, r18
    a532:	ce 01       	movw	r24, r28
    a534:	87 5e       	subi	r24, 0xE7	; 231
    a536:	9c 4f       	sbci	r25, 0xFC	; 252
    a538:	fc 01       	movw	r30, r24
    a53a:	80 81       	ld	r24, Z
    a53c:	91 81       	ldd	r25, Z+1	; 0x01
    a53e:	8c 01       	movw	r16, r24
    a540:	c8 01       	movw	r24, r16
    a542:	01 97       	sbiw	r24, 0x01	; 1
    a544:	f1 f7       	brne	.-4      	; 0xa542 <main+0x686e>
    a546:	8c 01       	movw	r16, r24
    a548:	ce 01       	movw	r24, r28
    a54a:	87 5e       	subi	r24, 0xE7	; 231
    a54c:	9c 4f       	sbci	r25, 0xFC	; 252
    a54e:	fc 01       	movw	r30, r24
    a550:	11 83       	std	Z+1, r17	; 0x01
    a552:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a554:	ce 01       	movw	r24, r28
    a556:	89 5e       	subi	r24, 0xE9	; 233
    a558:	9c 4f       	sbci	r25, 0xFC	; 252
    a55a:	9e 01       	movw	r18, r28
    a55c:	29 5e       	subi	r18, 0xE9	; 233
    a55e:	3c 4f       	sbci	r19, 0xFC	; 252
    a560:	f9 01       	movw	r30, r18
    a562:	20 81       	ld	r18, Z
    a564:	31 81       	ldd	r19, Z+1	; 0x01
    a566:	21 50       	subi	r18, 0x01	; 1
    a568:	30 40       	sbci	r19, 0x00	; 0
    a56a:	fc 01       	movw	r30, r24
    a56c:	31 83       	std	Z+1, r19	; 0x01
    a56e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a570:	ce 01       	movw	r24, r28
    a572:	89 5e       	subi	r24, 0xE9	; 233
    a574:	9c 4f       	sbci	r25, 0xFC	; 252
    a576:	fc 01       	movw	r30, r24
    a578:	80 81       	ld	r24, Z
    a57a:	91 81       	ldd	r25, Z+1	; 0x01
    a57c:	00 97       	sbiw	r24, 0x00	; 0
    a57e:	89 f6       	brne	.-94     	; 0xa522 <main+0x684e>
    a580:	2f c0       	rjmp	.+94     	; 0xa5e0 <main+0x690c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a582:	8e 01       	movw	r16, r28
    a584:	09 5e       	subi	r16, 0xE9	; 233
    a586:	1c 4f       	sbci	r17, 0xFC	; 252
    a588:	ce 01       	movw	r24, r28
    a58a:	8d 5e       	subi	r24, 0xED	; 237
    a58c:	9c 4f       	sbci	r25, 0xFC	; 252
    a58e:	fc 01       	movw	r30, r24
    a590:	60 81       	ld	r22, Z
    a592:	71 81       	ldd	r23, Z+1	; 0x01
    a594:	82 81       	ldd	r24, Z+2	; 0x02
    a596:	93 81       	ldd	r25, Z+3	; 0x03
    a598:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a59c:	dc 01       	movw	r26, r24
    a59e:	cb 01       	movw	r24, r22
    a5a0:	f8 01       	movw	r30, r16
    a5a2:	91 83       	std	Z+1, r25	; 0x01
    a5a4:	80 83       	st	Z, r24
    a5a6:	ce 01       	movw	r24, r28
    a5a8:	85 5e       	subi	r24, 0xE5	; 229
    a5aa:	9c 4f       	sbci	r25, 0xFC	; 252
    a5ac:	9e 01       	movw	r18, r28
    a5ae:	29 5e       	subi	r18, 0xE9	; 233
    a5b0:	3c 4f       	sbci	r19, 0xFC	; 252
    a5b2:	f9 01       	movw	r30, r18
    a5b4:	20 81       	ld	r18, Z
    a5b6:	31 81       	ldd	r19, Z+1	; 0x01
    a5b8:	fc 01       	movw	r30, r24
    a5ba:	31 83       	std	Z+1, r19	; 0x01
    a5bc:	20 83       	st	Z, r18
    a5be:	ce 01       	movw	r24, r28
    a5c0:	85 5e       	subi	r24, 0xE5	; 229
    a5c2:	9c 4f       	sbci	r25, 0xFC	; 252
    a5c4:	fc 01       	movw	r30, r24
    a5c6:	80 81       	ld	r24, Z
    a5c8:	91 81       	ldd	r25, Z+1	; 0x01
    a5ca:	8c 01       	movw	r16, r24
    a5cc:	c8 01       	movw	r24, r16
    a5ce:	01 97       	sbiw	r24, 0x01	; 1
    a5d0:	f1 f7       	brne	.-4      	; 0xa5ce <main+0x68fa>
    a5d2:	8c 01       	movw	r16, r24
    a5d4:	ce 01       	movw	r24, r28
    a5d6:	85 5e       	subi	r24, 0xE5	; 229
    a5d8:	9c 4f       	sbci	r25, 0xFC	; 252
    a5da:	fc 01       	movw	r30, r24
    a5dc:	11 83       	std	Z+1, r17	; 0x01
    a5de:	00 83       	st	Z, r16
				_delay_ms(500);
				right_degrees(40);
    a5e0:	88 e2       	ldi	r24, 0x28	; 40
    a5e2:	90 e0       	ldi	r25, 0x00	; 0
    a5e4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
				compass=5;
    a5e8:	85 e0       	ldi	r24, 0x05	; 5
    a5ea:	90 e0       	ldi	r25, 0x00	; 0
    a5ec:	9c 83       	std	Y+4, r25	; 0x04
    a5ee:	8b 83       	std	Y+3, r24	; 0x03
				break;
    a5f0:	0e c0       	rjmp	.+28     	; 0xa60e <main+0x693a>
		
	}
	goto hotspot;
	ppt1: if(compass==4)
	{
		for(int i=0;i<4;i++)
    a5f2:	8b a1       	lds	r24, 0x4b
    a5f4:	9c a1       	lds	r25, 0x4c
    a5f6:	01 96       	adiw	r24, 0x01	; 1
    a5f8:	9c a3       	lds	r25, 0x5c
    a5fa:	8b a3       	lds	r24, 0x5b
    a5fc:	8b a1       	lds	r24, 0x4b
    a5fe:	9c a1       	lds	r25, 0x4c
    a600:	84 30       	cpi	r24, 0x04	; 4
    a602:	91 05       	cpc	r25, r1
    a604:	14 f4       	brge	.+4      	; 0xa60a <main+0x6936>
    a606:	0c 94 5e 47 	jmp	0x8ebc	; 0x8ebc <main+0x51e8>
    a60a:	0c 94 89 67 	jmp	0xcf12	; 0xcf12 <main+0x923e>
					}
				}					
			}
		}
	}
	goto hotspot;
    a60e:	0c 94 5d 3b 	jmp	0x76ba	; 0x76ba <main+0x39e6>
			}
		}
	}
	else
	{
		if(compass==6)
    a612:	8b 81       	ldd	r24, Y+3	; 0x03
    a614:	9c 81       	ldd	r25, Y+4	; 0x04
    a616:	86 30       	cpi	r24, 0x06	; 6
    a618:	91 05       	cpc	r25, r1
    a61a:	11 f0       	breq	.+4      	; 0xa620 <main+0x694c>
    a61c:	0c 94 d7 5b 	jmp	0xb7ae	; 0xb7ae <main+0x7ada>
		{
			for(int i=0;i<4;i++)
    a620:	1e a2       	lds	r17, 0x9e
    a622:	1d a2       	lds	r17, 0x9d
    a624:	0c 94 cc 5b 	jmp	0xb798	; 0xb798 <main+0x7ac4>
			{
				if(coor[1]<origin2[boxnumber][i][1] && coor[0]>origin2[boxnumber][i][0])
    a628:	20 91 a8 04 	lds	r18, 0x04A8
    a62c:	30 91 a9 04 	lds	r19, 0x04A9
    a630:	ae 01       	movw	r20, r28
    a632:	4d 5f       	subi	r20, 0xFD	; 253
    a634:	5a 4f       	sbci	r21, 0xFA	; 250
    a636:	8d 81       	ldd	r24, Y+5	; 0x05
    a638:	9e 81       	ldd	r25, Y+6	; 0x06
    a63a:	bc 01       	movw	r22, r24
    a63c:	66 0f       	add	r22, r22
    a63e:	77 1f       	adc	r23, r23
    a640:	66 0f       	add	r22, r22
    a642:	77 1f       	adc	r23, r23
    a644:	8d a1       	lds	r24, 0x4d
    a646:	9e a1       	lds	r25, 0x4e
    a648:	86 0f       	add	r24, r22
    a64a:	97 1f       	adc	r25, r23
    a64c:	88 0f       	add	r24, r24
    a64e:	99 1f       	adc	r25, r25
    a650:	88 0f       	add	r24, r24
    a652:	99 1f       	adc	r25, r25
    a654:	84 0f       	add	r24, r20
    a656:	95 1f       	adc	r25, r21
    a658:	02 96       	adiw	r24, 0x02	; 2
    a65a:	fc 01       	movw	r30, r24
    a65c:	80 81       	ld	r24, Z
    a65e:	91 81       	ldd	r25, Z+1	; 0x01
    a660:	28 17       	cp	r18, r24
    a662:	39 07       	cpc	r19, r25
    a664:	0c f0       	brlt	.+2      	; 0xa668 <main+0x6994>
    a666:	c5 c2       	rjmp	.+1418   	; 0xabf2 <main+0x6f1e>
    a668:	20 91 a6 04 	lds	r18, 0x04A6
    a66c:	30 91 a7 04 	lds	r19, 0x04A7
    a670:	ae 01       	movw	r20, r28
    a672:	4d 5f       	subi	r20, 0xFD	; 253
    a674:	5a 4f       	sbci	r21, 0xFA	; 250
    a676:	8d 81       	ldd	r24, Y+5	; 0x05
    a678:	9e 81       	ldd	r25, Y+6	; 0x06
    a67a:	bc 01       	movw	r22, r24
    a67c:	66 0f       	add	r22, r22
    a67e:	77 1f       	adc	r23, r23
    a680:	66 0f       	add	r22, r22
    a682:	77 1f       	adc	r23, r23
    a684:	8d a1       	lds	r24, 0x4d
    a686:	9e a1       	lds	r25, 0x4e
    a688:	86 0f       	add	r24, r22
    a68a:	97 1f       	adc	r25, r23
    a68c:	88 0f       	add	r24, r24
    a68e:	99 1f       	adc	r25, r25
    a690:	88 0f       	add	r24, r24
    a692:	99 1f       	adc	r25, r25
    a694:	84 0f       	add	r24, r20
    a696:	95 1f       	adc	r25, r21
    a698:	fc 01       	movw	r30, r24
    a69a:	80 81       	ld	r24, Z
    a69c:	91 81       	ldd	r25, Z+1	; 0x01
    a69e:	82 17       	cp	r24, r18
    a6a0:	93 07       	cpc	r25, r19
    a6a2:	0c f0       	brlt	.+2      	; 0xa6a6 <main+0x69d2>
    a6a4:	a6 c2       	rjmp	.+1356   	; 0xabf2 <main+0x6f1e>
				{
					left_degrees(135);
    a6a6:	87 e8       	ldi	r24, 0x87	; 135
    a6a8:	90 e0       	ldi	r25, 0x00	; 0
    a6aa:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
					back_mm(65);
    a6ae:	81 e4       	ldi	r24, 0x41	; 65
    a6b0:	90 e0       	ldi	r25, 0x00	; 0
    a6b2:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
					matrix2();
    a6b6:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
						if(summ1[recur+1]>10)
    a6ba:	8f 81       	ldd	r24, Y+7	; 0x07
    a6bc:	98 85       	ldd	r25, Y+8	; 0x08
    a6be:	01 96       	adiw	r24, 0x01	; 1
    a6c0:	9e 01       	movw	r18, r28
    a6c2:	25 54       	subi	r18, 0x45	; 69
    a6c4:	39 4f       	sbci	r19, 0xF9	; 249
    a6c6:	88 0f       	add	r24, r24
    a6c8:	99 1f       	adc	r25, r25
    a6ca:	82 0f       	add	r24, r18
    a6cc:	93 1f       	adc	r25, r19
    a6ce:	fc 01       	movw	r30, r24
    a6d0:	80 81       	ld	r24, Z
    a6d2:	91 81       	ldd	r25, Z+1	; 0x01
    a6d4:	8b 30       	cpi	r24, 0x0B	; 11
    a6d6:	91 05       	cpc	r25, r1
    a6d8:	0c f4       	brge	.+2      	; 0xa6dc <main+0x6a08>
    a6da:	d6 c0       	rjmp	.+428    	; 0xa888 <main+0x6bb4>
						{
							buzzer_on();
    a6dc:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    a6e0:	9e 01       	movw	r18, r28
    a6e2:	23 5e       	subi	r18, 0xE3	; 227
    a6e4:	3c 4f       	sbci	r19, 0xFC	; 252
    a6e6:	80 e0       	ldi	r24, 0x00	; 0
    a6e8:	90 e0       	ldi	r25, 0x00	; 0
    a6ea:	aa e7       	ldi	r26, 0x7A	; 122
    a6ec:	b4 e4       	ldi	r27, 0x44	; 68
    a6ee:	f9 01       	movw	r30, r18
    a6f0:	80 83       	st	Z, r24
    a6f2:	91 83       	std	Z+1, r25	; 0x01
    a6f4:	a2 83       	std	Z+2, r26	; 0x02
    a6f6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    a6f8:	8e 01       	movw	r16, r28
    a6fa:	0f 5d       	subi	r16, 0xDF	; 223
    a6fc:	1c 4f       	sbci	r17, 0xFC	; 252
    a6fe:	ce 01       	movw	r24, r28
    a700:	83 5e       	subi	r24, 0xE3	; 227
    a702:	9c 4f       	sbci	r25, 0xFC	; 252
    a704:	fc 01       	movw	r30, r24
    a706:	60 81       	ld	r22, Z
    a708:	71 81       	ldd	r23, Z+1	; 0x01
    a70a:	82 81       	ldd	r24, Z+2	; 0x02
    a70c:	93 81       	ldd	r25, Z+3	; 0x03
    a70e:	26 e6       	ldi	r18, 0x66	; 102
    a710:	36 e6       	ldi	r19, 0x66	; 102
    a712:	46 e6       	ldi	r20, 0x66	; 102
    a714:	55 e4       	ldi	r21, 0x45	; 69
    a716:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a71a:	dc 01       	movw	r26, r24
    a71c:	cb 01       	movw	r24, r22
    a71e:	f8 01       	movw	r30, r16
    a720:	80 83       	st	Z, r24
    a722:	91 83       	std	Z+1, r25	; 0x01
    a724:	a2 83       	std	Z+2, r26	; 0x02
    a726:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    a728:	ce 01       	movw	r24, r28
    a72a:	8f 5d       	subi	r24, 0xDF	; 223
    a72c:	9c 4f       	sbci	r25, 0xFC	; 252
    a72e:	11 e0       	ldi	r17, 0x01	; 1
    a730:	fc 01       	movw	r30, r24
    a732:	60 81       	ld	r22, Z
    a734:	71 81       	ldd	r23, Z+1	; 0x01
    a736:	82 81       	ldd	r24, Z+2	; 0x02
    a738:	93 81       	ldd	r25, Z+3	; 0x03
    a73a:	20 e0       	ldi	r18, 0x00	; 0
    a73c:	30 e0       	ldi	r19, 0x00	; 0
    a73e:	40 e8       	ldi	r20, 0x80	; 128
    a740:	5f e3       	ldi	r21, 0x3F	; 63
    a742:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    a746:	88 23       	and	r24, r24
    a748:	0c f0       	brlt	.+2      	; 0xa74c <main+0x6a78>
    a74a:	10 e0       	ldi	r17, 0x00	; 0
    a74c:	11 23       	and	r17, r17
    a74e:	49 f0       	breq	.+18     	; 0xa762 <main+0x6a8e>
		__ticks = 1;
    a750:	ce 01       	movw	r24, r28
    a752:	8b 5d       	subi	r24, 0xDB	; 219
    a754:	9c 4f       	sbci	r25, 0xFC	; 252
    a756:	21 e0       	ldi	r18, 0x01	; 1
    a758:	30 e0       	ldi	r19, 0x00	; 0
    a75a:	fc 01       	movw	r30, r24
    a75c:	31 83       	std	Z+1, r19	; 0x01
    a75e:	20 83       	st	Z, r18
    a760:	74 c0       	rjmp	.+232    	; 0xa84a <main+0x6b76>
	else if (__tmp > 65535)
    a762:	ce 01       	movw	r24, r28
    a764:	8f 5d       	subi	r24, 0xDF	; 223
    a766:	9c 4f       	sbci	r25, 0xFC	; 252
    a768:	11 e0       	ldi	r17, 0x01	; 1
    a76a:	fc 01       	movw	r30, r24
    a76c:	60 81       	ld	r22, Z
    a76e:	71 81       	ldd	r23, Z+1	; 0x01
    a770:	82 81       	ldd	r24, Z+2	; 0x02
    a772:	93 81       	ldd	r25, Z+3	; 0x03
    a774:	20 e0       	ldi	r18, 0x00	; 0
    a776:	3f ef       	ldi	r19, 0xFF	; 255
    a778:	4f e7       	ldi	r20, 0x7F	; 127
    a77a:	57 e4       	ldi	r21, 0x47	; 71
    a77c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    a780:	18 16       	cp	r1, r24
    a782:	0c f0       	brlt	.+2      	; 0xa786 <main+0x6ab2>
    a784:	10 e0       	ldi	r17, 0x00	; 0
    a786:	11 23       	and	r17, r17
    a788:	09 f4       	brne	.+2      	; 0xa78c <main+0x6ab8>
    a78a:	4d c0       	rjmp	.+154    	; 0xa826 <main+0x6b52>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a78c:	ce 01       	movw	r24, r28
    a78e:	83 5e       	subi	r24, 0xE3	; 227
    a790:	9c 4f       	sbci	r25, 0xFC	; 252
    a792:	fc 01       	movw	r30, r24
    a794:	60 81       	ld	r22, Z
    a796:	71 81       	ldd	r23, Z+1	; 0x01
    a798:	82 81       	ldd	r24, Z+2	; 0x02
    a79a:	93 81       	ldd	r25, Z+3	; 0x03
    a79c:	20 e0       	ldi	r18, 0x00	; 0
    a79e:	30 e0       	ldi	r19, 0x00	; 0
    a7a0:	40 e2       	ldi	r20, 0x20	; 32
    a7a2:	51 e4       	ldi	r21, 0x41	; 65
    a7a4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a7a8:	dc 01       	movw	r26, r24
    a7aa:	cb 01       	movw	r24, r22
    a7ac:	8e 01       	movw	r16, r28
    a7ae:	0b 5d       	subi	r16, 0xDB	; 219
    a7b0:	1c 4f       	sbci	r17, 0xFC	; 252
    a7b2:	bc 01       	movw	r22, r24
    a7b4:	cd 01       	movw	r24, r26
    a7b6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a7ba:	dc 01       	movw	r26, r24
    a7bc:	cb 01       	movw	r24, r22
    a7be:	f8 01       	movw	r30, r16
    a7c0:	91 83       	std	Z+1, r25	; 0x01
    a7c2:	80 83       	st	Z, r24
    a7c4:	27 c0       	rjmp	.+78     	; 0xa814 <main+0x6b40>
    a7c6:	ce 01       	movw	r24, r28
    a7c8:	89 5d       	subi	r24, 0xD9	; 217
    a7ca:	9c 4f       	sbci	r25, 0xFC	; 252
    a7cc:	20 e7       	ldi	r18, 0x70	; 112
    a7ce:	31 e0       	ldi	r19, 0x01	; 1
    a7d0:	fc 01       	movw	r30, r24
    a7d2:	31 83       	std	Z+1, r19	; 0x01
    a7d4:	20 83       	st	Z, r18
    a7d6:	ce 01       	movw	r24, r28
    a7d8:	89 5d       	subi	r24, 0xD9	; 217
    a7da:	9c 4f       	sbci	r25, 0xFC	; 252
    a7dc:	fc 01       	movw	r30, r24
    a7de:	80 81       	ld	r24, Z
    a7e0:	91 81       	ldd	r25, Z+1	; 0x01
    a7e2:	8c 01       	movw	r16, r24
    a7e4:	c8 01       	movw	r24, r16
    a7e6:	01 97       	sbiw	r24, 0x01	; 1
    a7e8:	f1 f7       	brne	.-4      	; 0xa7e6 <main+0x6b12>
    a7ea:	8c 01       	movw	r16, r24
    a7ec:	ce 01       	movw	r24, r28
    a7ee:	89 5d       	subi	r24, 0xD9	; 217
    a7f0:	9c 4f       	sbci	r25, 0xFC	; 252
    a7f2:	fc 01       	movw	r30, r24
    a7f4:	11 83       	std	Z+1, r17	; 0x01
    a7f6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a7f8:	ce 01       	movw	r24, r28
    a7fa:	8b 5d       	subi	r24, 0xDB	; 219
    a7fc:	9c 4f       	sbci	r25, 0xFC	; 252
    a7fe:	9e 01       	movw	r18, r28
    a800:	2b 5d       	subi	r18, 0xDB	; 219
    a802:	3c 4f       	sbci	r19, 0xFC	; 252
    a804:	f9 01       	movw	r30, r18
    a806:	20 81       	ld	r18, Z
    a808:	31 81       	ldd	r19, Z+1	; 0x01
    a80a:	21 50       	subi	r18, 0x01	; 1
    a80c:	30 40       	sbci	r19, 0x00	; 0
    a80e:	fc 01       	movw	r30, r24
    a810:	31 83       	std	Z+1, r19	; 0x01
    a812:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a814:	ce 01       	movw	r24, r28
    a816:	8b 5d       	subi	r24, 0xDB	; 219
    a818:	9c 4f       	sbci	r25, 0xFC	; 252
    a81a:	fc 01       	movw	r30, r24
    a81c:	80 81       	ld	r24, Z
    a81e:	91 81       	ldd	r25, Z+1	; 0x01
    a820:	00 97       	sbiw	r24, 0x00	; 0
    a822:	89 f6       	brne	.-94     	; 0xa7c6 <main+0x6af2>
    a824:	2f c0       	rjmp	.+94     	; 0xa884 <main+0x6bb0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a826:	8e 01       	movw	r16, r28
    a828:	0b 5d       	subi	r16, 0xDB	; 219
    a82a:	1c 4f       	sbci	r17, 0xFC	; 252
    a82c:	ce 01       	movw	r24, r28
    a82e:	8f 5d       	subi	r24, 0xDF	; 223
    a830:	9c 4f       	sbci	r25, 0xFC	; 252
    a832:	fc 01       	movw	r30, r24
    a834:	60 81       	ld	r22, Z
    a836:	71 81       	ldd	r23, Z+1	; 0x01
    a838:	82 81       	ldd	r24, Z+2	; 0x02
    a83a:	93 81       	ldd	r25, Z+3	; 0x03
    a83c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a840:	dc 01       	movw	r26, r24
    a842:	cb 01       	movw	r24, r22
    a844:	f8 01       	movw	r30, r16
    a846:	91 83       	std	Z+1, r25	; 0x01
    a848:	80 83       	st	Z, r24
    a84a:	ce 01       	movw	r24, r28
    a84c:	87 5d       	subi	r24, 0xD7	; 215
    a84e:	9c 4f       	sbci	r25, 0xFC	; 252
    a850:	9e 01       	movw	r18, r28
    a852:	2b 5d       	subi	r18, 0xDB	; 219
    a854:	3c 4f       	sbci	r19, 0xFC	; 252
    a856:	f9 01       	movw	r30, r18
    a858:	20 81       	ld	r18, Z
    a85a:	31 81       	ldd	r19, Z+1	; 0x01
    a85c:	fc 01       	movw	r30, r24
    a85e:	31 83       	std	Z+1, r19	; 0x01
    a860:	20 83       	st	Z, r18
    a862:	ce 01       	movw	r24, r28
    a864:	87 5d       	subi	r24, 0xD7	; 215
    a866:	9c 4f       	sbci	r25, 0xFC	; 252
    a868:	fc 01       	movw	r30, r24
    a86a:	80 81       	ld	r24, Z
    a86c:	91 81       	ldd	r25, Z+1	; 0x01
    a86e:	8c 01       	movw	r16, r24
    a870:	c8 01       	movw	r24, r16
    a872:	01 97       	sbiw	r24, 0x01	; 1
    a874:	f1 f7       	brne	.-4      	; 0xa872 <main+0x6b9e>
    a876:	8c 01       	movw	r16, r24
    a878:	ce 01       	movw	r24, r28
    a87a:	87 5d       	subi	r24, 0xD7	; 215
    a87c:	9c 4f       	sbci	r25, 0xFC	; 252
    a87e:	fc 01       	movw	r30, r24
    a880:	11 83       	std	Z+1, r17	; 0x01
    a882:	00 83       	st	Z, r16
							_delay_ms(1000);
							buzzer_off();
    a884:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
						}
					forward_mm(75);
    a888:	8b e4       	ldi	r24, 0x4B	; 75
    a88a:	90 e0       	ldi	r25, 0x00	; 0
    a88c:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    a890:	9e 01       	movw	r18, r28
    a892:	25 5d       	subi	r18, 0xD5	; 213
    a894:	3c 4f       	sbci	r19, 0xFC	; 252
    a896:	80 e0       	ldi	r24, 0x00	; 0
    a898:	90 e0       	ldi	r25, 0x00	; 0
    a89a:	a0 ef       	ldi	r26, 0xF0	; 240
    a89c:	b1 e4       	ldi	r27, 0x41	; 65
    a89e:	f9 01       	movw	r30, r18
    a8a0:	80 83       	st	Z, r24
    a8a2:	91 83       	std	Z+1, r25	; 0x01
    a8a4:	a2 83       	std	Z+2, r26	; 0x02
    a8a6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    a8a8:	8e 01       	movw	r16, r28
    a8aa:	01 5d       	subi	r16, 0xD1	; 209
    a8ac:	1c 4f       	sbci	r17, 0xFC	; 252
    a8ae:	ce 01       	movw	r24, r28
    a8b0:	85 5d       	subi	r24, 0xD5	; 213
    a8b2:	9c 4f       	sbci	r25, 0xFC	; 252
    a8b4:	fc 01       	movw	r30, r24
    a8b6:	60 81       	ld	r22, Z
    a8b8:	71 81       	ldd	r23, Z+1	; 0x01
    a8ba:	82 81       	ldd	r24, Z+2	; 0x02
    a8bc:	93 81       	ldd	r25, Z+3	; 0x03
    a8be:	26 e6       	ldi	r18, 0x66	; 102
    a8c0:	36 e6       	ldi	r19, 0x66	; 102
    a8c2:	46 e6       	ldi	r20, 0x66	; 102
    a8c4:	55 e4       	ldi	r21, 0x45	; 69
    a8c6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a8ca:	dc 01       	movw	r26, r24
    a8cc:	cb 01       	movw	r24, r22
    a8ce:	f8 01       	movw	r30, r16
    a8d0:	80 83       	st	Z, r24
    a8d2:	91 83       	std	Z+1, r25	; 0x01
    a8d4:	a2 83       	std	Z+2, r26	; 0x02
    a8d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    a8d8:	ce 01       	movw	r24, r28
    a8da:	81 5d       	subi	r24, 0xD1	; 209
    a8dc:	9c 4f       	sbci	r25, 0xFC	; 252
    a8de:	11 e0       	ldi	r17, 0x01	; 1
    a8e0:	fc 01       	movw	r30, r24
    a8e2:	60 81       	ld	r22, Z
    a8e4:	71 81       	ldd	r23, Z+1	; 0x01
    a8e6:	82 81       	ldd	r24, Z+2	; 0x02
    a8e8:	93 81       	ldd	r25, Z+3	; 0x03
    a8ea:	20 e0       	ldi	r18, 0x00	; 0
    a8ec:	30 e0       	ldi	r19, 0x00	; 0
    a8ee:	40 e8       	ldi	r20, 0x80	; 128
    a8f0:	5f e3       	ldi	r21, 0x3F	; 63
    a8f2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    a8f6:	88 23       	and	r24, r24
    a8f8:	0c f0       	brlt	.+2      	; 0xa8fc <main+0x6c28>
    a8fa:	10 e0       	ldi	r17, 0x00	; 0
    a8fc:	11 23       	and	r17, r17
    a8fe:	49 f0       	breq	.+18     	; 0xa912 <main+0x6c3e>
		__ticks = 1;
    a900:	ce 01       	movw	r24, r28
    a902:	8d 5c       	subi	r24, 0xCD	; 205
    a904:	9c 4f       	sbci	r25, 0xFC	; 252
    a906:	21 e0       	ldi	r18, 0x01	; 1
    a908:	30 e0       	ldi	r19, 0x00	; 0
    a90a:	fc 01       	movw	r30, r24
    a90c:	31 83       	std	Z+1, r19	; 0x01
    a90e:	20 83       	st	Z, r18
    a910:	74 c0       	rjmp	.+232    	; 0xa9fa <main+0x6d26>
	else if (__tmp > 65535)
    a912:	ce 01       	movw	r24, r28
    a914:	81 5d       	subi	r24, 0xD1	; 209
    a916:	9c 4f       	sbci	r25, 0xFC	; 252
    a918:	11 e0       	ldi	r17, 0x01	; 1
    a91a:	fc 01       	movw	r30, r24
    a91c:	60 81       	ld	r22, Z
    a91e:	71 81       	ldd	r23, Z+1	; 0x01
    a920:	82 81       	ldd	r24, Z+2	; 0x02
    a922:	93 81       	ldd	r25, Z+3	; 0x03
    a924:	20 e0       	ldi	r18, 0x00	; 0
    a926:	3f ef       	ldi	r19, 0xFF	; 255
    a928:	4f e7       	ldi	r20, 0x7F	; 127
    a92a:	57 e4       	ldi	r21, 0x47	; 71
    a92c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    a930:	18 16       	cp	r1, r24
    a932:	0c f0       	brlt	.+2      	; 0xa936 <main+0x6c62>
    a934:	10 e0       	ldi	r17, 0x00	; 0
    a936:	11 23       	and	r17, r17
    a938:	09 f4       	brne	.+2      	; 0xa93c <main+0x6c68>
    a93a:	4d c0       	rjmp	.+154    	; 0xa9d6 <main+0x6d02>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a93c:	ce 01       	movw	r24, r28
    a93e:	85 5d       	subi	r24, 0xD5	; 213
    a940:	9c 4f       	sbci	r25, 0xFC	; 252
    a942:	fc 01       	movw	r30, r24
    a944:	60 81       	ld	r22, Z
    a946:	71 81       	ldd	r23, Z+1	; 0x01
    a948:	82 81       	ldd	r24, Z+2	; 0x02
    a94a:	93 81       	ldd	r25, Z+3	; 0x03
    a94c:	20 e0       	ldi	r18, 0x00	; 0
    a94e:	30 e0       	ldi	r19, 0x00	; 0
    a950:	40 e2       	ldi	r20, 0x20	; 32
    a952:	51 e4       	ldi	r21, 0x41	; 65
    a954:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    a958:	dc 01       	movw	r26, r24
    a95a:	cb 01       	movw	r24, r22
    a95c:	8e 01       	movw	r16, r28
    a95e:	0d 5c       	subi	r16, 0xCD	; 205
    a960:	1c 4f       	sbci	r17, 0xFC	; 252
    a962:	bc 01       	movw	r22, r24
    a964:	cd 01       	movw	r24, r26
    a966:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a96a:	dc 01       	movw	r26, r24
    a96c:	cb 01       	movw	r24, r22
    a96e:	f8 01       	movw	r30, r16
    a970:	91 83       	std	Z+1, r25	; 0x01
    a972:	80 83       	st	Z, r24
    a974:	27 c0       	rjmp	.+78     	; 0xa9c4 <main+0x6cf0>
    a976:	ce 01       	movw	r24, r28
    a978:	8b 5c       	subi	r24, 0xCB	; 203
    a97a:	9c 4f       	sbci	r25, 0xFC	; 252
    a97c:	20 e7       	ldi	r18, 0x70	; 112
    a97e:	31 e0       	ldi	r19, 0x01	; 1
    a980:	fc 01       	movw	r30, r24
    a982:	31 83       	std	Z+1, r19	; 0x01
    a984:	20 83       	st	Z, r18
    a986:	ce 01       	movw	r24, r28
    a988:	8b 5c       	subi	r24, 0xCB	; 203
    a98a:	9c 4f       	sbci	r25, 0xFC	; 252
    a98c:	fc 01       	movw	r30, r24
    a98e:	80 81       	ld	r24, Z
    a990:	91 81       	ldd	r25, Z+1	; 0x01
    a992:	8c 01       	movw	r16, r24
    a994:	c8 01       	movw	r24, r16
    a996:	01 97       	sbiw	r24, 0x01	; 1
    a998:	f1 f7       	brne	.-4      	; 0xa996 <main+0x6cc2>
    a99a:	8c 01       	movw	r16, r24
    a99c:	ce 01       	movw	r24, r28
    a99e:	8b 5c       	subi	r24, 0xCB	; 203
    a9a0:	9c 4f       	sbci	r25, 0xFC	; 252
    a9a2:	fc 01       	movw	r30, r24
    a9a4:	11 83       	std	Z+1, r17	; 0x01
    a9a6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a9a8:	ce 01       	movw	r24, r28
    a9aa:	8d 5c       	subi	r24, 0xCD	; 205
    a9ac:	9c 4f       	sbci	r25, 0xFC	; 252
    a9ae:	9e 01       	movw	r18, r28
    a9b0:	2d 5c       	subi	r18, 0xCD	; 205
    a9b2:	3c 4f       	sbci	r19, 0xFC	; 252
    a9b4:	f9 01       	movw	r30, r18
    a9b6:	20 81       	ld	r18, Z
    a9b8:	31 81       	ldd	r19, Z+1	; 0x01
    a9ba:	21 50       	subi	r18, 0x01	; 1
    a9bc:	30 40       	sbci	r19, 0x00	; 0
    a9be:	fc 01       	movw	r30, r24
    a9c0:	31 83       	std	Z+1, r19	; 0x01
    a9c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a9c4:	ce 01       	movw	r24, r28
    a9c6:	8d 5c       	subi	r24, 0xCD	; 205
    a9c8:	9c 4f       	sbci	r25, 0xFC	; 252
    a9ca:	fc 01       	movw	r30, r24
    a9cc:	80 81       	ld	r24, Z
    a9ce:	91 81       	ldd	r25, Z+1	; 0x01
    a9d0:	00 97       	sbiw	r24, 0x00	; 0
    a9d2:	89 f6       	brne	.-94     	; 0xa976 <main+0x6ca2>
    a9d4:	2f c0       	rjmp	.+94     	; 0xaa34 <main+0x6d60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a9d6:	8e 01       	movw	r16, r28
    a9d8:	0d 5c       	subi	r16, 0xCD	; 205
    a9da:	1c 4f       	sbci	r17, 0xFC	; 252
    a9dc:	ce 01       	movw	r24, r28
    a9de:	81 5d       	subi	r24, 0xD1	; 209
    a9e0:	9c 4f       	sbci	r25, 0xFC	; 252
    a9e2:	fc 01       	movw	r30, r24
    a9e4:	60 81       	ld	r22, Z
    a9e6:	71 81       	ldd	r23, Z+1	; 0x01
    a9e8:	82 81       	ldd	r24, Z+2	; 0x02
    a9ea:	93 81       	ldd	r25, Z+3	; 0x03
    a9ec:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    a9f0:	dc 01       	movw	r26, r24
    a9f2:	cb 01       	movw	r24, r22
    a9f4:	f8 01       	movw	r30, r16
    a9f6:	91 83       	std	Z+1, r25	; 0x01
    a9f8:	80 83       	st	Z, r24
    a9fa:	ce 01       	movw	r24, r28
    a9fc:	89 5c       	subi	r24, 0xC9	; 201
    a9fe:	9c 4f       	sbci	r25, 0xFC	; 252
    aa00:	9e 01       	movw	r18, r28
    aa02:	2d 5c       	subi	r18, 0xCD	; 205
    aa04:	3c 4f       	sbci	r19, 0xFC	; 252
    aa06:	f9 01       	movw	r30, r18
    aa08:	20 81       	ld	r18, Z
    aa0a:	31 81       	ldd	r19, Z+1	; 0x01
    aa0c:	fc 01       	movw	r30, r24
    aa0e:	31 83       	std	Z+1, r19	; 0x01
    aa10:	20 83       	st	Z, r18
    aa12:	ce 01       	movw	r24, r28
    aa14:	89 5c       	subi	r24, 0xC9	; 201
    aa16:	9c 4f       	sbci	r25, 0xFC	; 252
    aa18:	fc 01       	movw	r30, r24
    aa1a:	80 81       	ld	r24, Z
    aa1c:	91 81       	ldd	r25, Z+1	; 0x01
    aa1e:	8c 01       	movw	r16, r24
    aa20:	c8 01       	movw	r24, r16
    aa22:	01 97       	sbiw	r24, 0x01	; 1
    aa24:	f1 f7       	brne	.-4      	; 0xaa22 <main+0x6d4e>
    aa26:	8c 01       	movw	r16, r24
    aa28:	ce 01       	movw	r24, r28
    aa2a:	89 5c       	subi	r24, 0xC9	; 201
    aa2c:	9c 4f       	sbci	r25, 0xFC	; 252
    aa2e:	fc 01       	movw	r30, r24
    aa30:	11 83       	std	Z+1, r17	; 0x01
    aa32:	00 83       	st	Z, r16
					_delay_ms(30);
					back_mm(10);
    aa34:	8a e0       	ldi	r24, 0x0A	; 10
    aa36:	90 e0       	ldi	r25, 0x00	; 0
    aa38:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    aa3c:	9e 01       	movw	r18, r28
    aa3e:	27 5c       	subi	r18, 0xC7	; 199
    aa40:	3c 4f       	sbci	r19, 0xFC	; 252
    aa42:	80 e0       	ldi	r24, 0x00	; 0
    aa44:	90 e0       	ldi	r25, 0x00	; 0
    aa46:	aa ef       	ldi	r26, 0xFA	; 250
    aa48:	b3 e4       	ldi	r27, 0x43	; 67
    aa4a:	f9 01       	movw	r30, r18
    aa4c:	80 83       	st	Z, r24
    aa4e:	91 83       	std	Z+1, r25	; 0x01
    aa50:	a2 83       	std	Z+2, r26	; 0x02
    aa52:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    aa54:	8e 01       	movw	r16, r28
    aa56:	03 5c       	subi	r16, 0xC3	; 195
    aa58:	1c 4f       	sbci	r17, 0xFC	; 252
    aa5a:	ce 01       	movw	r24, r28
    aa5c:	87 5c       	subi	r24, 0xC7	; 199
    aa5e:	9c 4f       	sbci	r25, 0xFC	; 252
    aa60:	fc 01       	movw	r30, r24
    aa62:	60 81       	ld	r22, Z
    aa64:	71 81       	ldd	r23, Z+1	; 0x01
    aa66:	82 81       	ldd	r24, Z+2	; 0x02
    aa68:	93 81       	ldd	r25, Z+3	; 0x03
    aa6a:	26 e6       	ldi	r18, 0x66	; 102
    aa6c:	36 e6       	ldi	r19, 0x66	; 102
    aa6e:	46 e6       	ldi	r20, 0x66	; 102
    aa70:	55 e4       	ldi	r21, 0x45	; 69
    aa72:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    aa76:	dc 01       	movw	r26, r24
    aa78:	cb 01       	movw	r24, r22
    aa7a:	f8 01       	movw	r30, r16
    aa7c:	80 83       	st	Z, r24
    aa7e:	91 83       	std	Z+1, r25	; 0x01
    aa80:	a2 83       	std	Z+2, r26	; 0x02
    aa82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    aa84:	ce 01       	movw	r24, r28
    aa86:	83 5c       	subi	r24, 0xC3	; 195
    aa88:	9c 4f       	sbci	r25, 0xFC	; 252
    aa8a:	11 e0       	ldi	r17, 0x01	; 1
    aa8c:	fc 01       	movw	r30, r24
    aa8e:	60 81       	ld	r22, Z
    aa90:	71 81       	ldd	r23, Z+1	; 0x01
    aa92:	82 81       	ldd	r24, Z+2	; 0x02
    aa94:	93 81       	ldd	r25, Z+3	; 0x03
    aa96:	20 e0       	ldi	r18, 0x00	; 0
    aa98:	30 e0       	ldi	r19, 0x00	; 0
    aa9a:	40 e8       	ldi	r20, 0x80	; 128
    aa9c:	5f e3       	ldi	r21, 0x3F	; 63
    aa9e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    aaa2:	88 23       	and	r24, r24
    aaa4:	0c f0       	brlt	.+2      	; 0xaaa8 <main+0x6dd4>
    aaa6:	10 e0       	ldi	r17, 0x00	; 0
    aaa8:	11 23       	and	r17, r17
    aaaa:	49 f0       	breq	.+18     	; 0xaabe <main+0x6dea>
		__ticks = 1;
    aaac:	ce 01       	movw	r24, r28
    aaae:	8f 5b       	subi	r24, 0xBF	; 191
    aab0:	9c 4f       	sbci	r25, 0xFC	; 252
    aab2:	21 e0       	ldi	r18, 0x01	; 1
    aab4:	30 e0       	ldi	r19, 0x00	; 0
    aab6:	fc 01       	movw	r30, r24
    aab8:	31 83       	std	Z+1, r19	; 0x01
    aaba:	20 83       	st	Z, r18
    aabc:	74 c0       	rjmp	.+232    	; 0xaba6 <main+0x6ed2>
	else if (__tmp > 65535)
    aabe:	ce 01       	movw	r24, r28
    aac0:	83 5c       	subi	r24, 0xC3	; 195
    aac2:	9c 4f       	sbci	r25, 0xFC	; 252
    aac4:	11 e0       	ldi	r17, 0x01	; 1
    aac6:	fc 01       	movw	r30, r24
    aac8:	60 81       	ld	r22, Z
    aaca:	71 81       	ldd	r23, Z+1	; 0x01
    aacc:	82 81       	ldd	r24, Z+2	; 0x02
    aace:	93 81       	ldd	r25, Z+3	; 0x03
    aad0:	20 e0       	ldi	r18, 0x00	; 0
    aad2:	3f ef       	ldi	r19, 0xFF	; 255
    aad4:	4f e7       	ldi	r20, 0x7F	; 127
    aad6:	57 e4       	ldi	r21, 0x47	; 71
    aad8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    aadc:	18 16       	cp	r1, r24
    aade:	0c f0       	brlt	.+2      	; 0xaae2 <main+0x6e0e>
    aae0:	10 e0       	ldi	r17, 0x00	; 0
    aae2:	11 23       	and	r17, r17
    aae4:	09 f4       	brne	.+2      	; 0xaae8 <main+0x6e14>
    aae6:	4d c0       	rjmp	.+154    	; 0xab82 <main+0x6eae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    aae8:	ce 01       	movw	r24, r28
    aaea:	87 5c       	subi	r24, 0xC7	; 199
    aaec:	9c 4f       	sbci	r25, 0xFC	; 252
    aaee:	fc 01       	movw	r30, r24
    aaf0:	60 81       	ld	r22, Z
    aaf2:	71 81       	ldd	r23, Z+1	; 0x01
    aaf4:	82 81       	ldd	r24, Z+2	; 0x02
    aaf6:	93 81       	ldd	r25, Z+3	; 0x03
    aaf8:	20 e0       	ldi	r18, 0x00	; 0
    aafa:	30 e0       	ldi	r19, 0x00	; 0
    aafc:	40 e2       	ldi	r20, 0x20	; 32
    aafe:	51 e4       	ldi	r21, 0x41	; 65
    ab00:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ab04:	dc 01       	movw	r26, r24
    ab06:	cb 01       	movw	r24, r22
    ab08:	8e 01       	movw	r16, r28
    ab0a:	0f 5b       	subi	r16, 0xBF	; 191
    ab0c:	1c 4f       	sbci	r17, 0xFC	; 252
    ab0e:	bc 01       	movw	r22, r24
    ab10:	cd 01       	movw	r24, r26
    ab12:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ab16:	dc 01       	movw	r26, r24
    ab18:	cb 01       	movw	r24, r22
    ab1a:	f8 01       	movw	r30, r16
    ab1c:	91 83       	std	Z+1, r25	; 0x01
    ab1e:	80 83       	st	Z, r24
    ab20:	27 c0       	rjmp	.+78     	; 0xab70 <main+0x6e9c>
    ab22:	ce 01       	movw	r24, r28
    ab24:	8d 5b       	subi	r24, 0xBD	; 189
    ab26:	9c 4f       	sbci	r25, 0xFC	; 252
    ab28:	20 e7       	ldi	r18, 0x70	; 112
    ab2a:	31 e0       	ldi	r19, 0x01	; 1
    ab2c:	fc 01       	movw	r30, r24
    ab2e:	31 83       	std	Z+1, r19	; 0x01
    ab30:	20 83       	st	Z, r18
    ab32:	ce 01       	movw	r24, r28
    ab34:	8d 5b       	subi	r24, 0xBD	; 189
    ab36:	9c 4f       	sbci	r25, 0xFC	; 252
    ab38:	fc 01       	movw	r30, r24
    ab3a:	80 81       	ld	r24, Z
    ab3c:	91 81       	ldd	r25, Z+1	; 0x01
    ab3e:	8c 01       	movw	r16, r24
    ab40:	c8 01       	movw	r24, r16
    ab42:	01 97       	sbiw	r24, 0x01	; 1
    ab44:	f1 f7       	brne	.-4      	; 0xab42 <main+0x6e6e>
    ab46:	8c 01       	movw	r16, r24
    ab48:	ce 01       	movw	r24, r28
    ab4a:	8d 5b       	subi	r24, 0xBD	; 189
    ab4c:	9c 4f       	sbci	r25, 0xFC	; 252
    ab4e:	fc 01       	movw	r30, r24
    ab50:	11 83       	std	Z+1, r17	; 0x01
    ab52:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ab54:	ce 01       	movw	r24, r28
    ab56:	8f 5b       	subi	r24, 0xBF	; 191
    ab58:	9c 4f       	sbci	r25, 0xFC	; 252
    ab5a:	9e 01       	movw	r18, r28
    ab5c:	2f 5b       	subi	r18, 0xBF	; 191
    ab5e:	3c 4f       	sbci	r19, 0xFC	; 252
    ab60:	f9 01       	movw	r30, r18
    ab62:	20 81       	ld	r18, Z
    ab64:	31 81       	ldd	r19, Z+1	; 0x01
    ab66:	21 50       	subi	r18, 0x01	; 1
    ab68:	30 40       	sbci	r19, 0x00	; 0
    ab6a:	fc 01       	movw	r30, r24
    ab6c:	31 83       	std	Z+1, r19	; 0x01
    ab6e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    ab70:	ce 01       	movw	r24, r28
    ab72:	8f 5b       	subi	r24, 0xBF	; 191
    ab74:	9c 4f       	sbci	r25, 0xFC	; 252
    ab76:	fc 01       	movw	r30, r24
    ab78:	80 81       	ld	r24, Z
    ab7a:	91 81       	ldd	r25, Z+1	; 0x01
    ab7c:	00 97       	sbiw	r24, 0x00	; 0
    ab7e:	89 f6       	brne	.-94     	; 0xab22 <main+0x6e4e>
    ab80:	2f c0       	rjmp	.+94     	; 0xabe0 <main+0x6f0c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    ab82:	8e 01       	movw	r16, r28
    ab84:	0f 5b       	subi	r16, 0xBF	; 191
    ab86:	1c 4f       	sbci	r17, 0xFC	; 252
    ab88:	ce 01       	movw	r24, r28
    ab8a:	83 5c       	subi	r24, 0xC3	; 195
    ab8c:	9c 4f       	sbci	r25, 0xFC	; 252
    ab8e:	fc 01       	movw	r30, r24
    ab90:	60 81       	ld	r22, Z
    ab92:	71 81       	ldd	r23, Z+1	; 0x01
    ab94:	82 81       	ldd	r24, Z+2	; 0x02
    ab96:	93 81       	ldd	r25, Z+3	; 0x03
    ab98:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ab9c:	dc 01       	movw	r26, r24
    ab9e:	cb 01       	movw	r24, r22
    aba0:	f8 01       	movw	r30, r16
    aba2:	91 83       	std	Z+1, r25	; 0x01
    aba4:	80 83       	st	Z, r24
    aba6:	ce 01       	movw	r24, r28
    aba8:	8b 5b       	subi	r24, 0xBB	; 187
    abaa:	9c 4f       	sbci	r25, 0xFC	; 252
    abac:	9e 01       	movw	r18, r28
    abae:	2f 5b       	subi	r18, 0xBF	; 191
    abb0:	3c 4f       	sbci	r19, 0xFC	; 252
    abb2:	f9 01       	movw	r30, r18
    abb4:	20 81       	ld	r18, Z
    abb6:	31 81       	ldd	r19, Z+1	; 0x01
    abb8:	fc 01       	movw	r30, r24
    abba:	31 83       	std	Z+1, r19	; 0x01
    abbc:	20 83       	st	Z, r18
    abbe:	ce 01       	movw	r24, r28
    abc0:	8b 5b       	subi	r24, 0xBB	; 187
    abc2:	9c 4f       	sbci	r25, 0xFC	; 252
    abc4:	fc 01       	movw	r30, r24
    abc6:	80 81       	ld	r24, Z
    abc8:	91 81       	ldd	r25, Z+1	; 0x01
    abca:	8c 01       	movw	r16, r24
    abcc:	c8 01       	movw	r24, r16
    abce:	01 97       	sbiw	r24, 0x01	; 1
    abd0:	f1 f7       	brne	.-4      	; 0xabce <main+0x6efa>
    abd2:	8c 01       	movw	r16, r24
    abd4:	ce 01       	movw	r24, r28
    abd6:	8b 5b       	subi	r24, 0xBB	; 187
    abd8:	9c 4f       	sbci	r25, 0xFC	; 252
    abda:	fc 01       	movw	r30, r24
    abdc:	11 83       	std	Z+1, r17	; 0x01
    abde:	00 83       	st	Z, r16
					_delay_ms(500);
					left_degrees(40);
    abe0:	88 e2       	ldi	r24, 0x28	; 40
    abe2:	90 e0       	ldi	r25, 0x00	; 0
    abe4:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
					compass=7;
    abe8:	87 e0       	ldi	r24, 0x07	; 7
    abea:	90 e0       	ldi	r25, 0x00	; 0
    abec:	9c 83       	std	Y+4, r25	; 0x04
    abee:	8b 83       	std	Y+3, r24	; 0x03
					break;
    abf0:	dc c5       	rjmp	.+3000   	; 0xb7aa <main+0x7ad6>
				}
				if(coor[1]>origin2[boxnumber][i][1] && coor[0]>origin2[boxnumber][i][0])
    abf2:	20 91 a8 04 	lds	r18, 0x04A8
    abf6:	30 91 a9 04 	lds	r19, 0x04A9
    abfa:	ae 01       	movw	r20, r28
    abfc:	4d 5f       	subi	r20, 0xFD	; 253
    abfe:	5a 4f       	sbci	r21, 0xFA	; 250
    ac00:	8d 81       	ldd	r24, Y+5	; 0x05
    ac02:	9e 81       	ldd	r25, Y+6	; 0x06
    ac04:	bc 01       	movw	r22, r24
    ac06:	66 0f       	add	r22, r22
    ac08:	77 1f       	adc	r23, r23
    ac0a:	66 0f       	add	r22, r22
    ac0c:	77 1f       	adc	r23, r23
    ac0e:	8d a1       	lds	r24, 0x4d
    ac10:	9e a1       	lds	r25, 0x4e
    ac12:	86 0f       	add	r24, r22
    ac14:	97 1f       	adc	r25, r23
    ac16:	88 0f       	add	r24, r24
    ac18:	99 1f       	adc	r25, r25
    ac1a:	88 0f       	add	r24, r24
    ac1c:	99 1f       	adc	r25, r25
    ac1e:	84 0f       	add	r24, r20
    ac20:	95 1f       	adc	r25, r21
    ac22:	02 96       	adiw	r24, 0x02	; 2
    ac24:	fc 01       	movw	r30, r24
    ac26:	80 81       	ld	r24, Z
    ac28:	91 81       	ldd	r25, Z+1	; 0x01
    ac2a:	82 17       	cp	r24, r18
    ac2c:	93 07       	cpc	r25, r19
    ac2e:	0c f0       	brlt	.+2      	; 0xac32 <main+0x6f5e>
    ac30:	c5 c2       	rjmp	.+1418   	; 0xb1bc <main+0x74e8>
    ac32:	20 91 a6 04 	lds	r18, 0x04A6
    ac36:	30 91 a7 04 	lds	r19, 0x04A7
    ac3a:	ae 01       	movw	r20, r28
    ac3c:	4d 5f       	subi	r20, 0xFD	; 253
    ac3e:	5a 4f       	sbci	r21, 0xFA	; 250
    ac40:	8d 81       	ldd	r24, Y+5	; 0x05
    ac42:	9e 81       	ldd	r25, Y+6	; 0x06
    ac44:	bc 01       	movw	r22, r24
    ac46:	66 0f       	add	r22, r22
    ac48:	77 1f       	adc	r23, r23
    ac4a:	66 0f       	add	r22, r22
    ac4c:	77 1f       	adc	r23, r23
    ac4e:	8d a1       	lds	r24, 0x4d
    ac50:	9e a1       	lds	r25, 0x4e
    ac52:	86 0f       	add	r24, r22
    ac54:	97 1f       	adc	r25, r23
    ac56:	88 0f       	add	r24, r24
    ac58:	99 1f       	adc	r25, r25
    ac5a:	88 0f       	add	r24, r24
    ac5c:	99 1f       	adc	r25, r25
    ac5e:	84 0f       	add	r24, r20
    ac60:	95 1f       	adc	r25, r21
    ac62:	fc 01       	movw	r30, r24
    ac64:	80 81       	ld	r24, Z
    ac66:	91 81       	ldd	r25, Z+1	; 0x01
    ac68:	82 17       	cp	r24, r18
    ac6a:	93 07       	cpc	r25, r19
    ac6c:	0c f0       	brlt	.+2      	; 0xac70 <main+0x6f9c>
    ac6e:	a6 c2       	rjmp	.+1356   	; 0xb1bc <main+0x74e8>
				{
					right_degrees(135);
    ac70:	87 e8       	ldi	r24, 0x87	; 135
    ac72:	90 e0       	ldi	r25, 0x00	; 0
    ac74:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
					back_mm(65);
    ac78:	81 e4       	ldi	r24, 0x41	; 65
    ac7a:	90 e0       	ldi	r25, 0x00	; 0
    ac7c:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
					matrix2();
    ac80:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
						if(summ1[recur+1]>10)
    ac84:	8f 81       	ldd	r24, Y+7	; 0x07
    ac86:	98 85       	ldd	r25, Y+8	; 0x08
    ac88:	01 96       	adiw	r24, 0x01	; 1
    ac8a:	9e 01       	movw	r18, r28
    ac8c:	25 54       	subi	r18, 0x45	; 69
    ac8e:	39 4f       	sbci	r19, 0xF9	; 249
    ac90:	88 0f       	add	r24, r24
    ac92:	99 1f       	adc	r25, r25
    ac94:	82 0f       	add	r24, r18
    ac96:	93 1f       	adc	r25, r19
    ac98:	fc 01       	movw	r30, r24
    ac9a:	80 81       	ld	r24, Z
    ac9c:	91 81       	ldd	r25, Z+1	; 0x01
    ac9e:	8b 30       	cpi	r24, 0x0B	; 11
    aca0:	91 05       	cpc	r25, r1
    aca2:	0c f4       	brge	.+2      	; 0xaca6 <main+0x6fd2>
    aca4:	d6 c0       	rjmp	.+428    	; 0xae52 <main+0x717e>
						{
							buzzer_on();
    aca6:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    acaa:	9e 01       	movw	r18, r28
    acac:	29 5b       	subi	r18, 0xB9	; 185
    acae:	3c 4f       	sbci	r19, 0xFC	; 252
    acb0:	80 e0       	ldi	r24, 0x00	; 0
    acb2:	90 e0       	ldi	r25, 0x00	; 0
    acb4:	aa e7       	ldi	r26, 0x7A	; 122
    acb6:	b4 e4       	ldi	r27, 0x44	; 68
    acb8:	f9 01       	movw	r30, r18
    acba:	80 83       	st	Z, r24
    acbc:	91 83       	std	Z+1, r25	; 0x01
    acbe:	a2 83       	std	Z+2, r26	; 0x02
    acc0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    acc2:	8e 01       	movw	r16, r28
    acc4:	05 5b       	subi	r16, 0xB5	; 181
    acc6:	1c 4f       	sbci	r17, 0xFC	; 252
    acc8:	ce 01       	movw	r24, r28
    acca:	89 5b       	subi	r24, 0xB9	; 185
    accc:	9c 4f       	sbci	r25, 0xFC	; 252
    acce:	fc 01       	movw	r30, r24
    acd0:	60 81       	ld	r22, Z
    acd2:	71 81       	ldd	r23, Z+1	; 0x01
    acd4:	82 81       	ldd	r24, Z+2	; 0x02
    acd6:	93 81       	ldd	r25, Z+3	; 0x03
    acd8:	26 e6       	ldi	r18, 0x66	; 102
    acda:	36 e6       	ldi	r19, 0x66	; 102
    acdc:	46 e6       	ldi	r20, 0x66	; 102
    acde:	55 e4       	ldi	r21, 0x45	; 69
    ace0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ace4:	dc 01       	movw	r26, r24
    ace6:	cb 01       	movw	r24, r22
    ace8:	f8 01       	movw	r30, r16
    acea:	80 83       	st	Z, r24
    acec:	91 83       	std	Z+1, r25	; 0x01
    acee:	a2 83       	std	Z+2, r26	; 0x02
    acf0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    acf2:	ce 01       	movw	r24, r28
    acf4:	85 5b       	subi	r24, 0xB5	; 181
    acf6:	9c 4f       	sbci	r25, 0xFC	; 252
    acf8:	11 e0       	ldi	r17, 0x01	; 1
    acfa:	fc 01       	movw	r30, r24
    acfc:	60 81       	ld	r22, Z
    acfe:	71 81       	ldd	r23, Z+1	; 0x01
    ad00:	82 81       	ldd	r24, Z+2	; 0x02
    ad02:	93 81       	ldd	r25, Z+3	; 0x03
    ad04:	20 e0       	ldi	r18, 0x00	; 0
    ad06:	30 e0       	ldi	r19, 0x00	; 0
    ad08:	40 e8       	ldi	r20, 0x80	; 128
    ad0a:	5f e3       	ldi	r21, 0x3F	; 63
    ad0c:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    ad10:	88 23       	and	r24, r24
    ad12:	0c f0       	brlt	.+2      	; 0xad16 <main+0x7042>
    ad14:	10 e0       	ldi	r17, 0x00	; 0
    ad16:	11 23       	and	r17, r17
    ad18:	49 f0       	breq	.+18     	; 0xad2c <main+0x7058>
		__ticks = 1;
    ad1a:	ce 01       	movw	r24, r28
    ad1c:	81 5b       	subi	r24, 0xB1	; 177
    ad1e:	9c 4f       	sbci	r25, 0xFC	; 252
    ad20:	21 e0       	ldi	r18, 0x01	; 1
    ad22:	30 e0       	ldi	r19, 0x00	; 0
    ad24:	fc 01       	movw	r30, r24
    ad26:	31 83       	std	Z+1, r19	; 0x01
    ad28:	20 83       	st	Z, r18
    ad2a:	74 c0       	rjmp	.+232    	; 0xae14 <main+0x7140>
	else if (__tmp > 65535)
    ad2c:	ce 01       	movw	r24, r28
    ad2e:	85 5b       	subi	r24, 0xB5	; 181
    ad30:	9c 4f       	sbci	r25, 0xFC	; 252
    ad32:	11 e0       	ldi	r17, 0x01	; 1
    ad34:	fc 01       	movw	r30, r24
    ad36:	60 81       	ld	r22, Z
    ad38:	71 81       	ldd	r23, Z+1	; 0x01
    ad3a:	82 81       	ldd	r24, Z+2	; 0x02
    ad3c:	93 81       	ldd	r25, Z+3	; 0x03
    ad3e:	20 e0       	ldi	r18, 0x00	; 0
    ad40:	3f ef       	ldi	r19, 0xFF	; 255
    ad42:	4f e7       	ldi	r20, 0x7F	; 127
    ad44:	57 e4       	ldi	r21, 0x47	; 71
    ad46:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    ad4a:	18 16       	cp	r1, r24
    ad4c:	0c f0       	brlt	.+2      	; 0xad50 <main+0x707c>
    ad4e:	10 e0       	ldi	r17, 0x00	; 0
    ad50:	11 23       	and	r17, r17
    ad52:	09 f4       	brne	.+2      	; 0xad56 <main+0x7082>
    ad54:	4d c0       	rjmp	.+154    	; 0xadf0 <main+0x711c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    ad56:	ce 01       	movw	r24, r28
    ad58:	89 5b       	subi	r24, 0xB9	; 185
    ad5a:	9c 4f       	sbci	r25, 0xFC	; 252
    ad5c:	fc 01       	movw	r30, r24
    ad5e:	60 81       	ld	r22, Z
    ad60:	71 81       	ldd	r23, Z+1	; 0x01
    ad62:	82 81       	ldd	r24, Z+2	; 0x02
    ad64:	93 81       	ldd	r25, Z+3	; 0x03
    ad66:	20 e0       	ldi	r18, 0x00	; 0
    ad68:	30 e0       	ldi	r19, 0x00	; 0
    ad6a:	40 e2       	ldi	r20, 0x20	; 32
    ad6c:	51 e4       	ldi	r21, 0x41	; 65
    ad6e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ad72:	dc 01       	movw	r26, r24
    ad74:	cb 01       	movw	r24, r22
    ad76:	8e 01       	movw	r16, r28
    ad78:	01 5b       	subi	r16, 0xB1	; 177
    ad7a:	1c 4f       	sbci	r17, 0xFC	; 252
    ad7c:	bc 01       	movw	r22, r24
    ad7e:	cd 01       	movw	r24, r26
    ad80:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ad84:	dc 01       	movw	r26, r24
    ad86:	cb 01       	movw	r24, r22
    ad88:	f8 01       	movw	r30, r16
    ad8a:	91 83       	std	Z+1, r25	; 0x01
    ad8c:	80 83       	st	Z, r24
    ad8e:	27 c0       	rjmp	.+78     	; 0xadde <main+0x710a>
    ad90:	ce 01       	movw	r24, r28
    ad92:	8f 5a       	subi	r24, 0xAF	; 175
    ad94:	9c 4f       	sbci	r25, 0xFC	; 252
    ad96:	20 e7       	ldi	r18, 0x70	; 112
    ad98:	31 e0       	ldi	r19, 0x01	; 1
    ad9a:	fc 01       	movw	r30, r24
    ad9c:	31 83       	std	Z+1, r19	; 0x01
    ad9e:	20 83       	st	Z, r18
    ada0:	ce 01       	movw	r24, r28
    ada2:	8f 5a       	subi	r24, 0xAF	; 175
    ada4:	9c 4f       	sbci	r25, 0xFC	; 252
    ada6:	fc 01       	movw	r30, r24
    ada8:	80 81       	ld	r24, Z
    adaa:	91 81       	ldd	r25, Z+1	; 0x01
    adac:	8c 01       	movw	r16, r24
    adae:	c8 01       	movw	r24, r16
    adb0:	01 97       	sbiw	r24, 0x01	; 1
    adb2:	f1 f7       	brne	.-4      	; 0xadb0 <main+0x70dc>
    adb4:	8c 01       	movw	r16, r24
    adb6:	ce 01       	movw	r24, r28
    adb8:	8f 5a       	subi	r24, 0xAF	; 175
    adba:	9c 4f       	sbci	r25, 0xFC	; 252
    adbc:	fc 01       	movw	r30, r24
    adbe:	11 83       	std	Z+1, r17	; 0x01
    adc0:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    adc2:	ce 01       	movw	r24, r28
    adc4:	81 5b       	subi	r24, 0xB1	; 177
    adc6:	9c 4f       	sbci	r25, 0xFC	; 252
    adc8:	9e 01       	movw	r18, r28
    adca:	21 5b       	subi	r18, 0xB1	; 177
    adcc:	3c 4f       	sbci	r19, 0xFC	; 252
    adce:	f9 01       	movw	r30, r18
    add0:	20 81       	ld	r18, Z
    add2:	31 81       	ldd	r19, Z+1	; 0x01
    add4:	21 50       	subi	r18, 0x01	; 1
    add6:	30 40       	sbci	r19, 0x00	; 0
    add8:	fc 01       	movw	r30, r24
    adda:	31 83       	std	Z+1, r19	; 0x01
    addc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    adde:	ce 01       	movw	r24, r28
    ade0:	81 5b       	subi	r24, 0xB1	; 177
    ade2:	9c 4f       	sbci	r25, 0xFC	; 252
    ade4:	fc 01       	movw	r30, r24
    ade6:	80 81       	ld	r24, Z
    ade8:	91 81       	ldd	r25, Z+1	; 0x01
    adea:	00 97       	sbiw	r24, 0x00	; 0
    adec:	89 f6       	brne	.-94     	; 0xad90 <main+0x70bc>
    adee:	2f c0       	rjmp	.+94     	; 0xae4e <main+0x717a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    adf0:	8e 01       	movw	r16, r28
    adf2:	01 5b       	subi	r16, 0xB1	; 177
    adf4:	1c 4f       	sbci	r17, 0xFC	; 252
    adf6:	ce 01       	movw	r24, r28
    adf8:	85 5b       	subi	r24, 0xB5	; 181
    adfa:	9c 4f       	sbci	r25, 0xFC	; 252
    adfc:	fc 01       	movw	r30, r24
    adfe:	60 81       	ld	r22, Z
    ae00:	71 81       	ldd	r23, Z+1	; 0x01
    ae02:	82 81       	ldd	r24, Z+2	; 0x02
    ae04:	93 81       	ldd	r25, Z+3	; 0x03
    ae06:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ae0a:	dc 01       	movw	r26, r24
    ae0c:	cb 01       	movw	r24, r22
    ae0e:	f8 01       	movw	r30, r16
    ae10:	91 83       	std	Z+1, r25	; 0x01
    ae12:	80 83       	st	Z, r24
    ae14:	ce 01       	movw	r24, r28
    ae16:	8d 5a       	subi	r24, 0xAD	; 173
    ae18:	9c 4f       	sbci	r25, 0xFC	; 252
    ae1a:	9e 01       	movw	r18, r28
    ae1c:	21 5b       	subi	r18, 0xB1	; 177
    ae1e:	3c 4f       	sbci	r19, 0xFC	; 252
    ae20:	f9 01       	movw	r30, r18
    ae22:	20 81       	ld	r18, Z
    ae24:	31 81       	ldd	r19, Z+1	; 0x01
    ae26:	fc 01       	movw	r30, r24
    ae28:	31 83       	std	Z+1, r19	; 0x01
    ae2a:	20 83       	st	Z, r18
    ae2c:	ce 01       	movw	r24, r28
    ae2e:	8d 5a       	subi	r24, 0xAD	; 173
    ae30:	9c 4f       	sbci	r25, 0xFC	; 252
    ae32:	fc 01       	movw	r30, r24
    ae34:	80 81       	ld	r24, Z
    ae36:	91 81       	ldd	r25, Z+1	; 0x01
    ae38:	8c 01       	movw	r16, r24
    ae3a:	c8 01       	movw	r24, r16
    ae3c:	01 97       	sbiw	r24, 0x01	; 1
    ae3e:	f1 f7       	brne	.-4      	; 0xae3c <main+0x7168>
    ae40:	8c 01       	movw	r16, r24
    ae42:	ce 01       	movw	r24, r28
    ae44:	8d 5a       	subi	r24, 0xAD	; 173
    ae46:	9c 4f       	sbci	r25, 0xFC	; 252
    ae48:	fc 01       	movw	r30, r24
    ae4a:	11 83       	std	Z+1, r17	; 0x01
    ae4c:	00 83       	st	Z, r16
							_delay_ms(1000);
							buzzer_off();
    ae4e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
						}
					forward_mm(75);
    ae52:	8b e4       	ldi	r24, 0x4B	; 75
    ae54:	90 e0       	ldi	r25, 0x00	; 0
    ae56:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    ae5a:	9e 01       	movw	r18, r28
    ae5c:	2b 5a       	subi	r18, 0xAB	; 171
    ae5e:	3c 4f       	sbci	r19, 0xFC	; 252
    ae60:	80 e0       	ldi	r24, 0x00	; 0
    ae62:	90 e0       	ldi	r25, 0x00	; 0
    ae64:	a0 ef       	ldi	r26, 0xF0	; 240
    ae66:	b1 e4       	ldi	r27, 0x41	; 65
    ae68:	f9 01       	movw	r30, r18
    ae6a:	80 83       	st	Z, r24
    ae6c:	91 83       	std	Z+1, r25	; 0x01
    ae6e:	a2 83       	std	Z+2, r26	; 0x02
    ae70:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    ae72:	8e 01       	movw	r16, r28
    ae74:	07 5a       	subi	r16, 0xA7	; 167
    ae76:	1c 4f       	sbci	r17, 0xFC	; 252
    ae78:	ce 01       	movw	r24, r28
    ae7a:	8b 5a       	subi	r24, 0xAB	; 171
    ae7c:	9c 4f       	sbci	r25, 0xFC	; 252
    ae7e:	fc 01       	movw	r30, r24
    ae80:	60 81       	ld	r22, Z
    ae82:	71 81       	ldd	r23, Z+1	; 0x01
    ae84:	82 81       	ldd	r24, Z+2	; 0x02
    ae86:	93 81       	ldd	r25, Z+3	; 0x03
    ae88:	26 e6       	ldi	r18, 0x66	; 102
    ae8a:	36 e6       	ldi	r19, 0x66	; 102
    ae8c:	46 e6       	ldi	r20, 0x66	; 102
    ae8e:	55 e4       	ldi	r21, 0x45	; 69
    ae90:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ae94:	dc 01       	movw	r26, r24
    ae96:	cb 01       	movw	r24, r22
    ae98:	f8 01       	movw	r30, r16
    ae9a:	80 83       	st	Z, r24
    ae9c:	91 83       	std	Z+1, r25	; 0x01
    ae9e:	a2 83       	std	Z+2, r26	; 0x02
    aea0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    aea2:	ce 01       	movw	r24, r28
    aea4:	87 5a       	subi	r24, 0xA7	; 167
    aea6:	9c 4f       	sbci	r25, 0xFC	; 252
    aea8:	11 e0       	ldi	r17, 0x01	; 1
    aeaa:	fc 01       	movw	r30, r24
    aeac:	60 81       	ld	r22, Z
    aeae:	71 81       	ldd	r23, Z+1	; 0x01
    aeb0:	82 81       	ldd	r24, Z+2	; 0x02
    aeb2:	93 81       	ldd	r25, Z+3	; 0x03
    aeb4:	20 e0       	ldi	r18, 0x00	; 0
    aeb6:	30 e0       	ldi	r19, 0x00	; 0
    aeb8:	40 e8       	ldi	r20, 0x80	; 128
    aeba:	5f e3       	ldi	r21, 0x3F	; 63
    aebc:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    aec0:	88 23       	and	r24, r24
    aec2:	0c f0       	brlt	.+2      	; 0xaec6 <main+0x71f2>
    aec4:	10 e0       	ldi	r17, 0x00	; 0
    aec6:	11 23       	and	r17, r17
    aec8:	49 f0       	breq	.+18     	; 0xaedc <main+0x7208>
		__ticks = 1;
    aeca:	ce 01       	movw	r24, r28
    aecc:	83 5a       	subi	r24, 0xA3	; 163
    aece:	9c 4f       	sbci	r25, 0xFC	; 252
    aed0:	21 e0       	ldi	r18, 0x01	; 1
    aed2:	30 e0       	ldi	r19, 0x00	; 0
    aed4:	fc 01       	movw	r30, r24
    aed6:	31 83       	std	Z+1, r19	; 0x01
    aed8:	20 83       	st	Z, r18
    aeda:	74 c0       	rjmp	.+232    	; 0xafc4 <main+0x72f0>
	else if (__tmp > 65535)
    aedc:	ce 01       	movw	r24, r28
    aede:	87 5a       	subi	r24, 0xA7	; 167
    aee0:	9c 4f       	sbci	r25, 0xFC	; 252
    aee2:	11 e0       	ldi	r17, 0x01	; 1
    aee4:	fc 01       	movw	r30, r24
    aee6:	60 81       	ld	r22, Z
    aee8:	71 81       	ldd	r23, Z+1	; 0x01
    aeea:	82 81       	ldd	r24, Z+2	; 0x02
    aeec:	93 81       	ldd	r25, Z+3	; 0x03
    aeee:	20 e0       	ldi	r18, 0x00	; 0
    aef0:	3f ef       	ldi	r19, 0xFF	; 255
    aef2:	4f e7       	ldi	r20, 0x7F	; 127
    aef4:	57 e4       	ldi	r21, 0x47	; 71
    aef6:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    aefa:	18 16       	cp	r1, r24
    aefc:	0c f0       	brlt	.+2      	; 0xaf00 <main+0x722c>
    aefe:	10 e0       	ldi	r17, 0x00	; 0
    af00:	11 23       	and	r17, r17
    af02:	09 f4       	brne	.+2      	; 0xaf06 <main+0x7232>
    af04:	4d c0       	rjmp	.+154    	; 0xafa0 <main+0x72cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    af06:	ce 01       	movw	r24, r28
    af08:	8b 5a       	subi	r24, 0xAB	; 171
    af0a:	9c 4f       	sbci	r25, 0xFC	; 252
    af0c:	fc 01       	movw	r30, r24
    af0e:	60 81       	ld	r22, Z
    af10:	71 81       	ldd	r23, Z+1	; 0x01
    af12:	82 81       	ldd	r24, Z+2	; 0x02
    af14:	93 81       	ldd	r25, Z+3	; 0x03
    af16:	20 e0       	ldi	r18, 0x00	; 0
    af18:	30 e0       	ldi	r19, 0x00	; 0
    af1a:	40 e2       	ldi	r20, 0x20	; 32
    af1c:	51 e4       	ldi	r21, 0x41	; 65
    af1e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    af22:	dc 01       	movw	r26, r24
    af24:	cb 01       	movw	r24, r22
    af26:	8e 01       	movw	r16, r28
    af28:	03 5a       	subi	r16, 0xA3	; 163
    af2a:	1c 4f       	sbci	r17, 0xFC	; 252
    af2c:	bc 01       	movw	r22, r24
    af2e:	cd 01       	movw	r24, r26
    af30:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    af34:	dc 01       	movw	r26, r24
    af36:	cb 01       	movw	r24, r22
    af38:	f8 01       	movw	r30, r16
    af3a:	91 83       	std	Z+1, r25	; 0x01
    af3c:	80 83       	st	Z, r24
    af3e:	27 c0       	rjmp	.+78     	; 0xaf8e <main+0x72ba>
    af40:	ce 01       	movw	r24, r28
    af42:	81 5a       	subi	r24, 0xA1	; 161
    af44:	9c 4f       	sbci	r25, 0xFC	; 252
    af46:	20 e7       	ldi	r18, 0x70	; 112
    af48:	31 e0       	ldi	r19, 0x01	; 1
    af4a:	fc 01       	movw	r30, r24
    af4c:	31 83       	std	Z+1, r19	; 0x01
    af4e:	20 83       	st	Z, r18
    af50:	ce 01       	movw	r24, r28
    af52:	81 5a       	subi	r24, 0xA1	; 161
    af54:	9c 4f       	sbci	r25, 0xFC	; 252
    af56:	fc 01       	movw	r30, r24
    af58:	80 81       	ld	r24, Z
    af5a:	91 81       	ldd	r25, Z+1	; 0x01
    af5c:	8c 01       	movw	r16, r24
    af5e:	c8 01       	movw	r24, r16
    af60:	01 97       	sbiw	r24, 0x01	; 1
    af62:	f1 f7       	brne	.-4      	; 0xaf60 <main+0x728c>
    af64:	8c 01       	movw	r16, r24
    af66:	ce 01       	movw	r24, r28
    af68:	81 5a       	subi	r24, 0xA1	; 161
    af6a:	9c 4f       	sbci	r25, 0xFC	; 252
    af6c:	fc 01       	movw	r30, r24
    af6e:	11 83       	std	Z+1, r17	; 0x01
    af70:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    af72:	ce 01       	movw	r24, r28
    af74:	83 5a       	subi	r24, 0xA3	; 163
    af76:	9c 4f       	sbci	r25, 0xFC	; 252
    af78:	9e 01       	movw	r18, r28
    af7a:	23 5a       	subi	r18, 0xA3	; 163
    af7c:	3c 4f       	sbci	r19, 0xFC	; 252
    af7e:	f9 01       	movw	r30, r18
    af80:	20 81       	ld	r18, Z
    af82:	31 81       	ldd	r19, Z+1	; 0x01
    af84:	21 50       	subi	r18, 0x01	; 1
    af86:	30 40       	sbci	r19, 0x00	; 0
    af88:	fc 01       	movw	r30, r24
    af8a:	31 83       	std	Z+1, r19	; 0x01
    af8c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    af8e:	ce 01       	movw	r24, r28
    af90:	83 5a       	subi	r24, 0xA3	; 163
    af92:	9c 4f       	sbci	r25, 0xFC	; 252
    af94:	fc 01       	movw	r30, r24
    af96:	80 81       	ld	r24, Z
    af98:	91 81       	ldd	r25, Z+1	; 0x01
    af9a:	00 97       	sbiw	r24, 0x00	; 0
    af9c:	89 f6       	brne	.-94     	; 0xaf40 <main+0x726c>
    af9e:	2f c0       	rjmp	.+94     	; 0xaffe <main+0x732a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    afa0:	8e 01       	movw	r16, r28
    afa2:	03 5a       	subi	r16, 0xA3	; 163
    afa4:	1c 4f       	sbci	r17, 0xFC	; 252
    afa6:	ce 01       	movw	r24, r28
    afa8:	87 5a       	subi	r24, 0xA7	; 167
    afaa:	9c 4f       	sbci	r25, 0xFC	; 252
    afac:	fc 01       	movw	r30, r24
    afae:	60 81       	ld	r22, Z
    afb0:	71 81       	ldd	r23, Z+1	; 0x01
    afb2:	82 81       	ldd	r24, Z+2	; 0x02
    afb4:	93 81       	ldd	r25, Z+3	; 0x03
    afb6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    afba:	dc 01       	movw	r26, r24
    afbc:	cb 01       	movw	r24, r22
    afbe:	f8 01       	movw	r30, r16
    afc0:	91 83       	std	Z+1, r25	; 0x01
    afc2:	80 83       	st	Z, r24
    afc4:	ce 01       	movw	r24, r28
    afc6:	8f 59       	subi	r24, 0x9F	; 159
    afc8:	9c 4f       	sbci	r25, 0xFC	; 252
    afca:	9e 01       	movw	r18, r28
    afcc:	23 5a       	subi	r18, 0xA3	; 163
    afce:	3c 4f       	sbci	r19, 0xFC	; 252
    afd0:	f9 01       	movw	r30, r18
    afd2:	20 81       	ld	r18, Z
    afd4:	31 81       	ldd	r19, Z+1	; 0x01
    afd6:	fc 01       	movw	r30, r24
    afd8:	31 83       	std	Z+1, r19	; 0x01
    afda:	20 83       	st	Z, r18
    afdc:	ce 01       	movw	r24, r28
    afde:	8f 59       	subi	r24, 0x9F	; 159
    afe0:	9c 4f       	sbci	r25, 0xFC	; 252
    afe2:	fc 01       	movw	r30, r24
    afe4:	80 81       	ld	r24, Z
    afe6:	91 81       	ldd	r25, Z+1	; 0x01
    afe8:	8c 01       	movw	r16, r24
    afea:	c8 01       	movw	r24, r16
    afec:	01 97       	sbiw	r24, 0x01	; 1
    afee:	f1 f7       	brne	.-4      	; 0xafec <main+0x7318>
    aff0:	8c 01       	movw	r16, r24
    aff2:	ce 01       	movw	r24, r28
    aff4:	8f 59       	subi	r24, 0x9F	; 159
    aff6:	9c 4f       	sbci	r25, 0xFC	; 252
    aff8:	fc 01       	movw	r30, r24
    affa:	11 83       	std	Z+1, r17	; 0x01
    affc:	00 83       	st	Z, r16
					_delay_ms(30);
					back_mm(10);
    affe:	8a e0       	ldi	r24, 0x0A	; 10
    b000:	90 e0       	ldi	r25, 0x00	; 0
    b002:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    b006:	9e 01       	movw	r18, r28
    b008:	2d 59       	subi	r18, 0x9D	; 157
    b00a:	3c 4f       	sbci	r19, 0xFC	; 252
    b00c:	80 e0       	ldi	r24, 0x00	; 0
    b00e:	90 e0       	ldi	r25, 0x00	; 0
    b010:	aa ef       	ldi	r26, 0xFA	; 250
    b012:	b3 e4       	ldi	r27, 0x43	; 67
    b014:	f9 01       	movw	r30, r18
    b016:	80 83       	st	Z, r24
    b018:	91 83       	std	Z+1, r25	; 0x01
    b01a:	a2 83       	std	Z+2, r26	; 0x02
    b01c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    b01e:	8e 01       	movw	r16, r28
    b020:	09 59       	subi	r16, 0x99	; 153
    b022:	1c 4f       	sbci	r17, 0xFC	; 252
    b024:	ce 01       	movw	r24, r28
    b026:	8d 59       	subi	r24, 0x9D	; 157
    b028:	9c 4f       	sbci	r25, 0xFC	; 252
    b02a:	fc 01       	movw	r30, r24
    b02c:	60 81       	ld	r22, Z
    b02e:	71 81       	ldd	r23, Z+1	; 0x01
    b030:	82 81       	ldd	r24, Z+2	; 0x02
    b032:	93 81       	ldd	r25, Z+3	; 0x03
    b034:	26 e6       	ldi	r18, 0x66	; 102
    b036:	36 e6       	ldi	r19, 0x66	; 102
    b038:	46 e6       	ldi	r20, 0x66	; 102
    b03a:	55 e4       	ldi	r21, 0x45	; 69
    b03c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b040:	dc 01       	movw	r26, r24
    b042:	cb 01       	movw	r24, r22
    b044:	f8 01       	movw	r30, r16
    b046:	80 83       	st	Z, r24
    b048:	91 83       	std	Z+1, r25	; 0x01
    b04a:	a2 83       	std	Z+2, r26	; 0x02
    b04c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b04e:	ce 01       	movw	r24, r28
    b050:	89 59       	subi	r24, 0x99	; 153
    b052:	9c 4f       	sbci	r25, 0xFC	; 252
    b054:	11 e0       	ldi	r17, 0x01	; 1
    b056:	fc 01       	movw	r30, r24
    b058:	60 81       	ld	r22, Z
    b05a:	71 81       	ldd	r23, Z+1	; 0x01
    b05c:	82 81       	ldd	r24, Z+2	; 0x02
    b05e:	93 81       	ldd	r25, Z+3	; 0x03
    b060:	20 e0       	ldi	r18, 0x00	; 0
    b062:	30 e0       	ldi	r19, 0x00	; 0
    b064:	40 e8       	ldi	r20, 0x80	; 128
    b066:	5f e3       	ldi	r21, 0x3F	; 63
    b068:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    b06c:	88 23       	and	r24, r24
    b06e:	0c f0       	brlt	.+2      	; 0xb072 <main+0x739e>
    b070:	10 e0       	ldi	r17, 0x00	; 0
    b072:	11 23       	and	r17, r17
    b074:	49 f0       	breq	.+18     	; 0xb088 <main+0x73b4>
		__ticks = 1;
    b076:	ce 01       	movw	r24, r28
    b078:	85 59       	subi	r24, 0x95	; 149
    b07a:	9c 4f       	sbci	r25, 0xFC	; 252
    b07c:	21 e0       	ldi	r18, 0x01	; 1
    b07e:	30 e0       	ldi	r19, 0x00	; 0
    b080:	fc 01       	movw	r30, r24
    b082:	31 83       	std	Z+1, r19	; 0x01
    b084:	20 83       	st	Z, r18
    b086:	74 c0       	rjmp	.+232    	; 0xb170 <main+0x749c>
	else if (__tmp > 65535)
    b088:	ce 01       	movw	r24, r28
    b08a:	89 59       	subi	r24, 0x99	; 153
    b08c:	9c 4f       	sbci	r25, 0xFC	; 252
    b08e:	11 e0       	ldi	r17, 0x01	; 1
    b090:	fc 01       	movw	r30, r24
    b092:	60 81       	ld	r22, Z
    b094:	71 81       	ldd	r23, Z+1	; 0x01
    b096:	82 81       	ldd	r24, Z+2	; 0x02
    b098:	93 81       	ldd	r25, Z+3	; 0x03
    b09a:	20 e0       	ldi	r18, 0x00	; 0
    b09c:	3f ef       	ldi	r19, 0xFF	; 255
    b09e:	4f e7       	ldi	r20, 0x7F	; 127
    b0a0:	57 e4       	ldi	r21, 0x47	; 71
    b0a2:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    b0a6:	18 16       	cp	r1, r24
    b0a8:	0c f0       	brlt	.+2      	; 0xb0ac <main+0x73d8>
    b0aa:	10 e0       	ldi	r17, 0x00	; 0
    b0ac:	11 23       	and	r17, r17
    b0ae:	09 f4       	brne	.+2      	; 0xb0b2 <main+0x73de>
    b0b0:	4d c0       	rjmp	.+154    	; 0xb14c <main+0x7478>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    b0b2:	ce 01       	movw	r24, r28
    b0b4:	8d 59       	subi	r24, 0x9D	; 157
    b0b6:	9c 4f       	sbci	r25, 0xFC	; 252
    b0b8:	fc 01       	movw	r30, r24
    b0ba:	60 81       	ld	r22, Z
    b0bc:	71 81       	ldd	r23, Z+1	; 0x01
    b0be:	82 81       	ldd	r24, Z+2	; 0x02
    b0c0:	93 81       	ldd	r25, Z+3	; 0x03
    b0c2:	20 e0       	ldi	r18, 0x00	; 0
    b0c4:	30 e0       	ldi	r19, 0x00	; 0
    b0c6:	40 e2       	ldi	r20, 0x20	; 32
    b0c8:	51 e4       	ldi	r21, 0x41	; 65
    b0ca:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b0ce:	dc 01       	movw	r26, r24
    b0d0:	cb 01       	movw	r24, r22
    b0d2:	8e 01       	movw	r16, r28
    b0d4:	05 59       	subi	r16, 0x95	; 149
    b0d6:	1c 4f       	sbci	r17, 0xFC	; 252
    b0d8:	bc 01       	movw	r22, r24
    b0da:	cd 01       	movw	r24, r26
    b0dc:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b0e0:	dc 01       	movw	r26, r24
    b0e2:	cb 01       	movw	r24, r22
    b0e4:	f8 01       	movw	r30, r16
    b0e6:	91 83       	std	Z+1, r25	; 0x01
    b0e8:	80 83       	st	Z, r24
    b0ea:	27 c0       	rjmp	.+78     	; 0xb13a <main+0x7466>
    b0ec:	ce 01       	movw	r24, r28
    b0ee:	83 59       	subi	r24, 0x93	; 147
    b0f0:	9c 4f       	sbci	r25, 0xFC	; 252
    b0f2:	20 e7       	ldi	r18, 0x70	; 112
    b0f4:	31 e0       	ldi	r19, 0x01	; 1
    b0f6:	fc 01       	movw	r30, r24
    b0f8:	31 83       	std	Z+1, r19	; 0x01
    b0fa:	20 83       	st	Z, r18
    b0fc:	ce 01       	movw	r24, r28
    b0fe:	83 59       	subi	r24, 0x93	; 147
    b100:	9c 4f       	sbci	r25, 0xFC	; 252
    b102:	fc 01       	movw	r30, r24
    b104:	80 81       	ld	r24, Z
    b106:	91 81       	ldd	r25, Z+1	; 0x01
    b108:	8c 01       	movw	r16, r24
    b10a:	c8 01       	movw	r24, r16
    b10c:	01 97       	sbiw	r24, 0x01	; 1
    b10e:	f1 f7       	brne	.-4      	; 0xb10c <main+0x7438>
    b110:	8c 01       	movw	r16, r24
    b112:	ce 01       	movw	r24, r28
    b114:	83 59       	subi	r24, 0x93	; 147
    b116:	9c 4f       	sbci	r25, 0xFC	; 252
    b118:	fc 01       	movw	r30, r24
    b11a:	11 83       	std	Z+1, r17	; 0x01
    b11c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    b11e:	ce 01       	movw	r24, r28
    b120:	85 59       	subi	r24, 0x95	; 149
    b122:	9c 4f       	sbci	r25, 0xFC	; 252
    b124:	9e 01       	movw	r18, r28
    b126:	25 59       	subi	r18, 0x95	; 149
    b128:	3c 4f       	sbci	r19, 0xFC	; 252
    b12a:	f9 01       	movw	r30, r18
    b12c:	20 81       	ld	r18, Z
    b12e:	31 81       	ldd	r19, Z+1	; 0x01
    b130:	21 50       	subi	r18, 0x01	; 1
    b132:	30 40       	sbci	r19, 0x00	; 0
    b134:	fc 01       	movw	r30, r24
    b136:	31 83       	std	Z+1, r19	; 0x01
    b138:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    b13a:	ce 01       	movw	r24, r28
    b13c:	85 59       	subi	r24, 0x95	; 149
    b13e:	9c 4f       	sbci	r25, 0xFC	; 252
    b140:	fc 01       	movw	r30, r24
    b142:	80 81       	ld	r24, Z
    b144:	91 81       	ldd	r25, Z+1	; 0x01
    b146:	00 97       	sbiw	r24, 0x00	; 0
    b148:	89 f6       	brne	.-94     	; 0xb0ec <main+0x7418>
    b14a:	2f c0       	rjmp	.+94     	; 0xb1aa <main+0x74d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    b14c:	8e 01       	movw	r16, r28
    b14e:	05 59       	subi	r16, 0x95	; 149
    b150:	1c 4f       	sbci	r17, 0xFC	; 252
    b152:	ce 01       	movw	r24, r28
    b154:	89 59       	subi	r24, 0x99	; 153
    b156:	9c 4f       	sbci	r25, 0xFC	; 252
    b158:	fc 01       	movw	r30, r24
    b15a:	60 81       	ld	r22, Z
    b15c:	71 81       	ldd	r23, Z+1	; 0x01
    b15e:	82 81       	ldd	r24, Z+2	; 0x02
    b160:	93 81       	ldd	r25, Z+3	; 0x03
    b162:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b166:	dc 01       	movw	r26, r24
    b168:	cb 01       	movw	r24, r22
    b16a:	f8 01       	movw	r30, r16
    b16c:	91 83       	std	Z+1, r25	; 0x01
    b16e:	80 83       	st	Z, r24
    b170:	ce 01       	movw	r24, r28
    b172:	81 59       	subi	r24, 0x91	; 145
    b174:	9c 4f       	sbci	r25, 0xFC	; 252
    b176:	9e 01       	movw	r18, r28
    b178:	25 59       	subi	r18, 0x95	; 149
    b17a:	3c 4f       	sbci	r19, 0xFC	; 252
    b17c:	f9 01       	movw	r30, r18
    b17e:	20 81       	ld	r18, Z
    b180:	31 81       	ldd	r19, Z+1	; 0x01
    b182:	fc 01       	movw	r30, r24
    b184:	31 83       	std	Z+1, r19	; 0x01
    b186:	20 83       	st	Z, r18
    b188:	ce 01       	movw	r24, r28
    b18a:	81 59       	subi	r24, 0x91	; 145
    b18c:	9c 4f       	sbci	r25, 0xFC	; 252
    b18e:	fc 01       	movw	r30, r24
    b190:	80 81       	ld	r24, Z
    b192:	91 81       	ldd	r25, Z+1	; 0x01
    b194:	8c 01       	movw	r16, r24
    b196:	c8 01       	movw	r24, r16
    b198:	01 97       	sbiw	r24, 0x01	; 1
    b19a:	f1 f7       	brne	.-4      	; 0xb198 <main+0x74c4>
    b19c:	8c 01       	movw	r16, r24
    b19e:	ce 01       	movw	r24, r28
    b1a0:	81 59       	subi	r24, 0x91	; 145
    b1a2:	9c 4f       	sbci	r25, 0xFC	; 252
    b1a4:	fc 01       	movw	r30, r24
    b1a6:	11 83       	std	Z+1, r17	; 0x01
    b1a8:	00 83       	st	Z, r16
					_delay_ms(500);
					right_degrees(40);
    b1aa:	88 e2       	ldi	r24, 0x28	; 40
    b1ac:	90 e0       	ldi	r25, 0x00	; 0
    b1ae:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
					compass=7;
    b1b2:	87 e0       	ldi	r24, 0x07	; 7
    b1b4:	90 e0       	ldi	r25, 0x00	; 0
    b1b6:	9c 83       	std	Y+4, r25	; 0x04
    b1b8:	8b 83       	std	Y+3, r24	; 0x03
					break;
    b1ba:	f7 c2       	rjmp	.+1518   	; 0xb7aa <main+0x7ad6>
				}
				if(coor[1]>origin2[boxnumber][i][1] && coor[0]<origin2[boxnumber][i][0])
    b1bc:	20 91 a8 04 	lds	r18, 0x04A8
    b1c0:	30 91 a9 04 	lds	r19, 0x04A9
    b1c4:	ae 01       	movw	r20, r28
    b1c6:	4d 5f       	subi	r20, 0xFD	; 253
    b1c8:	5a 4f       	sbci	r21, 0xFA	; 250
    b1ca:	8d 81       	ldd	r24, Y+5	; 0x05
    b1cc:	9e 81       	ldd	r25, Y+6	; 0x06
    b1ce:	bc 01       	movw	r22, r24
    b1d0:	66 0f       	add	r22, r22
    b1d2:	77 1f       	adc	r23, r23
    b1d4:	66 0f       	add	r22, r22
    b1d6:	77 1f       	adc	r23, r23
    b1d8:	8d a1       	lds	r24, 0x4d
    b1da:	9e a1       	lds	r25, 0x4e
    b1dc:	86 0f       	add	r24, r22
    b1de:	97 1f       	adc	r25, r23
    b1e0:	88 0f       	add	r24, r24
    b1e2:	99 1f       	adc	r25, r25
    b1e4:	88 0f       	add	r24, r24
    b1e6:	99 1f       	adc	r25, r25
    b1e8:	84 0f       	add	r24, r20
    b1ea:	95 1f       	adc	r25, r21
    b1ec:	02 96       	adiw	r24, 0x02	; 2
    b1ee:	fc 01       	movw	r30, r24
    b1f0:	80 81       	ld	r24, Z
    b1f2:	91 81       	ldd	r25, Z+1	; 0x01
    b1f4:	82 17       	cp	r24, r18
    b1f6:	93 07       	cpc	r25, r19
    b1f8:	0c f0       	brlt	.+2      	; 0xb1fc <main+0x7528>
    b1fa:	c9 c2       	rjmp	.+1426   	; 0xb78e <main+0x7aba>
    b1fc:	20 91 a6 04 	lds	r18, 0x04A6
    b200:	30 91 a7 04 	lds	r19, 0x04A7
    b204:	ae 01       	movw	r20, r28
    b206:	4d 5f       	subi	r20, 0xFD	; 253
    b208:	5a 4f       	sbci	r21, 0xFA	; 250
    b20a:	8d 81       	ldd	r24, Y+5	; 0x05
    b20c:	9e 81       	ldd	r25, Y+6	; 0x06
    b20e:	bc 01       	movw	r22, r24
    b210:	66 0f       	add	r22, r22
    b212:	77 1f       	adc	r23, r23
    b214:	66 0f       	add	r22, r22
    b216:	77 1f       	adc	r23, r23
    b218:	8d a1       	lds	r24, 0x4d
    b21a:	9e a1       	lds	r25, 0x4e
    b21c:	86 0f       	add	r24, r22
    b21e:	97 1f       	adc	r25, r23
    b220:	88 0f       	add	r24, r24
    b222:	99 1f       	adc	r25, r25
    b224:	88 0f       	add	r24, r24
    b226:	99 1f       	adc	r25, r25
    b228:	84 0f       	add	r24, r20
    b22a:	95 1f       	adc	r25, r21
    b22c:	fc 01       	movw	r30, r24
    b22e:	80 81       	ld	r24, Z
    b230:	91 81       	ldd	r25, Z+1	; 0x01
    b232:	28 17       	cp	r18, r24
    b234:	39 07       	cpc	r19, r25
    b236:	0c f0       	brlt	.+2      	; 0xb23a <main+0x7566>
    b238:	aa c2       	rjmp	.+1364   	; 0xb78e <main+0x7aba>
				{
					right_degrees(45);
    b23a:	8d e2       	ldi	r24, 0x2D	; 45
    b23c:	90 e0       	ldi	r25, 0x00	; 0
    b23e:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
					back_mm(65);
    b242:	81 e4       	ldi	r24, 0x41	; 65
    b244:	90 e0       	ldi	r25, 0x00	; 0
    b246:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
					matrix2();
    b24a:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
						if(summ1[recur+1]>10)
    b24e:	8f 81       	ldd	r24, Y+7	; 0x07
    b250:	98 85       	ldd	r25, Y+8	; 0x08
    b252:	01 96       	adiw	r24, 0x01	; 1
    b254:	9e 01       	movw	r18, r28
    b256:	25 54       	subi	r18, 0x45	; 69
    b258:	39 4f       	sbci	r19, 0xF9	; 249
    b25a:	88 0f       	add	r24, r24
    b25c:	99 1f       	adc	r25, r25
    b25e:	82 0f       	add	r24, r18
    b260:	93 1f       	adc	r25, r19
    b262:	fc 01       	movw	r30, r24
    b264:	80 81       	ld	r24, Z
    b266:	91 81       	ldd	r25, Z+1	; 0x01
    b268:	8b 30       	cpi	r24, 0x0B	; 11
    b26a:	91 05       	cpc	r25, r1
    b26c:	0c f4       	brge	.+2      	; 0xb270 <main+0x759c>
    b26e:	d6 c0       	rjmp	.+428    	; 0xb41c <main+0x7748>
						{
							buzzer_on();
    b270:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    b274:	9e 01       	movw	r18, r28
    b276:	2f 58       	subi	r18, 0x8F	; 143
    b278:	3c 4f       	sbci	r19, 0xFC	; 252
    b27a:	80 e0       	ldi	r24, 0x00	; 0
    b27c:	90 e0       	ldi	r25, 0x00	; 0
    b27e:	aa e7       	ldi	r26, 0x7A	; 122
    b280:	b4 e4       	ldi	r27, 0x44	; 68
    b282:	f9 01       	movw	r30, r18
    b284:	80 83       	st	Z, r24
    b286:	91 83       	std	Z+1, r25	; 0x01
    b288:	a2 83       	std	Z+2, r26	; 0x02
    b28a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    b28c:	8e 01       	movw	r16, r28
    b28e:	0b 58       	subi	r16, 0x8B	; 139
    b290:	1c 4f       	sbci	r17, 0xFC	; 252
    b292:	ce 01       	movw	r24, r28
    b294:	8f 58       	subi	r24, 0x8F	; 143
    b296:	9c 4f       	sbci	r25, 0xFC	; 252
    b298:	fc 01       	movw	r30, r24
    b29a:	60 81       	ld	r22, Z
    b29c:	71 81       	ldd	r23, Z+1	; 0x01
    b29e:	82 81       	ldd	r24, Z+2	; 0x02
    b2a0:	93 81       	ldd	r25, Z+3	; 0x03
    b2a2:	26 e6       	ldi	r18, 0x66	; 102
    b2a4:	36 e6       	ldi	r19, 0x66	; 102
    b2a6:	46 e6       	ldi	r20, 0x66	; 102
    b2a8:	55 e4       	ldi	r21, 0x45	; 69
    b2aa:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b2ae:	dc 01       	movw	r26, r24
    b2b0:	cb 01       	movw	r24, r22
    b2b2:	f8 01       	movw	r30, r16
    b2b4:	80 83       	st	Z, r24
    b2b6:	91 83       	std	Z+1, r25	; 0x01
    b2b8:	a2 83       	std	Z+2, r26	; 0x02
    b2ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b2bc:	ce 01       	movw	r24, r28
    b2be:	8b 58       	subi	r24, 0x8B	; 139
    b2c0:	9c 4f       	sbci	r25, 0xFC	; 252
    b2c2:	11 e0       	ldi	r17, 0x01	; 1
    b2c4:	fc 01       	movw	r30, r24
    b2c6:	60 81       	ld	r22, Z
    b2c8:	71 81       	ldd	r23, Z+1	; 0x01
    b2ca:	82 81       	ldd	r24, Z+2	; 0x02
    b2cc:	93 81       	ldd	r25, Z+3	; 0x03
    b2ce:	20 e0       	ldi	r18, 0x00	; 0
    b2d0:	30 e0       	ldi	r19, 0x00	; 0
    b2d2:	40 e8       	ldi	r20, 0x80	; 128
    b2d4:	5f e3       	ldi	r21, 0x3F	; 63
    b2d6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    b2da:	88 23       	and	r24, r24
    b2dc:	0c f0       	brlt	.+2      	; 0xb2e0 <main+0x760c>
    b2de:	10 e0       	ldi	r17, 0x00	; 0
    b2e0:	11 23       	and	r17, r17
    b2e2:	49 f0       	breq	.+18     	; 0xb2f6 <main+0x7622>
		__ticks = 1;
    b2e4:	ce 01       	movw	r24, r28
    b2e6:	87 58       	subi	r24, 0x87	; 135
    b2e8:	9c 4f       	sbci	r25, 0xFC	; 252
    b2ea:	21 e0       	ldi	r18, 0x01	; 1
    b2ec:	30 e0       	ldi	r19, 0x00	; 0
    b2ee:	fc 01       	movw	r30, r24
    b2f0:	31 83       	std	Z+1, r19	; 0x01
    b2f2:	20 83       	st	Z, r18
    b2f4:	74 c0       	rjmp	.+232    	; 0xb3de <main+0x770a>
	else if (__tmp > 65535)
    b2f6:	ce 01       	movw	r24, r28
    b2f8:	8b 58       	subi	r24, 0x8B	; 139
    b2fa:	9c 4f       	sbci	r25, 0xFC	; 252
    b2fc:	11 e0       	ldi	r17, 0x01	; 1
    b2fe:	fc 01       	movw	r30, r24
    b300:	60 81       	ld	r22, Z
    b302:	71 81       	ldd	r23, Z+1	; 0x01
    b304:	82 81       	ldd	r24, Z+2	; 0x02
    b306:	93 81       	ldd	r25, Z+3	; 0x03
    b308:	20 e0       	ldi	r18, 0x00	; 0
    b30a:	3f ef       	ldi	r19, 0xFF	; 255
    b30c:	4f e7       	ldi	r20, 0x7F	; 127
    b30e:	57 e4       	ldi	r21, 0x47	; 71
    b310:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    b314:	18 16       	cp	r1, r24
    b316:	0c f0       	brlt	.+2      	; 0xb31a <main+0x7646>
    b318:	10 e0       	ldi	r17, 0x00	; 0
    b31a:	11 23       	and	r17, r17
    b31c:	09 f4       	brne	.+2      	; 0xb320 <main+0x764c>
    b31e:	4d c0       	rjmp	.+154    	; 0xb3ba <main+0x76e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    b320:	ce 01       	movw	r24, r28
    b322:	8f 58       	subi	r24, 0x8F	; 143
    b324:	9c 4f       	sbci	r25, 0xFC	; 252
    b326:	fc 01       	movw	r30, r24
    b328:	60 81       	ld	r22, Z
    b32a:	71 81       	ldd	r23, Z+1	; 0x01
    b32c:	82 81       	ldd	r24, Z+2	; 0x02
    b32e:	93 81       	ldd	r25, Z+3	; 0x03
    b330:	20 e0       	ldi	r18, 0x00	; 0
    b332:	30 e0       	ldi	r19, 0x00	; 0
    b334:	40 e2       	ldi	r20, 0x20	; 32
    b336:	51 e4       	ldi	r21, 0x41	; 65
    b338:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b33c:	dc 01       	movw	r26, r24
    b33e:	cb 01       	movw	r24, r22
    b340:	8e 01       	movw	r16, r28
    b342:	07 58       	subi	r16, 0x87	; 135
    b344:	1c 4f       	sbci	r17, 0xFC	; 252
    b346:	bc 01       	movw	r22, r24
    b348:	cd 01       	movw	r24, r26
    b34a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b34e:	dc 01       	movw	r26, r24
    b350:	cb 01       	movw	r24, r22
    b352:	f8 01       	movw	r30, r16
    b354:	91 83       	std	Z+1, r25	; 0x01
    b356:	80 83       	st	Z, r24
    b358:	27 c0       	rjmp	.+78     	; 0xb3a8 <main+0x76d4>
    b35a:	ce 01       	movw	r24, r28
    b35c:	85 58       	subi	r24, 0x85	; 133
    b35e:	9c 4f       	sbci	r25, 0xFC	; 252
    b360:	20 e7       	ldi	r18, 0x70	; 112
    b362:	31 e0       	ldi	r19, 0x01	; 1
    b364:	fc 01       	movw	r30, r24
    b366:	31 83       	std	Z+1, r19	; 0x01
    b368:	20 83       	st	Z, r18
    b36a:	ce 01       	movw	r24, r28
    b36c:	85 58       	subi	r24, 0x85	; 133
    b36e:	9c 4f       	sbci	r25, 0xFC	; 252
    b370:	fc 01       	movw	r30, r24
    b372:	80 81       	ld	r24, Z
    b374:	91 81       	ldd	r25, Z+1	; 0x01
    b376:	8c 01       	movw	r16, r24
    b378:	c8 01       	movw	r24, r16
    b37a:	01 97       	sbiw	r24, 0x01	; 1
    b37c:	f1 f7       	brne	.-4      	; 0xb37a <main+0x76a6>
    b37e:	8c 01       	movw	r16, r24
    b380:	ce 01       	movw	r24, r28
    b382:	85 58       	subi	r24, 0x85	; 133
    b384:	9c 4f       	sbci	r25, 0xFC	; 252
    b386:	fc 01       	movw	r30, r24
    b388:	11 83       	std	Z+1, r17	; 0x01
    b38a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    b38c:	ce 01       	movw	r24, r28
    b38e:	87 58       	subi	r24, 0x87	; 135
    b390:	9c 4f       	sbci	r25, 0xFC	; 252
    b392:	9e 01       	movw	r18, r28
    b394:	27 58       	subi	r18, 0x87	; 135
    b396:	3c 4f       	sbci	r19, 0xFC	; 252
    b398:	f9 01       	movw	r30, r18
    b39a:	20 81       	ld	r18, Z
    b39c:	31 81       	ldd	r19, Z+1	; 0x01
    b39e:	21 50       	subi	r18, 0x01	; 1
    b3a0:	30 40       	sbci	r19, 0x00	; 0
    b3a2:	fc 01       	movw	r30, r24
    b3a4:	31 83       	std	Z+1, r19	; 0x01
    b3a6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    b3a8:	ce 01       	movw	r24, r28
    b3aa:	87 58       	subi	r24, 0x87	; 135
    b3ac:	9c 4f       	sbci	r25, 0xFC	; 252
    b3ae:	fc 01       	movw	r30, r24
    b3b0:	80 81       	ld	r24, Z
    b3b2:	91 81       	ldd	r25, Z+1	; 0x01
    b3b4:	00 97       	sbiw	r24, 0x00	; 0
    b3b6:	89 f6       	brne	.-94     	; 0xb35a <main+0x7686>
    b3b8:	2f c0       	rjmp	.+94     	; 0xb418 <main+0x7744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    b3ba:	8e 01       	movw	r16, r28
    b3bc:	07 58       	subi	r16, 0x87	; 135
    b3be:	1c 4f       	sbci	r17, 0xFC	; 252
    b3c0:	ce 01       	movw	r24, r28
    b3c2:	8b 58       	subi	r24, 0x8B	; 139
    b3c4:	9c 4f       	sbci	r25, 0xFC	; 252
    b3c6:	fc 01       	movw	r30, r24
    b3c8:	60 81       	ld	r22, Z
    b3ca:	71 81       	ldd	r23, Z+1	; 0x01
    b3cc:	82 81       	ldd	r24, Z+2	; 0x02
    b3ce:	93 81       	ldd	r25, Z+3	; 0x03
    b3d0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b3d4:	dc 01       	movw	r26, r24
    b3d6:	cb 01       	movw	r24, r22
    b3d8:	f8 01       	movw	r30, r16
    b3da:	91 83       	std	Z+1, r25	; 0x01
    b3dc:	80 83       	st	Z, r24
    b3de:	ce 01       	movw	r24, r28
    b3e0:	83 58       	subi	r24, 0x83	; 131
    b3e2:	9c 4f       	sbci	r25, 0xFC	; 252
    b3e4:	9e 01       	movw	r18, r28
    b3e6:	27 58       	subi	r18, 0x87	; 135
    b3e8:	3c 4f       	sbci	r19, 0xFC	; 252
    b3ea:	f9 01       	movw	r30, r18
    b3ec:	20 81       	ld	r18, Z
    b3ee:	31 81       	ldd	r19, Z+1	; 0x01
    b3f0:	fc 01       	movw	r30, r24
    b3f2:	31 83       	std	Z+1, r19	; 0x01
    b3f4:	20 83       	st	Z, r18
    b3f6:	ce 01       	movw	r24, r28
    b3f8:	83 58       	subi	r24, 0x83	; 131
    b3fa:	9c 4f       	sbci	r25, 0xFC	; 252
    b3fc:	fc 01       	movw	r30, r24
    b3fe:	80 81       	ld	r24, Z
    b400:	91 81       	ldd	r25, Z+1	; 0x01
    b402:	8c 01       	movw	r16, r24
    b404:	c8 01       	movw	r24, r16
    b406:	01 97       	sbiw	r24, 0x01	; 1
    b408:	f1 f7       	brne	.-4      	; 0xb406 <main+0x7732>
    b40a:	8c 01       	movw	r16, r24
    b40c:	ce 01       	movw	r24, r28
    b40e:	83 58       	subi	r24, 0x83	; 131
    b410:	9c 4f       	sbci	r25, 0xFC	; 252
    b412:	fc 01       	movw	r30, r24
    b414:	11 83       	std	Z+1, r17	; 0x01
    b416:	00 83       	st	Z, r16
							_delay_ms(1000);
							buzzer_off();
    b418:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
						}
					forward_mm(75);
    b41c:	8b e4       	ldi	r24, 0x4B	; 75
    b41e:	90 e0       	ldi	r25, 0x00	; 0
    b420:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    b424:	9e 01       	movw	r18, r28
    b426:	21 58       	subi	r18, 0x81	; 129
    b428:	3c 4f       	sbci	r19, 0xFC	; 252
    b42a:	80 e0       	ldi	r24, 0x00	; 0
    b42c:	90 e0       	ldi	r25, 0x00	; 0
    b42e:	a0 ef       	ldi	r26, 0xF0	; 240
    b430:	b1 e4       	ldi	r27, 0x41	; 65
    b432:	f9 01       	movw	r30, r18
    b434:	80 83       	st	Z, r24
    b436:	91 83       	std	Z+1, r25	; 0x01
    b438:	a2 83       	std	Z+2, r26	; 0x02
    b43a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    b43c:	8e 01       	movw	r16, r28
    b43e:	0d 57       	subi	r16, 0x7D	; 125
    b440:	1c 4f       	sbci	r17, 0xFC	; 252
    b442:	ce 01       	movw	r24, r28
    b444:	81 58       	subi	r24, 0x81	; 129
    b446:	9c 4f       	sbci	r25, 0xFC	; 252
    b448:	fc 01       	movw	r30, r24
    b44a:	60 81       	ld	r22, Z
    b44c:	71 81       	ldd	r23, Z+1	; 0x01
    b44e:	82 81       	ldd	r24, Z+2	; 0x02
    b450:	93 81       	ldd	r25, Z+3	; 0x03
    b452:	26 e6       	ldi	r18, 0x66	; 102
    b454:	36 e6       	ldi	r19, 0x66	; 102
    b456:	46 e6       	ldi	r20, 0x66	; 102
    b458:	55 e4       	ldi	r21, 0x45	; 69
    b45a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b45e:	dc 01       	movw	r26, r24
    b460:	cb 01       	movw	r24, r22
    b462:	f8 01       	movw	r30, r16
    b464:	80 83       	st	Z, r24
    b466:	91 83       	std	Z+1, r25	; 0x01
    b468:	a2 83       	std	Z+2, r26	; 0x02
    b46a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b46c:	ce 01       	movw	r24, r28
    b46e:	8d 57       	subi	r24, 0x7D	; 125
    b470:	9c 4f       	sbci	r25, 0xFC	; 252
    b472:	11 e0       	ldi	r17, 0x01	; 1
    b474:	fc 01       	movw	r30, r24
    b476:	60 81       	ld	r22, Z
    b478:	71 81       	ldd	r23, Z+1	; 0x01
    b47a:	82 81       	ldd	r24, Z+2	; 0x02
    b47c:	93 81       	ldd	r25, Z+3	; 0x03
    b47e:	20 e0       	ldi	r18, 0x00	; 0
    b480:	30 e0       	ldi	r19, 0x00	; 0
    b482:	40 e8       	ldi	r20, 0x80	; 128
    b484:	5f e3       	ldi	r21, 0x3F	; 63
    b486:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    b48a:	88 23       	and	r24, r24
    b48c:	0c f0       	brlt	.+2      	; 0xb490 <main+0x77bc>
    b48e:	10 e0       	ldi	r17, 0x00	; 0
    b490:	11 23       	and	r17, r17
    b492:	49 f0       	breq	.+18     	; 0xb4a6 <main+0x77d2>
		__ticks = 1;
    b494:	ce 01       	movw	r24, r28
    b496:	89 57       	subi	r24, 0x79	; 121
    b498:	9c 4f       	sbci	r25, 0xFC	; 252
    b49a:	21 e0       	ldi	r18, 0x01	; 1
    b49c:	30 e0       	ldi	r19, 0x00	; 0
    b49e:	fc 01       	movw	r30, r24
    b4a0:	31 83       	std	Z+1, r19	; 0x01
    b4a2:	20 83       	st	Z, r18
    b4a4:	74 c0       	rjmp	.+232    	; 0xb58e <main+0x78ba>
	else if (__tmp > 65535)
    b4a6:	ce 01       	movw	r24, r28
    b4a8:	8d 57       	subi	r24, 0x7D	; 125
    b4aa:	9c 4f       	sbci	r25, 0xFC	; 252
    b4ac:	11 e0       	ldi	r17, 0x01	; 1
    b4ae:	fc 01       	movw	r30, r24
    b4b0:	60 81       	ld	r22, Z
    b4b2:	71 81       	ldd	r23, Z+1	; 0x01
    b4b4:	82 81       	ldd	r24, Z+2	; 0x02
    b4b6:	93 81       	ldd	r25, Z+3	; 0x03
    b4b8:	20 e0       	ldi	r18, 0x00	; 0
    b4ba:	3f ef       	ldi	r19, 0xFF	; 255
    b4bc:	4f e7       	ldi	r20, 0x7F	; 127
    b4be:	57 e4       	ldi	r21, 0x47	; 71
    b4c0:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    b4c4:	18 16       	cp	r1, r24
    b4c6:	0c f0       	brlt	.+2      	; 0xb4ca <main+0x77f6>
    b4c8:	10 e0       	ldi	r17, 0x00	; 0
    b4ca:	11 23       	and	r17, r17
    b4cc:	09 f4       	brne	.+2      	; 0xb4d0 <main+0x77fc>
    b4ce:	4d c0       	rjmp	.+154    	; 0xb56a <main+0x7896>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    b4d0:	ce 01       	movw	r24, r28
    b4d2:	81 58       	subi	r24, 0x81	; 129
    b4d4:	9c 4f       	sbci	r25, 0xFC	; 252
    b4d6:	fc 01       	movw	r30, r24
    b4d8:	60 81       	ld	r22, Z
    b4da:	71 81       	ldd	r23, Z+1	; 0x01
    b4dc:	82 81       	ldd	r24, Z+2	; 0x02
    b4de:	93 81       	ldd	r25, Z+3	; 0x03
    b4e0:	20 e0       	ldi	r18, 0x00	; 0
    b4e2:	30 e0       	ldi	r19, 0x00	; 0
    b4e4:	40 e2       	ldi	r20, 0x20	; 32
    b4e6:	51 e4       	ldi	r21, 0x41	; 65
    b4e8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b4ec:	dc 01       	movw	r26, r24
    b4ee:	cb 01       	movw	r24, r22
    b4f0:	8e 01       	movw	r16, r28
    b4f2:	09 57       	subi	r16, 0x79	; 121
    b4f4:	1c 4f       	sbci	r17, 0xFC	; 252
    b4f6:	bc 01       	movw	r22, r24
    b4f8:	cd 01       	movw	r24, r26
    b4fa:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b4fe:	dc 01       	movw	r26, r24
    b500:	cb 01       	movw	r24, r22
    b502:	f8 01       	movw	r30, r16
    b504:	91 83       	std	Z+1, r25	; 0x01
    b506:	80 83       	st	Z, r24
    b508:	27 c0       	rjmp	.+78     	; 0xb558 <main+0x7884>
    b50a:	ce 01       	movw	r24, r28
    b50c:	87 57       	subi	r24, 0x77	; 119
    b50e:	9c 4f       	sbci	r25, 0xFC	; 252
    b510:	20 e7       	ldi	r18, 0x70	; 112
    b512:	31 e0       	ldi	r19, 0x01	; 1
    b514:	fc 01       	movw	r30, r24
    b516:	31 83       	std	Z+1, r19	; 0x01
    b518:	20 83       	st	Z, r18
    b51a:	ce 01       	movw	r24, r28
    b51c:	87 57       	subi	r24, 0x77	; 119
    b51e:	9c 4f       	sbci	r25, 0xFC	; 252
    b520:	fc 01       	movw	r30, r24
    b522:	80 81       	ld	r24, Z
    b524:	91 81       	ldd	r25, Z+1	; 0x01
    b526:	8c 01       	movw	r16, r24
    b528:	c8 01       	movw	r24, r16
    b52a:	01 97       	sbiw	r24, 0x01	; 1
    b52c:	f1 f7       	brne	.-4      	; 0xb52a <main+0x7856>
    b52e:	8c 01       	movw	r16, r24
    b530:	ce 01       	movw	r24, r28
    b532:	87 57       	subi	r24, 0x77	; 119
    b534:	9c 4f       	sbci	r25, 0xFC	; 252
    b536:	fc 01       	movw	r30, r24
    b538:	11 83       	std	Z+1, r17	; 0x01
    b53a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    b53c:	ce 01       	movw	r24, r28
    b53e:	89 57       	subi	r24, 0x79	; 121
    b540:	9c 4f       	sbci	r25, 0xFC	; 252
    b542:	9e 01       	movw	r18, r28
    b544:	29 57       	subi	r18, 0x79	; 121
    b546:	3c 4f       	sbci	r19, 0xFC	; 252
    b548:	f9 01       	movw	r30, r18
    b54a:	20 81       	ld	r18, Z
    b54c:	31 81       	ldd	r19, Z+1	; 0x01
    b54e:	21 50       	subi	r18, 0x01	; 1
    b550:	30 40       	sbci	r19, 0x00	; 0
    b552:	fc 01       	movw	r30, r24
    b554:	31 83       	std	Z+1, r19	; 0x01
    b556:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    b558:	ce 01       	movw	r24, r28
    b55a:	89 57       	subi	r24, 0x79	; 121
    b55c:	9c 4f       	sbci	r25, 0xFC	; 252
    b55e:	fc 01       	movw	r30, r24
    b560:	80 81       	ld	r24, Z
    b562:	91 81       	ldd	r25, Z+1	; 0x01
    b564:	00 97       	sbiw	r24, 0x00	; 0
    b566:	89 f6       	brne	.-94     	; 0xb50a <main+0x7836>
    b568:	2f c0       	rjmp	.+94     	; 0xb5c8 <main+0x78f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    b56a:	8e 01       	movw	r16, r28
    b56c:	09 57       	subi	r16, 0x79	; 121
    b56e:	1c 4f       	sbci	r17, 0xFC	; 252
    b570:	ce 01       	movw	r24, r28
    b572:	8d 57       	subi	r24, 0x7D	; 125
    b574:	9c 4f       	sbci	r25, 0xFC	; 252
    b576:	fc 01       	movw	r30, r24
    b578:	60 81       	ld	r22, Z
    b57a:	71 81       	ldd	r23, Z+1	; 0x01
    b57c:	82 81       	ldd	r24, Z+2	; 0x02
    b57e:	93 81       	ldd	r25, Z+3	; 0x03
    b580:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b584:	dc 01       	movw	r26, r24
    b586:	cb 01       	movw	r24, r22
    b588:	f8 01       	movw	r30, r16
    b58a:	91 83       	std	Z+1, r25	; 0x01
    b58c:	80 83       	st	Z, r24
    b58e:	ce 01       	movw	r24, r28
    b590:	85 57       	subi	r24, 0x75	; 117
    b592:	9c 4f       	sbci	r25, 0xFC	; 252
    b594:	9e 01       	movw	r18, r28
    b596:	29 57       	subi	r18, 0x79	; 121
    b598:	3c 4f       	sbci	r19, 0xFC	; 252
    b59a:	f9 01       	movw	r30, r18
    b59c:	20 81       	ld	r18, Z
    b59e:	31 81       	ldd	r19, Z+1	; 0x01
    b5a0:	fc 01       	movw	r30, r24
    b5a2:	31 83       	std	Z+1, r19	; 0x01
    b5a4:	20 83       	st	Z, r18
    b5a6:	ce 01       	movw	r24, r28
    b5a8:	85 57       	subi	r24, 0x75	; 117
    b5aa:	9c 4f       	sbci	r25, 0xFC	; 252
    b5ac:	fc 01       	movw	r30, r24
    b5ae:	80 81       	ld	r24, Z
    b5b0:	91 81       	ldd	r25, Z+1	; 0x01
    b5b2:	8c 01       	movw	r16, r24
    b5b4:	c8 01       	movw	r24, r16
    b5b6:	01 97       	sbiw	r24, 0x01	; 1
    b5b8:	f1 f7       	brne	.-4      	; 0xb5b6 <main+0x78e2>
    b5ba:	8c 01       	movw	r16, r24
    b5bc:	ce 01       	movw	r24, r28
    b5be:	85 57       	subi	r24, 0x75	; 117
    b5c0:	9c 4f       	sbci	r25, 0xFC	; 252
    b5c2:	fc 01       	movw	r30, r24
    b5c4:	11 83       	std	Z+1, r17	; 0x01
    b5c6:	00 83       	st	Z, r16
					_delay_ms(30);
					back_mm(65);
    b5c8:	81 e4       	ldi	r24, 0x41	; 65
    b5ca:	90 e0       	ldi	r25, 0x00	; 0
    b5cc:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    b5d0:	9e 01       	movw	r18, r28
    b5d2:	23 57       	subi	r18, 0x73	; 115
    b5d4:	3c 4f       	sbci	r19, 0xFC	; 252
    b5d6:	80 e0       	ldi	r24, 0x00	; 0
    b5d8:	90 e0       	ldi	r25, 0x00	; 0
    b5da:	aa ef       	ldi	r26, 0xFA	; 250
    b5dc:	b3 e4       	ldi	r27, 0x43	; 67
    b5de:	f9 01       	movw	r30, r18
    b5e0:	80 83       	st	Z, r24
    b5e2:	91 83       	std	Z+1, r25	; 0x01
    b5e4:	a2 83       	std	Z+2, r26	; 0x02
    b5e6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    b5e8:	8e 01       	movw	r16, r28
    b5ea:	0f 56       	subi	r16, 0x6F	; 111
    b5ec:	1c 4f       	sbci	r17, 0xFC	; 252
    b5ee:	ce 01       	movw	r24, r28
    b5f0:	83 57       	subi	r24, 0x73	; 115
    b5f2:	9c 4f       	sbci	r25, 0xFC	; 252
    b5f4:	fc 01       	movw	r30, r24
    b5f6:	60 81       	ld	r22, Z
    b5f8:	71 81       	ldd	r23, Z+1	; 0x01
    b5fa:	82 81       	ldd	r24, Z+2	; 0x02
    b5fc:	93 81       	ldd	r25, Z+3	; 0x03
    b5fe:	26 e6       	ldi	r18, 0x66	; 102
    b600:	36 e6       	ldi	r19, 0x66	; 102
    b602:	46 e6       	ldi	r20, 0x66	; 102
    b604:	55 e4       	ldi	r21, 0x45	; 69
    b606:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b60a:	dc 01       	movw	r26, r24
    b60c:	cb 01       	movw	r24, r22
    b60e:	f8 01       	movw	r30, r16
    b610:	80 83       	st	Z, r24
    b612:	91 83       	std	Z+1, r25	; 0x01
    b614:	a2 83       	std	Z+2, r26	; 0x02
    b616:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b618:	ce 01       	movw	r24, r28
    b61a:	8f 56       	subi	r24, 0x6F	; 111
    b61c:	9c 4f       	sbci	r25, 0xFC	; 252
    b61e:	11 e0       	ldi	r17, 0x01	; 1
    b620:	fc 01       	movw	r30, r24
    b622:	60 81       	ld	r22, Z
    b624:	71 81       	ldd	r23, Z+1	; 0x01
    b626:	82 81       	ldd	r24, Z+2	; 0x02
    b628:	93 81       	ldd	r25, Z+3	; 0x03
    b62a:	20 e0       	ldi	r18, 0x00	; 0
    b62c:	30 e0       	ldi	r19, 0x00	; 0
    b62e:	40 e8       	ldi	r20, 0x80	; 128
    b630:	5f e3       	ldi	r21, 0x3F	; 63
    b632:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    b636:	88 23       	and	r24, r24
    b638:	0c f0       	brlt	.+2      	; 0xb63c <main+0x7968>
    b63a:	10 e0       	ldi	r17, 0x00	; 0
    b63c:	11 23       	and	r17, r17
    b63e:	49 f0       	breq	.+18     	; 0xb652 <main+0x797e>
		__ticks = 1;
    b640:	ce 01       	movw	r24, r28
    b642:	8b 56       	subi	r24, 0x6B	; 107
    b644:	9c 4f       	sbci	r25, 0xFC	; 252
    b646:	21 e0       	ldi	r18, 0x01	; 1
    b648:	30 e0       	ldi	r19, 0x00	; 0
    b64a:	fc 01       	movw	r30, r24
    b64c:	31 83       	std	Z+1, r19	; 0x01
    b64e:	20 83       	st	Z, r18
    b650:	74 c0       	rjmp	.+232    	; 0xb73a <main+0x7a66>
	else if (__tmp > 65535)
    b652:	ce 01       	movw	r24, r28
    b654:	8f 56       	subi	r24, 0x6F	; 111
    b656:	9c 4f       	sbci	r25, 0xFC	; 252
    b658:	11 e0       	ldi	r17, 0x01	; 1
    b65a:	fc 01       	movw	r30, r24
    b65c:	60 81       	ld	r22, Z
    b65e:	71 81       	ldd	r23, Z+1	; 0x01
    b660:	82 81       	ldd	r24, Z+2	; 0x02
    b662:	93 81       	ldd	r25, Z+3	; 0x03
    b664:	20 e0       	ldi	r18, 0x00	; 0
    b666:	3f ef       	ldi	r19, 0xFF	; 255
    b668:	4f e7       	ldi	r20, 0x7F	; 127
    b66a:	57 e4       	ldi	r21, 0x47	; 71
    b66c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    b670:	18 16       	cp	r1, r24
    b672:	0c f0       	brlt	.+2      	; 0xb676 <main+0x79a2>
    b674:	10 e0       	ldi	r17, 0x00	; 0
    b676:	11 23       	and	r17, r17
    b678:	09 f4       	brne	.+2      	; 0xb67c <main+0x79a8>
    b67a:	4d c0       	rjmp	.+154    	; 0xb716 <main+0x7a42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    b67c:	ce 01       	movw	r24, r28
    b67e:	83 57       	subi	r24, 0x73	; 115
    b680:	9c 4f       	sbci	r25, 0xFC	; 252
    b682:	fc 01       	movw	r30, r24
    b684:	60 81       	ld	r22, Z
    b686:	71 81       	ldd	r23, Z+1	; 0x01
    b688:	82 81       	ldd	r24, Z+2	; 0x02
    b68a:	93 81       	ldd	r25, Z+3	; 0x03
    b68c:	20 e0       	ldi	r18, 0x00	; 0
    b68e:	30 e0       	ldi	r19, 0x00	; 0
    b690:	40 e2       	ldi	r20, 0x20	; 32
    b692:	51 e4       	ldi	r21, 0x41	; 65
    b694:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b698:	dc 01       	movw	r26, r24
    b69a:	cb 01       	movw	r24, r22
    b69c:	8e 01       	movw	r16, r28
    b69e:	0b 56       	subi	r16, 0x6B	; 107
    b6a0:	1c 4f       	sbci	r17, 0xFC	; 252
    b6a2:	bc 01       	movw	r22, r24
    b6a4:	cd 01       	movw	r24, r26
    b6a6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b6aa:	dc 01       	movw	r26, r24
    b6ac:	cb 01       	movw	r24, r22
    b6ae:	f8 01       	movw	r30, r16
    b6b0:	91 83       	std	Z+1, r25	; 0x01
    b6b2:	80 83       	st	Z, r24
    b6b4:	27 c0       	rjmp	.+78     	; 0xb704 <main+0x7a30>
    b6b6:	ce 01       	movw	r24, r28
    b6b8:	89 56       	subi	r24, 0x69	; 105
    b6ba:	9c 4f       	sbci	r25, 0xFC	; 252
    b6bc:	20 e7       	ldi	r18, 0x70	; 112
    b6be:	31 e0       	ldi	r19, 0x01	; 1
    b6c0:	fc 01       	movw	r30, r24
    b6c2:	31 83       	std	Z+1, r19	; 0x01
    b6c4:	20 83       	st	Z, r18
    b6c6:	ce 01       	movw	r24, r28
    b6c8:	89 56       	subi	r24, 0x69	; 105
    b6ca:	9c 4f       	sbci	r25, 0xFC	; 252
    b6cc:	fc 01       	movw	r30, r24
    b6ce:	80 81       	ld	r24, Z
    b6d0:	91 81       	ldd	r25, Z+1	; 0x01
    b6d2:	8c 01       	movw	r16, r24
    b6d4:	c8 01       	movw	r24, r16
    b6d6:	01 97       	sbiw	r24, 0x01	; 1
    b6d8:	f1 f7       	brne	.-4      	; 0xb6d6 <main+0x7a02>
    b6da:	8c 01       	movw	r16, r24
    b6dc:	ce 01       	movw	r24, r28
    b6de:	89 56       	subi	r24, 0x69	; 105
    b6e0:	9c 4f       	sbci	r25, 0xFC	; 252
    b6e2:	fc 01       	movw	r30, r24
    b6e4:	11 83       	std	Z+1, r17	; 0x01
    b6e6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    b6e8:	ce 01       	movw	r24, r28
    b6ea:	8b 56       	subi	r24, 0x6B	; 107
    b6ec:	9c 4f       	sbci	r25, 0xFC	; 252
    b6ee:	9e 01       	movw	r18, r28
    b6f0:	2b 56       	subi	r18, 0x6B	; 107
    b6f2:	3c 4f       	sbci	r19, 0xFC	; 252
    b6f4:	f9 01       	movw	r30, r18
    b6f6:	20 81       	ld	r18, Z
    b6f8:	31 81       	ldd	r19, Z+1	; 0x01
    b6fa:	21 50       	subi	r18, 0x01	; 1
    b6fc:	30 40       	sbci	r19, 0x00	; 0
    b6fe:	fc 01       	movw	r30, r24
    b700:	31 83       	std	Z+1, r19	; 0x01
    b702:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    b704:	ce 01       	movw	r24, r28
    b706:	8b 56       	subi	r24, 0x6B	; 107
    b708:	9c 4f       	sbci	r25, 0xFC	; 252
    b70a:	fc 01       	movw	r30, r24
    b70c:	80 81       	ld	r24, Z
    b70e:	91 81       	ldd	r25, Z+1	; 0x01
    b710:	00 97       	sbiw	r24, 0x00	; 0
    b712:	89 f6       	brne	.-94     	; 0xb6b6 <main+0x79e2>
    b714:	2f c0       	rjmp	.+94     	; 0xb774 <main+0x7aa0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    b716:	8e 01       	movw	r16, r28
    b718:	0b 56       	subi	r16, 0x6B	; 107
    b71a:	1c 4f       	sbci	r17, 0xFC	; 252
    b71c:	ce 01       	movw	r24, r28
    b71e:	8f 56       	subi	r24, 0x6F	; 111
    b720:	9c 4f       	sbci	r25, 0xFC	; 252
    b722:	fc 01       	movw	r30, r24
    b724:	60 81       	ld	r22, Z
    b726:	71 81       	ldd	r23, Z+1	; 0x01
    b728:	82 81       	ldd	r24, Z+2	; 0x02
    b72a:	93 81       	ldd	r25, Z+3	; 0x03
    b72c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b730:	dc 01       	movw	r26, r24
    b732:	cb 01       	movw	r24, r22
    b734:	f8 01       	movw	r30, r16
    b736:	91 83       	std	Z+1, r25	; 0x01
    b738:	80 83       	st	Z, r24
    b73a:	ce 01       	movw	r24, r28
    b73c:	87 56       	subi	r24, 0x67	; 103
    b73e:	9c 4f       	sbci	r25, 0xFC	; 252
    b740:	9e 01       	movw	r18, r28
    b742:	2b 56       	subi	r18, 0x6B	; 107
    b744:	3c 4f       	sbci	r19, 0xFC	; 252
    b746:	f9 01       	movw	r30, r18
    b748:	20 81       	ld	r18, Z
    b74a:	31 81       	ldd	r19, Z+1	; 0x01
    b74c:	fc 01       	movw	r30, r24
    b74e:	31 83       	std	Z+1, r19	; 0x01
    b750:	20 83       	st	Z, r18
    b752:	ce 01       	movw	r24, r28
    b754:	87 56       	subi	r24, 0x67	; 103
    b756:	9c 4f       	sbci	r25, 0xFC	; 252
    b758:	fc 01       	movw	r30, r24
    b75a:	80 81       	ld	r24, Z
    b75c:	91 81       	ldd	r25, Z+1	; 0x01
    b75e:	8c 01       	movw	r16, r24
    b760:	c8 01       	movw	r24, r16
    b762:	01 97       	sbiw	r24, 0x01	; 1
    b764:	f1 f7       	brne	.-4      	; 0xb762 <main+0x7a8e>
    b766:	8c 01       	movw	r16, r24
    b768:	ce 01       	movw	r24, r28
    b76a:	87 56       	subi	r24, 0x67	; 103
    b76c:	9c 4f       	sbci	r25, 0xFC	; 252
    b76e:	fc 01       	movw	r30, r24
    b770:	11 83       	std	Z+1, r17	; 0x01
    b772:	00 83       	st	Z, r16
					_delay_ms(500);
					left_degrees(45);
    b774:	8d e2       	ldi	r24, 0x2D	; 45
    b776:	90 e0       	ldi	r25, 0x00	; 0
    b778:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
					right_degrees(180);
    b77c:	84 eb       	ldi	r24, 0xB4	; 180
    b77e:	90 e0       	ldi	r25, 0x00	; 0
    b780:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
					compass=7;
    b784:	87 e0       	ldi	r24, 0x07	; 7
    b786:	90 e0       	ldi	r25, 0x00	; 0
    b788:	9c 83       	std	Y+4, r25	; 0x04
    b78a:	8b 83       	std	Y+3, r24	; 0x03
					break;
    b78c:	0e c0       	rjmp	.+28     	; 0xb7aa <main+0x7ad6>
	}
	else
	{
		if(compass==6)
		{
			for(int i=0;i<4;i++)
    b78e:	8d a1       	lds	r24, 0x4d
    b790:	9e a1       	lds	r25, 0x4e
    b792:	01 96       	adiw	r24, 0x01	; 1
    b794:	9e a3       	lds	r25, 0x5e
    b796:	8d a3       	lds	r24, 0x5d
    b798:	8d a1       	lds	r24, 0x4d
    b79a:	9e a1       	lds	r25, 0x4e
    b79c:	84 30       	cpi	r24, 0x04	; 4
    b79e:	91 05       	cpc	r25, r1
    b7a0:	14 f4       	brge	.+4      	; 0xb7a6 <main+0x7ad2>
    b7a2:	0c 94 14 53 	jmp	0xa628	; 0xa628 <main+0x6954>
    b7a6:	0c 94 89 67 	jmp	0xcf12	; 0xcf12 <main+0x923e>
					}
				}					
			}
		}
	}
	goto hotspot;
    b7aa:	0c 94 5d 3b 	jmp	0x76ba	; 0x76ba <main+0x39e6>
				}
			}
		}
		else
		{
			if(compass==7)
    b7ae:	8b 81       	ldd	r24, Y+3	; 0x03
    b7b0:	9c 81       	ldd	r25, Y+4	; 0x04
    b7b2:	87 30       	cpi	r24, 0x07	; 7
    b7b4:	91 05       	cpc	r25, r1
    b7b6:	11 f0       	breq	.+4      	; 0xb7bc <main+0x7ae8>
    b7b8:	0c 94 5d 3b 	jmp	0x76ba	; 0x76ba <main+0x39e6>
			{
				for(int i=0;i<4;i++)
    b7bc:	18 a6       	lds	r17, 0xb8
    b7be:	1f a2       	lds	r17, 0x9f
    b7c0:	0c 94 80 67 	jmp	0xcf00	; 0xcf00 <main+0x922c>
				{
					if(coor[1]<origin2[boxnumber][i][1] && coor[0]>origin2[boxnumber][i][0])
    b7c4:	20 91 a8 04 	lds	r18, 0x04A8
    b7c8:	30 91 a9 04 	lds	r19, 0x04A9
    b7cc:	ae 01       	movw	r20, r28
    b7ce:	4d 5f       	subi	r20, 0xFD	; 253
    b7d0:	5a 4f       	sbci	r21, 0xFA	; 250
    b7d2:	8d 81       	ldd	r24, Y+5	; 0x05
    b7d4:	9e 81       	ldd	r25, Y+6	; 0x06
    b7d6:	bc 01       	movw	r22, r24
    b7d8:	66 0f       	add	r22, r22
    b7da:	77 1f       	adc	r23, r23
    b7dc:	66 0f       	add	r22, r22
    b7de:	77 1f       	adc	r23, r23
    b7e0:	8f a1       	lds	r24, 0x4f
    b7e2:	98 a5       	lds	r25, 0x68
    b7e4:	86 0f       	add	r24, r22
    b7e6:	97 1f       	adc	r25, r23
    b7e8:	88 0f       	add	r24, r24
    b7ea:	99 1f       	adc	r25, r25
    b7ec:	88 0f       	add	r24, r24
    b7ee:	99 1f       	adc	r25, r25
    b7f0:	84 0f       	add	r24, r20
    b7f2:	95 1f       	adc	r25, r21
    b7f4:	02 96       	adiw	r24, 0x02	; 2
    b7f6:	fc 01       	movw	r30, r24
    b7f8:	80 81       	ld	r24, Z
    b7fa:	91 81       	ldd	r25, Z+1	; 0x01
    b7fc:	28 17       	cp	r18, r24
    b7fe:	39 07       	cpc	r19, r25
    b800:	0c f0       	brlt	.+2      	; 0xb804 <main+0x7b30>
    b802:	ca c2       	rjmp	.+1428   	; 0xbd98 <main+0x80c4>
    b804:	20 91 a6 04 	lds	r18, 0x04A6
    b808:	30 91 a7 04 	lds	r19, 0x04A7
    b80c:	ae 01       	movw	r20, r28
    b80e:	4d 5f       	subi	r20, 0xFD	; 253
    b810:	5a 4f       	sbci	r21, 0xFA	; 250
    b812:	8d 81       	ldd	r24, Y+5	; 0x05
    b814:	9e 81       	ldd	r25, Y+6	; 0x06
    b816:	bc 01       	movw	r22, r24
    b818:	66 0f       	add	r22, r22
    b81a:	77 1f       	adc	r23, r23
    b81c:	66 0f       	add	r22, r22
    b81e:	77 1f       	adc	r23, r23
    b820:	8f a1       	lds	r24, 0x4f
    b822:	98 a5       	lds	r25, 0x68
    b824:	86 0f       	add	r24, r22
    b826:	97 1f       	adc	r25, r23
    b828:	88 0f       	add	r24, r24
    b82a:	99 1f       	adc	r25, r25
    b82c:	88 0f       	add	r24, r24
    b82e:	99 1f       	adc	r25, r25
    b830:	84 0f       	add	r24, r20
    b832:	95 1f       	adc	r25, r21
    b834:	fc 01       	movw	r30, r24
    b836:	80 81       	ld	r24, Z
    b838:	91 81       	ldd	r25, Z+1	; 0x01
    b83a:	82 17       	cp	r24, r18
    b83c:	93 07       	cpc	r25, r19
    b83e:	0c f0       	brlt	.+2      	; 0xb842 <main+0x7b6e>
    b840:	ab c2       	rjmp	.+1366   	; 0xbd98 <main+0x80c4>
					{
						right_degrees(45);
    b842:	8d e2       	ldi	r24, 0x2D	; 45
    b844:	90 e0       	ldi	r25, 0x00	; 0
    b846:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						back_mm(65);
    b84a:	81 e4       	ldi	r24, 0x41	; 65
    b84c:	90 e0       	ldi	r25, 0x00	; 0
    b84e:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
						matrix2();
    b852:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
							if(summ1[recur+1]>10)
    b856:	8f 81       	ldd	r24, Y+7	; 0x07
    b858:	98 85       	ldd	r25, Y+8	; 0x08
    b85a:	01 96       	adiw	r24, 0x01	; 1
    b85c:	9e 01       	movw	r18, r28
    b85e:	25 54       	subi	r18, 0x45	; 69
    b860:	39 4f       	sbci	r19, 0xF9	; 249
    b862:	88 0f       	add	r24, r24
    b864:	99 1f       	adc	r25, r25
    b866:	82 0f       	add	r24, r18
    b868:	93 1f       	adc	r25, r19
    b86a:	fc 01       	movw	r30, r24
    b86c:	80 81       	ld	r24, Z
    b86e:	91 81       	ldd	r25, Z+1	; 0x01
    b870:	8b 30       	cpi	r24, 0x0B	; 11
    b872:	91 05       	cpc	r25, r1
    b874:	0c f4       	brge	.+2      	; 0xb878 <main+0x7ba4>
    b876:	d6 c0       	rjmp	.+428    	; 0xba24 <main+0x7d50>
							{
								buzzer_on();
    b878:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    b87c:	9e 01       	movw	r18, r28
    b87e:	25 56       	subi	r18, 0x65	; 101
    b880:	3c 4f       	sbci	r19, 0xFC	; 252
    b882:	80 e0       	ldi	r24, 0x00	; 0
    b884:	90 e0       	ldi	r25, 0x00	; 0
    b886:	aa e7       	ldi	r26, 0x7A	; 122
    b888:	b4 e4       	ldi	r27, 0x44	; 68
    b88a:	f9 01       	movw	r30, r18
    b88c:	80 83       	st	Z, r24
    b88e:	91 83       	std	Z+1, r25	; 0x01
    b890:	a2 83       	std	Z+2, r26	; 0x02
    b892:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    b894:	8e 01       	movw	r16, r28
    b896:	01 56       	subi	r16, 0x61	; 97
    b898:	1c 4f       	sbci	r17, 0xFC	; 252
    b89a:	ce 01       	movw	r24, r28
    b89c:	85 56       	subi	r24, 0x65	; 101
    b89e:	9c 4f       	sbci	r25, 0xFC	; 252
    b8a0:	fc 01       	movw	r30, r24
    b8a2:	60 81       	ld	r22, Z
    b8a4:	71 81       	ldd	r23, Z+1	; 0x01
    b8a6:	82 81       	ldd	r24, Z+2	; 0x02
    b8a8:	93 81       	ldd	r25, Z+3	; 0x03
    b8aa:	26 e6       	ldi	r18, 0x66	; 102
    b8ac:	36 e6       	ldi	r19, 0x66	; 102
    b8ae:	46 e6       	ldi	r20, 0x66	; 102
    b8b0:	55 e4       	ldi	r21, 0x45	; 69
    b8b2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b8b6:	dc 01       	movw	r26, r24
    b8b8:	cb 01       	movw	r24, r22
    b8ba:	f8 01       	movw	r30, r16
    b8bc:	80 83       	st	Z, r24
    b8be:	91 83       	std	Z+1, r25	; 0x01
    b8c0:	a2 83       	std	Z+2, r26	; 0x02
    b8c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b8c4:	ce 01       	movw	r24, r28
    b8c6:	81 56       	subi	r24, 0x61	; 97
    b8c8:	9c 4f       	sbci	r25, 0xFC	; 252
    b8ca:	11 e0       	ldi	r17, 0x01	; 1
    b8cc:	fc 01       	movw	r30, r24
    b8ce:	60 81       	ld	r22, Z
    b8d0:	71 81       	ldd	r23, Z+1	; 0x01
    b8d2:	82 81       	ldd	r24, Z+2	; 0x02
    b8d4:	93 81       	ldd	r25, Z+3	; 0x03
    b8d6:	20 e0       	ldi	r18, 0x00	; 0
    b8d8:	30 e0       	ldi	r19, 0x00	; 0
    b8da:	40 e8       	ldi	r20, 0x80	; 128
    b8dc:	5f e3       	ldi	r21, 0x3F	; 63
    b8de:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    b8e2:	88 23       	and	r24, r24
    b8e4:	0c f0       	brlt	.+2      	; 0xb8e8 <main+0x7c14>
    b8e6:	10 e0       	ldi	r17, 0x00	; 0
    b8e8:	11 23       	and	r17, r17
    b8ea:	49 f0       	breq	.+18     	; 0xb8fe <main+0x7c2a>
		__ticks = 1;
    b8ec:	ce 01       	movw	r24, r28
    b8ee:	8d 55       	subi	r24, 0x5D	; 93
    b8f0:	9c 4f       	sbci	r25, 0xFC	; 252
    b8f2:	21 e0       	ldi	r18, 0x01	; 1
    b8f4:	30 e0       	ldi	r19, 0x00	; 0
    b8f6:	fc 01       	movw	r30, r24
    b8f8:	31 83       	std	Z+1, r19	; 0x01
    b8fa:	20 83       	st	Z, r18
    b8fc:	74 c0       	rjmp	.+232    	; 0xb9e6 <main+0x7d12>
	else if (__tmp > 65535)
    b8fe:	ce 01       	movw	r24, r28
    b900:	81 56       	subi	r24, 0x61	; 97
    b902:	9c 4f       	sbci	r25, 0xFC	; 252
    b904:	11 e0       	ldi	r17, 0x01	; 1
    b906:	fc 01       	movw	r30, r24
    b908:	60 81       	ld	r22, Z
    b90a:	71 81       	ldd	r23, Z+1	; 0x01
    b90c:	82 81       	ldd	r24, Z+2	; 0x02
    b90e:	93 81       	ldd	r25, Z+3	; 0x03
    b910:	20 e0       	ldi	r18, 0x00	; 0
    b912:	3f ef       	ldi	r19, 0xFF	; 255
    b914:	4f e7       	ldi	r20, 0x7F	; 127
    b916:	57 e4       	ldi	r21, 0x47	; 71
    b918:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    b91c:	18 16       	cp	r1, r24
    b91e:	0c f0       	brlt	.+2      	; 0xb922 <main+0x7c4e>
    b920:	10 e0       	ldi	r17, 0x00	; 0
    b922:	11 23       	and	r17, r17
    b924:	09 f4       	brne	.+2      	; 0xb928 <main+0x7c54>
    b926:	4d c0       	rjmp	.+154    	; 0xb9c2 <main+0x7cee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    b928:	ce 01       	movw	r24, r28
    b92a:	85 56       	subi	r24, 0x65	; 101
    b92c:	9c 4f       	sbci	r25, 0xFC	; 252
    b92e:	fc 01       	movw	r30, r24
    b930:	60 81       	ld	r22, Z
    b932:	71 81       	ldd	r23, Z+1	; 0x01
    b934:	82 81       	ldd	r24, Z+2	; 0x02
    b936:	93 81       	ldd	r25, Z+3	; 0x03
    b938:	20 e0       	ldi	r18, 0x00	; 0
    b93a:	30 e0       	ldi	r19, 0x00	; 0
    b93c:	40 e2       	ldi	r20, 0x20	; 32
    b93e:	51 e4       	ldi	r21, 0x41	; 65
    b940:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    b944:	dc 01       	movw	r26, r24
    b946:	cb 01       	movw	r24, r22
    b948:	8e 01       	movw	r16, r28
    b94a:	0d 55       	subi	r16, 0x5D	; 93
    b94c:	1c 4f       	sbci	r17, 0xFC	; 252
    b94e:	bc 01       	movw	r22, r24
    b950:	cd 01       	movw	r24, r26
    b952:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b956:	dc 01       	movw	r26, r24
    b958:	cb 01       	movw	r24, r22
    b95a:	f8 01       	movw	r30, r16
    b95c:	91 83       	std	Z+1, r25	; 0x01
    b95e:	80 83       	st	Z, r24
    b960:	27 c0       	rjmp	.+78     	; 0xb9b0 <main+0x7cdc>
    b962:	ce 01       	movw	r24, r28
    b964:	8b 55       	subi	r24, 0x5B	; 91
    b966:	9c 4f       	sbci	r25, 0xFC	; 252
    b968:	20 e7       	ldi	r18, 0x70	; 112
    b96a:	31 e0       	ldi	r19, 0x01	; 1
    b96c:	fc 01       	movw	r30, r24
    b96e:	31 83       	std	Z+1, r19	; 0x01
    b970:	20 83       	st	Z, r18
    b972:	ce 01       	movw	r24, r28
    b974:	8b 55       	subi	r24, 0x5B	; 91
    b976:	9c 4f       	sbci	r25, 0xFC	; 252
    b978:	fc 01       	movw	r30, r24
    b97a:	80 81       	ld	r24, Z
    b97c:	91 81       	ldd	r25, Z+1	; 0x01
    b97e:	8c 01       	movw	r16, r24
    b980:	c8 01       	movw	r24, r16
    b982:	01 97       	sbiw	r24, 0x01	; 1
    b984:	f1 f7       	brne	.-4      	; 0xb982 <main+0x7cae>
    b986:	8c 01       	movw	r16, r24
    b988:	ce 01       	movw	r24, r28
    b98a:	8b 55       	subi	r24, 0x5B	; 91
    b98c:	9c 4f       	sbci	r25, 0xFC	; 252
    b98e:	fc 01       	movw	r30, r24
    b990:	11 83       	std	Z+1, r17	; 0x01
    b992:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    b994:	ce 01       	movw	r24, r28
    b996:	8d 55       	subi	r24, 0x5D	; 93
    b998:	9c 4f       	sbci	r25, 0xFC	; 252
    b99a:	9e 01       	movw	r18, r28
    b99c:	2d 55       	subi	r18, 0x5D	; 93
    b99e:	3c 4f       	sbci	r19, 0xFC	; 252
    b9a0:	f9 01       	movw	r30, r18
    b9a2:	20 81       	ld	r18, Z
    b9a4:	31 81       	ldd	r19, Z+1	; 0x01
    b9a6:	21 50       	subi	r18, 0x01	; 1
    b9a8:	30 40       	sbci	r19, 0x00	; 0
    b9aa:	fc 01       	movw	r30, r24
    b9ac:	31 83       	std	Z+1, r19	; 0x01
    b9ae:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    b9b0:	ce 01       	movw	r24, r28
    b9b2:	8d 55       	subi	r24, 0x5D	; 93
    b9b4:	9c 4f       	sbci	r25, 0xFC	; 252
    b9b6:	fc 01       	movw	r30, r24
    b9b8:	80 81       	ld	r24, Z
    b9ba:	91 81       	ldd	r25, Z+1	; 0x01
    b9bc:	00 97       	sbiw	r24, 0x00	; 0
    b9be:	89 f6       	brne	.-94     	; 0xb962 <main+0x7c8e>
    b9c0:	2f c0       	rjmp	.+94     	; 0xba20 <main+0x7d4c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    b9c2:	8e 01       	movw	r16, r28
    b9c4:	0d 55       	subi	r16, 0x5D	; 93
    b9c6:	1c 4f       	sbci	r17, 0xFC	; 252
    b9c8:	ce 01       	movw	r24, r28
    b9ca:	81 56       	subi	r24, 0x61	; 97
    b9cc:	9c 4f       	sbci	r25, 0xFC	; 252
    b9ce:	fc 01       	movw	r30, r24
    b9d0:	60 81       	ld	r22, Z
    b9d2:	71 81       	ldd	r23, Z+1	; 0x01
    b9d4:	82 81       	ldd	r24, Z+2	; 0x02
    b9d6:	93 81       	ldd	r25, Z+3	; 0x03
    b9d8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    b9dc:	dc 01       	movw	r26, r24
    b9de:	cb 01       	movw	r24, r22
    b9e0:	f8 01       	movw	r30, r16
    b9e2:	91 83       	std	Z+1, r25	; 0x01
    b9e4:	80 83       	st	Z, r24
    b9e6:	ce 01       	movw	r24, r28
    b9e8:	89 55       	subi	r24, 0x59	; 89
    b9ea:	9c 4f       	sbci	r25, 0xFC	; 252
    b9ec:	9e 01       	movw	r18, r28
    b9ee:	2d 55       	subi	r18, 0x5D	; 93
    b9f0:	3c 4f       	sbci	r19, 0xFC	; 252
    b9f2:	f9 01       	movw	r30, r18
    b9f4:	20 81       	ld	r18, Z
    b9f6:	31 81       	ldd	r19, Z+1	; 0x01
    b9f8:	fc 01       	movw	r30, r24
    b9fa:	31 83       	std	Z+1, r19	; 0x01
    b9fc:	20 83       	st	Z, r18
    b9fe:	ce 01       	movw	r24, r28
    ba00:	89 55       	subi	r24, 0x59	; 89
    ba02:	9c 4f       	sbci	r25, 0xFC	; 252
    ba04:	fc 01       	movw	r30, r24
    ba06:	80 81       	ld	r24, Z
    ba08:	91 81       	ldd	r25, Z+1	; 0x01
    ba0a:	8c 01       	movw	r16, r24
    ba0c:	c8 01       	movw	r24, r16
    ba0e:	01 97       	sbiw	r24, 0x01	; 1
    ba10:	f1 f7       	brne	.-4      	; 0xba0e <main+0x7d3a>
    ba12:	8c 01       	movw	r16, r24
    ba14:	ce 01       	movw	r24, r28
    ba16:	89 55       	subi	r24, 0x59	; 89
    ba18:	9c 4f       	sbci	r25, 0xFC	; 252
    ba1a:	fc 01       	movw	r30, r24
    ba1c:	11 83       	std	Z+1, r17	; 0x01
    ba1e:	00 83       	st	Z, r16
								_delay_ms(1000);
								buzzer_off();
    ba20:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
							}
						forward_mm(75);
    ba24:	8b e4       	ldi	r24, 0x4B	; 75
    ba26:	90 e0       	ldi	r25, 0x00	; 0
    ba28:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    ba2c:	9e 01       	movw	r18, r28
    ba2e:	27 55       	subi	r18, 0x57	; 87
    ba30:	3c 4f       	sbci	r19, 0xFC	; 252
    ba32:	80 e0       	ldi	r24, 0x00	; 0
    ba34:	90 e0       	ldi	r25, 0x00	; 0
    ba36:	a0 ef       	ldi	r26, 0xF0	; 240
    ba38:	b1 e4       	ldi	r27, 0x41	; 65
    ba3a:	f9 01       	movw	r30, r18
    ba3c:	80 83       	st	Z, r24
    ba3e:	91 83       	std	Z+1, r25	; 0x01
    ba40:	a2 83       	std	Z+2, r26	; 0x02
    ba42:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    ba44:	8e 01       	movw	r16, r28
    ba46:	03 55       	subi	r16, 0x53	; 83
    ba48:	1c 4f       	sbci	r17, 0xFC	; 252
    ba4a:	ce 01       	movw	r24, r28
    ba4c:	87 55       	subi	r24, 0x57	; 87
    ba4e:	9c 4f       	sbci	r25, 0xFC	; 252
    ba50:	fc 01       	movw	r30, r24
    ba52:	60 81       	ld	r22, Z
    ba54:	71 81       	ldd	r23, Z+1	; 0x01
    ba56:	82 81       	ldd	r24, Z+2	; 0x02
    ba58:	93 81       	ldd	r25, Z+3	; 0x03
    ba5a:	26 e6       	ldi	r18, 0x66	; 102
    ba5c:	36 e6       	ldi	r19, 0x66	; 102
    ba5e:	46 e6       	ldi	r20, 0x66	; 102
    ba60:	55 e4       	ldi	r21, 0x45	; 69
    ba62:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ba66:	dc 01       	movw	r26, r24
    ba68:	cb 01       	movw	r24, r22
    ba6a:	f8 01       	movw	r30, r16
    ba6c:	80 83       	st	Z, r24
    ba6e:	91 83       	std	Z+1, r25	; 0x01
    ba70:	a2 83       	std	Z+2, r26	; 0x02
    ba72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    ba74:	ce 01       	movw	r24, r28
    ba76:	83 55       	subi	r24, 0x53	; 83
    ba78:	9c 4f       	sbci	r25, 0xFC	; 252
    ba7a:	11 e0       	ldi	r17, 0x01	; 1
    ba7c:	fc 01       	movw	r30, r24
    ba7e:	60 81       	ld	r22, Z
    ba80:	71 81       	ldd	r23, Z+1	; 0x01
    ba82:	82 81       	ldd	r24, Z+2	; 0x02
    ba84:	93 81       	ldd	r25, Z+3	; 0x03
    ba86:	20 e0       	ldi	r18, 0x00	; 0
    ba88:	30 e0       	ldi	r19, 0x00	; 0
    ba8a:	40 e8       	ldi	r20, 0x80	; 128
    ba8c:	5f e3       	ldi	r21, 0x3F	; 63
    ba8e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    ba92:	88 23       	and	r24, r24
    ba94:	0c f0       	brlt	.+2      	; 0xba98 <main+0x7dc4>
    ba96:	10 e0       	ldi	r17, 0x00	; 0
    ba98:	11 23       	and	r17, r17
    ba9a:	49 f0       	breq	.+18     	; 0xbaae <main+0x7dda>
		__ticks = 1;
    ba9c:	ce 01       	movw	r24, r28
    ba9e:	8f 54       	subi	r24, 0x4F	; 79
    baa0:	9c 4f       	sbci	r25, 0xFC	; 252
    baa2:	21 e0       	ldi	r18, 0x01	; 1
    baa4:	30 e0       	ldi	r19, 0x00	; 0
    baa6:	fc 01       	movw	r30, r24
    baa8:	31 83       	std	Z+1, r19	; 0x01
    baaa:	20 83       	st	Z, r18
    baac:	74 c0       	rjmp	.+232    	; 0xbb96 <main+0x7ec2>
	else if (__tmp > 65535)
    baae:	ce 01       	movw	r24, r28
    bab0:	83 55       	subi	r24, 0x53	; 83
    bab2:	9c 4f       	sbci	r25, 0xFC	; 252
    bab4:	11 e0       	ldi	r17, 0x01	; 1
    bab6:	fc 01       	movw	r30, r24
    bab8:	60 81       	ld	r22, Z
    baba:	71 81       	ldd	r23, Z+1	; 0x01
    babc:	82 81       	ldd	r24, Z+2	; 0x02
    babe:	93 81       	ldd	r25, Z+3	; 0x03
    bac0:	20 e0       	ldi	r18, 0x00	; 0
    bac2:	3f ef       	ldi	r19, 0xFF	; 255
    bac4:	4f e7       	ldi	r20, 0x7F	; 127
    bac6:	57 e4       	ldi	r21, 0x47	; 71
    bac8:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    bacc:	18 16       	cp	r1, r24
    bace:	0c f0       	brlt	.+2      	; 0xbad2 <main+0x7dfe>
    bad0:	10 e0       	ldi	r17, 0x00	; 0
    bad2:	11 23       	and	r17, r17
    bad4:	09 f4       	brne	.+2      	; 0xbad8 <main+0x7e04>
    bad6:	4d c0       	rjmp	.+154    	; 0xbb72 <main+0x7e9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    bad8:	ce 01       	movw	r24, r28
    bada:	87 55       	subi	r24, 0x57	; 87
    badc:	9c 4f       	sbci	r25, 0xFC	; 252
    bade:	fc 01       	movw	r30, r24
    bae0:	60 81       	ld	r22, Z
    bae2:	71 81       	ldd	r23, Z+1	; 0x01
    bae4:	82 81       	ldd	r24, Z+2	; 0x02
    bae6:	93 81       	ldd	r25, Z+3	; 0x03
    bae8:	20 e0       	ldi	r18, 0x00	; 0
    baea:	30 e0       	ldi	r19, 0x00	; 0
    baec:	40 e2       	ldi	r20, 0x20	; 32
    baee:	51 e4       	ldi	r21, 0x41	; 65
    baf0:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    baf4:	dc 01       	movw	r26, r24
    baf6:	cb 01       	movw	r24, r22
    baf8:	8e 01       	movw	r16, r28
    bafa:	0f 54       	subi	r16, 0x4F	; 79
    bafc:	1c 4f       	sbci	r17, 0xFC	; 252
    bafe:	bc 01       	movw	r22, r24
    bb00:	cd 01       	movw	r24, r26
    bb02:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bb06:	dc 01       	movw	r26, r24
    bb08:	cb 01       	movw	r24, r22
    bb0a:	f8 01       	movw	r30, r16
    bb0c:	91 83       	std	Z+1, r25	; 0x01
    bb0e:	80 83       	st	Z, r24
    bb10:	27 c0       	rjmp	.+78     	; 0xbb60 <main+0x7e8c>
    bb12:	ce 01       	movw	r24, r28
    bb14:	8d 54       	subi	r24, 0x4D	; 77
    bb16:	9c 4f       	sbci	r25, 0xFC	; 252
    bb18:	20 e7       	ldi	r18, 0x70	; 112
    bb1a:	31 e0       	ldi	r19, 0x01	; 1
    bb1c:	fc 01       	movw	r30, r24
    bb1e:	31 83       	std	Z+1, r19	; 0x01
    bb20:	20 83       	st	Z, r18
    bb22:	ce 01       	movw	r24, r28
    bb24:	8d 54       	subi	r24, 0x4D	; 77
    bb26:	9c 4f       	sbci	r25, 0xFC	; 252
    bb28:	fc 01       	movw	r30, r24
    bb2a:	80 81       	ld	r24, Z
    bb2c:	91 81       	ldd	r25, Z+1	; 0x01
    bb2e:	8c 01       	movw	r16, r24
    bb30:	c8 01       	movw	r24, r16
    bb32:	01 97       	sbiw	r24, 0x01	; 1
    bb34:	f1 f7       	brne	.-4      	; 0xbb32 <main+0x7e5e>
    bb36:	8c 01       	movw	r16, r24
    bb38:	ce 01       	movw	r24, r28
    bb3a:	8d 54       	subi	r24, 0x4D	; 77
    bb3c:	9c 4f       	sbci	r25, 0xFC	; 252
    bb3e:	fc 01       	movw	r30, r24
    bb40:	11 83       	std	Z+1, r17	; 0x01
    bb42:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bb44:	ce 01       	movw	r24, r28
    bb46:	8f 54       	subi	r24, 0x4F	; 79
    bb48:	9c 4f       	sbci	r25, 0xFC	; 252
    bb4a:	9e 01       	movw	r18, r28
    bb4c:	2f 54       	subi	r18, 0x4F	; 79
    bb4e:	3c 4f       	sbci	r19, 0xFC	; 252
    bb50:	f9 01       	movw	r30, r18
    bb52:	20 81       	ld	r18, Z
    bb54:	31 81       	ldd	r19, Z+1	; 0x01
    bb56:	21 50       	subi	r18, 0x01	; 1
    bb58:	30 40       	sbci	r19, 0x00	; 0
    bb5a:	fc 01       	movw	r30, r24
    bb5c:	31 83       	std	Z+1, r19	; 0x01
    bb5e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bb60:	ce 01       	movw	r24, r28
    bb62:	8f 54       	subi	r24, 0x4F	; 79
    bb64:	9c 4f       	sbci	r25, 0xFC	; 252
    bb66:	fc 01       	movw	r30, r24
    bb68:	80 81       	ld	r24, Z
    bb6a:	91 81       	ldd	r25, Z+1	; 0x01
    bb6c:	00 97       	sbiw	r24, 0x00	; 0
    bb6e:	89 f6       	brne	.-94     	; 0xbb12 <main+0x7e3e>
    bb70:	2f c0       	rjmp	.+94     	; 0xbbd0 <main+0x7efc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bb72:	8e 01       	movw	r16, r28
    bb74:	0f 54       	subi	r16, 0x4F	; 79
    bb76:	1c 4f       	sbci	r17, 0xFC	; 252
    bb78:	ce 01       	movw	r24, r28
    bb7a:	83 55       	subi	r24, 0x53	; 83
    bb7c:	9c 4f       	sbci	r25, 0xFC	; 252
    bb7e:	fc 01       	movw	r30, r24
    bb80:	60 81       	ld	r22, Z
    bb82:	71 81       	ldd	r23, Z+1	; 0x01
    bb84:	82 81       	ldd	r24, Z+2	; 0x02
    bb86:	93 81       	ldd	r25, Z+3	; 0x03
    bb88:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bb8c:	dc 01       	movw	r26, r24
    bb8e:	cb 01       	movw	r24, r22
    bb90:	f8 01       	movw	r30, r16
    bb92:	91 83       	std	Z+1, r25	; 0x01
    bb94:	80 83       	st	Z, r24
    bb96:	ce 01       	movw	r24, r28
    bb98:	8b 54       	subi	r24, 0x4B	; 75
    bb9a:	9c 4f       	sbci	r25, 0xFC	; 252
    bb9c:	9e 01       	movw	r18, r28
    bb9e:	2f 54       	subi	r18, 0x4F	; 79
    bba0:	3c 4f       	sbci	r19, 0xFC	; 252
    bba2:	f9 01       	movw	r30, r18
    bba4:	20 81       	ld	r18, Z
    bba6:	31 81       	ldd	r19, Z+1	; 0x01
    bba8:	fc 01       	movw	r30, r24
    bbaa:	31 83       	std	Z+1, r19	; 0x01
    bbac:	20 83       	st	Z, r18
    bbae:	ce 01       	movw	r24, r28
    bbb0:	8b 54       	subi	r24, 0x4B	; 75
    bbb2:	9c 4f       	sbci	r25, 0xFC	; 252
    bbb4:	fc 01       	movw	r30, r24
    bbb6:	80 81       	ld	r24, Z
    bbb8:	91 81       	ldd	r25, Z+1	; 0x01
    bbba:	8c 01       	movw	r16, r24
    bbbc:	c8 01       	movw	r24, r16
    bbbe:	01 97       	sbiw	r24, 0x01	; 1
    bbc0:	f1 f7       	brne	.-4      	; 0xbbbe <main+0x7eea>
    bbc2:	8c 01       	movw	r16, r24
    bbc4:	ce 01       	movw	r24, r28
    bbc6:	8b 54       	subi	r24, 0x4B	; 75
    bbc8:	9c 4f       	sbci	r25, 0xFC	; 252
    bbca:	fc 01       	movw	r30, r24
    bbcc:	11 83       	std	Z+1, r17	; 0x01
    bbce:	00 83       	st	Z, r16
						_delay_ms(30);
						back_mm(10);
    bbd0:	8a e0       	ldi	r24, 0x0A	; 10
    bbd2:	90 e0       	ldi	r25, 0x00	; 0
    bbd4:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    bbd8:	9e 01       	movw	r18, r28
    bbda:	29 54       	subi	r18, 0x49	; 73
    bbdc:	3c 4f       	sbci	r19, 0xFC	; 252
    bbde:	80 e0       	ldi	r24, 0x00	; 0
    bbe0:	90 e0       	ldi	r25, 0x00	; 0
    bbe2:	aa ef       	ldi	r26, 0xFA	; 250
    bbe4:	b3 e4       	ldi	r27, 0x43	; 67
    bbe6:	f9 01       	movw	r30, r18
    bbe8:	80 83       	st	Z, r24
    bbea:	91 83       	std	Z+1, r25	; 0x01
    bbec:	a2 83       	std	Z+2, r26	; 0x02
    bbee:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    bbf0:	8e 01       	movw	r16, r28
    bbf2:	05 54       	subi	r16, 0x45	; 69
    bbf4:	1c 4f       	sbci	r17, 0xFC	; 252
    bbf6:	ce 01       	movw	r24, r28
    bbf8:	89 54       	subi	r24, 0x49	; 73
    bbfa:	9c 4f       	sbci	r25, 0xFC	; 252
    bbfc:	fc 01       	movw	r30, r24
    bbfe:	60 81       	ld	r22, Z
    bc00:	71 81       	ldd	r23, Z+1	; 0x01
    bc02:	82 81       	ldd	r24, Z+2	; 0x02
    bc04:	93 81       	ldd	r25, Z+3	; 0x03
    bc06:	26 e6       	ldi	r18, 0x66	; 102
    bc08:	36 e6       	ldi	r19, 0x66	; 102
    bc0a:	46 e6       	ldi	r20, 0x66	; 102
    bc0c:	55 e4       	ldi	r21, 0x45	; 69
    bc0e:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    bc12:	dc 01       	movw	r26, r24
    bc14:	cb 01       	movw	r24, r22
    bc16:	f8 01       	movw	r30, r16
    bc18:	80 83       	st	Z, r24
    bc1a:	91 83       	std	Z+1, r25	; 0x01
    bc1c:	a2 83       	std	Z+2, r26	; 0x02
    bc1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    bc20:	ce 01       	movw	r24, r28
    bc22:	85 54       	subi	r24, 0x45	; 69
    bc24:	9c 4f       	sbci	r25, 0xFC	; 252
    bc26:	11 e0       	ldi	r17, 0x01	; 1
    bc28:	fc 01       	movw	r30, r24
    bc2a:	60 81       	ld	r22, Z
    bc2c:	71 81       	ldd	r23, Z+1	; 0x01
    bc2e:	82 81       	ldd	r24, Z+2	; 0x02
    bc30:	93 81       	ldd	r25, Z+3	; 0x03
    bc32:	20 e0       	ldi	r18, 0x00	; 0
    bc34:	30 e0       	ldi	r19, 0x00	; 0
    bc36:	40 e8       	ldi	r20, 0x80	; 128
    bc38:	5f e3       	ldi	r21, 0x3F	; 63
    bc3a:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    bc3e:	88 23       	and	r24, r24
    bc40:	0c f0       	brlt	.+2      	; 0xbc44 <main+0x7f70>
    bc42:	10 e0       	ldi	r17, 0x00	; 0
    bc44:	11 23       	and	r17, r17
    bc46:	49 f0       	breq	.+18     	; 0xbc5a <main+0x7f86>
		__ticks = 1;
    bc48:	ce 01       	movw	r24, r28
    bc4a:	81 54       	subi	r24, 0x41	; 65
    bc4c:	9c 4f       	sbci	r25, 0xFC	; 252
    bc4e:	21 e0       	ldi	r18, 0x01	; 1
    bc50:	30 e0       	ldi	r19, 0x00	; 0
    bc52:	fc 01       	movw	r30, r24
    bc54:	31 83       	std	Z+1, r19	; 0x01
    bc56:	20 83       	st	Z, r18
    bc58:	74 c0       	rjmp	.+232    	; 0xbd42 <main+0x806e>
	else if (__tmp > 65535)
    bc5a:	ce 01       	movw	r24, r28
    bc5c:	85 54       	subi	r24, 0x45	; 69
    bc5e:	9c 4f       	sbci	r25, 0xFC	; 252
    bc60:	11 e0       	ldi	r17, 0x01	; 1
    bc62:	fc 01       	movw	r30, r24
    bc64:	60 81       	ld	r22, Z
    bc66:	71 81       	ldd	r23, Z+1	; 0x01
    bc68:	82 81       	ldd	r24, Z+2	; 0x02
    bc6a:	93 81       	ldd	r25, Z+3	; 0x03
    bc6c:	20 e0       	ldi	r18, 0x00	; 0
    bc6e:	3f ef       	ldi	r19, 0xFF	; 255
    bc70:	4f e7       	ldi	r20, 0x7F	; 127
    bc72:	57 e4       	ldi	r21, 0x47	; 71
    bc74:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    bc78:	18 16       	cp	r1, r24
    bc7a:	0c f0       	brlt	.+2      	; 0xbc7e <main+0x7faa>
    bc7c:	10 e0       	ldi	r17, 0x00	; 0
    bc7e:	11 23       	and	r17, r17
    bc80:	09 f4       	brne	.+2      	; 0xbc84 <main+0x7fb0>
    bc82:	4d c0       	rjmp	.+154    	; 0xbd1e <main+0x804a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    bc84:	ce 01       	movw	r24, r28
    bc86:	89 54       	subi	r24, 0x49	; 73
    bc88:	9c 4f       	sbci	r25, 0xFC	; 252
    bc8a:	fc 01       	movw	r30, r24
    bc8c:	60 81       	ld	r22, Z
    bc8e:	71 81       	ldd	r23, Z+1	; 0x01
    bc90:	82 81       	ldd	r24, Z+2	; 0x02
    bc92:	93 81       	ldd	r25, Z+3	; 0x03
    bc94:	20 e0       	ldi	r18, 0x00	; 0
    bc96:	30 e0       	ldi	r19, 0x00	; 0
    bc98:	40 e2       	ldi	r20, 0x20	; 32
    bc9a:	51 e4       	ldi	r21, 0x41	; 65
    bc9c:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    bca0:	dc 01       	movw	r26, r24
    bca2:	cb 01       	movw	r24, r22
    bca4:	8e 01       	movw	r16, r28
    bca6:	01 54       	subi	r16, 0x41	; 65
    bca8:	1c 4f       	sbci	r17, 0xFC	; 252
    bcaa:	bc 01       	movw	r22, r24
    bcac:	cd 01       	movw	r24, r26
    bcae:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bcb2:	dc 01       	movw	r26, r24
    bcb4:	cb 01       	movw	r24, r22
    bcb6:	f8 01       	movw	r30, r16
    bcb8:	91 83       	std	Z+1, r25	; 0x01
    bcba:	80 83       	st	Z, r24
    bcbc:	27 c0       	rjmp	.+78     	; 0xbd0c <main+0x8038>
    bcbe:	ce 01       	movw	r24, r28
    bcc0:	8f 53       	subi	r24, 0x3F	; 63
    bcc2:	9c 4f       	sbci	r25, 0xFC	; 252
    bcc4:	20 e7       	ldi	r18, 0x70	; 112
    bcc6:	31 e0       	ldi	r19, 0x01	; 1
    bcc8:	fc 01       	movw	r30, r24
    bcca:	31 83       	std	Z+1, r19	; 0x01
    bccc:	20 83       	st	Z, r18
    bcce:	ce 01       	movw	r24, r28
    bcd0:	8f 53       	subi	r24, 0x3F	; 63
    bcd2:	9c 4f       	sbci	r25, 0xFC	; 252
    bcd4:	fc 01       	movw	r30, r24
    bcd6:	80 81       	ld	r24, Z
    bcd8:	91 81       	ldd	r25, Z+1	; 0x01
    bcda:	8c 01       	movw	r16, r24
    bcdc:	c8 01       	movw	r24, r16
    bcde:	01 97       	sbiw	r24, 0x01	; 1
    bce0:	f1 f7       	brne	.-4      	; 0xbcde <main+0x800a>
    bce2:	8c 01       	movw	r16, r24
    bce4:	ce 01       	movw	r24, r28
    bce6:	8f 53       	subi	r24, 0x3F	; 63
    bce8:	9c 4f       	sbci	r25, 0xFC	; 252
    bcea:	fc 01       	movw	r30, r24
    bcec:	11 83       	std	Z+1, r17	; 0x01
    bcee:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bcf0:	ce 01       	movw	r24, r28
    bcf2:	81 54       	subi	r24, 0x41	; 65
    bcf4:	9c 4f       	sbci	r25, 0xFC	; 252
    bcf6:	9e 01       	movw	r18, r28
    bcf8:	21 54       	subi	r18, 0x41	; 65
    bcfa:	3c 4f       	sbci	r19, 0xFC	; 252
    bcfc:	f9 01       	movw	r30, r18
    bcfe:	20 81       	ld	r18, Z
    bd00:	31 81       	ldd	r19, Z+1	; 0x01
    bd02:	21 50       	subi	r18, 0x01	; 1
    bd04:	30 40       	sbci	r19, 0x00	; 0
    bd06:	fc 01       	movw	r30, r24
    bd08:	31 83       	std	Z+1, r19	; 0x01
    bd0a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bd0c:	ce 01       	movw	r24, r28
    bd0e:	81 54       	subi	r24, 0x41	; 65
    bd10:	9c 4f       	sbci	r25, 0xFC	; 252
    bd12:	fc 01       	movw	r30, r24
    bd14:	80 81       	ld	r24, Z
    bd16:	91 81       	ldd	r25, Z+1	; 0x01
    bd18:	00 97       	sbiw	r24, 0x00	; 0
    bd1a:	89 f6       	brne	.-94     	; 0xbcbe <main+0x7fea>
    bd1c:	2f c0       	rjmp	.+94     	; 0xbd7c <main+0x80a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bd1e:	8e 01       	movw	r16, r28
    bd20:	01 54       	subi	r16, 0x41	; 65
    bd22:	1c 4f       	sbci	r17, 0xFC	; 252
    bd24:	ce 01       	movw	r24, r28
    bd26:	85 54       	subi	r24, 0x45	; 69
    bd28:	9c 4f       	sbci	r25, 0xFC	; 252
    bd2a:	fc 01       	movw	r30, r24
    bd2c:	60 81       	ld	r22, Z
    bd2e:	71 81       	ldd	r23, Z+1	; 0x01
    bd30:	82 81       	ldd	r24, Z+2	; 0x02
    bd32:	93 81       	ldd	r25, Z+3	; 0x03
    bd34:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bd38:	dc 01       	movw	r26, r24
    bd3a:	cb 01       	movw	r24, r22
    bd3c:	f8 01       	movw	r30, r16
    bd3e:	91 83       	std	Z+1, r25	; 0x01
    bd40:	80 83       	st	Z, r24
    bd42:	ce 01       	movw	r24, r28
    bd44:	8d 53       	subi	r24, 0x3D	; 61
    bd46:	9c 4f       	sbci	r25, 0xFC	; 252
    bd48:	9e 01       	movw	r18, r28
    bd4a:	21 54       	subi	r18, 0x41	; 65
    bd4c:	3c 4f       	sbci	r19, 0xFC	; 252
    bd4e:	f9 01       	movw	r30, r18
    bd50:	20 81       	ld	r18, Z
    bd52:	31 81       	ldd	r19, Z+1	; 0x01
    bd54:	fc 01       	movw	r30, r24
    bd56:	31 83       	std	Z+1, r19	; 0x01
    bd58:	20 83       	st	Z, r18
    bd5a:	ce 01       	movw	r24, r28
    bd5c:	8d 53       	subi	r24, 0x3D	; 61
    bd5e:	9c 4f       	sbci	r25, 0xFC	; 252
    bd60:	fc 01       	movw	r30, r24
    bd62:	80 81       	ld	r24, Z
    bd64:	91 81       	ldd	r25, Z+1	; 0x01
    bd66:	8c 01       	movw	r16, r24
    bd68:	c8 01       	movw	r24, r16
    bd6a:	01 97       	sbiw	r24, 0x01	; 1
    bd6c:	f1 f7       	brne	.-4      	; 0xbd6a <main+0x8096>
    bd6e:	8c 01       	movw	r16, r24
    bd70:	ce 01       	movw	r24, r28
    bd72:	8d 53       	subi	r24, 0x3D	; 61
    bd74:	9c 4f       	sbci	r25, 0xFC	; 252
    bd76:	fc 01       	movw	r30, r24
    bd78:	11 83       	std	Z+1, r17	; 0x01
    bd7a:	00 83       	st	Z, r16
						_delay_ms(500);
						left_degrees(45);
    bd7c:	8d e2       	ldi	r24, 0x2D	; 45
    bd7e:	90 e0       	ldi	r25, 0x00	; 0
    bd80:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						right_degrees(180);
    bd84:	84 eb       	ldi	r24, 0xB4	; 180
    bd86:	90 e0       	ldi	r25, 0x00	; 0
    bd88:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						compass=6;
    bd8c:	86 e0       	ldi	r24, 0x06	; 6
    bd8e:	90 e0       	ldi	r25, 0x00	; 0
    bd90:	9c 83       	std	Y+4, r25	; 0x04
    bd92:	8b 83       	std	Y+3, r24	; 0x03
						break;                                      /// calibration Required 
    bd94:	0c 94 89 67 	jmp	0xcf12	; 0xcf12 <main+0x923e>
						
					}
					if(coor[1]>origin2[boxnumber][i][1] && coor[0]>origin2[boxnumber][i][0])
    bd98:	20 91 a8 04 	lds	r18, 0x04A8
    bd9c:	30 91 a9 04 	lds	r19, 0x04A9
    bda0:	ae 01       	movw	r20, r28
    bda2:	4d 5f       	subi	r20, 0xFD	; 253
    bda4:	5a 4f       	sbci	r21, 0xFA	; 250
    bda6:	8d 81       	ldd	r24, Y+5	; 0x05
    bda8:	9e 81       	ldd	r25, Y+6	; 0x06
    bdaa:	bc 01       	movw	r22, r24
    bdac:	66 0f       	add	r22, r22
    bdae:	77 1f       	adc	r23, r23
    bdb0:	66 0f       	add	r22, r22
    bdb2:	77 1f       	adc	r23, r23
    bdb4:	8f a1       	lds	r24, 0x4f
    bdb6:	98 a5       	lds	r25, 0x68
    bdb8:	86 0f       	add	r24, r22
    bdba:	97 1f       	adc	r25, r23
    bdbc:	88 0f       	add	r24, r24
    bdbe:	99 1f       	adc	r25, r25
    bdc0:	88 0f       	add	r24, r24
    bdc2:	99 1f       	adc	r25, r25
    bdc4:	84 0f       	add	r24, r20
    bdc6:	95 1f       	adc	r25, r21
    bdc8:	02 96       	adiw	r24, 0x02	; 2
    bdca:	fc 01       	movw	r30, r24
    bdcc:	80 81       	ld	r24, Z
    bdce:	91 81       	ldd	r25, Z+1	; 0x01
    bdd0:	82 17       	cp	r24, r18
    bdd2:	93 07       	cpc	r25, r19
    bdd4:	0c f0       	brlt	.+2      	; 0xbdd8 <main+0x8104>
    bdd6:	c9 c2       	rjmp	.+1426   	; 0xc36a <main+0x8696>
    bdd8:	20 91 a6 04 	lds	r18, 0x04A6
    bddc:	30 91 a7 04 	lds	r19, 0x04A7
    bde0:	ae 01       	movw	r20, r28
    bde2:	4d 5f       	subi	r20, 0xFD	; 253
    bde4:	5a 4f       	sbci	r21, 0xFA	; 250
    bde6:	8d 81       	ldd	r24, Y+5	; 0x05
    bde8:	9e 81       	ldd	r25, Y+6	; 0x06
    bdea:	bc 01       	movw	r22, r24
    bdec:	66 0f       	add	r22, r22
    bdee:	77 1f       	adc	r23, r23
    bdf0:	66 0f       	add	r22, r22
    bdf2:	77 1f       	adc	r23, r23
    bdf4:	8f a1       	lds	r24, 0x4f
    bdf6:	98 a5       	lds	r25, 0x68
    bdf8:	86 0f       	add	r24, r22
    bdfa:	97 1f       	adc	r25, r23
    bdfc:	88 0f       	add	r24, r24
    bdfe:	99 1f       	adc	r25, r25
    be00:	88 0f       	add	r24, r24
    be02:	99 1f       	adc	r25, r25
    be04:	84 0f       	add	r24, r20
    be06:	95 1f       	adc	r25, r21
    be08:	fc 01       	movw	r30, r24
    be0a:	80 81       	ld	r24, Z
    be0c:	91 81       	ldd	r25, Z+1	; 0x01
    be0e:	82 17       	cp	r24, r18
    be10:	93 07       	cpc	r25, r19
    be12:	0c f0       	brlt	.+2      	; 0xbe16 <main+0x8142>
    be14:	aa c2       	rjmp	.+1364   	; 0xc36a <main+0x8696>
					{
						left_degrees(45);
    be16:	8d e2       	ldi	r24, 0x2D	; 45
    be18:	90 e0       	ldi	r25, 0x00	; 0
    be1a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						back_mm(65);
    be1e:	81 e4       	ldi	r24, 0x41	; 65
    be20:	90 e0       	ldi	r25, 0x00	; 0
    be22:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
						matrix2();
    be26:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
						if(summ1[recur+1]>10)
    be2a:	8f 81       	ldd	r24, Y+7	; 0x07
    be2c:	98 85       	ldd	r25, Y+8	; 0x08
    be2e:	01 96       	adiw	r24, 0x01	; 1
    be30:	9e 01       	movw	r18, r28
    be32:	25 54       	subi	r18, 0x45	; 69
    be34:	39 4f       	sbci	r19, 0xF9	; 249
    be36:	88 0f       	add	r24, r24
    be38:	99 1f       	adc	r25, r25
    be3a:	82 0f       	add	r24, r18
    be3c:	93 1f       	adc	r25, r19
    be3e:	fc 01       	movw	r30, r24
    be40:	80 81       	ld	r24, Z
    be42:	91 81       	ldd	r25, Z+1	; 0x01
    be44:	8b 30       	cpi	r24, 0x0B	; 11
    be46:	91 05       	cpc	r25, r1
    be48:	0c f4       	brge	.+2      	; 0xbe4c <main+0x8178>
    be4a:	d6 c0       	rjmp	.+428    	; 0xbff8 <main+0x8324>
						{
							buzzer_on();
    be4c:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    be50:	9e 01       	movw	r18, r28
    be52:	2b 53       	subi	r18, 0x3B	; 59
    be54:	3c 4f       	sbci	r19, 0xFC	; 252
    be56:	80 e0       	ldi	r24, 0x00	; 0
    be58:	90 e0       	ldi	r25, 0x00	; 0
    be5a:	aa e7       	ldi	r26, 0x7A	; 122
    be5c:	b4 e4       	ldi	r27, 0x44	; 68
    be5e:	f9 01       	movw	r30, r18
    be60:	80 83       	st	Z, r24
    be62:	91 83       	std	Z+1, r25	; 0x01
    be64:	a2 83       	std	Z+2, r26	; 0x02
    be66:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    be68:	8e 01       	movw	r16, r28
    be6a:	07 53       	subi	r16, 0x37	; 55
    be6c:	1c 4f       	sbci	r17, 0xFC	; 252
    be6e:	ce 01       	movw	r24, r28
    be70:	8b 53       	subi	r24, 0x3B	; 59
    be72:	9c 4f       	sbci	r25, 0xFC	; 252
    be74:	fc 01       	movw	r30, r24
    be76:	60 81       	ld	r22, Z
    be78:	71 81       	ldd	r23, Z+1	; 0x01
    be7a:	82 81       	ldd	r24, Z+2	; 0x02
    be7c:	93 81       	ldd	r25, Z+3	; 0x03
    be7e:	26 e6       	ldi	r18, 0x66	; 102
    be80:	36 e6       	ldi	r19, 0x66	; 102
    be82:	46 e6       	ldi	r20, 0x66	; 102
    be84:	55 e4       	ldi	r21, 0x45	; 69
    be86:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    be8a:	dc 01       	movw	r26, r24
    be8c:	cb 01       	movw	r24, r22
    be8e:	f8 01       	movw	r30, r16
    be90:	80 83       	st	Z, r24
    be92:	91 83       	std	Z+1, r25	; 0x01
    be94:	a2 83       	std	Z+2, r26	; 0x02
    be96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    be98:	ce 01       	movw	r24, r28
    be9a:	87 53       	subi	r24, 0x37	; 55
    be9c:	9c 4f       	sbci	r25, 0xFC	; 252
    be9e:	11 e0       	ldi	r17, 0x01	; 1
    bea0:	fc 01       	movw	r30, r24
    bea2:	60 81       	ld	r22, Z
    bea4:	71 81       	ldd	r23, Z+1	; 0x01
    bea6:	82 81       	ldd	r24, Z+2	; 0x02
    bea8:	93 81       	ldd	r25, Z+3	; 0x03
    beaa:	20 e0       	ldi	r18, 0x00	; 0
    beac:	30 e0       	ldi	r19, 0x00	; 0
    beae:	40 e8       	ldi	r20, 0x80	; 128
    beb0:	5f e3       	ldi	r21, 0x3F	; 63
    beb2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    beb6:	88 23       	and	r24, r24
    beb8:	0c f0       	brlt	.+2      	; 0xbebc <main+0x81e8>
    beba:	10 e0       	ldi	r17, 0x00	; 0
    bebc:	11 23       	and	r17, r17
    bebe:	49 f0       	breq	.+18     	; 0xbed2 <main+0x81fe>
		__ticks = 1;
    bec0:	ce 01       	movw	r24, r28
    bec2:	83 53       	subi	r24, 0x33	; 51
    bec4:	9c 4f       	sbci	r25, 0xFC	; 252
    bec6:	21 e0       	ldi	r18, 0x01	; 1
    bec8:	30 e0       	ldi	r19, 0x00	; 0
    beca:	fc 01       	movw	r30, r24
    becc:	31 83       	std	Z+1, r19	; 0x01
    bece:	20 83       	st	Z, r18
    bed0:	74 c0       	rjmp	.+232    	; 0xbfba <main+0x82e6>
	else if (__tmp > 65535)
    bed2:	ce 01       	movw	r24, r28
    bed4:	87 53       	subi	r24, 0x37	; 55
    bed6:	9c 4f       	sbci	r25, 0xFC	; 252
    bed8:	11 e0       	ldi	r17, 0x01	; 1
    beda:	fc 01       	movw	r30, r24
    bedc:	60 81       	ld	r22, Z
    bede:	71 81       	ldd	r23, Z+1	; 0x01
    bee0:	82 81       	ldd	r24, Z+2	; 0x02
    bee2:	93 81       	ldd	r25, Z+3	; 0x03
    bee4:	20 e0       	ldi	r18, 0x00	; 0
    bee6:	3f ef       	ldi	r19, 0xFF	; 255
    bee8:	4f e7       	ldi	r20, 0x7F	; 127
    beea:	57 e4       	ldi	r21, 0x47	; 71
    beec:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    bef0:	18 16       	cp	r1, r24
    bef2:	0c f0       	brlt	.+2      	; 0xbef6 <main+0x8222>
    bef4:	10 e0       	ldi	r17, 0x00	; 0
    bef6:	11 23       	and	r17, r17
    bef8:	09 f4       	brne	.+2      	; 0xbefc <main+0x8228>
    befa:	4d c0       	rjmp	.+154    	; 0xbf96 <main+0x82c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    befc:	ce 01       	movw	r24, r28
    befe:	8b 53       	subi	r24, 0x3B	; 59
    bf00:	9c 4f       	sbci	r25, 0xFC	; 252
    bf02:	fc 01       	movw	r30, r24
    bf04:	60 81       	ld	r22, Z
    bf06:	71 81       	ldd	r23, Z+1	; 0x01
    bf08:	82 81       	ldd	r24, Z+2	; 0x02
    bf0a:	93 81       	ldd	r25, Z+3	; 0x03
    bf0c:	20 e0       	ldi	r18, 0x00	; 0
    bf0e:	30 e0       	ldi	r19, 0x00	; 0
    bf10:	40 e2       	ldi	r20, 0x20	; 32
    bf12:	51 e4       	ldi	r21, 0x41	; 65
    bf14:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    bf18:	dc 01       	movw	r26, r24
    bf1a:	cb 01       	movw	r24, r22
    bf1c:	8e 01       	movw	r16, r28
    bf1e:	03 53       	subi	r16, 0x33	; 51
    bf20:	1c 4f       	sbci	r17, 0xFC	; 252
    bf22:	bc 01       	movw	r22, r24
    bf24:	cd 01       	movw	r24, r26
    bf26:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bf2a:	dc 01       	movw	r26, r24
    bf2c:	cb 01       	movw	r24, r22
    bf2e:	f8 01       	movw	r30, r16
    bf30:	91 83       	std	Z+1, r25	; 0x01
    bf32:	80 83       	st	Z, r24
    bf34:	27 c0       	rjmp	.+78     	; 0xbf84 <main+0x82b0>
    bf36:	ce 01       	movw	r24, r28
    bf38:	81 53       	subi	r24, 0x31	; 49
    bf3a:	9c 4f       	sbci	r25, 0xFC	; 252
    bf3c:	20 e7       	ldi	r18, 0x70	; 112
    bf3e:	31 e0       	ldi	r19, 0x01	; 1
    bf40:	fc 01       	movw	r30, r24
    bf42:	31 83       	std	Z+1, r19	; 0x01
    bf44:	20 83       	st	Z, r18
    bf46:	ce 01       	movw	r24, r28
    bf48:	81 53       	subi	r24, 0x31	; 49
    bf4a:	9c 4f       	sbci	r25, 0xFC	; 252
    bf4c:	fc 01       	movw	r30, r24
    bf4e:	80 81       	ld	r24, Z
    bf50:	91 81       	ldd	r25, Z+1	; 0x01
    bf52:	8c 01       	movw	r16, r24
    bf54:	c8 01       	movw	r24, r16
    bf56:	01 97       	sbiw	r24, 0x01	; 1
    bf58:	f1 f7       	brne	.-4      	; 0xbf56 <main+0x8282>
    bf5a:	8c 01       	movw	r16, r24
    bf5c:	ce 01       	movw	r24, r28
    bf5e:	81 53       	subi	r24, 0x31	; 49
    bf60:	9c 4f       	sbci	r25, 0xFC	; 252
    bf62:	fc 01       	movw	r30, r24
    bf64:	11 83       	std	Z+1, r17	; 0x01
    bf66:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bf68:	ce 01       	movw	r24, r28
    bf6a:	83 53       	subi	r24, 0x33	; 51
    bf6c:	9c 4f       	sbci	r25, 0xFC	; 252
    bf6e:	9e 01       	movw	r18, r28
    bf70:	23 53       	subi	r18, 0x33	; 51
    bf72:	3c 4f       	sbci	r19, 0xFC	; 252
    bf74:	f9 01       	movw	r30, r18
    bf76:	20 81       	ld	r18, Z
    bf78:	31 81       	ldd	r19, Z+1	; 0x01
    bf7a:	21 50       	subi	r18, 0x01	; 1
    bf7c:	30 40       	sbci	r19, 0x00	; 0
    bf7e:	fc 01       	movw	r30, r24
    bf80:	31 83       	std	Z+1, r19	; 0x01
    bf82:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bf84:	ce 01       	movw	r24, r28
    bf86:	83 53       	subi	r24, 0x33	; 51
    bf88:	9c 4f       	sbci	r25, 0xFC	; 252
    bf8a:	fc 01       	movw	r30, r24
    bf8c:	80 81       	ld	r24, Z
    bf8e:	91 81       	ldd	r25, Z+1	; 0x01
    bf90:	00 97       	sbiw	r24, 0x00	; 0
    bf92:	89 f6       	brne	.-94     	; 0xbf36 <main+0x8262>
    bf94:	2f c0       	rjmp	.+94     	; 0xbff4 <main+0x8320>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bf96:	8e 01       	movw	r16, r28
    bf98:	03 53       	subi	r16, 0x33	; 51
    bf9a:	1c 4f       	sbci	r17, 0xFC	; 252
    bf9c:	ce 01       	movw	r24, r28
    bf9e:	87 53       	subi	r24, 0x37	; 55
    bfa0:	9c 4f       	sbci	r25, 0xFC	; 252
    bfa2:	fc 01       	movw	r30, r24
    bfa4:	60 81       	ld	r22, Z
    bfa6:	71 81       	ldd	r23, Z+1	; 0x01
    bfa8:	82 81       	ldd	r24, Z+2	; 0x02
    bfaa:	93 81       	ldd	r25, Z+3	; 0x03
    bfac:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    bfb0:	dc 01       	movw	r26, r24
    bfb2:	cb 01       	movw	r24, r22
    bfb4:	f8 01       	movw	r30, r16
    bfb6:	91 83       	std	Z+1, r25	; 0x01
    bfb8:	80 83       	st	Z, r24
    bfba:	ce 01       	movw	r24, r28
    bfbc:	8f 52       	subi	r24, 0x2F	; 47
    bfbe:	9c 4f       	sbci	r25, 0xFC	; 252
    bfc0:	9e 01       	movw	r18, r28
    bfc2:	23 53       	subi	r18, 0x33	; 51
    bfc4:	3c 4f       	sbci	r19, 0xFC	; 252
    bfc6:	f9 01       	movw	r30, r18
    bfc8:	20 81       	ld	r18, Z
    bfca:	31 81       	ldd	r19, Z+1	; 0x01
    bfcc:	fc 01       	movw	r30, r24
    bfce:	31 83       	std	Z+1, r19	; 0x01
    bfd0:	20 83       	st	Z, r18
    bfd2:	ce 01       	movw	r24, r28
    bfd4:	8f 52       	subi	r24, 0x2F	; 47
    bfd6:	9c 4f       	sbci	r25, 0xFC	; 252
    bfd8:	fc 01       	movw	r30, r24
    bfda:	80 81       	ld	r24, Z
    bfdc:	91 81       	ldd	r25, Z+1	; 0x01
    bfde:	8c 01       	movw	r16, r24
    bfe0:	c8 01       	movw	r24, r16
    bfe2:	01 97       	sbiw	r24, 0x01	; 1
    bfe4:	f1 f7       	brne	.-4      	; 0xbfe2 <main+0x830e>
    bfe6:	8c 01       	movw	r16, r24
    bfe8:	ce 01       	movw	r24, r28
    bfea:	8f 52       	subi	r24, 0x2F	; 47
    bfec:	9c 4f       	sbci	r25, 0xFC	; 252
    bfee:	fc 01       	movw	r30, r24
    bff0:	11 83       	std	Z+1, r17	; 0x01
    bff2:	00 83       	st	Z, r16
							_delay_ms(1000);
							buzzer_off();
    bff4:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
						}
						forward_mm(75);
    bff8:	8b e4       	ldi	r24, 0x4B	; 75
    bffa:	90 e0       	ldi	r25, 0x00	; 0
    bffc:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    c000:	9e 01       	movw	r18, r28
    c002:	2d 52       	subi	r18, 0x2D	; 45
    c004:	3c 4f       	sbci	r19, 0xFC	; 252
    c006:	80 e0       	ldi	r24, 0x00	; 0
    c008:	90 e0       	ldi	r25, 0x00	; 0
    c00a:	a0 ef       	ldi	r26, 0xF0	; 240
    c00c:	b1 e4       	ldi	r27, 0x41	; 65
    c00e:	f9 01       	movw	r30, r18
    c010:	80 83       	st	Z, r24
    c012:	91 83       	std	Z+1, r25	; 0x01
    c014:	a2 83       	std	Z+2, r26	; 0x02
    c016:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c018:	8e 01       	movw	r16, r28
    c01a:	09 52       	subi	r16, 0x29	; 41
    c01c:	1c 4f       	sbci	r17, 0xFC	; 252
    c01e:	ce 01       	movw	r24, r28
    c020:	8d 52       	subi	r24, 0x2D	; 45
    c022:	9c 4f       	sbci	r25, 0xFC	; 252
    c024:	fc 01       	movw	r30, r24
    c026:	60 81       	ld	r22, Z
    c028:	71 81       	ldd	r23, Z+1	; 0x01
    c02a:	82 81       	ldd	r24, Z+2	; 0x02
    c02c:	93 81       	ldd	r25, Z+3	; 0x03
    c02e:	26 e6       	ldi	r18, 0x66	; 102
    c030:	36 e6       	ldi	r19, 0x66	; 102
    c032:	46 e6       	ldi	r20, 0x66	; 102
    c034:	55 e4       	ldi	r21, 0x45	; 69
    c036:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c03a:	dc 01       	movw	r26, r24
    c03c:	cb 01       	movw	r24, r22
    c03e:	f8 01       	movw	r30, r16
    c040:	80 83       	st	Z, r24
    c042:	91 83       	std	Z+1, r25	; 0x01
    c044:	a2 83       	std	Z+2, r26	; 0x02
    c046:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    c048:	ce 01       	movw	r24, r28
    c04a:	89 52       	subi	r24, 0x29	; 41
    c04c:	9c 4f       	sbci	r25, 0xFC	; 252
    c04e:	11 e0       	ldi	r17, 0x01	; 1
    c050:	fc 01       	movw	r30, r24
    c052:	60 81       	ld	r22, Z
    c054:	71 81       	ldd	r23, Z+1	; 0x01
    c056:	82 81       	ldd	r24, Z+2	; 0x02
    c058:	93 81       	ldd	r25, Z+3	; 0x03
    c05a:	20 e0       	ldi	r18, 0x00	; 0
    c05c:	30 e0       	ldi	r19, 0x00	; 0
    c05e:	40 e8       	ldi	r20, 0x80	; 128
    c060:	5f e3       	ldi	r21, 0x3F	; 63
    c062:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    c066:	88 23       	and	r24, r24
    c068:	0c f0       	brlt	.+2      	; 0xc06c <main+0x8398>
    c06a:	10 e0       	ldi	r17, 0x00	; 0
    c06c:	11 23       	and	r17, r17
    c06e:	49 f0       	breq	.+18     	; 0xc082 <main+0x83ae>
		__ticks = 1;
    c070:	ce 01       	movw	r24, r28
    c072:	85 52       	subi	r24, 0x25	; 37
    c074:	9c 4f       	sbci	r25, 0xFC	; 252
    c076:	21 e0       	ldi	r18, 0x01	; 1
    c078:	30 e0       	ldi	r19, 0x00	; 0
    c07a:	fc 01       	movw	r30, r24
    c07c:	31 83       	std	Z+1, r19	; 0x01
    c07e:	20 83       	st	Z, r18
    c080:	74 c0       	rjmp	.+232    	; 0xc16a <main+0x8496>
	else if (__tmp > 65535)
    c082:	ce 01       	movw	r24, r28
    c084:	89 52       	subi	r24, 0x29	; 41
    c086:	9c 4f       	sbci	r25, 0xFC	; 252
    c088:	11 e0       	ldi	r17, 0x01	; 1
    c08a:	fc 01       	movw	r30, r24
    c08c:	60 81       	ld	r22, Z
    c08e:	71 81       	ldd	r23, Z+1	; 0x01
    c090:	82 81       	ldd	r24, Z+2	; 0x02
    c092:	93 81       	ldd	r25, Z+3	; 0x03
    c094:	20 e0       	ldi	r18, 0x00	; 0
    c096:	3f ef       	ldi	r19, 0xFF	; 255
    c098:	4f e7       	ldi	r20, 0x7F	; 127
    c09a:	57 e4       	ldi	r21, 0x47	; 71
    c09c:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    c0a0:	18 16       	cp	r1, r24
    c0a2:	0c f0       	brlt	.+2      	; 0xc0a6 <main+0x83d2>
    c0a4:	10 e0       	ldi	r17, 0x00	; 0
    c0a6:	11 23       	and	r17, r17
    c0a8:	09 f4       	brne	.+2      	; 0xc0ac <main+0x83d8>
    c0aa:	4d c0       	rjmp	.+154    	; 0xc146 <main+0x8472>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c0ac:	ce 01       	movw	r24, r28
    c0ae:	8d 52       	subi	r24, 0x2D	; 45
    c0b0:	9c 4f       	sbci	r25, 0xFC	; 252
    c0b2:	fc 01       	movw	r30, r24
    c0b4:	60 81       	ld	r22, Z
    c0b6:	71 81       	ldd	r23, Z+1	; 0x01
    c0b8:	82 81       	ldd	r24, Z+2	; 0x02
    c0ba:	93 81       	ldd	r25, Z+3	; 0x03
    c0bc:	20 e0       	ldi	r18, 0x00	; 0
    c0be:	30 e0       	ldi	r19, 0x00	; 0
    c0c0:	40 e2       	ldi	r20, 0x20	; 32
    c0c2:	51 e4       	ldi	r21, 0x41	; 65
    c0c4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c0c8:	dc 01       	movw	r26, r24
    c0ca:	cb 01       	movw	r24, r22
    c0cc:	8e 01       	movw	r16, r28
    c0ce:	05 52       	subi	r16, 0x25	; 37
    c0d0:	1c 4f       	sbci	r17, 0xFC	; 252
    c0d2:	bc 01       	movw	r22, r24
    c0d4:	cd 01       	movw	r24, r26
    c0d6:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c0da:	dc 01       	movw	r26, r24
    c0dc:	cb 01       	movw	r24, r22
    c0de:	f8 01       	movw	r30, r16
    c0e0:	91 83       	std	Z+1, r25	; 0x01
    c0e2:	80 83       	st	Z, r24
    c0e4:	27 c0       	rjmp	.+78     	; 0xc134 <main+0x8460>
    c0e6:	ce 01       	movw	r24, r28
    c0e8:	83 52       	subi	r24, 0x23	; 35
    c0ea:	9c 4f       	sbci	r25, 0xFC	; 252
    c0ec:	20 e7       	ldi	r18, 0x70	; 112
    c0ee:	31 e0       	ldi	r19, 0x01	; 1
    c0f0:	fc 01       	movw	r30, r24
    c0f2:	31 83       	std	Z+1, r19	; 0x01
    c0f4:	20 83       	st	Z, r18
    c0f6:	ce 01       	movw	r24, r28
    c0f8:	83 52       	subi	r24, 0x23	; 35
    c0fa:	9c 4f       	sbci	r25, 0xFC	; 252
    c0fc:	fc 01       	movw	r30, r24
    c0fe:	80 81       	ld	r24, Z
    c100:	91 81       	ldd	r25, Z+1	; 0x01
    c102:	8c 01       	movw	r16, r24
    c104:	c8 01       	movw	r24, r16
    c106:	01 97       	sbiw	r24, 0x01	; 1
    c108:	f1 f7       	brne	.-4      	; 0xc106 <main+0x8432>
    c10a:	8c 01       	movw	r16, r24
    c10c:	ce 01       	movw	r24, r28
    c10e:	83 52       	subi	r24, 0x23	; 35
    c110:	9c 4f       	sbci	r25, 0xFC	; 252
    c112:	fc 01       	movw	r30, r24
    c114:	11 83       	std	Z+1, r17	; 0x01
    c116:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c118:	ce 01       	movw	r24, r28
    c11a:	85 52       	subi	r24, 0x25	; 37
    c11c:	9c 4f       	sbci	r25, 0xFC	; 252
    c11e:	9e 01       	movw	r18, r28
    c120:	25 52       	subi	r18, 0x25	; 37
    c122:	3c 4f       	sbci	r19, 0xFC	; 252
    c124:	f9 01       	movw	r30, r18
    c126:	20 81       	ld	r18, Z
    c128:	31 81       	ldd	r19, Z+1	; 0x01
    c12a:	21 50       	subi	r18, 0x01	; 1
    c12c:	30 40       	sbci	r19, 0x00	; 0
    c12e:	fc 01       	movw	r30, r24
    c130:	31 83       	std	Z+1, r19	; 0x01
    c132:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c134:	ce 01       	movw	r24, r28
    c136:	85 52       	subi	r24, 0x25	; 37
    c138:	9c 4f       	sbci	r25, 0xFC	; 252
    c13a:	fc 01       	movw	r30, r24
    c13c:	80 81       	ld	r24, Z
    c13e:	91 81       	ldd	r25, Z+1	; 0x01
    c140:	00 97       	sbiw	r24, 0x00	; 0
    c142:	89 f6       	brne	.-94     	; 0xc0e6 <main+0x8412>
    c144:	2f c0       	rjmp	.+94     	; 0xc1a4 <main+0x84d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c146:	8e 01       	movw	r16, r28
    c148:	05 52       	subi	r16, 0x25	; 37
    c14a:	1c 4f       	sbci	r17, 0xFC	; 252
    c14c:	ce 01       	movw	r24, r28
    c14e:	89 52       	subi	r24, 0x29	; 41
    c150:	9c 4f       	sbci	r25, 0xFC	; 252
    c152:	fc 01       	movw	r30, r24
    c154:	60 81       	ld	r22, Z
    c156:	71 81       	ldd	r23, Z+1	; 0x01
    c158:	82 81       	ldd	r24, Z+2	; 0x02
    c15a:	93 81       	ldd	r25, Z+3	; 0x03
    c15c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c160:	dc 01       	movw	r26, r24
    c162:	cb 01       	movw	r24, r22
    c164:	f8 01       	movw	r30, r16
    c166:	91 83       	std	Z+1, r25	; 0x01
    c168:	80 83       	st	Z, r24
    c16a:	ce 01       	movw	r24, r28
    c16c:	81 52       	subi	r24, 0x21	; 33
    c16e:	9c 4f       	sbci	r25, 0xFC	; 252
    c170:	9e 01       	movw	r18, r28
    c172:	25 52       	subi	r18, 0x25	; 37
    c174:	3c 4f       	sbci	r19, 0xFC	; 252
    c176:	f9 01       	movw	r30, r18
    c178:	20 81       	ld	r18, Z
    c17a:	31 81       	ldd	r19, Z+1	; 0x01
    c17c:	fc 01       	movw	r30, r24
    c17e:	31 83       	std	Z+1, r19	; 0x01
    c180:	20 83       	st	Z, r18
    c182:	ce 01       	movw	r24, r28
    c184:	81 52       	subi	r24, 0x21	; 33
    c186:	9c 4f       	sbci	r25, 0xFC	; 252
    c188:	fc 01       	movw	r30, r24
    c18a:	80 81       	ld	r24, Z
    c18c:	91 81       	ldd	r25, Z+1	; 0x01
    c18e:	8c 01       	movw	r16, r24
    c190:	c8 01       	movw	r24, r16
    c192:	01 97       	sbiw	r24, 0x01	; 1
    c194:	f1 f7       	brne	.-4      	; 0xc192 <main+0x84be>
    c196:	8c 01       	movw	r16, r24
    c198:	ce 01       	movw	r24, r28
    c19a:	81 52       	subi	r24, 0x21	; 33
    c19c:	9c 4f       	sbci	r25, 0xFC	; 252
    c19e:	fc 01       	movw	r30, r24
    c1a0:	11 83       	std	Z+1, r17	; 0x01
    c1a2:	00 83       	st	Z, r16
						_delay_ms(30);
						back_mm(10);
    c1a4:	8a e0       	ldi	r24, 0x0A	; 10
    c1a6:	90 e0       	ldi	r25, 0x00	; 0
    c1a8:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    c1ac:	9e 01       	movw	r18, r28
    c1ae:	2f 51       	subi	r18, 0x1F	; 31
    c1b0:	3c 4f       	sbci	r19, 0xFC	; 252
    c1b2:	80 e0       	ldi	r24, 0x00	; 0
    c1b4:	90 e0       	ldi	r25, 0x00	; 0
    c1b6:	aa ef       	ldi	r26, 0xFA	; 250
    c1b8:	b3 e4       	ldi	r27, 0x43	; 67
    c1ba:	f9 01       	movw	r30, r18
    c1bc:	80 83       	st	Z, r24
    c1be:	91 83       	std	Z+1, r25	; 0x01
    c1c0:	a2 83       	std	Z+2, r26	; 0x02
    c1c2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c1c4:	8e 01       	movw	r16, r28
    c1c6:	0b 51       	subi	r16, 0x1B	; 27
    c1c8:	1c 4f       	sbci	r17, 0xFC	; 252
    c1ca:	ce 01       	movw	r24, r28
    c1cc:	8f 51       	subi	r24, 0x1F	; 31
    c1ce:	9c 4f       	sbci	r25, 0xFC	; 252
    c1d0:	fc 01       	movw	r30, r24
    c1d2:	60 81       	ld	r22, Z
    c1d4:	71 81       	ldd	r23, Z+1	; 0x01
    c1d6:	82 81       	ldd	r24, Z+2	; 0x02
    c1d8:	93 81       	ldd	r25, Z+3	; 0x03
    c1da:	26 e6       	ldi	r18, 0x66	; 102
    c1dc:	36 e6       	ldi	r19, 0x66	; 102
    c1de:	46 e6       	ldi	r20, 0x66	; 102
    c1e0:	55 e4       	ldi	r21, 0x45	; 69
    c1e2:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c1e6:	dc 01       	movw	r26, r24
    c1e8:	cb 01       	movw	r24, r22
    c1ea:	f8 01       	movw	r30, r16
    c1ec:	80 83       	st	Z, r24
    c1ee:	91 83       	std	Z+1, r25	; 0x01
    c1f0:	a2 83       	std	Z+2, r26	; 0x02
    c1f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    c1f4:	ce 01       	movw	r24, r28
    c1f6:	8b 51       	subi	r24, 0x1B	; 27
    c1f8:	9c 4f       	sbci	r25, 0xFC	; 252
    c1fa:	11 e0       	ldi	r17, 0x01	; 1
    c1fc:	fc 01       	movw	r30, r24
    c1fe:	60 81       	ld	r22, Z
    c200:	71 81       	ldd	r23, Z+1	; 0x01
    c202:	82 81       	ldd	r24, Z+2	; 0x02
    c204:	93 81       	ldd	r25, Z+3	; 0x03
    c206:	20 e0       	ldi	r18, 0x00	; 0
    c208:	30 e0       	ldi	r19, 0x00	; 0
    c20a:	40 e8       	ldi	r20, 0x80	; 128
    c20c:	5f e3       	ldi	r21, 0x3F	; 63
    c20e:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    c212:	88 23       	and	r24, r24
    c214:	0c f0       	brlt	.+2      	; 0xc218 <main+0x8544>
    c216:	10 e0       	ldi	r17, 0x00	; 0
    c218:	11 23       	and	r17, r17
    c21a:	49 f0       	breq	.+18     	; 0xc22e <main+0x855a>
		__ticks = 1;
    c21c:	ce 01       	movw	r24, r28
    c21e:	87 51       	subi	r24, 0x17	; 23
    c220:	9c 4f       	sbci	r25, 0xFC	; 252
    c222:	21 e0       	ldi	r18, 0x01	; 1
    c224:	30 e0       	ldi	r19, 0x00	; 0
    c226:	fc 01       	movw	r30, r24
    c228:	31 83       	std	Z+1, r19	; 0x01
    c22a:	20 83       	st	Z, r18
    c22c:	74 c0       	rjmp	.+232    	; 0xc316 <main+0x8642>
	else if (__tmp > 65535)
    c22e:	ce 01       	movw	r24, r28
    c230:	8b 51       	subi	r24, 0x1B	; 27
    c232:	9c 4f       	sbci	r25, 0xFC	; 252
    c234:	11 e0       	ldi	r17, 0x01	; 1
    c236:	fc 01       	movw	r30, r24
    c238:	60 81       	ld	r22, Z
    c23a:	71 81       	ldd	r23, Z+1	; 0x01
    c23c:	82 81       	ldd	r24, Z+2	; 0x02
    c23e:	93 81       	ldd	r25, Z+3	; 0x03
    c240:	20 e0       	ldi	r18, 0x00	; 0
    c242:	3f ef       	ldi	r19, 0xFF	; 255
    c244:	4f e7       	ldi	r20, 0x7F	; 127
    c246:	57 e4       	ldi	r21, 0x47	; 71
    c248:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    c24c:	18 16       	cp	r1, r24
    c24e:	0c f0       	brlt	.+2      	; 0xc252 <main+0x857e>
    c250:	10 e0       	ldi	r17, 0x00	; 0
    c252:	11 23       	and	r17, r17
    c254:	09 f4       	brne	.+2      	; 0xc258 <main+0x8584>
    c256:	4d c0       	rjmp	.+154    	; 0xc2f2 <main+0x861e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c258:	ce 01       	movw	r24, r28
    c25a:	8f 51       	subi	r24, 0x1F	; 31
    c25c:	9c 4f       	sbci	r25, 0xFC	; 252
    c25e:	fc 01       	movw	r30, r24
    c260:	60 81       	ld	r22, Z
    c262:	71 81       	ldd	r23, Z+1	; 0x01
    c264:	82 81       	ldd	r24, Z+2	; 0x02
    c266:	93 81       	ldd	r25, Z+3	; 0x03
    c268:	20 e0       	ldi	r18, 0x00	; 0
    c26a:	30 e0       	ldi	r19, 0x00	; 0
    c26c:	40 e2       	ldi	r20, 0x20	; 32
    c26e:	51 e4       	ldi	r21, 0x41	; 65
    c270:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c274:	dc 01       	movw	r26, r24
    c276:	cb 01       	movw	r24, r22
    c278:	8e 01       	movw	r16, r28
    c27a:	07 51       	subi	r16, 0x17	; 23
    c27c:	1c 4f       	sbci	r17, 0xFC	; 252
    c27e:	bc 01       	movw	r22, r24
    c280:	cd 01       	movw	r24, r26
    c282:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c286:	dc 01       	movw	r26, r24
    c288:	cb 01       	movw	r24, r22
    c28a:	f8 01       	movw	r30, r16
    c28c:	91 83       	std	Z+1, r25	; 0x01
    c28e:	80 83       	st	Z, r24
    c290:	27 c0       	rjmp	.+78     	; 0xc2e0 <main+0x860c>
    c292:	ce 01       	movw	r24, r28
    c294:	85 51       	subi	r24, 0x15	; 21
    c296:	9c 4f       	sbci	r25, 0xFC	; 252
    c298:	20 e7       	ldi	r18, 0x70	; 112
    c29a:	31 e0       	ldi	r19, 0x01	; 1
    c29c:	fc 01       	movw	r30, r24
    c29e:	31 83       	std	Z+1, r19	; 0x01
    c2a0:	20 83       	st	Z, r18
    c2a2:	ce 01       	movw	r24, r28
    c2a4:	85 51       	subi	r24, 0x15	; 21
    c2a6:	9c 4f       	sbci	r25, 0xFC	; 252
    c2a8:	fc 01       	movw	r30, r24
    c2aa:	80 81       	ld	r24, Z
    c2ac:	91 81       	ldd	r25, Z+1	; 0x01
    c2ae:	8c 01       	movw	r16, r24
    c2b0:	c8 01       	movw	r24, r16
    c2b2:	01 97       	sbiw	r24, 0x01	; 1
    c2b4:	f1 f7       	brne	.-4      	; 0xc2b2 <main+0x85de>
    c2b6:	8c 01       	movw	r16, r24
    c2b8:	ce 01       	movw	r24, r28
    c2ba:	85 51       	subi	r24, 0x15	; 21
    c2bc:	9c 4f       	sbci	r25, 0xFC	; 252
    c2be:	fc 01       	movw	r30, r24
    c2c0:	11 83       	std	Z+1, r17	; 0x01
    c2c2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c2c4:	ce 01       	movw	r24, r28
    c2c6:	87 51       	subi	r24, 0x17	; 23
    c2c8:	9c 4f       	sbci	r25, 0xFC	; 252
    c2ca:	9e 01       	movw	r18, r28
    c2cc:	27 51       	subi	r18, 0x17	; 23
    c2ce:	3c 4f       	sbci	r19, 0xFC	; 252
    c2d0:	f9 01       	movw	r30, r18
    c2d2:	20 81       	ld	r18, Z
    c2d4:	31 81       	ldd	r19, Z+1	; 0x01
    c2d6:	21 50       	subi	r18, 0x01	; 1
    c2d8:	30 40       	sbci	r19, 0x00	; 0
    c2da:	fc 01       	movw	r30, r24
    c2dc:	31 83       	std	Z+1, r19	; 0x01
    c2de:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c2e0:	ce 01       	movw	r24, r28
    c2e2:	87 51       	subi	r24, 0x17	; 23
    c2e4:	9c 4f       	sbci	r25, 0xFC	; 252
    c2e6:	fc 01       	movw	r30, r24
    c2e8:	80 81       	ld	r24, Z
    c2ea:	91 81       	ldd	r25, Z+1	; 0x01
    c2ec:	00 97       	sbiw	r24, 0x00	; 0
    c2ee:	89 f6       	brne	.-94     	; 0xc292 <main+0x85be>
    c2f0:	2f c0       	rjmp	.+94     	; 0xc350 <main+0x867c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c2f2:	8e 01       	movw	r16, r28
    c2f4:	07 51       	subi	r16, 0x17	; 23
    c2f6:	1c 4f       	sbci	r17, 0xFC	; 252
    c2f8:	ce 01       	movw	r24, r28
    c2fa:	8b 51       	subi	r24, 0x1B	; 27
    c2fc:	9c 4f       	sbci	r25, 0xFC	; 252
    c2fe:	fc 01       	movw	r30, r24
    c300:	60 81       	ld	r22, Z
    c302:	71 81       	ldd	r23, Z+1	; 0x01
    c304:	82 81       	ldd	r24, Z+2	; 0x02
    c306:	93 81       	ldd	r25, Z+3	; 0x03
    c308:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c30c:	dc 01       	movw	r26, r24
    c30e:	cb 01       	movw	r24, r22
    c310:	f8 01       	movw	r30, r16
    c312:	91 83       	std	Z+1, r25	; 0x01
    c314:	80 83       	st	Z, r24
    c316:	ce 01       	movw	r24, r28
    c318:	83 51       	subi	r24, 0x13	; 19
    c31a:	9c 4f       	sbci	r25, 0xFC	; 252
    c31c:	9e 01       	movw	r18, r28
    c31e:	27 51       	subi	r18, 0x17	; 23
    c320:	3c 4f       	sbci	r19, 0xFC	; 252
    c322:	f9 01       	movw	r30, r18
    c324:	20 81       	ld	r18, Z
    c326:	31 81       	ldd	r19, Z+1	; 0x01
    c328:	fc 01       	movw	r30, r24
    c32a:	31 83       	std	Z+1, r19	; 0x01
    c32c:	20 83       	st	Z, r18
    c32e:	ce 01       	movw	r24, r28
    c330:	83 51       	subi	r24, 0x13	; 19
    c332:	9c 4f       	sbci	r25, 0xFC	; 252
    c334:	fc 01       	movw	r30, r24
    c336:	80 81       	ld	r24, Z
    c338:	91 81       	ldd	r25, Z+1	; 0x01
    c33a:	8c 01       	movw	r16, r24
    c33c:	c8 01       	movw	r24, r16
    c33e:	01 97       	sbiw	r24, 0x01	; 1
    c340:	f1 f7       	brne	.-4      	; 0xc33e <main+0x866a>
    c342:	8c 01       	movw	r16, r24
    c344:	ce 01       	movw	r24, r28
    c346:	83 51       	subi	r24, 0x13	; 19
    c348:	9c 4f       	sbci	r25, 0xFC	; 252
    c34a:	fc 01       	movw	r30, r24
    c34c:	11 83       	std	Z+1, r17	; 0x01
    c34e:	00 83       	st	Z, r16
						_delay_ms(500);
						right_degrees(45);
    c350:	8d e2       	ldi	r24, 0x2D	; 45
    c352:	90 e0       	ldi	r25, 0x00	; 0
    c354:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						left_degrees(180);
    c358:	84 eb       	ldi	r24, 0xB4	; 180
    c35a:	90 e0       	ldi	r25, 0x00	; 0
    c35c:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						compass=6;
    c360:	86 e0       	ldi	r24, 0x06	; 6
    c362:	90 e0       	ldi	r25, 0x00	; 0
    c364:	9c 83       	std	Y+4, r25	; 0x04
    c366:	8b 83       	std	Y+3, r24	; 0x03
						break;
    c368:	d4 c5       	rjmp	.+2984   	; 0xcf12 <main+0x923e>
					
					}
					if(coor[0]<origin2[boxnumber][i][0] && coor[1]>origin2[boxnumber][i][1])
    c36a:	20 91 a6 04 	lds	r18, 0x04A6
    c36e:	30 91 a7 04 	lds	r19, 0x04A7
    c372:	ae 01       	movw	r20, r28
    c374:	4d 5f       	subi	r20, 0xFD	; 253
    c376:	5a 4f       	sbci	r21, 0xFA	; 250
    c378:	8d 81       	ldd	r24, Y+5	; 0x05
    c37a:	9e 81       	ldd	r25, Y+6	; 0x06
    c37c:	bc 01       	movw	r22, r24
    c37e:	66 0f       	add	r22, r22
    c380:	77 1f       	adc	r23, r23
    c382:	66 0f       	add	r22, r22
    c384:	77 1f       	adc	r23, r23
    c386:	8f a1       	lds	r24, 0x4f
    c388:	98 a5       	lds	r25, 0x68
    c38a:	86 0f       	add	r24, r22
    c38c:	97 1f       	adc	r25, r23
    c38e:	88 0f       	add	r24, r24
    c390:	99 1f       	adc	r25, r25
    c392:	88 0f       	add	r24, r24
    c394:	99 1f       	adc	r25, r25
    c396:	84 0f       	add	r24, r20
    c398:	95 1f       	adc	r25, r21
    c39a:	fc 01       	movw	r30, r24
    c39c:	80 81       	ld	r24, Z
    c39e:	91 81       	ldd	r25, Z+1	; 0x01
    c3a0:	28 17       	cp	r18, r24
    c3a2:	39 07       	cpc	r19, r25
    c3a4:	0c f0       	brlt	.+2      	; 0xc3a8 <main+0x86d4>
    c3a6:	c6 c2       	rjmp	.+1420   	; 0xc934 <main+0x8c60>
    c3a8:	20 91 a8 04 	lds	r18, 0x04A8
    c3ac:	30 91 a9 04 	lds	r19, 0x04A9
    c3b0:	ae 01       	movw	r20, r28
    c3b2:	4d 5f       	subi	r20, 0xFD	; 253
    c3b4:	5a 4f       	sbci	r21, 0xFA	; 250
    c3b6:	8d 81       	ldd	r24, Y+5	; 0x05
    c3b8:	9e 81       	ldd	r25, Y+6	; 0x06
    c3ba:	bc 01       	movw	r22, r24
    c3bc:	66 0f       	add	r22, r22
    c3be:	77 1f       	adc	r23, r23
    c3c0:	66 0f       	add	r22, r22
    c3c2:	77 1f       	adc	r23, r23
    c3c4:	8f a1       	lds	r24, 0x4f
    c3c6:	98 a5       	lds	r25, 0x68
    c3c8:	86 0f       	add	r24, r22
    c3ca:	97 1f       	adc	r25, r23
    c3cc:	88 0f       	add	r24, r24
    c3ce:	99 1f       	adc	r25, r25
    c3d0:	88 0f       	add	r24, r24
    c3d2:	99 1f       	adc	r25, r25
    c3d4:	84 0f       	add	r24, r20
    c3d6:	95 1f       	adc	r25, r21
    c3d8:	02 96       	adiw	r24, 0x02	; 2
    c3da:	fc 01       	movw	r30, r24
    c3dc:	80 81       	ld	r24, Z
    c3de:	91 81       	ldd	r25, Z+1	; 0x01
    c3e0:	82 17       	cp	r24, r18
    c3e2:	93 07       	cpc	r25, r19
    c3e4:	0c f0       	brlt	.+2      	; 0xc3e8 <main+0x8714>
    c3e6:	a6 c2       	rjmp	.+1356   	; 0xc934 <main+0x8c60>
					{
						left_degrees(135);
    c3e8:	87 e8       	ldi	r24, 0x87	; 135
    c3ea:	90 e0       	ldi	r25, 0x00	; 0
    c3ec:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						back_mm(65);
    c3f0:	81 e4       	ldi	r24, 0x41	; 65
    c3f2:	90 e0       	ldi	r25, 0x00	; 0
    c3f4:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
						matrix2();
    c3f8:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
							if(summ1[recur+1]>10)
    c3fc:	8f 81       	ldd	r24, Y+7	; 0x07
    c3fe:	98 85       	ldd	r25, Y+8	; 0x08
    c400:	01 96       	adiw	r24, 0x01	; 1
    c402:	9e 01       	movw	r18, r28
    c404:	25 54       	subi	r18, 0x45	; 69
    c406:	39 4f       	sbci	r19, 0xF9	; 249
    c408:	88 0f       	add	r24, r24
    c40a:	99 1f       	adc	r25, r25
    c40c:	82 0f       	add	r24, r18
    c40e:	93 1f       	adc	r25, r19
    c410:	fc 01       	movw	r30, r24
    c412:	80 81       	ld	r24, Z
    c414:	91 81       	ldd	r25, Z+1	; 0x01
    c416:	8b 30       	cpi	r24, 0x0B	; 11
    c418:	91 05       	cpc	r25, r1
    c41a:	0c f4       	brge	.+2      	; 0xc41e <main+0x874a>
    c41c:	d6 c0       	rjmp	.+428    	; 0xc5ca <main+0x88f6>
							{
								buzzer_on();
    c41e:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    c422:	9e 01       	movw	r18, r28
    c424:	21 51       	subi	r18, 0x11	; 17
    c426:	3c 4f       	sbci	r19, 0xFC	; 252
    c428:	80 e0       	ldi	r24, 0x00	; 0
    c42a:	90 e0       	ldi	r25, 0x00	; 0
    c42c:	aa e7       	ldi	r26, 0x7A	; 122
    c42e:	b4 e4       	ldi	r27, 0x44	; 68
    c430:	f9 01       	movw	r30, r18
    c432:	80 83       	st	Z, r24
    c434:	91 83       	std	Z+1, r25	; 0x01
    c436:	a2 83       	std	Z+2, r26	; 0x02
    c438:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c43a:	8e 01       	movw	r16, r28
    c43c:	0d 50       	subi	r16, 0x0D	; 13
    c43e:	1c 4f       	sbci	r17, 0xFC	; 252
    c440:	ce 01       	movw	r24, r28
    c442:	81 51       	subi	r24, 0x11	; 17
    c444:	9c 4f       	sbci	r25, 0xFC	; 252
    c446:	fc 01       	movw	r30, r24
    c448:	60 81       	ld	r22, Z
    c44a:	71 81       	ldd	r23, Z+1	; 0x01
    c44c:	82 81       	ldd	r24, Z+2	; 0x02
    c44e:	93 81       	ldd	r25, Z+3	; 0x03
    c450:	26 e6       	ldi	r18, 0x66	; 102
    c452:	36 e6       	ldi	r19, 0x66	; 102
    c454:	46 e6       	ldi	r20, 0x66	; 102
    c456:	55 e4       	ldi	r21, 0x45	; 69
    c458:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c45c:	dc 01       	movw	r26, r24
    c45e:	cb 01       	movw	r24, r22
    c460:	f8 01       	movw	r30, r16
    c462:	80 83       	st	Z, r24
    c464:	91 83       	std	Z+1, r25	; 0x01
    c466:	a2 83       	std	Z+2, r26	; 0x02
    c468:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    c46a:	ce 01       	movw	r24, r28
    c46c:	8d 50       	subi	r24, 0x0D	; 13
    c46e:	9c 4f       	sbci	r25, 0xFC	; 252
    c470:	11 e0       	ldi	r17, 0x01	; 1
    c472:	fc 01       	movw	r30, r24
    c474:	60 81       	ld	r22, Z
    c476:	71 81       	ldd	r23, Z+1	; 0x01
    c478:	82 81       	ldd	r24, Z+2	; 0x02
    c47a:	93 81       	ldd	r25, Z+3	; 0x03
    c47c:	20 e0       	ldi	r18, 0x00	; 0
    c47e:	30 e0       	ldi	r19, 0x00	; 0
    c480:	40 e8       	ldi	r20, 0x80	; 128
    c482:	5f e3       	ldi	r21, 0x3F	; 63
    c484:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    c488:	88 23       	and	r24, r24
    c48a:	0c f0       	brlt	.+2      	; 0xc48e <main+0x87ba>
    c48c:	10 e0       	ldi	r17, 0x00	; 0
    c48e:	11 23       	and	r17, r17
    c490:	49 f0       	breq	.+18     	; 0xc4a4 <main+0x87d0>
		__ticks = 1;
    c492:	ce 01       	movw	r24, r28
    c494:	89 50       	subi	r24, 0x09	; 9
    c496:	9c 4f       	sbci	r25, 0xFC	; 252
    c498:	21 e0       	ldi	r18, 0x01	; 1
    c49a:	30 e0       	ldi	r19, 0x00	; 0
    c49c:	fc 01       	movw	r30, r24
    c49e:	31 83       	std	Z+1, r19	; 0x01
    c4a0:	20 83       	st	Z, r18
    c4a2:	74 c0       	rjmp	.+232    	; 0xc58c <main+0x88b8>
	else if (__tmp > 65535)
    c4a4:	ce 01       	movw	r24, r28
    c4a6:	8d 50       	subi	r24, 0x0D	; 13
    c4a8:	9c 4f       	sbci	r25, 0xFC	; 252
    c4aa:	11 e0       	ldi	r17, 0x01	; 1
    c4ac:	fc 01       	movw	r30, r24
    c4ae:	60 81       	ld	r22, Z
    c4b0:	71 81       	ldd	r23, Z+1	; 0x01
    c4b2:	82 81       	ldd	r24, Z+2	; 0x02
    c4b4:	93 81       	ldd	r25, Z+3	; 0x03
    c4b6:	20 e0       	ldi	r18, 0x00	; 0
    c4b8:	3f ef       	ldi	r19, 0xFF	; 255
    c4ba:	4f e7       	ldi	r20, 0x7F	; 127
    c4bc:	57 e4       	ldi	r21, 0x47	; 71
    c4be:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    c4c2:	18 16       	cp	r1, r24
    c4c4:	0c f0       	brlt	.+2      	; 0xc4c8 <main+0x87f4>
    c4c6:	10 e0       	ldi	r17, 0x00	; 0
    c4c8:	11 23       	and	r17, r17
    c4ca:	09 f4       	brne	.+2      	; 0xc4ce <main+0x87fa>
    c4cc:	4d c0       	rjmp	.+154    	; 0xc568 <main+0x8894>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c4ce:	ce 01       	movw	r24, r28
    c4d0:	81 51       	subi	r24, 0x11	; 17
    c4d2:	9c 4f       	sbci	r25, 0xFC	; 252
    c4d4:	fc 01       	movw	r30, r24
    c4d6:	60 81       	ld	r22, Z
    c4d8:	71 81       	ldd	r23, Z+1	; 0x01
    c4da:	82 81       	ldd	r24, Z+2	; 0x02
    c4dc:	93 81       	ldd	r25, Z+3	; 0x03
    c4de:	20 e0       	ldi	r18, 0x00	; 0
    c4e0:	30 e0       	ldi	r19, 0x00	; 0
    c4e2:	40 e2       	ldi	r20, 0x20	; 32
    c4e4:	51 e4       	ldi	r21, 0x41	; 65
    c4e6:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c4ea:	dc 01       	movw	r26, r24
    c4ec:	cb 01       	movw	r24, r22
    c4ee:	8e 01       	movw	r16, r28
    c4f0:	09 50       	subi	r16, 0x09	; 9
    c4f2:	1c 4f       	sbci	r17, 0xFC	; 252
    c4f4:	bc 01       	movw	r22, r24
    c4f6:	cd 01       	movw	r24, r26
    c4f8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c4fc:	dc 01       	movw	r26, r24
    c4fe:	cb 01       	movw	r24, r22
    c500:	f8 01       	movw	r30, r16
    c502:	91 83       	std	Z+1, r25	; 0x01
    c504:	80 83       	st	Z, r24
    c506:	27 c0       	rjmp	.+78     	; 0xc556 <main+0x8882>
    c508:	ce 01       	movw	r24, r28
    c50a:	87 50       	subi	r24, 0x07	; 7
    c50c:	9c 4f       	sbci	r25, 0xFC	; 252
    c50e:	20 e7       	ldi	r18, 0x70	; 112
    c510:	31 e0       	ldi	r19, 0x01	; 1
    c512:	fc 01       	movw	r30, r24
    c514:	31 83       	std	Z+1, r19	; 0x01
    c516:	20 83       	st	Z, r18
    c518:	ce 01       	movw	r24, r28
    c51a:	87 50       	subi	r24, 0x07	; 7
    c51c:	9c 4f       	sbci	r25, 0xFC	; 252
    c51e:	fc 01       	movw	r30, r24
    c520:	80 81       	ld	r24, Z
    c522:	91 81       	ldd	r25, Z+1	; 0x01
    c524:	8c 01       	movw	r16, r24
    c526:	c8 01       	movw	r24, r16
    c528:	01 97       	sbiw	r24, 0x01	; 1
    c52a:	f1 f7       	brne	.-4      	; 0xc528 <main+0x8854>
    c52c:	8c 01       	movw	r16, r24
    c52e:	ce 01       	movw	r24, r28
    c530:	87 50       	subi	r24, 0x07	; 7
    c532:	9c 4f       	sbci	r25, 0xFC	; 252
    c534:	fc 01       	movw	r30, r24
    c536:	11 83       	std	Z+1, r17	; 0x01
    c538:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c53a:	ce 01       	movw	r24, r28
    c53c:	89 50       	subi	r24, 0x09	; 9
    c53e:	9c 4f       	sbci	r25, 0xFC	; 252
    c540:	9e 01       	movw	r18, r28
    c542:	29 50       	subi	r18, 0x09	; 9
    c544:	3c 4f       	sbci	r19, 0xFC	; 252
    c546:	f9 01       	movw	r30, r18
    c548:	20 81       	ld	r18, Z
    c54a:	31 81       	ldd	r19, Z+1	; 0x01
    c54c:	21 50       	subi	r18, 0x01	; 1
    c54e:	30 40       	sbci	r19, 0x00	; 0
    c550:	fc 01       	movw	r30, r24
    c552:	31 83       	std	Z+1, r19	; 0x01
    c554:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c556:	ce 01       	movw	r24, r28
    c558:	89 50       	subi	r24, 0x09	; 9
    c55a:	9c 4f       	sbci	r25, 0xFC	; 252
    c55c:	fc 01       	movw	r30, r24
    c55e:	80 81       	ld	r24, Z
    c560:	91 81       	ldd	r25, Z+1	; 0x01
    c562:	00 97       	sbiw	r24, 0x00	; 0
    c564:	89 f6       	brne	.-94     	; 0xc508 <main+0x8834>
    c566:	2f c0       	rjmp	.+94     	; 0xc5c6 <main+0x88f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c568:	8e 01       	movw	r16, r28
    c56a:	09 50       	subi	r16, 0x09	; 9
    c56c:	1c 4f       	sbci	r17, 0xFC	; 252
    c56e:	ce 01       	movw	r24, r28
    c570:	8d 50       	subi	r24, 0x0D	; 13
    c572:	9c 4f       	sbci	r25, 0xFC	; 252
    c574:	fc 01       	movw	r30, r24
    c576:	60 81       	ld	r22, Z
    c578:	71 81       	ldd	r23, Z+1	; 0x01
    c57a:	82 81       	ldd	r24, Z+2	; 0x02
    c57c:	93 81       	ldd	r25, Z+3	; 0x03
    c57e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c582:	dc 01       	movw	r26, r24
    c584:	cb 01       	movw	r24, r22
    c586:	f8 01       	movw	r30, r16
    c588:	91 83       	std	Z+1, r25	; 0x01
    c58a:	80 83       	st	Z, r24
    c58c:	ce 01       	movw	r24, r28
    c58e:	85 50       	subi	r24, 0x05	; 5
    c590:	9c 4f       	sbci	r25, 0xFC	; 252
    c592:	9e 01       	movw	r18, r28
    c594:	29 50       	subi	r18, 0x09	; 9
    c596:	3c 4f       	sbci	r19, 0xFC	; 252
    c598:	f9 01       	movw	r30, r18
    c59a:	20 81       	ld	r18, Z
    c59c:	31 81       	ldd	r19, Z+1	; 0x01
    c59e:	fc 01       	movw	r30, r24
    c5a0:	31 83       	std	Z+1, r19	; 0x01
    c5a2:	20 83       	st	Z, r18
    c5a4:	ce 01       	movw	r24, r28
    c5a6:	85 50       	subi	r24, 0x05	; 5
    c5a8:	9c 4f       	sbci	r25, 0xFC	; 252
    c5aa:	fc 01       	movw	r30, r24
    c5ac:	80 81       	ld	r24, Z
    c5ae:	91 81       	ldd	r25, Z+1	; 0x01
    c5b0:	8c 01       	movw	r16, r24
    c5b2:	c8 01       	movw	r24, r16
    c5b4:	01 97       	sbiw	r24, 0x01	; 1
    c5b6:	f1 f7       	brne	.-4      	; 0xc5b4 <main+0x88e0>
    c5b8:	8c 01       	movw	r16, r24
    c5ba:	ce 01       	movw	r24, r28
    c5bc:	85 50       	subi	r24, 0x05	; 5
    c5be:	9c 4f       	sbci	r25, 0xFC	; 252
    c5c0:	fc 01       	movw	r30, r24
    c5c2:	11 83       	std	Z+1, r17	; 0x01
    c5c4:	00 83       	st	Z, r16
								_delay_ms(1000);
								buzzer_off();
    c5c6:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
							}
						forward_mm(75);
    c5ca:	8b e4       	ldi	r24, 0x4B	; 75
    c5cc:	90 e0       	ldi	r25, 0x00	; 0
    c5ce:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    c5d2:	9e 01       	movw	r18, r28
    c5d4:	23 50       	subi	r18, 0x03	; 3
    c5d6:	3c 4f       	sbci	r19, 0xFC	; 252
    c5d8:	80 e0       	ldi	r24, 0x00	; 0
    c5da:	90 e0       	ldi	r25, 0x00	; 0
    c5dc:	a0 ef       	ldi	r26, 0xF0	; 240
    c5de:	b1 e4       	ldi	r27, 0x41	; 65
    c5e0:	f9 01       	movw	r30, r18
    c5e2:	80 83       	st	Z, r24
    c5e4:	91 83       	std	Z+1, r25	; 0x01
    c5e6:	a2 83       	std	Z+2, r26	; 0x02
    c5e8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c5ea:	8e 01       	movw	r16, r28
    c5ec:	0f 5f       	subi	r16, 0xFF	; 255
    c5ee:	1b 4f       	sbci	r17, 0xFB	; 251
    c5f0:	ce 01       	movw	r24, r28
    c5f2:	83 50       	subi	r24, 0x03	; 3
    c5f4:	9c 4f       	sbci	r25, 0xFC	; 252
    c5f6:	fc 01       	movw	r30, r24
    c5f8:	60 81       	ld	r22, Z
    c5fa:	71 81       	ldd	r23, Z+1	; 0x01
    c5fc:	82 81       	ldd	r24, Z+2	; 0x02
    c5fe:	93 81       	ldd	r25, Z+3	; 0x03
    c600:	26 e6       	ldi	r18, 0x66	; 102
    c602:	36 e6       	ldi	r19, 0x66	; 102
    c604:	46 e6       	ldi	r20, 0x66	; 102
    c606:	55 e4       	ldi	r21, 0x45	; 69
    c608:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c60c:	dc 01       	movw	r26, r24
    c60e:	cb 01       	movw	r24, r22
    c610:	f8 01       	movw	r30, r16
    c612:	80 83       	st	Z, r24
    c614:	91 83       	std	Z+1, r25	; 0x01
    c616:	a2 83       	std	Z+2, r26	; 0x02
    c618:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    c61a:	ce 01       	movw	r24, r28
    c61c:	8f 5f       	subi	r24, 0xFF	; 255
    c61e:	9b 4f       	sbci	r25, 0xFB	; 251
    c620:	11 e0       	ldi	r17, 0x01	; 1
    c622:	fc 01       	movw	r30, r24
    c624:	60 81       	ld	r22, Z
    c626:	71 81       	ldd	r23, Z+1	; 0x01
    c628:	82 81       	ldd	r24, Z+2	; 0x02
    c62a:	93 81       	ldd	r25, Z+3	; 0x03
    c62c:	20 e0       	ldi	r18, 0x00	; 0
    c62e:	30 e0       	ldi	r19, 0x00	; 0
    c630:	40 e8       	ldi	r20, 0x80	; 128
    c632:	5f e3       	ldi	r21, 0x3F	; 63
    c634:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    c638:	88 23       	and	r24, r24
    c63a:	0c f0       	brlt	.+2      	; 0xc63e <main+0x896a>
    c63c:	10 e0       	ldi	r17, 0x00	; 0
    c63e:	11 23       	and	r17, r17
    c640:	49 f0       	breq	.+18     	; 0xc654 <main+0x8980>
		__ticks = 1;
    c642:	ce 01       	movw	r24, r28
    c644:	8b 5f       	subi	r24, 0xFB	; 251
    c646:	9b 4f       	sbci	r25, 0xFB	; 251
    c648:	21 e0       	ldi	r18, 0x01	; 1
    c64a:	30 e0       	ldi	r19, 0x00	; 0
    c64c:	fc 01       	movw	r30, r24
    c64e:	31 83       	std	Z+1, r19	; 0x01
    c650:	20 83       	st	Z, r18
    c652:	74 c0       	rjmp	.+232    	; 0xc73c <main+0x8a68>
	else if (__tmp > 65535)
    c654:	ce 01       	movw	r24, r28
    c656:	8f 5f       	subi	r24, 0xFF	; 255
    c658:	9b 4f       	sbci	r25, 0xFB	; 251
    c65a:	11 e0       	ldi	r17, 0x01	; 1
    c65c:	fc 01       	movw	r30, r24
    c65e:	60 81       	ld	r22, Z
    c660:	71 81       	ldd	r23, Z+1	; 0x01
    c662:	82 81       	ldd	r24, Z+2	; 0x02
    c664:	93 81       	ldd	r25, Z+3	; 0x03
    c666:	20 e0       	ldi	r18, 0x00	; 0
    c668:	3f ef       	ldi	r19, 0xFF	; 255
    c66a:	4f e7       	ldi	r20, 0x7F	; 127
    c66c:	57 e4       	ldi	r21, 0x47	; 71
    c66e:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    c672:	18 16       	cp	r1, r24
    c674:	0c f0       	brlt	.+2      	; 0xc678 <main+0x89a4>
    c676:	10 e0       	ldi	r17, 0x00	; 0
    c678:	11 23       	and	r17, r17
    c67a:	09 f4       	brne	.+2      	; 0xc67e <main+0x89aa>
    c67c:	4d c0       	rjmp	.+154    	; 0xc718 <main+0x8a44>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c67e:	ce 01       	movw	r24, r28
    c680:	83 50       	subi	r24, 0x03	; 3
    c682:	9c 4f       	sbci	r25, 0xFC	; 252
    c684:	fc 01       	movw	r30, r24
    c686:	60 81       	ld	r22, Z
    c688:	71 81       	ldd	r23, Z+1	; 0x01
    c68a:	82 81       	ldd	r24, Z+2	; 0x02
    c68c:	93 81       	ldd	r25, Z+3	; 0x03
    c68e:	20 e0       	ldi	r18, 0x00	; 0
    c690:	30 e0       	ldi	r19, 0x00	; 0
    c692:	40 e2       	ldi	r20, 0x20	; 32
    c694:	51 e4       	ldi	r21, 0x41	; 65
    c696:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c69a:	dc 01       	movw	r26, r24
    c69c:	cb 01       	movw	r24, r22
    c69e:	8e 01       	movw	r16, r28
    c6a0:	0b 5f       	subi	r16, 0xFB	; 251
    c6a2:	1b 4f       	sbci	r17, 0xFB	; 251
    c6a4:	bc 01       	movw	r22, r24
    c6a6:	cd 01       	movw	r24, r26
    c6a8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c6ac:	dc 01       	movw	r26, r24
    c6ae:	cb 01       	movw	r24, r22
    c6b0:	f8 01       	movw	r30, r16
    c6b2:	91 83       	std	Z+1, r25	; 0x01
    c6b4:	80 83       	st	Z, r24
    c6b6:	27 c0       	rjmp	.+78     	; 0xc706 <main+0x8a32>
    c6b8:	ce 01       	movw	r24, r28
    c6ba:	89 5f       	subi	r24, 0xF9	; 249
    c6bc:	9b 4f       	sbci	r25, 0xFB	; 251
    c6be:	20 e7       	ldi	r18, 0x70	; 112
    c6c0:	31 e0       	ldi	r19, 0x01	; 1
    c6c2:	fc 01       	movw	r30, r24
    c6c4:	31 83       	std	Z+1, r19	; 0x01
    c6c6:	20 83       	st	Z, r18
    c6c8:	ce 01       	movw	r24, r28
    c6ca:	89 5f       	subi	r24, 0xF9	; 249
    c6cc:	9b 4f       	sbci	r25, 0xFB	; 251
    c6ce:	fc 01       	movw	r30, r24
    c6d0:	80 81       	ld	r24, Z
    c6d2:	91 81       	ldd	r25, Z+1	; 0x01
    c6d4:	8c 01       	movw	r16, r24
    c6d6:	c8 01       	movw	r24, r16
    c6d8:	01 97       	sbiw	r24, 0x01	; 1
    c6da:	f1 f7       	brne	.-4      	; 0xc6d8 <main+0x8a04>
    c6dc:	8c 01       	movw	r16, r24
    c6de:	ce 01       	movw	r24, r28
    c6e0:	89 5f       	subi	r24, 0xF9	; 249
    c6e2:	9b 4f       	sbci	r25, 0xFB	; 251
    c6e4:	fc 01       	movw	r30, r24
    c6e6:	11 83       	std	Z+1, r17	; 0x01
    c6e8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c6ea:	ce 01       	movw	r24, r28
    c6ec:	8b 5f       	subi	r24, 0xFB	; 251
    c6ee:	9b 4f       	sbci	r25, 0xFB	; 251
    c6f0:	9e 01       	movw	r18, r28
    c6f2:	2b 5f       	subi	r18, 0xFB	; 251
    c6f4:	3b 4f       	sbci	r19, 0xFB	; 251
    c6f6:	f9 01       	movw	r30, r18
    c6f8:	20 81       	ld	r18, Z
    c6fa:	31 81       	ldd	r19, Z+1	; 0x01
    c6fc:	21 50       	subi	r18, 0x01	; 1
    c6fe:	30 40       	sbci	r19, 0x00	; 0
    c700:	fc 01       	movw	r30, r24
    c702:	31 83       	std	Z+1, r19	; 0x01
    c704:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c706:	ce 01       	movw	r24, r28
    c708:	8b 5f       	subi	r24, 0xFB	; 251
    c70a:	9b 4f       	sbci	r25, 0xFB	; 251
    c70c:	fc 01       	movw	r30, r24
    c70e:	80 81       	ld	r24, Z
    c710:	91 81       	ldd	r25, Z+1	; 0x01
    c712:	00 97       	sbiw	r24, 0x00	; 0
    c714:	89 f6       	brne	.-94     	; 0xc6b8 <main+0x89e4>
    c716:	2f c0       	rjmp	.+94     	; 0xc776 <main+0x8aa2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c718:	8e 01       	movw	r16, r28
    c71a:	0b 5f       	subi	r16, 0xFB	; 251
    c71c:	1b 4f       	sbci	r17, 0xFB	; 251
    c71e:	ce 01       	movw	r24, r28
    c720:	8f 5f       	subi	r24, 0xFF	; 255
    c722:	9b 4f       	sbci	r25, 0xFB	; 251
    c724:	fc 01       	movw	r30, r24
    c726:	60 81       	ld	r22, Z
    c728:	71 81       	ldd	r23, Z+1	; 0x01
    c72a:	82 81       	ldd	r24, Z+2	; 0x02
    c72c:	93 81       	ldd	r25, Z+3	; 0x03
    c72e:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c732:	dc 01       	movw	r26, r24
    c734:	cb 01       	movw	r24, r22
    c736:	f8 01       	movw	r30, r16
    c738:	91 83       	std	Z+1, r25	; 0x01
    c73a:	80 83       	st	Z, r24
    c73c:	ce 01       	movw	r24, r28
    c73e:	87 5f       	subi	r24, 0xF7	; 247
    c740:	9b 4f       	sbci	r25, 0xFB	; 251
    c742:	9e 01       	movw	r18, r28
    c744:	2b 5f       	subi	r18, 0xFB	; 251
    c746:	3b 4f       	sbci	r19, 0xFB	; 251
    c748:	f9 01       	movw	r30, r18
    c74a:	20 81       	ld	r18, Z
    c74c:	31 81       	ldd	r19, Z+1	; 0x01
    c74e:	fc 01       	movw	r30, r24
    c750:	31 83       	std	Z+1, r19	; 0x01
    c752:	20 83       	st	Z, r18
    c754:	ce 01       	movw	r24, r28
    c756:	87 5f       	subi	r24, 0xF7	; 247
    c758:	9b 4f       	sbci	r25, 0xFB	; 251
    c75a:	fc 01       	movw	r30, r24
    c75c:	80 81       	ld	r24, Z
    c75e:	91 81       	ldd	r25, Z+1	; 0x01
    c760:	8c 01       	movw	r16, r24
    c762:	c8 01       	movw	r24, r16
    c764:	01 97       	sbiw	r24, 0x01	; 1
    c766:	f1 f7       	brne	.-4      	; 0xc764 <main+0x8a90>
    c768:	8c 01       	movw	r16, r24
    c76a:	ce 01       	movw	r24, r28
    c76c:	87 5f       	subi	r24, 0xF7	; 247
    c76e:	9b 4f       	sbci	r25, 0xFB	; 251
    c770:	fc 01       	movw	r30, r24
    c772:	11 83       	std	Z+1, r17	; 0x01
    c774:	00 83       	st	Z, r16
						_delay_ms(30);
						back_mm(10);
    c776:	8a e0       	ldi	r24, 0x0A	; 10
    c778:	90 e0       	ldi	r25, 0x00	; 0
    c77a:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    c77e:	9e 01       	movw	r18, r28
    c780:	25 5f       	subi	r18, 0xF5	; 245
    c782:	3b 4f       	sbci	r19, 0xFB	; 251
    c784:	80 e0       	ldi	r24, 0x00	; 0
    c786:	90 e0       	ldi	r25, 0x00	; 0
    c788:	aa ef       	ldi	r26, 0xFA	; 250
    c78a:	b3 e4       	ldi	r27, 0x43	; 67
    c78c:	f9 01       	movw	r30, r18
    c78e:	80 83       	st	Z, r24
    c790:	91 83       	std	Z+1, r25	; 0x01
    c792:	a2 83       	std	Z+2, r26	; 0x02
    c794:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c796:	8e 01       	movw	r16, r28
    c798:	01 5f       	subi	r16, 0xF1	; 241
    c79a:	1b 4f       	sbci	r17, 0xFB	; 251
    c79c:	ce 01       	movw	r24, r28
    c79e:	85 5f       	subi	r24, 0xF5	; 245
    c7a0:	9b 4f       	sbci	r25, 0xFB	; 251
    c7a2:	fc 01       	movw	r30, r24
    c7a4:	60 81       	ld	r22, Z
    c7a6:	71 81       	ldd	r23, Z+1	; 0x01
    c7a8:	82 81       	ldd	r24, Z+2	; 0x02
    c7aa:	93 81       	ldd	r25, Z+3	; 0x03
    c7ac:	26 e6       	ldi	r18, 0x66	; 102
    c7ae:	36 e6       	ldi	r19, 0x66	; 102
    c7b0:	46 e6       	ldi	r20, 0x66	; 102
    c7b2:	55 e4       	ldi	r21, 0x45	; 69
    c7b4:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c7b8:	dc 01       	movw	r26, r24
    c7ba:	cb 01       	movw	r24, r22
    c7bc:	f8 01       	movw	r30, r16
    c7be:	80 83       	st	Z, r24
    c7c0:	91 83       	std	Z+1, r25	; 0x01
    c7c2:	a2 83       	std	Z+2, r26	; 0x02
    c7c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    c7c6:	ce 01       	movw	r24, r28
    c7c8:	81 5f       	subi	r24, 0xF1	; 241
    c7ca:	9b 4f       	sbci	r25, 0xFB	; 251
    c7cc:	11 e0       	ldi	r17, 0x01	; 1
    c7ce:	fc 01       	movw	r30, r24
    c7d0:	60 81       	ld	r22, Z
    c7d2:	71 81       	ldd	r23, Z+1	; 0x01
    c7d4:	82 81       	ldd	r24, Z+2	; 0x02
    c7d6:	93 81       	ldd	r25, Z+3	; 0x03
    c7d8:	20 e0       	ldi	r18, 0x00	; 0
    c7da:	30 e0       	ldi	r19, 0x00	; 0
    c7dc:	40 e8       	ldi	r20, 0x80	; 128
    c7de:	5f e3       	ldi	r21, 0x3F	; 63
    c7e0:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    c7e4:	88 23       	and	r24, r24
    c7e6:	0c f0       	brlt	.+2      	; 0xc7ea <main+0x8b16>
    c7e8:	10 e0       	ldi	r17, 0x00	; 0
    c7ea:	11 23       	and	r17, r17
    c7ec:	49 f0       	breq	.+18     	; 0xc800 <main+0x8b2c>
		__ticks = 1;
    c7ee:	ce 01       	movw	r24, r28
    c7f0:	8d 5e       	subi	r24, 0xED	; 237
    c7f2:	9b 4f       	sbci	r25, 0xFB	; 251
    c7f4:	21 e0       	ldi	r18, 0x01	; 1
    c7f6:	30 e0       	ldi	r19, 0x00	; 0
    c7f8:	fc 01       	movw	r30, r24
    c7fa:	31 83       	std	Z+1, r19	; 0x01
    c7fc:	20 83       	st	Z, r18
    c7fe:	74 c0       	rjmp	.+232    	; 0xc8e8 <main+0x8c14>
	else if (__tmp > 65535)
    c800:	ce 01       	movw	r24, r28
    c802:	81 5f       	subi	r24, 0xF1	; 241
    c804:	9b 4f       	sbci	r25, 0xFB	; 251
    c806:	11 e0       	ldi	r17, 0x01	; 1
    c808:	fc 01       	movw	r30, r24
    c80a:	60 81       	ld	r22, Z
    c80c:	71 81       	ldd	r23, Z+1	; 0x01
    c80e:	82 81       	ldd	r24, Z+2	; 0x02
    c810:	93 81       	ldd	r25, Z+3	; 0x03
    c812:	20 e0       	ldi	r18, 0x00	; 0
    c814:	3f ef       	ldi	r19, 0xFF	; 255
    c816:	4f e7       	ldi	r20, 0x7F	; 127
    c818:	57 e4       	ldi	r21, 0x47	; 71
    c81a:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    c81e:	18 16       	cp	r1, r24
    c820:	0c f0       	brlt	.+2      	; 0xc824 <main+0x8b50>
    c822:	10 e0       	ldi	r17, 0x00	; 0
    c824:	11 23       	and	r17, r17
    c826:	09 f4       	brne	.+2      	; 0xc82a <main+0x8b56>
    c828:	4d c0       	rjmp	.+154    	; 0xc8c4 <main+0x8bf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c82a:	ce 01       	movw	r24, r28
    c82c:	85 5f       	subi	r24, 0xF5	; 245
    c82e:	9b 4f       	sbci	r25, 0xFB	; 251
    c830:	fc 01       	movw	r30, r24
    c832:	60 81       	ld	r22, Z
    c834:	71 81       	ldd	r23, Z+1	; 0x01
    c836:	82 81       	ldd	r24, Z+2	; 0x02
    c838:	93 81       	ldd	r25, Z+3	; 0x03
    c83a:	20 e0       	ldi	r18, 0x00	; 0
    c83c:	30 e0       	ldi	r19, 0x00	; 0
    c83e:	40 e2       	ldi	r20, 0x20	; 32
    c840:	51 e4       	ldi	r21, 0x41	; 65
    c842:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    c846:	dc 01       	movw	r26, r24
    c848:	cb 01       	movw	r24, r22
    c84a:	8e 01       	movw	r16, r28
    c84c:	0d 5e       	subi	r16, 0xED	; 237
    c84e:	1b 4f       	sbci	r17, 0xFB	; 251
    c850:	bc 01       	movw	r22, r24
    c852:	cd 01       	movw	r24, r26
    c854:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c858:	dc 01       	movw	r26, r24
    c85a:	cb 01       	movw	r24, r22
    c85c:	f8 01       	movw	r30, r16
    c85e:	91 83       	std	Z+1, r25	; 0x01
    c860:	80 83       	st	Z, r24
    c862:	27 c0       	rjmp	.+78     	; 0xc8b2 <main+0x8bde>
    c864:	ce 01       	movw	r24, r28
    c866:	8b 5e       	subi	r24, 0xEB	; 235
    c868:	9b 4f       	sbci	r25, 0xFB	; 251
    c86a:	20 e7       	ldi	r18, 0x70	; 112
    c86c:	31 e0       	ldi	r19, 0x01	; 1
    c86e:	fc 01       	movw	r30, r24
    c870:	31 83       	std	Z+1, r19	; 0x01
    c872:	20 83       	st	Z, r18
    c874:	ce 01       	movw	r24, r28
    c876:	8b 5e       	subi	r24, 0xEB	; 235
    c878:	9b 4f       	sbci	r25, 0xFB	; 251
    c87a:	fc 01       	movw	r30, r24
    c87c:	80 81       	ld	r24, Z
    c87e:	91 81       	ldd	r25, Z+1	; 0x01
    c880:	8c 01       	movw	r16, r24
    c882:	c8 01       	movw	r24, r16
    c884:	01 97       	sbiw	r24, 0x01	; 1
    c886:	f1 f7       	brne	.-4      	; 0xc884 <main+0x8bb0>
    c888:	8c 01       	movw	r16, r24
    c88a:	ce 01       	movw	r24, r28
    c88c:	8b 5e       	subi	r24, 0xEB	; 235
    c88e:	9b 4f       	sbci	r25, 0xFB	; 251
    c890:	fc 01       	movw	r30, r24
    c892:	11 83       	std	Z+1, r17	; 0x01
    c894:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c896:	ce 01       	movw	r24, r28
    c898:	8d 5e       	subi	r24, 0xED	; 237
    c89a:	9b 4f       	sbci	r25, 0xFB	; 251
    c89c:	9e 01       	movw	r18, r28
    c89e:	2d 5e       	subi	r18, 0xED	; 237
    c8a0:	3b 4f       	sbci	r19, 0xFB	; 251
    c8a2:	f9 01       	movw	r30, r18
    c8a4:	20 81       	ld	r18, Z
    c8a6:	31 81       	ldd	r19, Z+1	; 0x01
    c8a8:	21 50       	subi	r18, 0x01	; 1
    c8aa:	30 40       	sbci	r19, 0x00	; 0
    c8ac:	fc 01       	movw	r30, r24
    c8ae:	31 83       	std	Z+1, r19	; 0x01
    c8b0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c8b2:	ce 01       	movw	r24, r28
    c8b4:	8d 5e       	subi	r24, 0xED	; 237
    c8b6:	9b 4f       	sbci	r25, 0xFB	; 251
    c8b8:	fc 01       	movw	r30, r24
    c8ba:	80 81       	ld	r24, Z
    c8bc:	91 81       	ldd	r25, Z+1	; 0x01
    c8be:	00 97       	sbiw	r24, 0x00	; 0
    c8c0:	89 f6       	brne	.-94     	; 0xc864 <main+0x8b90>
    c8c2:	2f c0       	rjmp	.+94     	; 0xc922 <main+0x8c4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c8c4:	8e 01       	movw	r16, r28
    c8c6:	0d 5e       	subi	r16, 0xED	; 237
    c8c8:	1b 4f       	sbci	r17, 0xFB	; 251
    c8ca:	ce 01       	movw	r24, r28
    c8cc:	81 5f       	subi	r24, 0xF1	; 241
    c8ce:	9b 4f       	sbci	r25, 0xFB	; 251
    c8d0:	fc 01       	movw	r30, r24
    c8d2:	60 81       	ld	r22, Z
    c8d4:	71 81       	ldd	r23, Z+1	; 0x01
    c8d6:	82 81       	ldd	r24, Z+2	; 0x02
    c8d8:	93 81       	ldd	r25, Z+3	; 0x03
    c8da:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    c8de:	dc 01       	movw	r26, r24
    c8e0:	cb 01       	movw	r24, r22
    c8e2:	f8 01       	movw	r30, r16
    c8e4:	91 83       	std	Z+1, r25	; 0x01
    c8e6:	80 83       	st	Z, r24
    c8e8:	ce 01       	movw	r24, r28
    c8ea:	89 5e       	subi	r24, 0xE9	; 233
    c8ec:	9b 4f       	sbci	r25, 0xFB	; 251
    c8ee:	9e 01       	movw	r18, r28
    c8f0:	2d 5e       	subi	r18, 0xED	; 237
    c8f2:	3b 4f       	sbci	r19, 0xFB	; 251
    c8f4:	f9 01       	movw	r30, r18
    c8f6:	20 81       	ld	r18, Z
    c8f8:	31 81       	ldd	r19, Z+1	; 0x01
    c8fa:	fc 01       	movw	r30, r24
    c8fc:	31 83       	std	Z+1, r19	; 0x01
    c8fe:	20 83       	st	Z, r18
    c900:	ce 01       	movw	r24, r28
    c902:	89 5e       	subi	r24, 0xE9	; 233
    c904:	9b 4f       	sbci	r25, 0xFB	; 251
    c906:	fc 01       	movw	r30, r24
    c908:	80 81       	ld	r24, Z
    c90a:	91 81       	ldd	r25, Z+1	; 0x01
    c90c:	8c 01       	movw	r16, r24
    c90e:	c8 01       	movw	r24, r16
    c910:	01 97       	sbiw	r24, 0x01	; 1
    c912:	f1 f7       	brne	.-4      	; 0xc910 <main+0x8c3c>
    c914:	8c 01       	movw	r16, r24
    c916:	ce 01       	movw	r24, r28
    c918:	89 5e       	subi	r24, 0xE9	; 233
    c91a:	9b 4f       	sbci	r25, 0xFB	; 251
    c91c:	fc 01       	movw	r30, r24
    c91e:	11 83       	std	Z+1, r17	; 0x01
    c920:	00 83       	st	Z, r16
						_delay_ms(500);
						left_degrees(40);
    c922:	88 e2       	ldi	r24, 0x28	; 40
    c924:	90 e0       	ldi	r25, 0x00	; 0
    c926:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <left_degrees>
						compass=6;
    c92a:	86 e0       	ldi	r24, 0x06	; 6
    c92c:	90 e0       	ldi	r25, 0x00	; 0
    c92e:	9c 83       	std	Y+4, r25	; 0x04
    c930:	8b 83       	std	Y+3, r24	; 0x03
						break;
    c932:	ef c2       	rjmp	.+1502   	; 0xcf12 <main+0x923e>
					}
					if(coor[0]<coor[0]<origin2[boxnumber][i][0] && coor[1]<origin2[boxnumber][i][1])
    c934:	9e 01       	movw	r18, r28
    c936:	2d 5f       	subi	r18, 0xFD	; 253
    c938:	3a 4f       	sbci	r19, 0xFA	; 250
    c93a:	8d 81       	ldd	r24, Y+5	; 0x05
    c93c:	9e 81       	ldd	r25, Y+6	; 0x06
    c93e:	ac 01       	movw	r20, r24
    c940:	44 0f       	add	r20, r20
    c942:	55 1f       	adc	r21, r21
    c944:	44 0f       	add	r20, r20
    c946:	55 1f       	adc	r21, r21
    c948:	8f a1       	lds	r24, 0x4f
    c94a:	98 a5       	lds	r25, 0x68
    c94c:	84 0f       	add	r24, r20
    c94e:	95 1f       	adc	r25, r21
    c950:	88 0f       	add	r24, r24
    c952:	99 1f       	adc	r25, r25
    c954:	88 0f       	add	r24, r24
    c956:	99 1f       	adc	r25, r25
    c958:	82 0f       	add	r24, r18
    c95a:	93 1f       	adc	r25, r19
    c95c:	fc 01       	movw	r30, r24
    c95e:	80 81       	ld	r24, Z
    c960:	91 81       	ldd	r25, Z+1	; 0x01
    c962:	18 16       	cp	r1, r24
    c964:	19 06       	cpc	r1, r25
    c966:	0c f0       	brlt	.+2      	; 0xc96a <main+0x8c96>
    c968:	c6 c2       	rjmp	.+1420   	; 0xcef6 <main+0x9222>
    c96a:	20 91 a8 04 	lds	r18, 0x04A8
    c96e:	30 91 a9 04 	lds	r19, 0x04A9
    c972:	ae 01       	movw	r20, r28
    c974:	4d 5f       	subi	r20, 0xFD	; 253
    c976:	5a 4f       	sbci	r21, 0xFA	; 250
    c978:	8d 81       	ldd	r24, Y+5	; 0x05
    c97a:	9e 81       	ldd	r25, Y+6	; 0x06
    c97c:	bc 01       	movw	r22, r24
    c97e:	66 0f       	add	r22, r22
    c980:	77 1f       	adc	r23, r23
    c982:	66 0f       	add	r22, r22
    c984:	77 1f       	adc	r23, r23
    c986:	8f a1       	lds	r24, 0x4f
    c988:	98 a5       	lds	r25, 0x68
    c98a:	86 0f       	add	r24, r22
    c98c:	97 1f       	adc	r25, r23
    c98e:	88 0f       	add	r24, r24
    c990:	99 1f       	adc	r25, r25
    c992:	88 0f       	add	r24, r24
    c994:	99 1f       	adc	r25, r25
    c996:	84 0f       	add	r24, r20
    c998:	95 1f       	adc	r25, r21
    c99a:	02 96       	adiw	r24, 0x02	; 2
    c99c:	fc 01       	movw	r30, r24
    c99e:	80 81       	ld	r24, Z
    c9a0:	91 81       	ldd	r25, Z+1	; 0x01
    c9a2:	28 17       	cp	r18, r24
    c9a4:	39 07       	cpc	r19, r25
    c9a6:	0c f0       	brlt	.+2      	; 0xc9aa <main+0x8cd6>
    c9a8:	a6 c2       	rjmp	.+1356   	; 0xcef6 <main+0x9222>
					{
						right_degrees(135);
    c9aa:	87 e8       	ldi	r24, 0x87	; 135
    c9ac:	90 e0       	ldi	r25, 0x00	; 0
    c9ae:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						back_mm(65);
    c9b2:	81 e4       	ldi	r24, 0x41	; 65
    c9b4:	90 e0       	ldi	r25, 0x00	; 0
    c9b6:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
						matrix2();
    c9ba:	0e 94 0b 1c 	call	0x3816	; 0x3816 <matrix2>
							if(summ1[recur+1]>10)
    c9be:	8f 81       	ldd	r24, Y+7	; 0x07
    c9c0:	98 85       	ldd	r25, Y+8	; 0x08
    c9c2:	01 96       	adiw	r24, 0x01	; 1
    c9c4:	9e 01       	movw	r18, r28
    c9c6:	25 54       	subi	r18, 0x45	; 69
    c9c8:	39 4f       	sbci	r19, 0xF9	; 249
    c9ca:	88 0f       	add	r24, r24
    c9cc:	99 1f       	adc	r25, r25
    c9ce:	82 0f       	add	r24, r18
    c9d0:	93 1f       	adc	r25, r19
    c9d2:	fc 01       	movw	r30, r24
    c9d4:	80 81       	ld	r24, Z
    c9d6:	91 81       	ldd	r25, Z+1	; 0x01
    c9d8:	8b 30       	cpi	r24, 0x0B	; 11
    c9da:	91 05       	cpc	r25, r1
    c9dc:	0c f4       	brge	.+2      	; 0xc9e0 <main+0x8d0c>
    c9de:	d6 c0       	rjmp	.+428    	; 0xcb8c <main+0x8eb8>
							{
								buzzer_on();
    c9e0:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    c9e4:	9e 01       	movw	r18, r28
    c9e6:	27 5e       	subi	r18, 0xE7	; 231
    c9e8:	3b 4f       	sbci	r19, 0xFB	; 251
    c9ea:	80 e0       	ldi	r24, 0x00	; 0
    c9ec:	90 e0       	ldi	r25, 0x00	; 0
    c9ee:	aa e7       	ldi	r26, 0x7A	; 122
    c9f0:	b4 e4       	ldi	r27, 0x44	; 68
    c9f2:	f9 01       	movw	r30, r18
    c9f4:	80 83       	st	Z, r24
    c9f6:	91 83       	std	Z+1, r25	; 0x01
    c9f8:	a2 83       	std	Z+2, r26	; 0x02
    c9fa:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    c9fc:	8e 01       	movw	r16, r28
    c9fe:	03 5e       	subi	r16, 0xE3	; 227
    ca00:	1b 4f       	sbci	r17, 0xFB	; 251
    ca02:	ce 01       	movw	r24, r28
    ca04:	87 5e       	subi	r24, 0xE7	; 231
    ca06:	9b 4f       	sbci	r25, 0xFB	; 251
    ca08:	fc 01       	movw	r30, r24
    ca0a:	60 81       	ld	r22, Z
    ca0c:	71 81       	ldd	r23, Z+1	; 0x01
    ca0e:	82 81       	ldd	r24, Z+2	; 0x02
    ca10:	93 81       	ldd	r25, Z+3	; 0x03
    ca12:	26 e6       	ldi	r18, 0x66	; 102
    ca14:	36 e6       	ldi	r19, 0x66	; 102
    ca16:	46 e6       	ldi	r20, 0x66	; 102
    ca18:	55 e4       	ldi	r21, 0x45	; 69
    ca1a:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ca1e:	dc 01       	movw	r26, r24
    ca20:	cb 01       	movw	r24, r22
    ca22:	f8 01       	movw	r30, r16
    ca24:	80 83       	st	Z, r24
    ca26:	91 83       	std	Z+1, r25	; 0x01
    ca28:	a2 83       	std	Z+2, r26	; 0x02
    ca2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    ca2c:	ce 01       	movw	r24, r28
    ca2e:	83 5e       	subi	r24, 0xE3	; 227
    ca30:	9b 4f       	sbci	r25, 0xFB	; 251
    ca32:	11 e0       	ldi	r17, 0x01	; 1
    ca34:	fc 01       	movw	r30, r24
    ca36:	60 81       	ld	r22, Z
    ca38:	71 81       	ldd	r23, Z+1	; 0x01
    ca3a:	82 81       	ldd	r24, Z+2	; 0x02
    ca3c:	93 81       	ldd	r25, Z+3	; 0x03
    ca3e:	20 e0       	ldi	r18, 0x00	; 0
    ca40:	30 e0       	ldi	r19, 0x00	; 0
    ca42:	40 e8       	ldi	r20, 0x80	; 128
    ca44:	5f e3       	ldi	r21, 0x3F	; 63
    ca46:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    ca4a:	88 23       	and	r24, r24
    ca4c:	0c f0       	brlt	.+2      	; 0xca50 <main+0x8d7c>
    ca4e:	10 e0       	ldi	r17, 0x00	; 0
    ca50:	11 23       	and	r17, r17
    ca52:	49 f0       	breq	.+18     	; 0xca66 <main+0x8d92>
		__ticks = 1;
    ca54:	ce 01       	movw	r24, r28
    ca56:	8f 5d       	subi	r24, 0xDF	; 223
    ca58:	9b 4f       	sbci	r25, 0xFB	; 251
    ca5a:	21 e0       	ldi	r18, 0x01	; 1
    ca5c:	30 e0       	ldi	r19, 0x00	; 0
    ca5e:	fc 01       	movw	r30, r24
    ca60:	31 83       	std	Z+1, r19	; 0x01
    ca62:	20 83       	st	Z, r18
    ca64:	74 c0       	rjmp	.+232    	; 0xcb4e <main+0x8e7a>
	else if (__tmp > 65535)
    ca66:	ce 01       	movw	r24, r28
    ca68:	83 5e       	subi	r24, 0xE3	; 227
    ca6a:	9b 4f       	sbci	r25, 0xFB	; 251
    ca6c:	11 e0       	ldi	r17, 0x01	; 1
    ca6e:	fc 01       	movw	r30, r24
    ca70:	60 81       	ld	r22, Z
    ca72:	71 81       	ldd	r23, Z+1	; 0x01
    ca74:	82 81       	ldd	r24, Z+2	; 0x02
    ca76:	93 81       	ldd	r25, Z+3	; 0x03
    ca78:	20 e0       	ldi	r18, 0x00	; 0
    ca7a:	3f ef       	ldi	r19, 0xFF	; 255
    ca7c:	4f e7       	ldi	r20, 0x7F	; 127
    ca7e:	57 e4       	ldi	r21, 0x47	; 71
    ca80:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    ca84:	18 16       	cp	r1, r24
    ca86:	0c f0       	brlt	.+2      	; 0xca8a <main+0x8db6>
    ca88:	10 e0       	ldi	r17, 0x00	; 0
    ca8a:	11 23       	and	r17, r17
    ca8c:	09 f4       	brne	.+2      	; 0xca90 <main+0x8dbc>
    ca8e:	4d c0       	rjmp	.+154    	; 0xcb2a <main+0x8e56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    ca90:	ce 01       	movw	r24, r28
    ca92:	87 5e       	subi	r24, 0xE7	; 231
    ca94:	9b 4f       	sbci	r25, 0xFB	; 251
    ca96:	fc 01       	movw	r30, r24
    ca98:	60 81       	ld	r22, Z
    ca9a:	71 81       	ldd	r23, Z+1	; 0x01
    ca9c:	82 81       	ldd	r24, Z+2	; 0x02
    ca9e:	93 81       	ldd	r25, Z+3	; 0x03
    caa0:	20 e0       	ldi	r18, 0x00	; 0
    caa2:	30 e0       	ldi	r19, 0x00	; 0
    caa4:	40 e2       	ldi	r20, 0x20	; 32
    caa6:	51 e4       	ldi	r21, 0x41	; 65
    caa8:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    caac:	dc 01       	movw	r26, r24
    caae:	cb 01       	movw	r24, r22
    cab0:	8e 01       	movw	r16, r28
    cab2:	0f 5d       	subi	r16, 0xDF	; 223
    cab4:	1b 4f       	sbci	r17, 0xFB	; 251
    cab6:	bc 01       	movw	r22, r24
    cab8:	cd 01       	movw	r24, r26
    caba:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    cabe:	dc 01       	movw	r26, r24
    cac0:	cb 01       	movw	r24, r22
    cac2:	f8 01       	movw	r30, r16
    cac4:	91 83       	std	Z+1, r25	; 0x01
    cac6:	80 83       	st	Z, r24
    cac8:	27 c0       	rjmp	.+78     	; 0xcb18 <main+0x8e44>
    caca:	ce 01       	movw	r24, r28
    cacc:	8d 5d       	subi	r24, 0xDD	; 221
    cace:	9b 4f       	sbci	r25, 0xFB	; 251
    cad0:	20 e7       	ldi	r18, 0x70	; 112
    cad2:	31 e0       	ldi	r19, 0x01	; 1
    cad4:	fc 01       	movw	r30, r24
    cad6:	31 83       	std	Z+1, r19	; 0x01
    cad8:	20 83       	st	Z, r18
    cada:	ce 01       	movw	r24, r28
    cadc:	8d 5d       	subi	r24, 0xDD	; 221
    cade:	9b 4f       	sbci	r25, 0xFB	; 251
    cae0:	fc 01       	movw	r30, r24
    cae2:	80 81       	ld	r24, Z
    cae4:	91 81       	ldd	r25, Z+1	; 0x01
    cae6:	8c 01       	movw	r16, r24
    cae8:	c8 01       	movw	r24, r16
    caea:	01 97       	sbiw	r24, 0x01	; 1
    caec:	f1 f7       	brne	.-4      	; 0xcaea <main+0x8e16>
    caee:	8c 01       	movw	r16, r24
    caf0:	ce 01       	movw	r24, r28
    caf2:	8d 5d       	subi	r24, 0xDD	; 221
    caf4:	9b 4f       	sbci	r25, 0xFB	; 251
    caf6:	fc 01       	movw	r30, r24
    caf8:	11 83       	std	Z+1, r17	; 0x01
    cafa:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    cafc:	ce 01       	movw	r24, r28
    cafe:	8f 5d       	subi	r24, 0xDF	; 223
    cb00:	9b 4f       	sbci	r25, 0xFB	; 251
    cb02:	9e 01       	movw	r18, r28
    cb04:	2f 5d       	subi	r18, 0xDF	; 223
    cb06:	3b 4f       	sbci	r19, 0xFB	; 251
    cb08:	f9 01       	movw	r30, r18
    cb0a:	20 81       	ld	r18, Z
    cb0c:	31 81       	ldd	r19, Z+1	; 0x01
    cb0e:	21 50       	subi	r18, 0x01	; 1
    cb10:	30 40       	sbci	r19, 0x00	; 0
    cb12:	fc 01       	movw	r30, r24
    cb14:	31 83       	std	Z+1, r19	; 0x01
    cb16:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    cb18:	ce 01       	movw	r24, r28
    cb1a:	8f 5d       	subi	r24, 0xDF	; 223
    cb1c:	9b 4f       	sbci	r25, 0xFB	; 251
    cb1e:	fc 01       	movw	r30, r24
    cb20:	80 81       	ld	r24, Z
    cb22:	91 81       	ldd	r25, Z+1	; 0x01
    cb24:	00 97       	sbiw	r24, 0x00	; 0
    cb26:	89 f6       	brne	.-94     	; 0xcaca <main+0x8df6>
    cb28:	2f c0       	rjmp	.+94     	; 0xcb88 <main+0x8eb4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    cb2a:	8e 01       	movw	r16, r28
    cb2c:	0f 5d       	subi	r16, 0xDF	; 223
    cb2e:	1b 4f       	sbci	r17, 0xFB	; 251
    cb30:	ce 01       	movw	r24, r28
    cb32:	83 5e       	subi	r24, 0xE3	; 227
    cb34:	9b 4f       	sbci	r25, 0xFB	; 251
    cb36:	fc 01       	movw	r30, r24
    cb38:	60 81       	ld	r22, Z
    cb3a:	71 81       	ldd	r23, Z+1	; 0x01
    cb3c:	82 81       	ldd	r24, Z+2	; 0x02
    cb3e:	93 81       	ldd	r25, Z+3	; 0x03
    cb40:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    cb44:	dc 01       	movw	r26, r24
    cb46:	cb 01       	movw	r24, r22
    cb48:	f8 01       	movw	r30, r16
    cb4a:	91 83       	std	Z+1, r25	; 0x01
    cb4c:	80 83       	st	Z, r24
    cb4e:	ce 01       	movw	r24, r28
    cb50:	8b 5d       	subi	r24, 0xDB	; 219
    cb52:	9b 4f       	sbci	r25, 0xFB	; 251
    cb54:	9e 01       	movw	r18, r28
    cb56:	2f 5d       	subi	r18, 0xDF	; 223
    cb58:	3b 4f       	sbci	r19, 0xFB	; 251
    cb5a:	f9 01       	movw	r30, r18
    cb5c:	20 81       	ld	r18, Z
    cb5e:	31 81       	ldd	r19, Z+1	; 0x01
    cb60:	fc 01       	movw	r30, r24
    cb62:	31 83       	std	Z+1, r19	; 0x01
    cb64:	20 83       	st	Z, r18
    cb66:	ce 01       	movw	r24, r28
    cb68:	8b 5d       	subi	r24, 0xDB	; 219
    cb6a:	9b 4f       	sbci	r25, 0xFB	; 251
    cb6c:	fc 01       	movw	r30, r24
    cb6e:	80 81       	ld	r24, Z
    cb70:	91 81       	ldd	r25, Z+1	; 0x01
    cb72:	8c 01       	movw	r16, r24
    cb74:	c8 01       	movw	r24, r16
    cb76:	01 97       	sbiw	r24, 0x01	; 1
    cb78:	f1 f7       	brne	.-4      	; 0xcb76 <main+0x8ea2>
    cb7a:	8c 01       	movw	r16, r24
    cb7c:	ce 01       	movw	r24, r28
    cb7e:	8b 5d       	subi	r24, 0xDB	; 219
    cb80:	9b 4f       	sbci	r25, 0xFB	; 251
    cb82:	fc 01       	movw	r30, r24
    cb84:	11 83       	std	Z+1, r17	; 0x01
    cb86:	00 83       	st	Z, r16
								_delay_ms(1000);
								buzzer_off();
    cb88:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <buzzer_off>
							}
						forward_mm(75);
    cb8c:	8b e4       	ldi	r24, 0x4B	; 75
    cb8e:	90 e0       	ldi	r25, 0x00	; 0
    cb90:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <forward_mm>
    cb94:	9e 01       	movw	r18, r28
    cb96:	29 5d       	subi	r18, 0xD9	; 217
    cb98:	3b 4f       	sbci	r19, 0xFB	; 251
    cb9a:	80 e0       	ldi	r24, 0x00	; 0
    cb9c:	90 e0       	ldi	r25, 0x00	; 0
    cb9e:	a0 ef       	ldi	r26, 0xF0	; 240
    cba0:	b1 e4       	ldi	r27, 0x41	; 65
    cba2:	f9 01       	movw	r30, r18
    cba4:	80 83       	st	Z, r24
    cba6:	91 83       	std	Z+1, r25	; 0x01
    cba8:	a2 83       	std	Z+2, r26	; 0x02
    cbaa:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    cbac:	8e 01       	movw	r16, r28
    cbae:	05 5d       	subi	r16, 0xD5	; 213
    cbb0:	1b 4f       	sbci	r17, 0xFB	; 251
    cbb2:	ce 01       	movw	r24, r28
    cbb4:	89 5d       	subi	r24, 0xD9	; 217
    cbb6:	9b 4f       	sbci	r25, 0xFB	; 251
    cbb8:	fc 01       	movw	r30, r24
    cbba:	60 81       	ld	r22, Z
    cbbc:	71 81       	ldd	r23, Z+1	; 0x01
    cbbe:	82 81       	ldd	r24, Z+2	; 0x02
    cbc0:	93 81       	ldd	r25, Z+3	; 0x03
    cbc2:	26 e6       	ldi	r18, 0x66	; 102
    cbc4:	36 e6       	ldi	r19, 0x66	; 102
    cbc6:	46 e6       	ldi	r20, 0x66	; 102
    cbc8:	55 e4       	ldi	r21, 0x45	; 69
    cbca:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    cbce:	dc 01       	movw	r26, r24
    cbd0:	cb 01       	movw	r24, r22
    cbd2:	f8 01       	movw	r30, r16
    cbd4:	80 83       	st	Z, r24
    cbd6:	91 83       	std	Z+1, r25	; 0x01
    cbd8:	a2 83       	std	Z+2, r26	; 0x02
    cbda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    cbdc:	ce 01       	movw	r24, r28
    cbde:	85 5d       	subi	r24, 0xD5	; 213
    cbe0:	9b 4f       	sbci	r25, 0xFB	; 251
    cbe2:	11 e0       	ldi	r17, 0x01	; 1
    cbe4:	fc 01       	movw	r30, r24
    cbe6:	60 81       	ld	r22, Z
    cbe8:	71 81       	ldd	r23, Z+1	; 0x01
    cbea:	82 81       	ldd	r24, Z+2	; 0x02
    cbec:	93 81       	ldd	r25, Z+3	; 0x03
    cbee:	20 e0       	ldi	r18, 0x00	; 0
    cbf0:	30 e0       	ldi	r19, 0x00	; 0
    cbf2:	40 e8       	ldi	r20, 0x80	; 128
    cbf4:	5f e3       	ldi	r21, 0x3F	; 63
    cbf6:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    cbfa:	88 23       	and	r24, r24
    cbfc:	0c f0       	brlt	.+2      	; 0xcc00 <main+0x8f2c>
    cbfe:	10 e0       	ldi	r17, 0x00	; 0
    cc00:	11 23       	and	r17, r17
    cc02:	49 f0       	breq	.+18     	; 0xcc16 <main+0x8f42>
		__ticks = 1;
    cc04:	ce 01       	movw	r24, r28
    cc06:	81 5d       	subi	r24, 0xD1	; 209
    cc08:	9b 4f       	sbci	r25, 0xFB	; 251
    cc0a:	21 e0       	ldi	r18, 0x01	; 1
    cc0c:	30 e0       	ldi	r19, 0x00	; 0
    cc0e:	fc 01       	movw	r30, r24
    cc10:	31 83       	std	Z+1, r19	; 0x01
    cc12:	20 83       	st	Z, r18
    cc14:	74 c0       	rjmp	.+232    	; 0xccfe <main+0x902a>
	else if (__tmp > 65535)
    cc16:	ce 01       	movw	r24, r28
    cc18:	85 5d       	subi	r24, 0xD5	; 213
    cc1a:	9b 4f       	sbci	r25, 0xFB	; 251
    cc1c:	11 e0       	ldi	r17, 0x01	; 1
    cc1e:	fc 01       	movw	r30, r24
    cc20:	60 81       	ld	r22, Z
    cc22:	71 81       	ldd	r23, Z+1	; 0x01
    cc24:	82 81       	ldd	r24, Z+2	; 0x02
    cc26:	93 81       	ldd	r25, Z+3	; 0x03
    cc28:	20 e0       	ldi	r18, 0x00	; 0
    cc2a:	3f ef       	ldi	r19, 0xFF	; 255
    cc2c:	4f e7       	ldi	r20, 0x7F	; 127
    cc2e:	57 e4       	ldi	r21, 0x47	; 71
    cc30:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    cc34:	18 16       	cp	r1, r24
    cc36:	0c f0       	brlt	.+2      	; 0xcc3a <main+0x8f66>
    cc38:	10 e0       	ldi	r17, 0x00	; 0
    cc3a:	11 23       	and	r17, r17
    cc3c:	09 f4       	brne	.+2      	; 0xcc40 <main+0x8f6c>
    cc3e:	4d c0       	rjmp	.+154    	; 0xccda <main+0x9006>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    cc40:	ce 01       	movw	r24, r28
    cc42:	89 5d       	subi	r24, 0xD9	; 217
    cc44:	9b 4f       	sbci	r25, 0xFB	; 251
    cc46:	fc 01       	movw	r30, r24
    cc48:	60 81       	ld	r22, Z
    cc4a:	71 81       	ldd	r23, Z+1	; 0x01
    cc4c:	82 81       	ldd	r24, Z+2	; 0x02
    cc4e:	93 81       	ldd	r25, Z+3	; 0x03
    cc50:	20 e0       	ldi	r18, 0x00	; 0
    cc52:	30 e0       	ldi	r19, 0x00	; 0
    cc54:	40 e2       	ldi	r20, 0x20	; 32
    cc56:	51 e4       	ldi	r21, 0x41	; 65
    cc58:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    cc5c:	dc 01       	movw	r26, r24
    cc5e:	cb 01       	movw	r24, r22
    cc60:	8e 01       	movw	r16, r28
    cc62:	01 5d       	subi	r16, 0xD1	; 209
    cc64:	1b 4f       	sbci	r17, 0xFB	; 251
    cc66:	bc 01       	movw	r22, r24
    cc68:	cd 01       	movw	r24, r26
    cc6a:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    cc6e:	dc 01       	movw	r26, r24
    cc70:	cb 01       	movw	r24, r22
    cc72:	f8 01       	movw	r30, r16
    cc74:	91 83       	std	Z+1, r25	; 0x01
    cc76:	80 83       	st	Z, r24
    cc78:	27 c0       	rjmp	.+78     	; 0xccc8 <main+0x8ff4>
    cc7a:	ce 01       	movw	r24, r28
    cc7c:	8f 5c       	subi	r24, 0xCF	; 207
    cc7e:	9b 4f       	sbci	r25, 0xFB	; 251
    cc80:	20 e7       	ldi	r18, 0x70	; 112
    cc82:	31 e0       	ldi	r19, 0x01	; 1
    cc84:	fc 01       	movw	r30, r24
    cc86:	31 83       	std	Z+1, r19	; 0x01
    cc88:	20 83       	st	Z, r18
    cc8a:	ce 01       	movw	r24, r28
    cc8c:	8f 5c       	subi	r24, 0xCF	; 207
    cc8e:	9b 4f       	sbci	r25, 0xFB	; 251
    cc90:	fc 01       	movw	r30, r24
    cc92:	80 81       	ld	r24, Z
    cc94:	91 81       	ldd	r25, Z+1	; 0x01
    cc96:	8c 01       	movw	r16, r24
    cc98:	c8 01       	movw	r24, r16
    cc9a:	01 97       	sbiw	r24, 0x01	; 1
    cc9c:	f1 f7       	brne	.-4      	; 0xcc9a <main+0x8fc6>
    cc9e:	8c 01       	movw	r16, r24
    cca0:	ce 01       	movw	r24, r28
    cca2:	8f 5c       	subi	r24, 0xCF	; 207
    cca4:	9b 4f       	sbci	r25, 0xFB	; 251
    cca6:	fc 01       	movw	r30, r24
    cca8:	11 83       	std	Z+1, r17	; 0x01
    ccaa:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ccac:	ce 01       	movw	r24, r28
    ccae:	81 5d       	subi	r24, 0xD1	; 209
    ccb0:	9b 4f       	sbci	r25, 0xFB	; 251
    ccb2:	9e 01       	movw	r18, r28
    ccb4:	21 5d       	subi	r18, 0xD1	; 209
    ccb6:	3b 4f       	sbci	r19, 0xFB	; 251
    ccb8:	f9 01       	movw	r30, r18
    ccba:	20 81       	ld	r18, Z
    ccbc:	31 81       	ldd	r19, Z+1	; 0x01
    ccbe:	21 50       	subi	r18, 0x01	; 1
    ccc0:	30 40       	sbci	r19, 0x00	; 0
    ccc2:	fc 01       	movw	r30, r24
    ccc4:	31 83       	std	Z+1, r19	; 0x01
    ccc6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    ccc8:	ce 01       	movw	r24, r28
    ccca:	81 5d       	subi	r24, 0xD1	; 209
    cccc:	9b 4f       	sbci	r25, 0xFB	; 251
    ccce:	fc 01       	movw	r30, r24
    ccd0:	80 81       	ld	r24, Z
    ccd2:	91 81       	ldd	r25, Z+1	; 0x01
    ccd4:	00 97       	sbiw	r24, 0x00	; 0
    ccd6:	89 f6       	brne	.-94     	; 0xcc7a <main+0x8fa6>
    ccd8:	2f c0       	rjmp	.+94     	; 0xcd38 <main+0x9064>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    ccda:	8e 01       	movw	r16, r28
    ccdc:	01 5d       	subi	r16, 0xD1	; 209
    ccde:	1b 4f       	sbci	r17, 0xFB	; 251
    cce0:	ce 01       	movw	r24, r28
    cce2:	85 5d       	subi	r24, 0xD5	; 213
    cce4:	9b 4f       	sbci	r25, 0xFB	; 251
    cce6:	fc 01       	movw	r30, r24
    cce8:	60 81       	ld	r22, Z
    ccea:	71 81       	ldd	r23, Z+1	; 0x01
    ccec:	82 81       	ldd	r24, Z+2	; 0x02
    ccee:	93 81       	ldd	r25, Z+3	; 0x03
    ccf0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ccf4:	dc 01       	movw	r26, r24
    ccf6:	cb 01       	movw	r24, r22
    ccf8:	f8 01       	movw	r30, r16
    ccfa:	91 83       	std	Z+1, r25	; 0x01
    ccfc:	80 83       	st	Z, r24
    ccfe:	ce 01       	movw	r24, r28
    cd00:	8d 5c       	subi	r24, 0xCD	; 205
    cd02:	9b 4f       	sbci	r25, 0xFB	; 251
    cd04:	9e 01       	movw	r18, r28
    cd06:	21 5d       	subi	r18, 0xD1	; 209
    cd08:	3b 4f       	sbci	r19, 0xFB	; 251
    cd0a:	f9 01       	movw	r30, r18
    cd0c:	20 81       	ld	r18, Z
    cd0e:	31 81       	ldd	r19, Z+1	; 0x01
    cd10:	fc 01       	movw	r30, r24
    cd12:	31 83       	std	Z+1, r19	; 0x01
    cd14:	20 83       	st	Z, r18
    cd16:	ce 01       	movw	r24, r28
    cd18:	8d 5c       	subi	r24, 0xCD	; 205
    cd1a:	9b 4f       	sbci	r25, 0xFB	; 251
    cd1c:	fc 01       	movw	r30, r24
    cd1e:	80 81       	ld	r24, Z
    cd20:	91 81       	ldd	r25, Z+1	; 0x01
    cd22:	8c 01       	movw	r16, r24
    cd24:	c8 01       	movw	r24, r16
    cd26:	01 97       	sbiw	r24, 0x01	; 1
    cd28:	f1 f7       	brne	.-4      	; 0xcd26 <main+0x9052>
    cd2a:	8c 01       	movw	r16, r24
    cd2c:	ce 01       	movw	r24, r28
    cd2e:	8d 5c       	subi	r24, 0xCD	; 205
    cd30:	9b 4f       	sbci	r25, 0xFB	; 251
    cd32:	fc 01       	movw	r30, r24
    cd34:	11 83       	std	Z+1, r17	; 0x01
    cd36:	00 83       	st	Z, r16
						_delay_ms(30);
						back_mm(10);
    cd38:	8a e0       	ldi	r24, 0x0A	; 10
    cd3a:	90 e0       	ldi	r25, 0x00	; 0
    cd3c:	0e 94 06 10 	call	0x200c	; 0x200c <back_mm>
    cd40:	9e 01       	movw	r18, r28
    cd42:	2b 5c       	subi	r18, 0xCB	; 203
    cd44:	3b 4f       	sbci	r19, 0xFB	; 251
    cd46:	80 e0       	ldi	r24, 0x00	; 0
    cd48:	90 e0       	ldi	r25, 0x00	; 0
    cd4a:	aa ef       	ldi	r26, 0xFA	; 250
    cd4c:	b3 e4       	ldi	r27, 0x43	; 67
    cd4e:	f9 01       	movw	r30, r18
    cd50:	80 83       	st	Z, r24
    cd52:	91 83       	std	Z+1, r25	; 0x01
    cd54:	a2 83       	std	Z+2, r26	; 0x02
    cd56:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    cd58:	8e 01       	movw	r16, r28
    cd5a:	07 5c       	subi	r16, 0xC7	; 199
    cd5c:	1b 4f       	sbci	r17, 0xFB	; 251
    cd5e:	ce 01       	movw	r24, r28
    cd60:	8b 5c       	subi	r24, 0xCB	; 203
    cd62:	9b 4f       	sbci	r25, 0xFB	; 251
    cd64:	fc 01       	movw	r30, r24
    cd66:	60 81       	ld	r22, Z
    cd68:	71 81       	ldd	r23, Z+1	; 0x01
    cd6a:	82 81       	ldd	r24, Z+2	; 0x02
    cd6c:	93 81       	ldd	r25, Z+3	; 0x03
    cd6e:	26 e6       	ldi	r18, 0x66	; 102
    cd70:	36 e6       	ldi	r19, 0x66	; 102
    cd72:	46 e6       	ldi	r20, 0x66	; 102
    cd74:	55 e4       	ldi	r21, 0x45	; 69
    cd76:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    cd7a:	dc 01       	movw	r26, r24
    cd7c:	cb 01       	movw	r24, r22
    cd7e:	f8 01       	movw	r30, r16
    cd80:	80 83       	st	Z, r24
    cd82:	91 83       	std	Z+1, r25	; 0x01
    cd84:	a2 83       	std	Z+2, r26	; 0x02
    cd86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    cd88:	ce 01       	movw	r24, r28
    cd8a:	87 5c       	subi	r24, 0xC7	; 199
    cd8c:	9b 4f       	sbci	r25, 0xFB	; 251
    cd8e:	11 e0       	ldi	r17, 0x01	; 1
    cd90:	fc 01       	movw	r30, r24
    cd92:	60 81       	ld	r22, Z
    cd94:	71 81       	ldd	r23, Z+1	; 0x01
    cd96:	82 81       	ldd	r24, Z+2	; 0x02
    cd98:	93 81       	ldd	r25, Z+3	; 0x03
    cd9a:	20 e0       	ldi	r18, 0x00	; 0
    cd9c:	30 e0       	ldi	r19, 0x00	; 0
    cd9e:	40 e8       	ldi	r20, 0x80	; 128
    cda0:	5f e3       	ldi	r21, 0x3F	; 63
    cda2:	0e 94 00 68 	call	0xd000	; 0xd000 <__cmpsf2>
    cda6:	88 23       	and	r24, r24
    cda8:	0c f0       	brlt	.+2      	; 0xcdac <main+0x90d8>
    cdaa:	10 e0       	ldi	r17, 0x00	; 0
    cdac:	11 23       	and	r17, r17
    cdae:	49 f0       	breq	.+18     	; 0xcdc2 <main+0x90ee>
		__ticks = 1;
    cdb0:	ce 01       	movw	r24, r28
    cdb2:	83 5c       	subi	r24, 0xC3	; 195
    cdb4:	9b 4f       	sbci	r25, 0xFB	; 251
    cdb6:	21 e0       	ldi	r18, 0x01	; 1
    cdb8:	30 e0       	ldi	r19, 0x00	; 0
    cdba:	fc 01       	movw	r30, r24
    cdbc:	31 83       	std	Z+1, r19	; 0x01
    cdbe:	20 83       	st	Z, r18
    cdc0:	74 c0       	rjmp	.+232    	; 0xceaa <main+0x91d6>
	else if (__tmp > 65535)
    cdc2:	ce 01       	movw	r24, r28
    cdc4:	87 5c       	subi	r24, 0xC7	; 199
    cdc6:	9b 4f       	sbci	r25, 0xFB	; 251
    cdc8:	11 e0       	ldi	r17, 0x01	; 1
    cdca:	fc 01       	movw	r30, r24
    cdcc:	60 81       	ld	r22, Z
    cdce:	71 81       	ldd	r23, Z+1	; 0x01
    cdd0:	82 81       	ldd	r24, Z+2	; 0x02
    cdd2:	93 81       	ldd	r25, Z+3	; 0x03
    cdd4:	20 e0       	ldi	r18, 0x00	; 0
    cdd6:	3f ef       	ldi	r19, 0xFF	; 255
    cdd8:	4f e7       	ldi	r20, 0x7F	; 127
    cdda:	57 e4       	ldi	r21, 0x47	; 71
    cddc:	0e 94 4a 69 	call	0xd294	; 0xd294 <__gesf2>
    cde0:	18 16       	cp	r1, r24
    cde2:	0c f0       	brlt	.+2      	; 0xcde6 <main+0x9112>
    cde4:	10 e0       	ldi	r17, 0x00	; 0
    cde6:	11 23       	and	r17, r17
    cde8:	09 f4       	brne	.+2      	; 0xcdec <main+0x9118>
    cdea:	4d c0       	rjmp	.+154    	; 0xce86 <main+0x91b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    cdec:	ce 01       	movw	r24, r28
    cdee:	8b 5c       	subi	r24, 0xCB	; 203
    cdf0:	9b 4f       	sbci	r25, 0xFB	; 251
    cdf2:	fc 01       	movw	r30, r24
    cdf4:	60 81       	ld	r22, Z
    cdf6:	71 81       	ldd	r23, Z+1	; 0x01
    cdf8:	82 81       	ldd	r24, Z+2	; 0x02
    cdfa:	93 81       	ldd	r25, Z+3	; 0x03
    cdfc:	20 e0       	ldi	r18, 0x00	; 0
    cdfe:	30 e0       	ldi	r19, 0x00	; 0
    ce00:	40 e2       	ldi	r20, 0x20	; 32
    ce02:	51 e4       	ldi	r21, 0x41	; 65
    ce04:	0e 94 4e 69 	call	0xd29c	; 0xd29c <__mulsf3>
    ce08:	dc 01       	movw	r26, r24
    ce0a:	cb 01       	movw	r24, r22
    ce0c:	8e 01       	movw	r16, r28
    ce0e:	03 5c       	subi	r16, 0xC3	; 195
    ce10:	1b 4f       	sbci	r17, 0xFB	; 251
    ce12:	bc 01       	movw	r22, r24
    ce14:	cd 01       	movw	r24, r26
    ce16:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    ce1a:	dc 01       	movw	r26, r24
    ce1c:	cb 01       	movw	r24, r22
    ce1e:	f8 01       	movw	r30, r16
    ce20:	91 83       	std	Z+1, r25	; 0x01
    ce22:	80 83       	st	Z, r24
    ce24:	27 c0       	rjmp	.+78     	; 0xce74 <main+0x91a0>
    ce26:	ce 01       	movw	r24, r28
    ce28:	81 5c       	subi	r24, 0xC1	; 193
    ce2a:	9b 4f       	sbci	r25, 0xFB	; 251
    ce2c:	20 e7       	ldi	r18, 0x70	; 112
    ce2e:	31 e0       	ldi	r19, 0x01	; 1
    ce30:	fc 01       	movw	r30, r24
    ce32:	31 83       	std	Z+1, r19	; 0x01
    ce34:	20 83       	st	Z, r18
    ce36:	ce 01       	movw	r24, r28
    ce38:	81 5c       	subi	r24, 0xC1	; 193
    ce3a:	9b 4f       	sbci	r25, 0xFB	; 251
    ce3c:	fc 01       	movw	r30, r24
    ce3e:	80 81       	ld	r24, Z
    ce40:	91 81       	ldd	r25, Z+1	; 0x01
    ce42:	8c 01       	movw	r16, r24
    ce44:	c8 01       	movw	r24, r16
    ce46:	01 97       	sbiw	r24, 0x01	; 1
    ce48:	f1 f7       	brne	.-4      	; 0xce46 <main+0x9172>
    ce4a:	8c 01       	movw	r16, r24
    ce4c:	ce 01       	movw	r24, r28
    ce4e:	81 5c       	subi	r24, 0xC1	; 193
    ce50:	9b 4f       	sbci	r25, 0xFB	; 251
    ce52:	fc 01       	movw	r30, r24
    ce54:	11 83       	std	Z+1, r17	; 0x01
    ce56:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ce58:	ce 01       	movw	r24, r28
    ce5a:	83 5c       	subi	r24, 0xC3	; 195
    ce5c:	9b 4f       	sbci	r25, 0xFB	; 251
    ce5e:	9e 01       	movw	r18, r28
    ce60:	23 5c       	subi	r18, 0xC3	; 195
    ce62:	3b 4f       	sbci	r19, 0xFB	; 251
    ce64:	f9 01       	movw	r30, r18
    ce66:	20 81       	ld	r18, Z
    ce68:	31 81       	ldd	r19, Z+1	; 0x01
    ce6a:	21 50       	subi	r18, 0x01	; 1
    ce6c:	30 40       	sbci	r19, 0x00	; 0
    ce6e:	fc 01       	movw	r30, r24
    ce70:	31 83       	std	Z+1, r19	; 0x01
    ce72:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    ce74:	ce 01       	movw	r24, r28
    ce76:	83 5c       	subi	r24, 0xC3	; 195
    ce78:	9b 4f       	sbci	r25, 0xFB	; 251
    ce7a:	fc 01       	movw	r30, r24
    ce7c:	80 81       	ld	r24, Z
    ce7e:	91 81       	ldd	r25, Z+1	; 0x01
    ce80:	00 97       	sbiw	r24, 0x00	; 0
    ce82:	89 f6       	brne	.-94     	; 0xce26 <main+0x9152>
    ce84:	2f c0       	rjmp	.+94     	; 0xcee4 <main+0x9210>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    ce86:	8e 01       	movw	r16, r28
    ce88:	03 5c       	subi	r16, 0xC3	; 195
    ce8a:	1b 4f       	sbci	r17, 0xFB	; 251
    ce8c:	ce 01       	movw	r24, r28
    ce8e:	87 5c       	subi	r24, 0xC7	; 199
    ce90:	9b 4f       	sbci	r25, 0xFB	; 251
    ce92:	fc 01       	movw	r30, r24
    ce94:	60 81       	ld	r22, Z
    ce96:	71 81       	ldd	r23, Z+1	; 0x01
    ce98:	82 81       	ldd	r24, Z+2	; 0x02
    ce9a:	93 81       	ldd	r25, Z+3	; 0x03
    ce9c:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <__fixunssfsi>
    cea0:	dc 01       	movw	r26, r24
    cea2:	cb 01       	movw	r24, r22
    cea4:	f8 01       	movw	r30, r16
    cea6:	91 83       	std	Z+1, r25	; 0x01
    cea8:	80 83       	st	Z, r24
    ceaa:	ce 01       	movw	r24, r28
    ceac:	8f 5b       	subi	r24, 0xBF	; 191
    ceae:	9b 4f       	sbci	r25, 0xFB	; 251
    ceb0:	9e 01       	movw	r18, r28
    ceb2:	23 5c       	subi	r18, 0xC3	; 195
    ceb4:	3b 4f       	sbci	r19, 0xFB	; 251
    ceb6:	f9 01       	movw	r30, r18
    ceb8:	20 81       	ld	r18, Z
    ceba:	31 81       	ldd	r19, Z+1	; 0x01
    cebc:	fc 01       	movw	r30, r24
    cebe:	31 83       	std	Z+1, r19	; 0x01
    cec0:	20 83       	st	Z, r18
    cec2:	ce 01       	movw	r24, r28
    cec4:	8f 5b       	subi	r24, 0xBF	; 191
    cec6:	9b 4f       	sbci	r25, 0xFB	; 251
    cec8:	fc 01       	movw	r30, r24
    ceca:	80 81       	ld	r24, Z
    cecc:	91 81       	ldd	r25, Z+1	; 0x01
    cece:	8c 01       	movw	r16, r24
    ced0:	c8 01       	movw	r24, r16
    ced2:	01 97       	sbiw	r24, 0x01	; 1
    ced4:	f1 f7       	brne	.-4      	; 0xced2 <main+0x91fe>
    ced6:	8c 01       	movw	r16, r24
    ced8:	ce 01       	movw	r24, r28
    ceda:	8f 5b       	subi	r24, 0xBF	; 191
    cedc:	9b 4f       	sbci	r25, 0xFB	; 251
    cede:	fc 01       	movw	r30, r24
    cee0:	11 83       	std	Z+1, r17	; 0x01
    cee2:	00 83       	st	Z, r16
						_delay_ms(500);
						right_degrees(45);
    cee4:	8d e2       	ldi	r24, 0x2D	; 45
    cee6:	90 e0       	ldi	r25, 0x00	; 0
    cee8:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <right_degrees>
						compass=6;
    ceec:	86 e0       	ldi	r24, 0x06	; 6
    ceee:	90 e0       	ldi	r25, 0x00	; 0
    cef0:	9c 83       	std	Y+4, r25	; 0x04
    cef2:	8b 83       	std	Y+3, r24	; 0x03
						break;	
    cef4:	0e c0       	rjmp	.+28     	; 0xcf12 <main+0x923e>
		}
		else
		{
			if(compass==7)
			{
				for(int i=0;i<4;i++)
    cef6:	8f a1       	lds	r24, 0x4f
    cef8:	98 a5       	lds	r25, 0x68
    cefa:	01 96       	adiw	r24, 0x01	; 1
    cefc:	98 a7       	lds	r25, 0x78
    cefe:	8f a3       	lds	r24, 0x5f
    cf00:	8f a1       	lds	r24, 0x4f
    cf02:	98 a5       	lds	r25, 0x68
    cf04:	84 30       	cpi	r24, 0x04	; 4
    cf06:	91 05       	cpc	r25, r1
    cf08:	14 f4       	brge	.+4      	; 0xcf0e <main+0x923a>
    cf0a:	0c 94 e2 5b 	jmp	0xb7c4	; 0xb7c4 <main+0x7af0>
					}
				}					
			}
		}
	}
	goto hotspot;
    cf0e:	0c 94 5d 3b 	jmp	0x76ba	; 0x76ba <main+0x39e6>
    cf12:	0c 94 5d 3b 	jmp	0x76ba	; 0x76ba <main+0x39e6>
	point2: buzzer_on();			
    cf16:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <buzzer_on>
    cf1a:	80 e0       	ldi	r24, 0x00	; 0
    cf1c:	90 e0       	ldi	r25, 0x00	; 0

}
    cf1e:	c2 52       	subi	r28, 0x22	; 34
    cf20:	d9 4f       	sbci	r29, 0xF9	; 249
    cf22:	0f b6       	in	r0, 0x3f	; 63
    cf24:	f8 94       	cli
    cf26:	de bf       	out	0x3e, r29	; 62
    cf28:	0f be       	out	0x3f, r0	; 63
    cf2a:	cd bf       	out	0x3d, r28	; 61
    cf2c:	df 91       	pop	r29
    cf2e:	cf 91       	pop	r28
    cf30:	1f 91       	pop	r17
    cf32:	0f 91       	pop	r16
    cf34:	08 95       	ret

0000cf36 <__subsf3>:
    cf36:	50 58       	subi	r21, 0x80	; 128

0000cf38 <__addsf3>:
    cf38:	bb 27       	eor	r27, r27
    cf3a:	aa 27       	eor	r26, r26
    cf3c:	0e d0       	rcall	.+28     	; 0xcf5a <__addsf3x>
    cf3e:	70 c1       	rjmp	.+736    	; 0xd220 <__fp_round>
    cf40:	61 d1       	rcall	.+706    	; 0xd204 <__fp_pscA>
    cf42:	30 f0       	brcs	.+12     	; 0xcf50 <__addsf3+0x18>
    cf44:	66 d1       	rcall	.+716    	; 0xd212 <__fp_pscB>
    cf46:	20 f0       	brcs	.+8      	; 0xcf50 <__addsf3+0x18>
    cf48:	31 f4       	brne	.+12     	; 0xcf56 <__addsf3+0x1e>
    cf4a:	9f 3f       	cpi	r25, 0xFF	; 255
    cf4c:	11 f4       	brne	.+4      	; 0xcf52 <__addsf3+0x1a>
    cf4e:	1e f4       	brtc	.+6      	; 0xcf56 <__addsf3+0x1e>
    cf50:	56 c1       	rjmp	.+684    	; 0xd1fe <__fp_nan>
    cf52:	0e f4       	brtc	.+2      	; 0xcf56 <__addsf3+0x1e>
    cf54:	e0 95       	com	r30
    cf56:	e7 fb       	bst	r30, 7
    cf58:	4c c1       	rjmp	.+664    	; 0xd1f2 <__fp_inf>

0000cf5a <__addsf3x>:
    cf5a:	e9 2f       	mov	r30, r25
    cf5c:	72 d1       	rcall	.+740    	; 0xd242 <__fp_split3>
    cf5e:	80 f3       	brcs	.-32     	; 0xcf40 <__addsf3+0x8>
    cf60:	ba 17       	cp	r27, r26
    cf62:	62 07       	cpc	r22, r18
    cf64:	73 07       	cpc	r23, r19
    cf66:	84 07       	cpc	r24, r20
    cf68:	95 07       	cpc	r25, r21
    cf6a:	18 f0       	brcs	.+6      	; 0xcf72 <__addsf3x+0x18>
    cf6c:	71 f4       	brne	.+28     	; 0xcf8a <__addsf3x+0x30>
    cf6e:	9e f5       	brtc	.+102    	; 0xcfd6 <__addsf3x+0x7c>
    cf70:	8a c1       	rjmp	.+788    	; 0xd286 <__fp_zero>
    cf72:	0e f4       	brtc	.+2      	; 0xcf76 <__addsf3x+0x1c>
    cf74:	e0 95       	com	r30
    cf76:	0b 2e       	mov	r0, r27
    cf78:	ba 2f       	mov	r27, r26
    cf7a:	a0 2d       	mov	r26, r0
    cf7c:	0b 01       	movw	r0, r22
    cf7e:	b9 01       	movw	r22, r18
    cf80:	90 01       	movw	r18, r0
    cf82:	0c 01       	movw	r0, r24
    cf84:	ca 01       	movw	r24, r20
    cf86:	a0 01       	movw	r20, r0
    cf88:	11 24       	eor	r1, r1
    cf8a:	ff 27       	eor	r31, r31
    cf8c:	59 1b       	sub	r21, r25
    cf8e:	99 f0       	breq	.+38     	; 0xcfb6 <__addsf3x+0x5c>
    cf90:	59 3f       	cpi	r21, 0xF9	; 249
    cf92:	50 f4       	brcc	.+20     	; 0xcfa8 <__addsf3x+0x4e>
    cf94:	50 3e       	cpi	r21, 0xE0	; 224
    cf96:	68 f1       	brcs	.+90     	; 0xcff2 <__addsf3x+0x98>
    cf98:	1a 16       	cp	r1, r26
    cf9a:	f0 40       	sbci	r31, 0x00	; 0
    cf9c:	a2 2f       	mov	r26, r18
    cf9e:	23 2f       	mov	r18, r19
    cfa0:	34 2f       	mov	r19, r20
    cfa2:	44 27       	eor	r20, r20
    cfa4:	58 5f       	subi	r21, 0xF8	; 248
    cfa6:	f3 cf       	rjmp	.-26     	; 0xcf8e <__addsf3x+0x34>
    cfa8:	46 95       	lsr	r20
    cfaa:	37 95       	ror	r19
    cfac:	27 95       	ror	r18
    cfae:	a7 95       	ror	r26
    cfb0:	f0 40       	sbci	r31, 0x00	; 0
    cfb2:	53 95       	inc	r21
    cfb4:	c9 f7       	brne	.-14     	; 0xcfa8 <__addsf3x+0x4e>
    cfb6:	7e f4       	brtc	.+30     	; 0xcfd6 <__addsf3x+0x7c>
    cfb8:	1f 16       	cp	r1, r31
    cfba:	ba 0b       	sbc	r27, r26
    cfbc:	62 0b       	sbc	r22, r18
    cfbe:	73 0b       	sbc	r23, r19
    cfc0:	84 0b       	sbc	r24, r20
    cfc2:	ba f0       	brmi	.+46     	; 0xcff2 <__addsf3x+0x98>
    cfc4:	91 50       	subi	r25, 0x01	; 1
    cfc6:	a1 f0       	breq	.+40     	; 0xcff0 <__addsf3x+0x96>
    cfc8:	ff 0f       	add	r31, r31
    cfca:	bb 1f       	adc	r27, r27
    cfcc:	66 1f       	adc	r22, r22
    cfce:	77 1f       	adc	r23, r23
    cfd0:	88 1f       	adc	r24, r24
    cfd2:	c2 f7       	brpl	.-16     	; 0xcfc4 <__addsf3x+0x6a>
    cfd4:	0e c0       	rjmp	.+28     	; 0xcff2 <__addsf3x+0x98>
    cfd6:	ba 0f       	add	r27, r26
    cfd8:	62 1f       	adc	r22, r18
    cfda:	73 1f       	adc	r23, r19
    cfdc:	84 1f       	adc	r24, r20
    cfde:	48 f4       	brcc	.+18     	; 0xcff2 <__addsf3x+0x98>
    cfe0:	87 95       	ror	r24
    cfe2:	77 95       	ror	r23
    cfe4:	67 95       	ror	r22
    cfe6:	b7 95       	ror	r27
    cfe8:	f7 95       	ror	r31
    cfea:	9e 3f       	cpi	r25, 0xFE	; 254
    cfec:	08 f0       	brcs	.+2      	; 0xcff0 <__addsf3x+0x96>
    cfee:	b3 cf       	rjmp	.-154    	; 0xcf56 <__addsf3+0x1e>
    cff0:	93 95       	inc	r25
    cff2:	88 0f       	add	r24, r24
    cff4:	08 f0       	brcs	.+2      	; 0xcff8 <__addsf3x+0x9e>
    cff6:	99 27       	eor	r25, r25
    cff8:	ee 0f       	add	r30, r30
    cffa:	97 95       	ror	r25
    cffc:	87 95       	ror	r24
    cffe:	08 95       	ret

0000d000 <__cmpsf2>:
    d000:	d4 d0       	rcall	.+424    	; 0xd1aa <__fp_cmp>
    d002:	08 f4       	brcc	.+2      	; 0xd006 <__cmpsf2+0x6>
    d004:	81 e0       	ldi	r24, 0x01	; 1
    d006:	08 95       	ret

0000d008 <__divsf3>:
    d008:	0c d0       	rcall	.+24     	; 0xd022 <__divsf3x>
    d00a:	0a c1       	rjmp	.+532    	; 0xd220 <__fp_round>
    d00c:	02 d1       	rcall	.+516    	; 0xd212 <__fp_pscB>
    d00e:	40 f0       	brcs	.+16     	; 0xd020 <__divsf3+0x18>
    d010:	f9 d0       	rcall	.+498    	; 0xd204 <__fp_pscA>
    d012:	30 f0       	brcs	.+12     	; 0xd020 <__divsf3+0x18>
    d014:	21 f4       	brne	.+8      	; 0xd01e <__divsf3+0x16>
    d016:	5f 3f       	cpi	r21, 0xFF	; 255
    d018:	19 f0       	breq	.+6      	; 0xd020 <__divsf3+0x18>
    d01a:	eb c0       	rjmp	.+470    	; 0xd1f2 <__fp_inf>
    d01c:	51 11       	cpse	r21, r1
    d01e:	34 c1       	rjmp	.+616    	; 0xd288 <__fp_szero>
    d020:	ee c0       	rjmp	.+476    	; 0xd1fe <__fp_nan>

0000d022 <__divsf3x>:
    d022:	0f d1       	rcall	.+542    	; 0xd242 <__fp_split3>
    d024:	98 f3       	brcs	.-26     	; 0xd00c <__divsf3+0x4>

0000d026 <__divsf3_pse>:
    d026:	99 23       	and	r25, r25
    d028:	c9 f3       	breq	.-14     	; 0xd01c <__divsf3+0x14>
    d02a:	55 23       	and	r21, r21
    d02c:	b1 f3       	breq	.-20     	; 0xd01a <__divsf3+0x12>
    d02e:	95 1b       	sub	r25, r21
    d030:	55 0b       	sbc	r21, r21
    d032:	bb 27       	eor	r27, r27
    d034:	aa 27       	eor	r26, r26
    d036:	62 17       	cp	r22, r18
    d038:	73 07       	cpc	r23, r19
    d03a:	84 07       	cpc	r24, r20
    d03c:	38 f0       	brcs	.+14     	; 0xd04c <__divsf3_pse+0x26>
    d03e:	9f 5f       	subi	r25, 0xFF	; 255
    d040:	5f 4f       	sbci	r21, 0xFF	; 255
    d042:	22 0f       	add	r18, r18
    d044:	33 1f       	adc	r19, r19
    d046:	44 1f       	adc	r20, r20
    d048:	aa 1f       	adc	r26, r26
    d04a:	a9 f3       	breq	.-22     	; 0xd036 <__divsf3_pse+0x10>
    d04c:	33 d0       	rcall	.+102    	; 0xd0b4 <__divsf3_pse+0x8e>
    d04e:	0e 2e       	mov	r0, r30
    d050:	3a f0       	brmi	.+14     	; 0xd060 <__divsf3_pse+0x3a>
    d052:	e0 e8       	ldi	r30, 0x80	; 128
    d054:	30 d0       	rcall	.+96     	; 0xd0b6 <__divsf3_pse+0x90>
    d056:	91 50       	subi	r25, 0x01	; 1
    d058:	50 40       	sbci	r21, 0x00	; 0
    d05a:	e6 95       	lsr	r30
    d05c:	00 1c       	adc	r0, r0
    d05e:	ca f7       	brpl	.-14     	; 0xd052 <__divsf3_pse+0x2c>
    d060:	29 d0       	rcall	.+82     	; 0xd0b4 <__divsf3_pse+0x8e>
    d062:	fe 2f       	mov	r31, r30
    d064:	27 d0       	rcall	.+78     	; 0xd0b4 <__divsf3_pse+0x8e>
    d066:	66 0f       	add	r22, r22
    d068:	77 1f       	adc	r23, r23
    d06a:	88 1f       	adc	r24, r24
    d06c:	bb 1f       	adc	r27, r27
    d06e:	26 17       	cp	r18, r22
    d070:	37 07       	cpc	r19, r23
    d072:	48 07       	cpc	r20, r24
    d074:	ab 07       	cpc	r26, r27
    d076:	b0 e8       	ldi	r27, 0x80	; 128
    d078:	09 f0       	breq	.+2      	; 0xd07c <__divsf3_pse+0x56>
    d07a:	bb 0b       	sbc	r27, r27
    d07c:	80 2d       	mov	r24, r0
    d07e:	bf 01       	movw	r22, r30
    d080:	ff 27       	eor	r31, r31
    d082:	93 58       	subi	r25, 0x83	; 131
    d084:	5f 4f       	sbci	r21, 0xFF	; 255
    d086:	2a f0       	brmi	.+10     	; 0xd092 <__divsf3_pse+0x6c>
    d088:	9e 3f       	cpi	r25, 0xFE	; 254
    d08a:	51 05       	cpc	r21, r1
    d08c:	68 f0       	brcs	.+26     	; 0xd0a8 <__divsf3_pse+0x82>
    d08e:	b1 c0       	rjmp	.+354    	; 0xd1f2 <__fp_inf>
    d090:	fb c0       	rjmp	.+502    	; 0xd288 <__fp_szero>
    d092:	5f 3f       	cpi	r21, 0xFF	; 255
    d094:	ec f3       	brlt	.-6      	; 0xd090 <__divsf3_pse+0x6a>
    d096:	98 3e       	cpi	r25, 0xE8	; 232
    d098:	dc f3       	brlt	.-10     	; 0xd090 <__divsf3_pse+0x6a>
    d09a:	86 95       	lsr	r24
    d09c:	77 95       	ror	r23
    d09e:	67 95       	ror	r22
    d0a0:	b7 95       	ror	r27
    d0a2:	f7 95       	ror	r31
    d0a4:	9f 5f       	subi	r25, 0xFF	; 255
    d0a6:	c9 f7       	brne	.-14     	; 0xd09a <__divsf3_pse+0x74>
    d0a8:	88 0f       	add	r24, r24
    d0aa:	91 1d       	adc	r25, r1
    d0ac:	96 95       	lsr	r25
    d0ae:	87 95       	ror	r24
    d0b0:	97 f9       	bld	r25, 7
    d0b2:	08 95       	ret
    d0b4:	e1 e0       	ldi	r30, 0x01	; 1
    d0b6:	66 0f       	add	r22, r22
    d0b8:	77 1f       	adc	r23, r23
    d0ba:	88 1f       	adc	r24, r24
    d0bc:	bb 1f       	adc	r27, r27
    d0be:	62 17       	cp	r22, r18
    d0c0:	73 07       	cpc	r23, r19
    d0c2:	84 07       	cpc	r24, r20
    d0c4:	ba 07       	cpc	r27, r26
    d0c6:	20 f0       	brcs	.+8      	; 0xd0d0 <__divsf3_pse+0xaa>
    d0c8:	62 1b       	sub	r22, r18
    d0ca:	73 0b       	sbc	r23, r19
    d0cc:	84 0b       	sbc	r24, r20
    d0ce:	ba 0b       	sbc	r27, r26
    d0d0:	ee 1f       	adc	r30, r30
    d0d2:	88 f7       	brcc	.-30     	; 0xd0b6 <__divsf3_pse+0x90>
    d0d4:	e0 95       	com	r30
    d0d6:	08 95       	ret

0000d0d8 <__fixunssfsi>:
    d0d8:	bc d0       	rcall	.+376    	; 0xd252 <__fp_splitA>
    d0da:	88 f0       	brcs	.+34     	; 0xd0fe <__fixunssfsi+0x26>
    d0dc:	9f 57       	subi	r25, 0x7F	; 127
    d0de:	90 f0       	brcs	.+36     	; 0xd104 <__fixunssfsi+0x2c>
    d0e0:	b9 2f       	mov	r27, r25
    d0e2:	99 27       	eor	r25, r25
    d0e4:	b7 51       	subi	r27, 0x17	; 23
    d0e6:	a0 f0       	brcs	.+40     	; 0xd110 <__fixunssfsi+0x38>
    d0e8:	d1 f0       	breq	.+52     	; 0xd11e <__fixunssfsi+0x46>
    d0ea:	66 0f       	add	r22, r22
    d0ec:	77 1f       	adc	r23, r23
    d0ee:	88 1f       	adc	r24, r24
    d0f0:	99 1f       	adc	r25, r25
    d0f2:	1a f0       	brmi	.+6      	; 0xd0fa <__fixunssfsi+0x22>
    d0f4:	ba 95       	dec	r27
    d0f6:	c9 f7       	brne	.-14     	; 0xd0ea <__fixunssfsi+0x12>
    d0f8:	12 c0       	rjmp	.+36     	; 0xd11e <__fixunssfsi+0x46>
    d0fa:	b1 30       	cpi	r27, 0x01	; 1
    d0fc:	81 f0       	breq	.+32     	; 0xd11e <__fixunssfsi+0x46>
    d0fe:	c3 d0       	rcall	.+390    	; 0xd286 <__fp_zero>
    d100:	b1 e0       	ldi	r27, 0x01	; 1
    d102:	08 95       	ret
    d104:	c0 c0       	rjmp	.+384    	; 0xd286 <__fp_zero>
    d106:	67 2f       	mov	r22, r23
    d108:	78 2f       	mov	r23, r24
    d10a:	88 27       	eor	r24, r24
    d10c:	b8 5f       	subi	r27, 0xF8	; 248
    d10e:	39 f0       	breq	.+14     	; 0xd11e <__fixunssfsi+0x46>
    d110:	b9 3f       	cpi	r27, 0xF9	; 249
    d112:	cc f3       	brlt	.-14     	; 0xd106 <__fixunssfsi+0x2e>
    d114:	86 95       	lsr	r24
    d116:	77 95       	ror	r23
    d118:	67 95       	ror	r22
    d11a:	b3 95       	inc	r27
    d11c:	d9 f7       	brne	.-10     	; 0xd114 <__fixunssfsi+0x3c>
    d11e:	3e f4       	brtc	.+14     	; 0xd12e <__fixunssfsi+0x56>
    d120:	90 95       	com	r25
    d122:	80 95       	com	r24
    d124:	70 95       	com	r23
    d126:	61 95       	neg	r22
    d128:	7f 4f       	sbci	r23, 0xFF	; 255
    d12a:	8f 4f       	sbci	r24, 0xFF	; 255
    d12c:	9f 4f       	sbci	r25, 0xFF	; 255
    d12e:	08 95       	ret

0000d130 <__floatunsisf>:
    d130:	e8 94       	clt
    d132:	09 c0       	rjmp	.+18     	; 0xd146 <__floatsisf+0x12>

0000d134 <__floatsisf>:
    d134:	97 fb       	bst	r25, 7
    d136:	3e f4       	brtc	.+14     	; 0xd146 <__floatsisf+0x12>
    d138:	90 95       	com	r25
    d13a:	80 95       	com	r24
    d13c:	70 95       	com	r23
    d13e:	61 95       	neg	r22
    d140:	7f 4f       	sbci	r23, 0xFF	; 255
    d142:	8f 4f       	sbci	r24, 0xFF	; 255
    d144:	9f 4f       	sbci	r25, 0xFF	; 255
    d146:	99 23       	and	r25, r25
    d148:	a9 f0       	breq	.+42     	; 0xd174 <__floatsisf+0x40>
    d14a:	f9 2f       	mov	r31, r25
    d14c:	96 e9       	ldi	r25, 0x96	; 150
    d14e:	bb 27       	eor	r27, r27
    d150:	93 95       	inc	r25
    d152:	f6 95       	lsr	r31
    d154:	87 95       	ror	r24
    d156:	77 95       	ror	r23
    d158:	67 95       	ror	r22
    d15a:	b7 95       	ror	r27
    d15c:	f1 11       	cpse	r31, r1
    d15e:	f8 cf       	rjmp	.-16     	; 0xd150 <__floatsisf+0x1c>
    d160:	fa f4       	brpl	.+62     	; 0xd1a0 <__floatsisf+0x6c>
    d162:	bb 0f       	add	r27, r27
    d164:	11 f4       	brne	.+4      	; 0xd16a <__floatsisf+0x36>
    d166:	60 ff       	sbrs	r22, 0
    d168:	1b c0       	rjmp	.+54     	; 0xd1a0 <__floatsisf+0x6c>
    d16a:	6f 5f       	subi	r22, 0xFF	; 255
    d16c:	7f 4f       	sbci	r23, 0xFF	; 255
    d16e:	8f 4f       	sbci	r24, 0xFF	; 255
    d170:	9f 4f       	sbci	r25, 0xFF	; 255
    d172:	16 c0       	rjmp	.+44     	; 0xd1a0 <__floatsisf+0x6c>
    d174:	88 23       	and	r24, r24
    d176:	11 f0       	breq	.+4      	; 0xd17c <__floatsisf+0x48>
    d178:	96 e9       	ldi	r25, 0x96	; 150
    d17a:	11 c0       	rjmp	.+34     	; 0xd19e <__floatsisf+0x6a>
    d17c:	77 23       	and	r23, r23
    d17e:	21 f0       	breq	.+8      	; 0xd188 <__floatsisf+0x54>
    d180:	9e e8       	ldi	r25, 0x8E	; 142
    d182:	87 2f       	mov	r24, r23
    d184:	76 2f       	mov	r23, r22
    d186:	05 c0       	rjmp	.+10     	; 0xd192 <__floatsisf+0x5e>
    d188:	66 23       	and	r22, r22
    d18a:	71 f0       	breq	.+28     	; 0xd1a8 <__floatsisf+0x74>
    d18c:	96 e8       	ldi	r25, 0x86	; 134
    d18e:	86 2f       	mov	r24, r22
    d190:	70 e0       	ldi	r23, 0x00	; 0
    d192:	60 e0       	ldi	r22, 0x00	; 0
    d194:	2a f0       	brmi	.+10     	; 0xd1a0 <__floatsisf+0x6c>
    d196:	9a 95       	dec	r25
    d198:	66 0f       	add	r22, r22
    d19a:	77 1f       	adc	r23, r23
    d19c:	88 1f       	adc	r24, r24
    d19e:	da f7       	brpl	.-10     	; 0xd196 <__floatsisf+0x62>
    d1a0:	88 0f       	add	r24, r24
    d1a2:	96 95       	lsr	r25
    d1a4:	87 95       	ror	r24
    d1a6:	97 f9       	bld	r25, 7
    d1a8:	08 95       	ret

0000d1aa <__fp_cmp>:
    d1aa:	99 0f       	add	r25, r25
    d1ac:	00 08       	sbc	r0, r0
    d1ae:	55 0f       	add	r21, r21
    d1b0:	aa 0b       	sbc	r26, r26
    d1b2:	e0 e8       	ldi	r30, 0x80	; 128
    d1b4:	fe ef       	ldi	r31, 0xFE	; 254
    d1b6:	16 16       	cp	r1, r22
    d1b8:	17 06       	cpc	r1, r23
    d1ba:	e8 07       	cpc	r30, r24
    d1bc:	f9 07       	cpc	r31, r25
    d1be:	c0 f0       	brcs	.+48     	; 0xd1f0 <__fp_cmp+0x46>
    d1c0:	12 16       	cp	r1, r18
    d1c2:	13 06       	cpc	r1, r19
    d1c4:	e4 07       	cpc	r30, r20
    d1c6:	f5 07       	cpc	r31, r21
    d1c8:	98 f0       	brcs	.+38     	; 0xd1f0 <__fp_cmp+0x46>
    d1ca:	62 1b       	sub	r22, r18
    d1cc:	73 0b       	sbc	r23, r19
    d1ce:	84 0b       	sbc	r24, r20
    d1d0:	95 0b       	sbc	r25, r21
    d1d2:	39 f4       	brne	.+14     	; 0xd1e2 <__fp_cmp+0x38>
    d1d4:	0a 26       	eor	r0, r26
    d1d6:	61 f0       	breq	.+24     	; 0xd1f0 <__fp_cmp+0x46>
    d1d8:	23 2b       	or	r18, r19
    d1da:	24 2b       	or	r18, r20
    d1dc:	25 2b       	or	r18, r21
    d1de:	21 f4       	brne	.+8      	; 0xd1e8 <__fp_cmp+0x3e>
    d1e0:	08 95       	ret
    d1e2:	0a 26       	eor	r0, r26
    d1e4:	09 f4       	brne	.+2      	; 0xd1e8 <__fp_cmp+0x3e>
    d1e6:	a1 40       	sbci	r26, 0x01	; 1
    d1e8:	a6 95       	lsr	r26
    d1ea:	8f ef       	ldi	r24, 0xFF	; 255
    d1ec:	81 1d       	adc	r24, r1
    d1ee:	81 1d       	adc	r24, r1
    d1f0:	08 95       	ret

0000d1f2 <__fp_inf>:
    d1f2:	97 f9       	bld	r25, 7
    d1f4:	9f 67       	ori	r25, 0x7F	; 127
    d1f6:	80 e8       	ldi	r24, 0x80	; 128
    d1f8:	70 e0       	ldi	r23, 0x00	; 0
    d1fa:	60 e0       	ldi	r22, 0x00	; 0
    d1fc:	08 95       	ret

0000d1fe <__fp_nan>:
    d1fe:	9f ef       	ldi	r25, 0xFF	; 255
    d200:	80 ec       	ldi	r24, 0xC0	; 192
    d202:	08 95       	ret

0000d204 <__fp_pscA>:
    d204:	00 24       	eor	r0, r0
    d206:	0a 94       	dec	r0
    d208:	16 16       	cp	r1, r22
    d20a:	17 06       	cpc	r1, r23
    d20c:	18 06       	cpc	r1, r24
    d20e:	09 06       	cpc	r0, r25
    d210:	08 95       	ret

0000d212 <__fp_pscB>:
    d212:	00 24       	eor	r0, r0
    d214:	0a 94       	dec	r0
    d216:	12 16       	cp	r1, r18
    d218:	13 06       	cpc	r1, r19
    d21a:	14 06       	cpc	r1, r20
    d21c:	05 06       	cpc	r0, r21
    d21e:	08 95       	ret

0000d220 <__fp_round>:
    d220:	09 2e       	mov	r0, r25
    d222:	03 94       	inc	r0
    d224:	00 0c       	add	r0, r0
    d226:	11 f4       	brne	.+4      	; 0xd22c <__fp_round+0xc>
    d228:	88 23       	and	r24, r24
    d22a:	52 f0       	brmi	.+20     	; 0xd240 <__fp_round+0x20>
    d22c:	bb 0f       	add	r27, r27
    d22e:	40 f4       	brcc	.+16     	; 0xd240 <__fp_round+0x20>
    d230:	bf 2b       	or	r27, r31
    d232:	11 f4       	brne	.+4      	; 0xd238 <__fp_round+0x18>
    d234:	60 ff       	sbrs	r22, 0
    d236:	04 c0       	rjmp	.+8      	; 0xd240 <__fp_round+0x20>
    d238:	6f 5f       	subi	r22, 0xFF	; 255
    d23a:	7f 4f       	sbci	r23, 0xFF	; 255
    d23c:	8f 4f       	sbci	r24, 0xFF	; 255
    d23e:	9f 4f       	sbci	r25, 0xFF	; 255
    d240:	08 95       	ret

0000d242 <__fp_split3>:
    d242:	57 fd       	sbrc	r21, 7
    d244:	90 58       	subi	r25, 0x80	; 128
    d246:	44 0f       	add	r20, r20
    d248:	55 1f       	adc	r21, r21
    d24a:	59 f0       	breq	.+22     	; 0xd262 <__fp_splitA+0x10>
    d24c:	5f 3f       	cpi	r21, 0xFF	; 255
    d24e:	71 f0       	breq	.+28     	; 0xd26c <__fp_splitA+0x1a>
    d250:	47 95       	ror	r20

0000d252 <__fp_splitA>:
    d252:	88 0f       	add	r24, r24
    d254:	97 fb       	bst	r25, 7
    d256:	99 1f       	adc	r25, r25
    d258:	61 f0       	breq	.+24     	; 0xd272 <__fp_splitA+0x20>
    d25a:	9f 3f       	cpi	r25, 0xFF	; 255
    d25c:	79 f0       	breq	.+30     	; 0xd27c <__fp_splitA+0x2a>
    d25e:	87 95       	ror	r24
    d260:	08 95       	ret
    d262:	12 16       	cp	r1, r18
    d264:	13 06       	cpc	r1, r19
    d266:	14 06       	cpc	r1, r20
    d268:	55 1f       	adc	r21, r21
    d26a:	f2 cf       	rjmp	.-28     	; 0xd250 <__fp_split3+0xe>
    d26c:	46 95       	lsr	r20
    d26e:	f1 df       	rcall	.-30     	; 0xd252 <__fp_splitA>
    d270:	08 c0       	rjmp	.+16     	; 0xd282 <__fp_splitA+0x30>
    d272:	16 16       	cp	r1, r22
    d274:	17 06       	cpc	r1, r23
    d276:	18 06       	cpc	r1, r24
    d278:	99 1f       	adc	r25, r25
    d27a:	f1 cf       	rjmp	.-30     	; 0xd25e <__fp_splitA+0xc>
    d27c:	86 95       	lsr	r24
    d27e:	71 05       	cpc	r23, r1
    d280:	61 05       	cpc	r22, r1
    d282:	08 94       	sec
    d284:	08 95       	ret

0000d286 <__fp_zero>:
    d286:	e8 94       	clt

0000d288 <__fp_szero>:
    d288:	bb 27       	eor	r27, r27
    d28a:	66 27       	eor	r22, r22
    d28c:	77 27       	eor	r23, r23
    d28e:	cb 01       	movw	r24, r22
    d290:	97 f9       	bld	r25, 7
    d292:	08 95       	ret

0000d294 <__gesf2>:
    d294:	8a df       	rcall	.-236    	; 0xd1aa <__fp_cmp>
    d296:	08 f4       	brcc	.+2      	; 0xd29a <__gesf2+0x6>
    d298:	8f ef       	ldi	r24, 0xFF	; 255
    d29a:	08 95       	ret

0000d29c <__mulsf3>:
    d29c:	0b d0       	rcall	.+22     	; 0xd2b4 <__mulsf3x>
    d29e:	c0 cf       	rjmp	.-128    	; 0xd220 <__fp_round>
    d2a0:	b1 df       	rcall	.-158    	; 0xd204 <__fp_pscA>
    d2a2:	28 f0       	brcs	.+10     	; 0xd2ae <__mulsf3+0x12>
    d2a4:	b6 df       	rcall	.-148    	; 0xd212 <__fp_pscB>
    d2a6:	18 f0       	brcs	.+6      	; 0xd2ae <__mulsf3+0x12>
    d2a8:	95 23       	and	r25, r21
    d2aa:	09 f0       	breq	.+2      	; 0xd2ae <__mulsf3+0x12>
    d2ac:	a2 cf       	rjmp	.-188    	; 0xd1f2 <__fp_inf>
    d2ae:	a7 cf       	rjmp	.-178    	; 0xd1fe <__fp_nan>
    d2b0:	11 24       	eor	r1, r1
    d2b2:	ea cf       	rjmp	.-44     	; 0xd288 <__fp_szero>

0000d2b4 <__mulsf3x>:
    d2b4:	c6 df       	rcall	.-116    	; 0xd242 <__fp_split3>
    d2b6:	a0 f3       	brcs	.-24     	; 0xd2a0 <__mulsf3+0x4>

0000d2b8 <__mulsf3_pse>:
    d2b8:	95 9f       	mul	r25, r21
    d2ba:	d1 f3       	breq	.-12     	; 0xd2b0 <__mulsf3+0x14>
    d2bc:	95 0f       	add	r25, r21
    d2be:	50 e0       	ldi	r21, 0x00	; 0
    d2c0:	55 1f       	adc	r21, r21
    d2c2:	62 9f       	mul	r22, r18
    d2c4:	f0 01       	movw	r30, r0
    d2c6:	72 9f       	mul	r23, r18
    d2c8:	bb 27       	eor	r27, r27
    d2ca:	f0 0d       	add	r31, r0
    d2cc:	b1 1d       	adc	r27, r1
    d2ce:	63 9f       	mul	r22, r19
    d2d0:	aa 27       	eor	r26, r26
    d2d2:	f0 0d       	add	r31, r0
    d2d4:	b1 1d       	adc	r27, r1
    d2d6:	aa 1f       	adc	r26, r26
    d2d8:	64 9f       	mul	r22, r20
    d2da:	66 27       	eor	r22, r22
    d2dc:	b0 0d       	add	r27, r0
    d2de:	a1 1d       	adc	r26, r1
    d2e0:	66 1f       	adc	r22, r22
    d2e2:	82 9f       	mul	r24, r18
    d2e4:	22 27       	eor	r18, r18
    d2e6:	b0 0d       	add	r27, r0
    d2e8:	a1 1d       	adc	r26, r1
    d2ea:	62 1f       	adc	r22, r18
    d2ec:	73 9f       	mul	r23, r19
    d2ee:	b0 0d       	add	r27, r0
    d2f0:	a1 1d       	adc	r26, r1
    d2f2:	62 1f       	adc	r22, r18
    d2f4:	83 9f       	mul	r24, r19
    d2f6:	a0 0d       	add	r26, r0
    d2f8:	61 1d       	adc	r22, r1
    d2fa:	22 1f       	adc	r18, r18
    d2fc:	74 9f       	mul	r23, r20
    d2fe:	33 27       	eor	r19, r19
    d300:	a0 0d       	add	r26, r0
    d302:	61 1d       	adc	r22, r1
    d304:	23 1f       	adc	r18, r19
    d306:	84 9f       	mul	r24, r20
    d308:	60 0d       	add	r22, r0
    d30a:	21 1d       	adc	r18, r1
    d30c:	82 2f       	mov	r24, r18
    d30e:	76 2f       	mov	r23, r22
    d310:	6a 2f       	mov	r22, r26
    d312:	11 24       	eor	r1, r1
    d314:	9f 57       	subi	r25, 0x7F	; 127
    d316:	50 40       	sbci	r21, 0x00	; 0
    d318:	8a f0       	brmi	.+34     	; 0xd33c <__mulsf3_pse+0x84>
    d31a:	e1 f0       	breq	.+56     	; 0xd354 <__mulsf3_pse+0x9c>
    d31c:	88 23       	and	r24, r24
    d31e:	4a f0       	brmi	.+18     	; 0xd332 <__mulsf3_pse+0x7a>
    d320:	ee 0f       	add	r30, r30
    d322:	ff 1f       	adc	r31, r31
    d324:	bb 1f       	adc	r27, r27
    d326:	66 1f       	adc	r22, r22
    d328:	77 1f       	adc	r23, r23
    d32a:	88 1f       	adc	r24, r24
    d32c:	91 50       	subi	r25, 0x01	; 1
    d32e:	50 40       	sbci	r21, 0x00	; 0
    d330:	a9 f7       	brne	.-22     	; 0xd31c <__mulsf3_pse+0x64>
    d332:	9e 3f       	cpi	r25, 0xFE	; 254
    d334:	51 05       	cpc	r21, r1
    d336:	70 f0       	brcs	.+28     	; 0xd354 <__mulsf3_pse+0x9c>
    d338:	5c cf       	rjmp	.-328    	; 0xd1f2 <__fp_inf>
    d33a:	a6 cf       	rjmp	.-180    	; 0xd288 <__fp_szero>
    d33c:	5f 3f       	cpi	r21, 0xFF	; 255
    d33e:	ec f3       	brlt	.-6      	; 0xd33a <__mulsf3_pse+0x82>
    d340:	98 3e       	cpi	r25, 0xE8	; 232
    d342:	dc f3       	brlt	.-10     	; 0xd33a <__mulsf3_pse+0x82>
    d344:	86 95       	lsr	r24
    d346:	77 95       	ror	r23
    d348:	67 95       	ror	r22
    d34a:	b7 95       	ror	r27
    d34c:	f7 95       	ror	r31
    d34e:	e7 95       	ror	r30
    d350:	9f 5f       	subi	r25, 0xFF	; 255
    d352:	c1 f7       	brne	.-16     	; 0xd344 <__mulsf3_pse+0x8c>
    d354:	fe 2b       	or	r31, r30
    d356:	88 0f       	add	r24, r24
    d358:	91 1d       	adc	r25, r1
    d35a:	96 95       	lsr	r25
    d35c:	87 95       	ror	r24
    d35e:	97 f9       	bld	r25, 7
    d360:	08 95       	ret

0000d362 <__udivmodhi4>:
    d362:	aa 1b       	sub	r26, r26
    d364:	bb 1b       	sub	r27, r27
    d366:	51 e1       	ldi	r21, 0x11	; 17
    d368:	07 c0       	rjmp	.+14     	; 0xd378 <__udivmodhi4_ep>

0000d36a <__udivmodhi4_loop>:
    d36a:	aa 1f       	adc	r26, r26
    d36c:	bb 1f       	adc	r27, r27
    d36e:	a6 17       	cp	r26, r22
    d370:	b7 07       	cpc	r27, r23
    d372:	10 f0       	brcs	.+4      	; 0xd378 <__udivmodhi4_ep>
    d374:	a6 1b       	sub	r26, r22
    d376:	b7 0b       	sbc	r27, r23

0000d378 <__udivmodhi4_ep>:
    d378:	88 1f       	adc	r24, r24
    d37a:	99 1f       	adc	r25, r25
    d37c:	5a 95       	dec	r21
    d37e:	a9 f7       	brne	.-22     	; 0xd36a <__udivmodhi4_loop>
    d380:	80 95       	com	r24
    d382:	90 95       	com	r25
    d384:	bc 01       	movw	r22, r24
    d386:	cd 01       	movw	r24, r26
    d388:	08 95       	ret

0000d38a <_exit>:
    d38a:	f8 94       	cli

0000d38c <__stop_program>:
    d38c:	ff cf       	rjmp	.-2      	; 0xd38c <__stop_program>
